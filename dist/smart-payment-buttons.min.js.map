{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/api/index.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/rememberFunding.js","webpack://spb/./src/button/props/getPageUrl.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/menu.js","webpack://spb/./src/button/pay.js","webpack://spb/./src/button/button.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/menu/interface.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isAndroid","test","isIos","isIEIntranet","document","documentMode","status","err","supportsPopups","isGoogleSearchApp","isIosWebview","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","isChrome","isSafari","safeIndexOf","collection","item","length","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","this","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","splice","isSafeToReadWrite","Error","entry","writable","index","push","has","undefined","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","toString","uniqueID","chars","charAt","floor","Date","toISOString","slice","toLowerCase","serializeArgs","args","JSON","stringify","Array","subkey","val","obj","uid","getObjectID","memoize","method","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","time","now","apply","arguments","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","stack","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","result","identity","promiseDebounce","delay","promise","timeout","clearTimeout","localPromise","ZalgoPromise","setTimeout","try","then","resolve","reject","safeInterval","loop","cancel","arrayFrom","debounce","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","map","join","extendUrl","url","originalUrl","originalHash","query","hash","hashString","redirect","win","location","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","handler","addEventListener","event","keyCode","PopupOpenError","popup","width","height","top","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","open","close","writeElementToWindow","el","tag","tagName","documentElement","children","removeChild","appendChild","destroyElement","parentNode","prototype","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","setRequestHeader","ontimeout","send","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","MERCHANT_EMAIL_HASH","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","STAGE_HOST","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","MERCHANT_DOMAIN","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","SDK_CACHE","SDK_LOAD_TIME","IS_VAULT","RESPONSE_DURATION","SDK_INTEGRATION_SOURCE","PAYMENT_FLOW","BUTTON_VERSION","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","PLATFORM","DESKTOP","MOBILE","FUNDING","PAYPAL","VENMO","ITAU","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","VERKKOPANKKI","PAYU","BLIK","TRUSTLY","ZIMPLER","MAXIMA","OXXO","BOLETO","WECHATPAY","SMART_PAYMENT_BUTTONS","HEADERS","AUTHORIZATION","CONTENT_TYPE","ACCESS_TOKEN","CSRF_TOKEN","SOURCE","REQUESTED_BY","CLIENT_METADATA_ID","PAYPAL_DEBUG_ID","DATA_ATTRIBUTES","FUNDING_SOURCE","PAYMENT_METHOD_ID","MENU","NONCE","CLASS","LOADING","CLICKED","ORDER_API_ERROR","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","CONTEXT","IFRAME","POPUP","TARGET_ELEMENT","BODY","INTEGRATION_ARTIFACT","PAYPAL_JS_SDK","USER_EXPERIENCE_FLOW","INCONTEXT","INLINE","DOM_EVENT","MOUSEDOWN","HOVER","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","BUTTON_SESSION_ID","ORDER_ID","PAYMENT_ID","FPTI_STATE","BUTTON","FPTI_TRANSITION","BUTTON_LOAD","BUTTON_CLICK","CREATE_ORDER","RECEIVE_ORDER","CREATE_PAYMENT","CHECKOUT_SHIPPING_CHANGE","CHECKOUT_AUTHORIZE","CHECKOUT_CANCEL","NATIVE_DETECT_APP_SWITCH","NATIVE_DETECT_WEB_SWITCH","NATIVE_APP_SWITCH_ACK","NATIVE_ERROR","FPTI_BUTTON_TYPE","FTPI_BUTTON_KEY","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","BUTTON_TAGLINE_ENABLED","isPromise","Promise","Window","constructor","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","startActive","endActive","resolved","rejected","errorHandled","error","handlers","dispatching","isAsync","res","dispatch","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","finally","onFinally","toPromise","TypeError","all","promises","count","results","prom","items","onPossiblyUnhandledException","context","flush","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","httpTransport","extendIfDefined","target","source","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","warning","immediateFlush","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","buttonSessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","merchantDomain","version","referer","host","lang","country","__SMART_BUTTONS__","AUTH_API_URL","ORDERS_API_URL","PAYMENTS_API_URL","CREATE_SUBSCRIPTIONS_API_URL","VALIDATE_PAYMENT_METHOD_API","SMART_API_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","PAYMENT","SUBSCRIPTION","GRAPHQL_URI","WEB_CHECKOUT_URI","NATIVE_CHECKOUT_URI","NATIVE_CHECKOUT_POPUP_URI","CLIENT_ID_PAYEE_NO_MATCH","FIREBASE_SCRIPTS","APP","DATABASE","ENABLE_PAYMENT_API","_extends","assign","getFirebaseSessionToken","sessionUID","callGraphQL","variables","firebase","auth","sessionToken","upgradeFacilitatorAccessToken","facilitatorAccessToken","buyerAccessToken","orderID","createOrderID","order","callRestAPI","accessToken","id","getOrder","forceRestAPI","callSmartAPI","captureOrder","authorizeOrder","patchOrder","patchData","isArray","patch","getPayee","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","paymentSource","token","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","enableVault","deleteVault","updateClientConfig","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createPaymentToken","payment","paymentID","createPayment","links","rel","match","getPayment","executePayment","payerID","payer_id","patchPayment","createSubscription","subscriptionPayload","reviseSubscription","activateSubscription","getSubscription","loadFirebaseSDK","config","loadScript","initializeApp","firebaseSocket","retryDelay","socketPromise","retryPromise","driver","sourceApp","sourceAppVersion","targetApp","retry","receivedMessages","responseListeners","activeRequests","requestListeners","errorListeners","sendMessage","socket","messageUID","session_uid","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","requestUID","isOpen","request_uid","message_name","message_status","message_type","message_data","closed","init","instance","connectionPromise","onOpen","onClose","errorListener","onMessage","rawMessage","rawData","parsedData","messageSessionUID","messageType","messageData","request_id","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","database","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","requestHeaders","reqHeaders","ack","contingency","errors","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","PROTOCOL","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getTop","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","allowMock","mockclosed","iframeIndex","contentWindow","ownerDocument","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","__cross_domain_utils_window_check__","getButtons","getSelectedFunding","button","getAttribute","card","enableLoadingSpinner","classList","add","disableLoadingSpinner","remove","getNonce","nonce","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","fixClickFocus","preventDefault","blur","container","head","script","setAttribute","promiseOne","_objectWithoutPropertiesLoose","excluded","sourceKeys","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","xprops","onInit","enabled","initPromise","isEnabled","buildXCreateOrderData","buildOrderActions","intent","currency","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","buildPaymentActions","expectedIntent","transactions","transaction","redirect_urls","return_url","cancel_url","payer","payment_method","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createOrder","actions","startTime","duration","getOnApprove","onApprove","capture","authorize","getDefaultOnApprove","upgradeLSAT","restart","getSubscriptionApi","activateSubscriptionApi","handleProcessorError","details","some","detail","issue","execute","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","CLICK_VALID","VALID","INVALID","buildXOnClickData","buildXOnClickActions","getOnClick","valid","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","revise","getCreateSubscription","createSubscriptionFunc","getProps","vault","platform","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","getConfig","firebaseConfig","cspNonce","serverCSPNonce","getServiceData","serverMerchantID","buyerCountry","buyerGeoCountry","fundingEligibility","sdkMeta","personalization","eligibility","POPUP_BRIDGE_OPTYPE","CANCEL","renderChildren","renderer","renderedChild","render","subchild","ElementNode","onRender","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ADD_CHILDREN","firstChild","docElement","dom","opts","domRenderer","createTextNode","createTextElement","prop","addProps","html","ELEMENT_PROP","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","content","class","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","isPaymentEligible","initCheckout","serviceData","venmoPayloadID","isClick","approved","start","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","onAuth","renderTo","click","spinner","openPopup","cardFieldsOpen","highlightCard","forEach","opacity","nativeSocket","initialPageUrl","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","cardFields","onCardTypeChange","closeCardFields","marginTop","renderPromise","minHeight","display","recalculateMargin","offsetTop","transitionDuration","slideUpButtons","inline","vaultCapture","link","handleThreeDomainSecure","handleValidateResponse","getNativeSocket","isAndroidChrome","useDirectAppSwitch","isNativeOptedIn","localStorage","getItem","parentPopupBridge","smartMenu","native","pageUrl","nativeCheckout","venmo","fallbackToWebCheckout","checkoutPayment","getNativeUrl","getSDKProps","webCheckoutUrl","useraction","native_xo","venmoOverride","getWebCheckoutUrl","forceEligible","nativeUrl","nativePopupUrl","attemptPopupAppSwitch","setProps","sdkProps","connectNative","didAppSwitch","postRobot","listen","redirectUrl","popupBridge","bridge","redirect_uri","opType","PayerID","paymentId","ba_token","PAYMENT_FLOWS","setupButton","isCardFieldsExperimentEnabled","paymentProcessing","initiatePayment","decorateCreateOrder","tagline","buttonText","sendPersonalizationBeacons","flow","getPaymentFlow","clickPromise","updateButtonClientConfig","cart","checkoutSession","amounts","total","currencyCode","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","validateOrder","initiatePaymentFlow","menuToggle","buttonParent","parentElement","Menu","updateProps","show","hide","choices","verticalOffset","onChoose","renderSmartMenu","onElementClick","stopPropagation","label","useDifferentAccount","deleteVaultedCard","getBoundingClientRect","bottom","loadingTimeout","payInstantlyHeader","renderButtonDropdown","payPromise","setupPrerenderTask","prerenderDetails","setupRememberTask","eligible","setupRemember","setupButtonLogsTask","pageRenderTime","fundingSources","layout","color","shape","innerWidth","setupButtonLogs","setupPaymentFlowsTask","setupPaymentFlows"],"mappings":"uBACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,MAAOjB,GAAiBkB,eAAezB,KAAKuB,EAAQC,IAGzG/B,EAAoBiC,EAAI,GAIjBjC,EAAoBA,EAAoBkC,EAAI,I,+BChF9C,SAASC,IACZ,OAAOC,OAAOC,UAAUC,eAAiBF,OAAOC,UAAUE,UAkCvD,SAASC,EAAYC,GACxB,YADiE,IAAzCA,MAAeN,KAChCM,EAAGC,QAAQ,eAAiB,EAGhC,SAASC,EAAUF,GACtB,YAD+D,IAAzCA,MAAeN,KAC7B,UAAWS,KAAKH,GAGrB,SAASI,EAAMJ,GAClB,YAD2D,IAAzCA,MAAeN,KACzB,mBAAoBS,KAAKH,GAyD9B,SAASK,IAIZ,GAAIV,OAAOW,SAASC,aAChB,IACI,IAAIC,EAASb,OAAOa,OAIpB,OAFAb,OAAOa,OAAS,mBAEM,qBAAlBb,OAAOa,SACPb,OAAOa,OAASA,GAET,GAKb,MAAOC,GAEL,OAAO,EAIf,OAAO,EAQJ,SAASC,EAAeV,GAC3B,YADoE,IAAzCA,MAAeN,OA9EvC,SAAsBM,GACzB,YADkE,IAAzCA,MAAeN,OACpCU,EAAMJ,OATP,SAA2BA,GAC9B,YADuE,IAAzCA,MAAeN,KACrC,UAAWS,KAAKH,GAShBW,CAAkBX,IAGd,4BAA6BG,KAAKH,IA0ErCY,CAAaZ,IArEnB,SAA0BA,GAC7B,YADsE,IAAzCA,MAAeN,OACxCQ,EAAUF,IACF,kBAAmBG,KAAKH,KAAQD,EAAYC,GAmE3Ba,CAAiBb,IAAOD,EAAYC,IA3G9D,SAAsBA,GACzB,YADkE,IAAzCA,MAAeN,KAChC,SAAUS,KAAKH,GA2GnBc,CAAad,IAxGd,SAAmBA,GACtB,YAD+D,IAAzCA,MAAeN,KAC7B,UAAWS,KAAKH,GAuGAe,CAAUf,IAhH/B,SAA2BA,GAC9B,YADuE,IAAzCA,MAAeN,MACb,IAAxBM,EAAGC,QAAQ,UAA4C,IAAxBD,EAAGC,QAAQ,QA+GTe,CAAkBhB,IApFxD,SAAqBA,GACxB,YADiE,IAAzCA,MAAeN,KAC/B,YAAaS,KAAKH,GAmFwCiB,CAAYjB,IAxCvD,oBAAZkB,SAA2BA,QAAQC,UAAYD,QAAQC,SAASC,WAkCvEtB,EAAYJ,IACR,sCAAuCS,KAAKL,MA9GZ,IAAhCH,OAAOC,UAAUyB,YAAuB1B,OAAO2B,WAAW,8BAA8BC,SA4G7F,IACCzB,EASD,SAAS0B,EAASxB,GACrB,YAD8D,IAAzCA,MAAeN,KAC5B,wBAAyBS,KAAKH,GAGnC,SAASyB,EAASzB,GACrB,YAD8D,IAAzCA,MAAeN,KAC5B,SAAUS,KAAKH,KAAQwB,EAASxB,G,yBC/IrC,SAAS0B,EAAeC,EAAuBC,GAClD,IAAK,IAAIjE,EAAI,EAAGA,EAAIgE,EAAWE,OAAQlE,IAEnC,IACI,GAAIgE,EAAWhE,KAAOiE,EAClB,OAAOjE,EAEb,MAAO8C,IAKb,OAAQ,ECPL,IC0EHqB,ED1ESC,EAAb,WAOI,aAII,GAJU,KALd7D,UAKc,OAJd8D,aAIc,OAHdC,UAGc,OAFdC,YAEc,EAEVC,KAAKjE,KAAL,cAA0C,IAAhBkE,KAAKC,WAAmB,GAAlD,KEdD,WAEH,GAAuB,oBAAZC,QACP,OAAO,EAGX,QAA6B,IAAlBjE,OAAOkE,OACd,OAAO,EAGX,IAEI,IAAIC,EAAc,IAAIF,QAClBG,EAAU,GAOd,OAJApE,OAAOkE,OAAOE,GAEdD,EAAYE,IAAID,EAJA,mCAMZD,EAAYhE,IAAIiE,GAMtB,MAAOhC,GAEL,OAAO,GFZHkC,GACA,IACIR,KAAKH,QAAU,IAAIM,QACrB,MAAO7B,IAKb0B,KAAKF,KAAQ,GACbE,KAAKD,OAAS,GApBtB,2BAuBIU,sBAAA,WAKI,IAHA,IAAIZ,EAAUG,KAAKH,QACfC,EAAOE,KAAKF,KAEPtE,EAAI,EAAGA,EAAIsE,EAAKJ,OAAQlE,IAAK,CAClC,IAAIiB,EAAQqD,EAAKtE,GAEjB,GAAIkF,YAASjE,IAAUkE,YAAelE,GAAQ,CAE1C,GAAIoD,EACA,IACIA,EAAQe,OAAOnE,GACjB,MAAO6B,IAKbwB,EAAKe,OAAOrF,EAAG,GACfwE,KAAKD,OAAOc,OAAOrF,EAAG,GAEtBA,GAAK,KA5CrB,EAiDIsF,kBAAA,SAAkB/D,GAEd,OAAI2D,YAAS3D,IAnDrB,EAiEIwD,IAAA,SAAIxD,EAASN,GAET,IAAKM,EACD,MAAM,IAAIgE,MAAJ,wBAGV,IAAIlB,EAAUG,KAAKH,QAEnB,GAAIA,EACA,IACIA,EAAQU,IAAIxD,EAAKN,GACnB,MAAO6B,UACE0B,KAAKH,QAIpB,GAAIG,KAAKc,kBAAkB/D,GACvB,IACI,IAAIhB,EAAOiE,KAAKjE,KACZiF,EAAQjE,EAAIhB,GAWhB,YATIiF,GAASA,EAAM,KAAOjE,EACtBiE,EAAM,GAAKvE,EAEXP,OAAOC,eAAeY,EAAKhB,EAAM,CAC7BU,MAAU,CAAEM,EAAKN,GACjBwE,UAAU,KAMpB,MAAO3C,IAKb0B,KAAKS,wBAEL,IAAIX,EAAOE,KAAKF,KACZC,EAASC,KAAKD,OACdmB,EAAQ3B,EAAYO,EAAM/C,IAEf,IAAXmE,GACApB,EAAKqB,KAAKpE,GACVgD,EAAOoB,KAAK1E,IAEZsD,EAAOmB,GAASzE,GAhH5B,EAoHIJ,IAAA,SAAIU,GAEA,IAAKA,EACD,MAAM,IAAIgE,MAAJ,wBAGV,IAAIlB,EAAUG,KAAKH,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQuB,IAAIrE,GACZ,OAAO8C,EAAQxD,IAAIU,GAGzB,MAAOuB,UACE0B,KAAKH,QAIpB,GAAIG,KAAKc,kBAAkB/D,GACvB,IACI,IAAIiE,EAAQjE,EAAIiD,KAAKjE,MAErB,OAAIiF,GAASA,EAAM,KAAOjE,EACfiE,EAAM,QAGjB,EACF,MAAO1C,IAKb0B,KAAKS,wBAEL,IACIS,EAAQ3B,EADDS,KAAKF,KACc/C,GAE9B,IAAe,IAAXmE,EAIJ,OAAOlB,KAAKD,OAAOmB,IA9J3B,EAiKIN,OAAA,SAAO7D,GAEH,IAAKA,EACD,MAAM,IAAIgE,MAAJ,wBAGV,IAAIlB,EAAUG,KAAKH,QAEnB,GAAIA,EACA,IACIA,EAAQe,OAAO7D,GACjB,MAAOuB,UACE0B,KAAKH,QAIpB,GAAIG,KAAKc,kBAAkB/D,GACvB,IACI,IAAIiE,EAAQjE,EAAIiD,KAAKjE,MAEjBiF,GAASA,EAAM,KAAOjE,IACtBiE,EAAM,GAAKA,EAAM,QAAKK,GAE5B,MAAO/C,IAKb0B,KAAKS,wBAEL,IAAIX,EAAOE,KAAKF,KACZoB,EAAQ3B,EAAYO,EAAM/C,IAEf,IAAXmE,IACApB,EAAKe,OAAOK,EAAO,GACnBlB,KAAKD,OAAOc,OAAOK,EAAO,KApMtC,EAwMIE,IAAA,SAAIrE,GAEA,IAAKA,EACD,MAAM,IAAIgE,MAAJ,wBAGV,IAAIlB,EAAUG,KAAKH,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQuB,IAAIrE,GACZ,OAAO,EAEb,MAAOuB,UACE0B,KAAKH,QAIpB,GAAIG,KAAKc,kBAAkB/D,GACvB,IACI,IAAIiE,EAAQjE,EAAIiD,KAAKjE,MAErB,SAAIiF,GAASA,EAAM,KAAOjE,GAK5B,MAAOuB,IAQb,OAHA0B,KAAKS,yBAGa,IADNlB,EAAYS,KAAKF,KAAM/C,IA1O3C,EA8OIuE,SAAA,SAASvE,EAASf,GACd,GAAIgE,KAAKoB,IAAIrE,GAET,OAAOiD,KAAK3D,IAAIU,GAGpB,IAAIN,EAAQT,IAEZ,OADAgE,KAAKO,IAAIxD,EAAKN,GACPA,GAtPf,KCCO,SAAS8E,EAA+BC,GAC3C,OAAOA,EAAGzF,MAAQyF,EAAGC,UAAYD,EAAGE,aAAe,YAGhD,SAASC,EAA+BH,EAAQzF,GACnD,WACWyF,EAAGzF,KACVyF,EAAGzF,KAAOA,EACZ,MAAOuC,IAKT,OADAkD,EAAGC,SAAWD,EAAGE,YAAc3F,EACxByF,EAGJ,SAASI,EAAaC,GACzB,GAAoB,mBAATC,KACP,OAAOA,KAAKC,mBAAmBF,GAAKG,QAAQ,mBAAmB,SAACpG,EAAGqG,GAC/D,OAAOC,OAAOC,aAAaC,SAASH,EAAI,SAIhD,GAAsB,oBAAXI,OACP,OAAOA,OAAOC,KAAKT,EAAK,QAAQU,SAAS,UAG7C,MAAM,IAAIxB,MAAJ,sCAkBH,SAASyB,IAEZ,IAAIC,EAAQ,mBAUZ,MARe,aAAaT,QAAQ,MAAM,WACtC,OAAOS,EAAMC,OAAOzC,KAAK0C,MAAM1C,KAAKC,SAAWuC,EAAM/C,YAOzD,IAJakC,GACT,IAAIgB,MAAOC,cAAcC,MAAM,GAAI,IAAId,QAAQ,IAAK,MACtDA,QAAQ,gBAAiB,IAAIe,cAsCnC,SAASC,EAAiBC,GACtB,IACI,OAAOC,KAAKC,UAAUC,GAAgBN,MAAMnH,KAAKsH,IAAO,SAACI,EAAQC,GAC7D,MAAmB,mBAARA,EACP,WAtBT,SAAqBC,GAIxB,GAFA5D,EAAYA,GAAa,IAAIQ,EAEzBoD,SAAqD,iBAARA,GAAmC,mBAARA,EACxE,MAAM,IAAIxC,MAAJ,kBAGV,IAAIyC,EAAM7D,EAAUtD,IAAIkH,GAOxB,OALKC,IACDA,SAAiBD,EAAd,IAAuBf,IAC1B7C,EAAUY,IAAIgD,EAAKC,IAGhBA,EAOwBC,CAAYH,GAA/B,IAEGA,KAEb,MAAOhF,GACL,MAAM,IAAIyC,MAAJ,6DAGP,SAAS2C,EAAyHC,EAAYC,GAAiE,oBAAjEA,MAAyD,IAC1M,IAAIC,EAAW,IAAI1D,EAGf2D,EAAuB,WAAkD,2BAArBb,EAAqB,yBAArBA,EAAqB,gBACzE,IAAIc,EAAQF,EAASvC,SAASsC,EAAQI,cAAgBhE,KAAO2D,GAAQ,iBAAO,MAExE5G,EAAeiG,EAAcC,GAE7BgB,EAAYL,EAAQM,KAKxB,GAJIH,EAAMhH,IAAQkH,GAAcrB,KAAKuB,MAAQJ,EAAMhH,GAAKmH,KAAQD,UACrDF,EAAMhH,GAGbgH,EAAMhH,GACN,OAAOgH,EAAMhH,GAAKN,MAGtB,IAAIyH,EAAQtB,KAAKuB,MACb1H,EAAQkH,EAAOS,MAAMpE,KAAMqE,WAI/B,OAFAN,EAAMhH,GAAO,CAAEmH,OAAMzH,SAEdsH,EAAMhH,GAAKN,OAOtB,OAJAqH,EAAiBQ,MAAQ,WACrBT,EAASjD,OAAOgD,EAAQI,cAAgB,EAAOL,IAG5ChC,EAAgBmC,EAAsBvC,EAAgBoC,GAAvC,cAiDnB,SAASY,EAAiBZ,EAAsCa,EAAqCvB,QAA4B,IAA5BA,MAAoB,IAE5H,IAAIc,EAAQJ,EAAOc,yBAA2Bd,EAAOc,0BAA4B,GAC7E1H,EAAMiG,EAAcC,GAExB,OAAIc,EAAM3G,eAAeL,GACdgH,EAAMhH,GAGJgH,EAAMhH,GAAOyH,EAAK,WAAL,EAASvB,GAMhC,SAASyB,KAIT,SAASC,EAAKhB,GACjB,IAAIiB,GAAS,EASb,OAAOjD,GAPc,WACjB,IAAKiD,EAED,OADAA,GAAS,EACFjB,EAAOS,MAAMpE,KAAMqE,aAIO9C,EAAgBoC,GAAnC,UAgEnB,SAASkB,EAAevG,EAAawG,GAExC,QAFqE,IAA7BA,MAAiB,GAErDA,GAAS,EACT,MAAO,gCAGX,IACI,IAAKxG,EACD,yBAA2BpC,GAAiBqG,SAAS5G,KAAK2C,GAA1D,IAGJ,GAAmB,iBAARA,EACP,OAAOA,EAGX,GAAIA,aAAeyC,MAAO,CACtB,IAAIgE,EAAQzG,GAAOA,EAAIyG,MACnBC,EAAU1G,GAAOA,EAAI0G,QAEzB,GAAID,GAASC,EACT,OAAgC,IAA5BD,EAAMjH,QAAQkH,GACPD,EAEIC,EAAX,KAAyBD,EAE1B,GAAIA,EACP,OAAOA,EACJ,GAAIC,EACP,OAAOA,EAIf,OAAI1G,GAAOA,EAAIiE,UAAoC,mBAAjBjE,EAAIiE,SAE3BjE,EAAIiE,WAGRrG,GAAiBqG,SAAS5G,KAAK2C,GAExC,MAAO2G,GACL,yCAA2CJ,EAAeI,EAAQH,EAAQ,IAI3E,SAASI,EAAsB5G,GAElC,IAAI6G,EAAiB,mBAAoBjJ,GAAiBqG,SAAS5G,KAAK2C,GAAtD,IAElB,OAAKA,EAIDA,aAAeyC,MACRzC,EAAI0G,SAAWG,EAGC,iBAAhB7G,EAAI0G,SACJ1G,EAAI0G,SAGRG,EAXIA,EAsGR,SAASC,EAAgB7B,EAAwB8B,QAA8D,IAA9DA,MAAkCC,SACtF,IAAIC,EAAS,GAEb,IAAK,IAAIxI,KAAOwG,EACPA,EAAInG,eAAeL,IAASsI,EAAO9B,EAAIxG,GAAMA,KAIlDwI,EAAOxI,GAAOwG,EAAIxG,IAGtB,OAAOwI,EAGJ,SAASC,EAAa/F,GACzB,OAAOA,EAYJ,SAASgG,EAAmB9B,EAAoC+B,GAEnE,IAAIC,EACAC,EAsBJ,YAzBgH,IAA7CF,MAAiB,IAyB7E/D,GApBkB,WACjBiE,GACAC,aAAaD,GAGjB,IAAIE,EAAeH,EAAUA,GAAW,IAAII,IAY5C,OAVAH,EAAUI,YAAW,WACjBL,EAAU,KACVC,EAAU,KAEVG,IAAaE,IAAItC,GAAQuC,MACrB,SAAAX,GAAYO,EAAaK,QAAQZ,MACjC,SAAAjH,GAASwH,EAAaM,OAAO9H,QAElCoH,GAEII,IAGkCvE,EAAgBoC,GAAvC,sBAGnB,SAAS0C,EAAa1C,EAAmBO,GAE5C,IAAI0B,EAWJ,OATA,SAASU,IACLV,EAAUI,YAAW,WACjBrC,IACA2C,MACDpC,GAGPoC,GAEO,CACHC,OADG,WAECV,aAAaD,KAsPlB,SAASY,EAAa/G,GACzB,MAAO2D,GAAgBN,MAAMnH,KAAK8D,GAiL/B,SAASgH,EAAY9C,EAAwCO,GAEhE,IAAI0B,EAUJ,YAZwH,IAAxD1B,MAAgB,KAYzEvC,GARiB,WAAW,uBAC/BkE,aAAaD,GAEbA,EAAUI,YAAW,WACjB,OAAOrC,EAAOS,MAAM,EAAMC,KAC3BH,KAGqC3C,EAAgBoC,GAAtC,eE95BnB,SAAS+C,IACZ,OAAOpB,QAAQnH,SAASwI,OAAiC,aAAxBxI,SAASyI,WAGvC,SAASC,EAAUhF,GACtB,OAAOA,EAAIG,QAAQ,MAAO,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAevF,SAAS8E,IACZ,OAAOvC,EAAcuC,GAAsB,WACvC,OAAO,IAAIf,KAAa,SAAAI,GAEpB,GAAIO,IACA,OAAOP,IAGX,IAAIY,EAAWC,aAAY,WACvB,GAAIN,IAEA,OADAO,cAAcF,GACPZ,MAEZ,UAeR,SAASe,EAAWC,GACvB,OAAO5C,EAAc2C,GAAY,WAC7B,IAAIE,EAAS,GAEb,IAAKD,EACD,OAAOC,EAGX,IAAkC,IAA9BD,EAAYrJ,QAAQ,KACpB,OAAOsJ,EARiC,cAW3BD,EAAYE,MAAM,KAXS,eAWH,CAApC,IAAIC,EAAI,MACTA,EAAOA,EAAKD,MAAM,MAET,IAAMC,EAAK,KAChBF,EAAOG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,KAItE,OAAOF,IACR,CAAED,IAkCF,SAASK,EAAYC,EAAwBC,GAEhD,YAF+F,IAA/CA,MAAkC,IAE7EA,GAAUxL,OAAO4D,KAAK4H,GAAOhI,aAXmC,KAA7C6D,EAeL,eACZ2D,EAAWO,GADA,GAEXC,MAjBiBnE,EAAgC,IAEjDrH,OAAO4D,KAAKyD,GAAK8B,QAAO,SAAAtI,GAC3B,MAA2B,iBAAbwG,EAAIxG,MACnB4K,KAAI,SAAA5K,GACH,OAAW8J,EAAU9J,GAArB,IAA+B8J,EAAUtD,EAAIxG,OAC9C6K,KAAK,MAMGH,EAZR,IAAqBlE,EAqBrB,SAASsE,EAAUC,EAAclE,QAA2F,IAA3FA,MAA8E,IAElH,IAGImE,EAEAC,EALAC,EAAQrE,EAAQqE,OAAS,GACzBC,EAAOtE,EAAQsE,MAAQ,GAHoG,EAS/FJ,EAAIT,MAAM,KAA3BW,EATgH,YAS7HD,EAT6H,MAUlFV,MAAM,KAAjDU,EAV6H,KAY/H,IAAIZ,EAAcK,EAZ6G,KAYlFS,GACzCE,EAAaX,EAAYQ,EAAcE,GAU3C,OARIf,IACAY,EAAkBA,EAAP,IAAwBZ,GAGnCgB,IACAJ,EAAkBA,EAAP,IAAwBI,GAGhCJ,EAGJ,SAASK,EAASN,EAAcO,GACnC,YAD8F,IAA3DA,MAA8B7K,QAC1D,IAAIuI,KAAa,SAAAI,GACpBkC,EAAIC,SAAWR,EAlEhB,SAA6BA,GAEhC,OAA0B,IAAtBA,EAAIhK,QAAQ,MAIS,IAArBgK,EAAIhK,QAAQ,MAIZgK,EAAIT,MAAM,KAAK,KAAO7J,OAAO8K,SAASC,KAAKlB,MAAM,KAAK,GAyDjDmB,CAAoBV,IACrB3B,OAmBL,SAASsC,IACZ,OAAOlE,EAAckE,GAAmB,WAEpC,OAAOnD,QACH9H,OAAOkL,aACPA,YAAYvE,KACZuE,YAAYC,QACZD,YAAYC,OAAOC,YACnBF,YAAYC,OAAOE,iBAClB5I,KAAK6I,IAAIJ,YAAYvE,MAAQvB,KAAKuB,OAAS,KAC3CuE,YAAYvE,OAASuE,YAAYC,OAAOC,WAAaF,YAAYC,OAAOE,iBAAoB,MAMlG,SAASE,IACZ,OAAOjC,IAAuBZ,MAAK,WAE/B,GAAKuC,IAAL,CAIA,IAAIE,EAASnL,OAAOkL,YAAYC,OAEhC,OAAIA,EAAOC,YAAcD,EAAOK,eACrBL,EAAOK,eAAiBL,EAAOC,gBAD1C,MAgBD,SAASK,IACZ,MAA0B,oBAAXzL,OAGZ,SAAS0L,EAAiBC,EAAmBC,GAChD,YAD0G,IAA1DA,MAAoB5L,OAAOW,UACpEiF,GAAgBN,MAAMnH,KAAKyN,EAAIF,iBAAiBC,IAGpD,SAASE,EAAQC,EAAuBC,GAC3CD,EAAQE,iBAAiB,aAAc9E,GACvC4E,EAAQE,iBAAiB,QAASD,GAClCD,EAAQE,iBAAiB,YAAY,SAACC,GAElC,GCvOG,KDuOCA,EAAMC,QACN,OAAOH,EAAQE,MAuJpB,SAASE,EAAe3E,GAC3BhF,KAAKgF,QAAUA,EAkBZ,SAAS4E,EAAM9B,EAAclE,GAAiD,IAK3EiG,GAFNjG,EAAUA,GAAW,IAEfiG,MAAOC,EAAWlG,EAAXkG,OAETC,EAAM,EACNC,EAAO,EAEPH,IACIrM,OAAOyM,WACPD,EAAO/J,KAAKiK,OAAO1M,OAAOyM,WAAaJ,GAAS,GAAKrM,OAAO2M,QACrD3M,OAAO4M,OAAOP,QACrBG,EAAO/J,KAAKiK,OAAO1M,OAAO4M,OAAOP,MAAQA,GAAS,KAItDC,IACItM,OAAO6M,YACPN,EAAM9J,KAAKiK,OAAO1M,OAAO6M,YAAcP,GAAU,GAAKtM,OAAO8M,QACtD9M,OAAO4M,OAAON,SACrBC,EAAM9J,KAAKiK,OAAO1M,OAAO4M,OAAON,OAASA,GAAU,KAIvDD,GAASC,IACTlG,EAAU,aACNmG,MACAC,OACAH,QACAC,SACAzL,OAAY,EACZkM,QAAY,EACZC,QAAY,EACZC,UAAY,EACZC,WAAY,GACT9G,IAIX,IAAI7H,EAAO6H,EAAQ7H,MAAQ,UACpB6H,EAAQ7H,KAGf,IAOIsM,EASI/J,EAhBJ8I,EAASlL,OAAO4D,KAAK8D,GAAS+D,KAAI,SAAA5K,GAElC,GAAI6G,QAAQ7G,GACR,OAAWA,EAAX,KFxGY,iBADE0C,EEyGgBmE,EAAQ7G,IFvGnC0C,EAGPA,GAAQA,EAAK8C,UAAqC,mBAAlB9C,EAAK8C,SAE9B9C,EAAK8C,WAGTrG,GAAiBqG,SAAS5G,KAAK8D,IAVnC,IAAmBA,KE2GnB4F,OAAOC,SAASsC,KAAK,KAIxB,IACIS,EAAM7K,OAAOmN,KAAK7C,EAAK/L,EAAMqL,GAAQ,GACvC,MAAO9I,GACL,MAAM,IAAIqL,EAAJ,gCAAmDrL,EAAIyG,OAASzG,EAAI0G,UAG9E,GAAIrE,YAAe0H,GAEf,MADU,IAAIsB,EAAJ,uCAMd,OAFAnM,OAAOgM,iBAAiB,UAAU,kBAAMnB,EAAIuC,WAErCvC,EAkBJ,SAASwC,EAAqBxC,EAA4ByC,GAE7D,IAAIC,EAAMD,EAAGE,QAAQjI,cAErB,GAAY,SAARgI,EACA,MAAM,IAAIhK,MAAJ,oCAA+CgK,GALsB,IAQ/E,IAAIE,EAAkB5C,EAAIlK,SAAS8M,gBAR4C,MAU3DzE,EAAUyE,EAAgBC,UAViC,eAW3ED,EAAgBE,YADJ,MAV+D,cAc3D3E,EAAUsE,EAAGI,UAd8C,eAe3ED,EAAgBG,YADJ,MA8Tb,SAASC,EAAe/B,GACvBA,GAAWA,EAAQgC,YACnBhC,EAAQgC,WAAWH,YAAY7B,GAlbvCK,EAAe4B,UAAYrP,OAAOY,OAAOiE,MAAMwK,WEhX/C,IAKIC,EAAiB,GAWd,SAASC,EAAT,GAAuJ,IAApI3D,EAAoI,EAApIA,IAAoI,IAA/HnE,cAA+H,MAAtH,MAAsH,MAA/G+H,eAA+G,MAArG,GAAqG,EAAjGC,EAAiG,EAAjGA,KAAMC,EAA2F,EAA3FA,KAAMjF,EAAqF,EAArFA,KAAqF,IAA/E0B,WAA+E,MAAzE7K,OAAyE,MAAjEoI,eAAiE,MAAvD,EAAuD,EAC1J,OAAO,IAAIG,KAAa,SAACI,EAASC,GAE9B,GAAKuF,GAAQC,GAAUD,GAAQhF,GAAUiF,GAAQD,EAC7C,MAAM,IAAI5K,MAAJ,sEAH+B,IAMzC,IAAI8K,EAAoB,GANiB,MAQzB3P,OAAO4D,KAAK4L,GARa,eAQH,CAAjC,IAAI3O,EAAG,KACR8O,EAAkB9O,EAAIgG,eAAiB2I,EAAQ3O,GAG/C4O,EACAE,EA7BM,gBA6BoCA,EA7BpC,iBA6B+E,oBAC9ED,GAAQjF,KACfkF,EA/BM,gBA+BoCA,EA/BpC,iBA+B+E,oDAGzFA,EAAiB,OAAmBA,EAAiB,QAAoB,mBAlBhC,cAoBfL,EApBe,WAoBC,IAArC,IACGM,GAAeC,EADGP,EAAJ,MAAoB,MAGtBtP,OAAO4D,KAAKgM,GAHU,eAGK,CAAtC,IAAI/O,EAAG,KACR8O,EAAkB9O,EAAIgG,eAAiB+I,EAAa/O,GAI5D,IAAIiP,EAAM,IAAI3D,EAAI4D,eAsClB,IAAK,IAAIlP,KApCTiP,EAAIxC,iBAAiB,QAAQ,WAEzB,IAAI0C,EA1ChB,SAAsBC,QAAkD,IAAlDA,MAAsB,IAA4B,IACpE,IAAI5G,EAAS,GADuD,MAEnD4G,EAAWC,OAAO/E,MAAM,MAF2B,eAEpB,CAA3C,IAA2C,EAAnC,KACqBA,MAAM,KAA9BtK,EADsC,KAC9BgD,EAD8B,WAE5CwF,EAAOxI,EAAIgG,eAAiBhD,EAAO6H,KAAK,KAAKwE,OAEjD,OAAO7G,EAoCuB8G,CAAarM,KAAKsM,yBAExC,IAAKtM,KAAK3B,OACN,OAAO+H,EAAO,IAAIrF,MAAJ,cAAyB4C,EAAOZ,cAAhC,IAAmD+E,EAAnD,sCAGlB,IAAIyE,EAAcL,EAAgB,gBAC9BM,EAASD,IAA4D,IAA5CA,EAAYzO,QAAQ,qBAAkE,IAArCyO,EAAYzO,QAAQ,cAC9F2O,EAAezM,KAAK0M,aAExB,IACID,EAAevJ,KAAKyJ,MAAMF,GAC5B,MAAOnO,GACL,GAAIkO,EACA,OAAOpG,EAAO,IAAIrF,MAAJ,iBAA4Bf,KAAK0M,aAAjC,MAUtB,OAAOvG,EANG,CACN9H,OAAS2B,KAAK3B,OACdqN,QAASQ,EACTvF,KAAS8F,OAKd,GAEHT,EAAIxC,iBAAiB,SAAS,SAACoD,GAC3BxG,EAAO,IAAIrF,MAAJ,cAAyB4C,EAAOZ,cAAhC,IAAmD+E,EAAnD,YAAoE8E,EAAIrK,WAAxE,SACR,GAEHyJ,EAAIrB,KAAKhH,EAAQmE,GAAK,GAEN+D,EACRA,EAAkBzO,eAAeL,IACjCiP,EAAIa,iBAAiB9P,EAAK8O,EAAkB9O,IAIhD4O,EACAhF,EAAOzD,KAAKC,UAAUwI,GACfC,IACPjF,EAAOzK,OAAO4D,KAAK8L,GAAMjE,KAAI,SAAA5K,GACzB,OAAWgF,mBAAmBhF,GAA9B,KAAwC6O,EAAO7J,mBAAmB6J,EAAK7O,IAAQ,OAChF6K,KAAK,MAGZoE,EAAIpG,QAAUA,EACdoG,EAAIc,UAAY,WACZ1G,EAAO,IAAIrF,MAAJ,cAAyB4C,EAAOZ,cAAhC,IAAmD+E,EAAnD,oBAGXkE,EAAIe,KAAKpG,MC1HjB,+hC,6BCCO,IAAMqG,EAAU,CACniB,CAC1BC,WAAa,aAEbC,IAAY,MACZC,MAAY,QACZC,UAAY,YAEZC,UAAsB,YACtBC,YAAsB,cACtBC,oBAAsB,sBAEtBC,OAAS,SAETC,SAAW,WACXC,OAAW,SACXC,OAAW,SACXC,MAAW,QAEXC,cAAgB,gBAEhBC,gBAAkB,kBAClBC,aAAkB,eAElBC,eAAiB,iBACjBC,YAAiB,cAEjBC,UAAY,YAEZC,iBAAmB,mBAEnBC,eAAiB,iBACjBC,aAAiB,eACjBC,aAAiB,eACjBC,YAAiB,cAEjBC,WAAa,cChDJC,EAAW,CACpBC,KAAyB,YACzBC,MAAyB,aACzBC,WAAyB,kBACzBC,YAAyB,cACzBC,YAAyB,kBACzBC,mBAAyB,oBACzBC,MAAyB,QACzBC,WAAyB,aACzBC,aAAyB,eACzBC,QAAyB,cACzBC,gBAAyB,kBACzBC,OAAyB,SACzBC,UAAyB,YACzBjC,UAAyB,YACzBkC,YAAyB,yBACzBC,cAAyB,gBACzBC,WAAyB,iBACzBC,WAAyB,iBACzBC,eAAyB,iBACzBC,gBAAyB,aACzBC,eAAyB,gBACzBC,gBAAyB,kBACzBC,aAAyB,2BACzBC,cAAyB,yBACzBC,eAAyB,0BACzBC,cAAyB,gBACzBC,QAAyB,qBACzB3C,OAAyB,SACzBK,cAAyB,cACzBuC,uBAAyB,yBACzBC,uBAAyB,UACzBC,SAAyB,WACzBC,YAAyB,cACzBC,WAAyB,aACzBC,YAAyB,cACzBC,eAAyB,yBACzBC,UAAyB,YACzBC,cAAyB,gBACzBC,SAAyB,WACzB/C,gBAAyB,kBACzBC,aAAyB,eACzB+C,kBAAyB,oBACzBC,uBAAyB,yBACzBC,aAAyB,eACzBC,eAAyB,kBAGhBC,EAAmB,CAC5BvD,OAAW,SACXwD,SAAW,YAIFC,EAAmB,CAC5BC,aAAe,YAGNC,EAAY,CACrBD,aAAe,gBAGNE,EAAgB,CACzBF,aAAe,gBC/DN3D,EAAS,CAClB8D,QAAY,UACZC,UAAY,YACZC,MAAY,SCHHC,EAAW,CACpBC,QAAU,UACVC,OAAU,UCFDC,EAAU,CACnBC,OAAiB,SACjBC,MAAiB,QACjBC,KAAiB,OACjBC,OAAiB,SACjBC,KAAiB,OACjBC,MAAiB,QACjBC,KAAiB,OACjBC,WAAiB,aACjBC,QAAiB,UACjBC,OAAiB,SACjBC,IAAiB,MACjBC,OAAiB,SACjBC,IAAiB,MACjBC,aAAiB,eACjBC,KAAiB,OACjBC,KAAiB,OACjBC,QAAiB,UACjBC,QAAiB,UACjBC,OAAiB,SACjBC,KAAiB,OACjBC,OAAiB,SACjBC,UAAiB,aCtBrB,qV,6BCAA,kkBAAO,IAAMC,EAAwB,wBAExBC,EAAU,CACnBC,cAAe,gBACfC,aAAe,eAEfC,aAAe,yBACfC,WAAe,aACfC,OAAe,WACfC,aAAe,iBAEfvD,uBAAwB,gCACxBwD,mBAAwB,4BACxBC,gBAAwB,mBAGfC,EAAkB,CAC3BC,eAAmB,sBACnB7B,KAAmB,YACnB8B,kBAAmB,yBACnBC,KAAmB,YACnBC,MAAmB,cAGVC,EAAQ,CACjBC,QAAS,wBACTC,QAAS,yBAGAC,EAAkB,CAC3BC,oBAAuB,sBACvBC,sBAAuB,yBAGdC,EAAU,CACnBC,OAAQ,SACRC,MAAQ,SAGCC,EAAiB,CAC1BC,KAAM,QAGGC,EAAuB,CAChCC,cAAe,iBAGNC,EAAuB,CAChCC,UAAW,YACXC,OAAW,UAGFC,EAAY,CACrBC,UAAW,YACXC,MAAW,SAGFC,EAAe,CACxBlC,sBAAuB,yBAGdmC,EAAoB,CAC7BC,kBAAoB,oBACpBC,SAAoB,WACpBC,WAAoB,UAGXC,EAAa,CACtBC,OAAW,gBAGFC,EAAkB,CAC3BC,YAA2B,sBAC3BC,aAA2B,uBAE3BC,aAA2B,uBAC3BC,cAA2B,wBAC3BC,eAA2B,yBAE3BC,yBAA2B,mCAC3BC,mBAA2B,6BAC3BC,gBAA2B,0BAE3BC,yBAA2B,2BAC3BC,yBAA2B,2BAC3BC,sBAA2B,wBAC3BC,aAA2B,yBAGlBC,EAAmB,CAC5BhC,OAAS,UAGAiC,EAAkB,CAC3B1G,cAAyB,gBACzB2G,aAAyB,eACzBC,YAAyB,cACzBC,aAAyB,eACzBC,aAAyB,eACzBC,aAAyB,eACzBpI,YAAyB,cACzBqI,uBAAyB,0BAGhBzG,EAAc,CACvB9C,OAAU,SACVwD,SAAU,a,6BC1GP,SAASgG,EAAUtkB,GACtB,IACI,IAAKA,EACD,OAAO,EAGX,GAAuB,oBAAZukB,SAA2BvkB,aAAgBukB,QAClD,OAAO,EAGX,GAAsB,oBAAXxmB,QAAmD,mBAAlBA,OAAOymB,QAAyBxkB,aAAgBjC,OAAOymB,OAC/F,OAAO,EAGX,GAAsB,oBAAXzmB,QAAwD,mBAAvBA,OAAO0mB,aAA8BzkB,aAAgBjC,OAAO0mB,YACpG,OAAO,EAGX,IAAI3hB,EAAY,GAAIA,SAEpB,GAAIA,EAAU,CACV,IAAIxG,EAAOwG,EAAS5G,KAAK8D,GAEzB,GAAa,oBAAT1D,GAAuC,oBAATA,GAAuC,uBAATA,EAC5D,OAAO,EAIf,GAAyB,mBAAd0D,EAAKyG,KACZ,OAAO,EAEb,MAAO5H,GACL,OAAO,EAGX,OAAO,ECjCX,ICCI6lB,EDDEC,EAAmB,GACnBC,EAA4F,GCD9FC,EAAc,EAGlB,SAASC,IACL,IAAKD,GAAeH,EAAc,CAC9B,IAAMxe,EAAUwe,EAChBA,EAAe,KACfxe,EAAQQ,WAIT,SAASqe,IACZF,GAAe,EAGZ,SAASG,IACZH,GAAe,EACfC,ICfG,IAAMxe,EAAb,WAeI,WAAYwD,GAAuF,WAQ/F,GAR+F,KAbnGmb,cAamG,OAZnGC,cAYmG,OAXnGC,kBAWmG,OAVnGnoB,WAUmG,OATnGooB,WASmG,OARnGC,cAQmG,OAHnGC,iBAGmG,OAFnGhgB,WAEmG,EAE/F/E,KAAK0kB,UAAW,EAChB1kB,KAAK2kB,UAAW,EAChB3kB,KAAK4kB,cAAe,EAEpB5kB,KAAK8kB,SAAW,GAEZvb,EAAS,CAET,IAAIhE,EACAsf,EACAH,GAAW,EACXC,GAAW,EACXK,GAAU,EAEdR,IAEA,IACIjb,GAAQ,SAAA0b,GACAD,EACA,EAAK7e,QAAQ8e,IAEbP,GAAW,EACXnf,EAAS0f,MAGd,SAAA3mB,GACK0mB,EACA,EAAK5e,OAAO9H,IAEZqmB,GAAW,EACXE,EAAQvmB,MAIlB,MAAOA,GAGL,OAFAmmB,SACAzkB,KAAKoG,OAAO9H,GAIhBmmB,IAEAO,GAAU,EAENN,EAEA1kB,KAAKmG,QAAQZ,GACNof,GACP3kB,KAAKoG,OAAOye,IAjE5B,2BA8EI1e,QAAA,SAAQZ,GACJ,GAAIvF,KAAK0kB,UAAY1kB,KAAK2kB,SACtB,OAAO3kB,KAGX,GAAI+jB,EAAUxe,GACV,MAAM,IAAIxE,MAAM,gDAOpB,OAJAf,KAAK0kB,UAAW,EAChB1kB,KAAKvD,MAAQ8I,EACbvF,KAAKklB,WAEEllB,MA3Ff,EA8FIoG,OAAA,SAAOye,GAAiC,WACpC,GAAI7kB,KAAK0kB,UAAY1kB,KAAK2kB,SACtB,OAAO3kB,KAGX,GAAI+jB,EAAUc,GACV,MAAM,IAAI9jB,MAAM,+CAGpB,IAAK8jB,EAAO,CAER,IAAIvmB,EAAOumB,GAAmC,mBAAnBA,EAAMtiB,SAA0BsiB,EAAMtiB,WAAarG,GAAiBqG,SAAS5G,KAAKkpB,GAC7GA,EAAQ,IAAI9jB,MAAJ,gDAA2DzC,GAgBvE,OAbA0B,KAAK2kB,UAAW,EAChB3kB,KAAK6kB,MAAQA,EAER7kB,KAAK4kB,cACN5e,YAAW,WACF,EAAK4e,cFjHnB,SAA2CtmB,EAAaqH,GAE3D,IAAuC,IAAnCye,EAAiBtmB,QAAQQ,GAA7B,CAIA8lB,EAAiBjjB,KAAK7C,GAEtB0H,YAAW,WAMP,MAAM1H,IACP,GAEH,IAAK,IAAI6mB,EAAI,EAAGA,EAAId,EAAiC3kB,OAAQylB,IAEzDd,EAAiCc,GAAG7mB,EAAKqH,IE+F7Byf,CAA+BP,EAAO,KAE3C,GAGP7kB,KAAKklB,WAEEllB,MA1Hf,EA6HIqlB,YAAA,SAAYR,GAGR,OAFA7kB,KAAK4kB,cAAe,EACpB5kB,KAAKoG,OAAOye,GACL7kB,MAhIf,EAmIIklB,SAAA,WAAW,IAEYR,EAAiC1kB,KAAjC0kB,SAAUC,EAAuB3kB,KAAvB2kB,SAAUG,EAAa9kB,KAAb8kB,SAEvC,IAFoD9kB,KAA9C+kB,cAMDL,GAAaC,GAAlB,CAIA3kB,KAAK+kB,aAAc,EACnBP,IAUA,IARA,IAAMc,EAAQ,SAAIC,EAAgCC,GAC9C,OAAOD,EAAarf,MAAK,SAAA+e,GACrBO,EAAcrf,QAAQ8e,MACvB,SAAA3mB,GACCknB,EAAcpf,OAAO9H,OAIpB9C,EAAI,EAAGA,EAAIspB,EAASplB,OAAQlE,IAAK,OAEAspB,EAAStpB,GAAzCiqB,EAFgC,EAEhCA,UAAWC,EAFqB,EAErBA,QAAS/f,EAFY,EAEZA,QAEtBJ,OAAM,EAEV,GAAImf,EAEA,IACInf,EAASkgB,EAAYA,EAAUzlB,KAAKvD,OAASuD,KAAKvD,MACpD,MAAO6B,GACLqH,EAAQS,OAAO9H,GACf,cAGD,GAAIqmB,EAAU,CAEjB,IAAKe,EAAS,CACV/f,EAAQS,OAAOpG,KAAK6kB,OACpB,SAGJ,IACItf,EAASmgB,EAAQ1lB,KAAK6kB,OACxB,MAAOvmB,GACLqH,EAAQS,OAAO9H,GACf,UAIJiH,aAAkBQ,IAAiBR,EAAOmf,UAAYnf,EAAOof,WAEzDpf,EAAOmf,SACP/e,EAAQQ,QAAQZ,EAAO9I,OAEvBkJ,EAAQS,OAAOb,EAAOsf,OAG1Btf,EAAOqf,cAAe,GAEfb,EAAUxe,GAEbA,aAAkBQ,IAAiBR,EAAOmf,UAAYnf,EAAOof,UACzDpf,EAAOmf,SACP/e,EAAQQ,QAAQZ,EAAO9I,OAEvBkJ,EAAQS,OAAOb,EAAOsf,OAK1BS,EAAM/f,EAAQI,GAKlBA,EAAQQ,QAAQZ,GAIxBuf,EAASplB,OAAS,EAClBM,KAAK+kB,aAAc,EACnBN,MAxNR,EA2NIve,KAAA,SAA2Buf,EAA0DC,GAEjF,GAAID,GAAkC,mBAAdA,IAA6BA,EAAU9pB,KAC3D,MAAM,IAAIoF,MAAM,wDAGpB,GAAI2kB,GAA8B,mBAAZA,IAA2BA,EAAQ/pB,KACrD,MAAM,IAAIoF,MAAM,sDAGpB,IAAI4E,EAAgC,IAAII,EAYxC,OAVA/F,KAAK8kB,SAAS3jB,KAAK,CACfwE,UACA8f,YACAC,YAGJ1lB,KAAK4kB,cAAe,EAEpB5kB,KAAKklB,WAEEvf,GAjPf,EAoPIggB,MAAA,SAA4BD,GACxB,OAAO1lB,KAAKkG,UAAK7E,EAAWqkB,IArPpC,EAwPIE,QAAA,SAAQC,GAEJ,GAAIA,GAAkC,mBAAdA,IAA6BA,EAAUlqB,KAC3D,MAAM,IAAIoF,MAAM,uCAGpB,OAAOf,KAAKkG,MAAK,SAACX,GACd,OAAOQ,EAAaE,IAAI4f,GACnB3f,MAAK,WACF,OAAOX,QAEhB,SAACjH,GACA,OAAOyH,EAAaE,IAAI4f,GACnB3f,MAAK,WACF,MAAM5H,SAtQ1B,EA2QIsH,QAAA,SAAQ1B,EAAe5F,GAAgC,WAEnD,GAAI0B,KAAK0kB,UAAY1kB,KAAK2kB,SACtB,OAAO3kB,KAGX,IAAI4F,EAAUI,YAAW,WAEjB,EAAK0e,UAAY,EAAKC,UAI1B,EAAKve,OAAO9H,GAAO,IAAIyC,MAAJ,2BAAsCmD,EAAtC,SAEpBA,GAEH,OAAOlE,KAAKkG,MAAK,SAAAX,GAEb,OADAM,aAAaD,GACNL,MA7RnB,EAkSIugB,UAAA,WAEI,GAAuB,oBAAZ9B,QACP,MAAM,IAAI+B,UAAJ,0BAGV,OAAO/B,QAAQ7d,QAAQnG,OAxS/B,EA2SWmG,QAAP,SAA0B1J,GAEtB,OAAIA,aAAiBsJ,EACVtJ,EAGPsnB,EAAUtnB,GAEH,IAAIsJ,GAAa,SAACI,EAASC,GAAV,OAAqB3J,EAAMyJ,KAAKC,EAASC,OAG9D,IAAIL,GAAeI,QAAQ1J,IAtT1C,EAyTW2J,OAAP,SAAcye,GACV,OAAO,IAAI9e,GAAeK,OAAOye,IA1TzC,EA6TWQ,YAAP,SAAmBR,GACf,OAAO,IAAI9e,GAAesf,YAAYR,IA9T9C,EAiUWmB,IAAP,SAA6BC,GAEzB,IAAItgB,EAAU,IAAII,EACdmgB,EAAQD,EAASvmB,OACjBymB,EAAU,GAEd,IAAKD,EAED,OADAvgB,EAAQQ,QAAQggB,GACTxgB,EAeX,IAZA,IAAM2f,EAAQ,SAAI9pB,EAAY+pB,EAAgCC,GAC1D,OAAOD,EAAarf,MAAK,SAAA+e,GACrBkB,EAAQ3qB,GAAKypB,EAEC,IADdiB,GAAS,IAELvgB,EAAQQ,QAAQggB,MAErB,SAAA7nB,GACCknB,EAAcpf,OAAO9H,OAIpB9C,EAAI,EAAGA,EAAIyqB,EAASvmB,OAAQlE,IAAK,CACtC,IAAI4qB,EAAOH,EAASzqB,GAEpB,GAAI4qB,aAAgBrgB,GAChB,GAAIqgB,EAAK1B,SAAU,CACfyB,EAAQ3qB,GAAK4qB,EAAK3pB,MAClBypB,GAAS,EACT,eAED,IAAKnC,EAAUqC,GAAO,CACzBD,EAAQ3qB,GAAK4qB,EACbF,GAAS,EACT,SAGJZ,EAAM9pB,EAAGuK,EAAaI,QAAQigB,GAAOzgB,GAOzC,OAJc,IAAVugB,GACAvgB,EAAQQ,QAAQggB,GAGbxgB,GA9Wf,EAiXWuC,KAAP,SAAwB+d,GACpB,IAAI1gB,EAAS,GAEb,OAAOQ,EAAaigB,IAAI9pB,OAAO4D,KAAKmmB,GAAUte,KAAI,SAAA5K,GAC9C,OAAOgJ,EAAaI,QAAQ8f,EAASlpB,IAAMmJ,MAAK,SAAAzJ,GAC5C8I,EAAOxI,GAAON,SAElByJ,MAAK,WACL,OAAOX,MAzXnB,EA6XWoC,IAAP,SAAiB0e,EAAkB1iB,GAE/B,OAAOoC,EAAaigB,IAAIK,EAAM1e,IAAIhE,KA/X1C,EAkYW2iB,6BAAP,SAAoC/c,GAChC,OF3WD,SAAsCA,GAGzC,OAFA8a,EAAiCljB,KAAKoI,GAE/B,CACHhD,OADG,WAEC8d,EAAiCxjB,OAAOwjB,EAAiCvmB,QAAQyL,GAAU,KEsWxF+c,CAA6B/c,IAnY5C,EAsYWtD,IAAP,SAA8DtC,EAAiD4iB,EAActjB,GAEzH,GAAIU,GAA4B,mBAAXA,IAA0BA,EAAOhI,KAClD,MAAM,IAAIoF,MAAM,mCAGpB,IAAIwE,EAEJif,IAEA,IAEIjf,EAAS5B,EAAOS,MAAMmiB,EAAStjB,GAAQ,IACzC,MAAO3E,GAEL,OADAmmB,IACO1e,EAAaK,OAAO9H,GAK/B,OAFAmmB,IAEO1e,EAAaI,QAAQZ,IA1ZpC,EA6ZWG,MAAP,SAAaA,GACT,OAAO,IAAIK,GAAa,SAAAI,GACpBH,WAAWG,EAAST,OA/ZhC,EAmaWqe,UAAP,SAAiBtnB,GAEb,SAAIA,GAASA,aAAiBsJ,IAIvBge,EAAUtnB,IAzazB,EA4aW+pB,MAAP,WACI,OD1ZA7gB,EAAUwe,EAAeA,GAAgB,IC0ZtBpe,EDzZvBwe,IACO5e,EAHJ,IACCA,GCnBR,KCJA,mC,8DCEa8gB,EAAmB,CCCpB,OACA,SDACC,EAAqB,CCAtB,QADA,OADA,OADA,SC0CZ,SAASC,EAAT,GAAgK,IAAvI7e,EAAuI,EAAvIA,IAAKnE,EAAkI,EAAlIA,OAAQ+H,EAA0H,EAA1HA,QAASC,EAAiH,EAAjHA,KAC3C,OAAOF,YAAQ,CAAE3D,MAAKnE,SAAQ+H,UAASC,SAAQzF,KAAKxB,KAGxD,SAASkiB,EAAgBC,EAAgCC,GACrD,IAAK,IAAM/pB,KAAO+pB,EACVA,EAAO1pB,eAAeL,IAAQ+pB,EAAO/pB,KAAS8pB,EAAO9pB,KACrD8pB,EAAO9pB,GAAO+pB,EAAO/pB,I,yBCzC1B,SAASgqB,IACZ,OAAOxiB,YAAcwiB,GAAW,kBD6C7B,YAAuJ,IAArIjf,EAAqI,EAArIA,IAAKkf,EAAgI,EAAhIA,OAAgI,IAAxHC,gBAAwH,MDpDlJ,OCoDkJ,MAA1FC,iBAA0F,MAA9EP,EAA8E,MAA/DQ,qBAA+D,MFjDhI,IEiDgI,EAEtJC,EAA2F,GAC3FC,EAA4B,GAE1BC,EAAmC,GACnCC,EAAgC,GAChCC,EAAoC,GACpChc,EAAkC,GAExC,SAASic,EAAM3iB,EAAmC2E,EAAgBie,GAE9D,GAAKze,eAAgBzL,OAAOmqB,SAAYnqB,OAAOmqB,QAAQC,OAInDlB,EAAmB5oB,QAAQgH,GAAS4hB,EAAmB5oB,QAAQmpB,IAAnE,CAIA,IAAMhkB,EAAO,CAAEwG,GAEfxG,EAAK9B,KAAKumB,IAENA,EAAQ7C,OAAS6C,EAAQG,UACzB5kB,EAAK9B,KAAK,OAAQumB,EAAQ7C,OAAS6C,EAAQG,SAG/C,IACQrqB,OAAOmqB,QAAQ7iB,IAAUtH,OAAOmqB,QAAQ7iB,GAAOV,MAC/C5G,OAAOmqB,QAAQ7iB,GAAOV,MAAM5G,OAAOmqB,QAAS1kB,GACrCzF,OAAOmqB,QAAQC,KAAOpqB,OAAOmqB,QAAQC,IAAIxjB,OAChD5G,OAAOmqB,QAAQC,IAAIxjB,MAAM5G,OAAOmqB,QAAS1kB,GAE/C,MAAO3E,MAKb,SAASwpB,IACL,OAAO/hB,IAAaE,KAAI,WACpB,GAAKgD,eDxFP,UCwFsBzL,OAAO8K,SAASyf,WAI/BX,EAAO1nB,QAAW2nB,EAAS3nB,QAAhC,CAL0B,IAS1B,IAAMsoB,EAAO,GATa,MAUJT,EAVI,WAWtBX,EAAgBoB,GAAMC,EADJV,EAAJ,IACgBS,IAXR,IAc1B,IAAMtc,EAAU,GAdU,MAeJF,EAfI,WAgBtBob,EAAgBlb,GAASuc,EADPzc,EAAJ,IACmBE,IAGrC,IAAMwc,EAAMhB,EAAU,CAClBvjB,OAAQ,OACRmE,MACA4D,UACAC,KAAQ,CACJyb,SACAY,OACAX,cAOR,OAHAD,EAAS,GACTC,EAAW,GAEJa,EAAIhiB,KAAKxB,SAIxB,IAAM8hB,EAAQ/gB,YAAgBqiB,GAe9B,SAASF,EAAI9iB,EAAmC2E,EAAgBie,GAE5D,QAFuF,IAA3BA,MAAU,KAEjEze,cACD,OAAOkf,EAGPnB,IACAvd,EAAYud,EAAP,IAAmBvd,GAP2D,IAUvF,IAAM2e,EAAuB,eACtBhjB,YAAUsiB,GADS,CAEtBW,UAAWzlB,KAAKuB,MAAM5B,aAZ6D,MAejE+kB,EAfiE,WAgBnFV,EAAgBwB,GAAYH,EADVX,EAAJ,IACsBc,IAMxC,OAnCJ,SAAiBtjB,EAAmC2E,EAAgBie,GAEhEN,EAAOjmB,KAAK,CACR2D,QACA2E,QACAie,aAGqC,IAArCjB,EAAiB3oB,QAAQgH,IACzB0hB,IAuBJ8B,CAAQxjB,EAAO2E,EAAO2e,GACtBX,EAAM3iB,EAAO2E,EAAO2e,GAEbD,EAGX,SAASI,EAAWC,EAAUP,GAE1B,OADAO,EAASrnB,KAAK8mB,GACPE,EAyDPlf,eACA5C,YAAamgB,EAAOW,GAGxB,IAAMgB,EAAS,CACXM,MA3CJ,SAAehf,EAAOie,GAClB,OAAOE,EDjMH,QCiMwBne,EAAOie,IA2CnCgB,KAxCJ,SAAcjf,EAAOie,GACjB,OAAOE,EDpMH,OCoMuBne,EAAOie,IAwClCiB,KArCJ,SAAclf,EAAOie,GACjB,OAAOE,EDvMH,OCuMuBne,EAAOie,IAqClC7C,MAlCJ,SAAepb,EAAOie,GAClB,OAAOE,ED1MH,QC0MwBne,EAAOie,IAkCnCkB,MA/BJ,SAAelB,GACX,QADsC,IAA3BA,MAAU,KAChBze,cACD,OAAOkf,EAF2B,IAKtC,IAAMU,EAA4BzjB,YAAUsiB,GALN,MAOhBF,EAPgB,WAQlCZ,EAAgBiC,GAAiBZ,EADfT,EAAJ,IAC2BqB,IAM7C,OAHApB,ED3NI,QC2NmB,QAASoB,GAChCxB,EAASlmB,KAAK0nB,GAEPV,GAkBP3B,QACAsB,iBACAgB,kBAlEJ,SAA2Bb,GACvB,OAAOM,EAAWjB,EAAiBW,IAkEnCc,eA/DJ,SAAwBd,GACpB,OAAOM,EAAWhB,EAAcU,IA+DhCe,mBA5DJ,SAA4Bf,GACxB,OAAOM,EAAWf,EAAkBS,IA4DpCgB,iBAzDJ,SAA0BhB,GACtB,OAAOM,EAAW/c,EAAgByc,IAyDlCiB,aArBJ,SAAsBC,GAElB,OADAjC,EAAYiC,EACLhB,IAsBX,OAAOA,EC/OHiB,CAAO,CACHthB,IAAKuhB,SAkBV,SAASC,EAAT,GAA8K,IAAvJC,EAAuJ,EAAvJA,IAAKC,EAAkJ,EAAlJA,UAAWC,EAAuI,EAAvIA,gBAAiBC,EAAsH,EAAtHA,SAAUC,EAA4G,EAA5GA,qBAAsBC,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,cAAeC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,eAAgBC,EAA2B,EAA3BA,QAChJ9B,EAASpB,IAEfoB,EAAOW,mBAAkB,WACrB,MAAO,CACHoB,QAAS1sB,OAAO8K,SAAS6hB,KACzB3mB,IAASgmB,EACTD,UAIRpB,EAAOa,oBAAmB,WAAM,MACpBoB,EAAkBN,EAAlBM,KAAMC,EAAYP,EAAZO,QAEd,aACKhP,IAASE,OAAyBiH,IAAWC,OADlD,EAEKpH,IAASS,cAAyBsG,IAAkBC,kBAFzD,EAGKhH,IAASQ,YAAyB4N,EAHvC,EAIKpO,IAASE,OAAyBiH,IAAWC,OAJlD,EAKKpH,IAASC,MAAyB4C,IAAUD,aALjD,EAMK5C,IAASc,aAAyB6B,IAAiBC,aANxD,EAOK5C,IAASpB,WAAyByP,EAPvC,EAQKrO,IAASa,WAAyB6N,EAAW,GARlD,EASK1O,IAASM,oBAAyB8N,EATvC,EAUKpO,IAASK,aAAyB8N,EAVvC,EAWKnO,IAASU,SAAyBve,OAAO8K,SAAS6hB,KAXvD,EAYK9O,IAASW,iBAAyBgO,EAZvC,EAaK3O,IAASjB,QAA6BgQ,EAb3C,IAaqDC,EAbrD,EAcKhP,IAAS2B,wBAAyB0M,EAdvC,EAeKrO,IAAS4B,wBAAyB0M,EAfvC,EAgBKtO,IAAS6B,UAAyBiB,IAAcF,aAhBrD,EAiBK5C,IAAS8B,aAAyB8M,EAjBvC,EAkBK5O,IAAS+B,YAAyB5f,OAAOC,WAAaD,OAAOC,UAAUE,UAlB5E,EAmBK0d,IAASgC,aAAyBuM,EAAS9L,IAAiBvD,OAASuD,IAAiBC,SAnB3F,EAoBK1C,IAASiC,gBAAyBuM,EApBvC,EAqBKxO,IAASwC,gBAAyByM,UArBvC,KAyBJvkB,IAAaugB,8BAA6B,SAAAhoB,GAAO,MAE7C6pB,EAAOS,QAAP,MACKvN,IAASgB,YAAa,qBAD3B,EAEKhB,IAASiB,YAAapX,YAAsB5G,GAFjD,IAKA6pB,EAAOtD,MAAM,kBAAmB,CAC5BvmB,IAAKuG,YAAevG,KAIxB6pB,EAAO3B,QAAQb,MAAMjhB,QCjF7B,yP,wgBCEa2kB,EAAa,gCACbkB,EAAe,mBACfC,EAAiB,sBACjBC,EAAmB,uBACnBC,EAA+B,4BAC/BC,EAA8B,0BAG9BC,EAAgB,CACzBC,KAAoBC,kBACpBC,SAAoBD,sBACpBxM,MAAoBwM,mBACpBE,QAAoBF,qBACpBG,aAAoBH,qCAGXI,EAAc,WAEdC,EAAmB,eAEnBC,IAA8D,MACrE1M,IAAQC,QAAU,yBADmD,EAErED,IAAQE,OAAU,wBAFmD,GAK9DyM,IAAmE,MAC1E3M,IAAQC,QAAU,+BADwD,EAE1ED,IAAQE,OAAU,8BAFwD,GAQnE0M,EAA2B,CACpC,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFAGSC,EAAmB,CAC5BC,IAAU,gEACVX,KAAU,iEACVY,SAAU,sEAGDC,GAAqB,G,6BC5DnB,SAASC,IAetB,OAdAA,EAAWzvB,OAAO0vB,QAAU,SAAU/E,GACpC,IAAK,IAAIrrB,EAAI,EAAGA,EAAI6I,UAAU3E,OAAQlE,IAAK,CACzC,IAAIsrB,EAASziB,UAAU7I,GAEvB,IAAK,IAAIuB,KAAO+pB,GACV5qB,IAAiBkB,eAAezB,KAAKmrB,EAAQ/pB,KAC/C8pB,EAAO9pB,GAAO+pB,EAAO/pB,IAK3B,OAAO8pB,IAGOziB,MAAMpE,KAAMqE,WAf9B,mC,2EC4CO,SAASwnB,EAAwBC,GACpC,OAAOC,YAAY,CACf9jB,MAAO,gQASP+jB,UAAW,CAAEF,gBACd5lB,MAAK,SAAA+e,GACJ,OAAOA,EAAIgH,SAASC,KAAKC,gBAI1B,SAASC,EAA8BC,EAAvC,GAA8K,MAApGC,EAAoG,EAApGA,iBAAkBC,EAAkF,EAAlFA,QAC/F,OAAOR,YAAY,CACfrgB,SAAO,OACDwU,IAAQG,cAAgBiM,EADvB,GAGPrkB,MAAO,4bAaP+jB,UAAW,CAAEK,yBAAwBC,mBAAkBC,aACxDrmB,KAAKxB,K,WC3CL,SAAS8nB,EAAcC,EAAvB,GAA8I,MAAzFJ,EAAyF,EAAzFA,uBAAwB1C,EAAiE,EAAjEA,qBAGhF,OAFA5C,cAAY2B,KAAZ,4BAEOgE,YAAY,CACfC,YAAaN,EACb1oB,OAAQ,OACRmE,IAAK,GAAY0iB,IACjB5e,KAAa6gB,EACb/gB,SAAO,OACDwU,IAAQjD,wBAA0B0M,GAAwB,GADzD,KAGRzjB,MAAK,SAACS,GAAkB,MAEjB4lB,EAAU5lB,GAAQA,EAAKimB,GAE7B,IAAKL,EACD,MAAM,IAAIxrB,MAAJ,gCAA2CmC,KAAKC,UAAUwD,EAAM,KAAM,IAUhF,OAPAogB,cAAY6B,QAAZ,MACKvN,IAASG,YAAekH,IAAgBG,aAD7C,EAEKxH,IAASS,cAAesG,IAAkBE,SAF/C,EAGKjH,IAASO,OAAe2Q,EAH7B,EAIKlR,IAASQ,YAAe0Q,EAJ7B,IAOOA,KAIR,SAASM,EAASN,EAAlB,GAA8K,MAAxIF,EAAwI,EAAxIA,uBAAwBC,EAAgH,EAAhHA,iBAAkB3C,EAA8F,EAA9FA,qBAA8F,IAAxEmD,aACzG,OAAQR,QADyK,UAE3KS,YAAa,CACXJ,YAAaL,EACbxkB,IAAiB8iB,IAActM,MAA5B,IAAuCiO,IAE5CG,YAAY,CACVC,YAAaN,EACbvkB,IAAiB0iB,IAAd,IAAkC+B,EACrC7gB,SAAO,OACDwU,IAAQjD,wBAA0B0M,GAAwB,GADzD,KAMZ,SAASqD,EAAaT,EAAtB,GAAkL,MAAxIF,EAAwI,EAAxIA,uBAAwBC,EAAgH,EAAhHA,iBAAkB3C,EAA8F,EAA9FA,qBAA8F,IAAxEmD,aAC7G,OAAQR,QAD6K,UAE/KS,YAAa,CACXJ,YAAaL,EACb3oB,OAAa,OACbmE,IAAiB8iB,IAActM,MAA5B,IAAuCiO,EAAvC,aAELG,YAAY,CACVC,YAAaN,EACb1oB,OAAQ,OACRmE,IAAiB0iB,IAAd,IAAkC+B,EAAlC,WACH7gB,SAAO,OACDwU,IAAQjD,wBAA0B0M,GAAwB,GADzD,KAMZ,SAASsD,EAAeV,EAAxB,GAAoL,MAAxIF,EAAwI,EAAxIA,uBAAwBC,EAAgH,EAAhHA,iBAAkB3C,EAA8F,EAA9FA,qBAA8F,IAAxEmD,aAC/G,OAAQR,QAD+K,UAEjLS,YAAa,CACXJ,YAAaL,EACb3oB,OAAa,OACbmE,IAAiB8iB,IAActM,MAA5B,IAAuCiO,EAAvC,eAELG,YAAY,CACVC,YAAaN,EACb1oB,OAAQ,OACRmE,IAAiB0iB,IAAd,IAAkC+B,EAAlC,aACH7gB,SAAO,OACDwU,IAAQjD,wBAA0B0M,GAAwB,GADzD,KAUZ,SAASuD,EAAWX,EAAkB3gB,EAAtC,GAAkM,MAAxIygB,EAAwI,EAAxIA,uBAAwBC,EAAgH,EAAhHA,iBAAkB3C,EAA8F,EAA9FA,qBAA8F,IAAxEmD,oBAAwE,SAC/LK,EAAY/pB,MAAMgqB,QAAQxhB,GAAQ,CAAEyhB,MAAOzhB,GAASA,EAE1D,OAAQ0gB,IAAqBQ,EACvBC,YAAa,CACXJ,YAAaL,EACb3oB,OAAa,OACbmE,IAAiB8iB,IAActM,MAA5B,IAAuCiO,EAAvC,SACH5gB,KAAa,CAAEC,KAAMuhB,KAEvBT,YAAY,CACVC,YAAaN,EACb1oB,OAAQ,QACRmE,IAAiB0iB,IAAd,IAAkC+B,EACrC3gB,KAAauhB,EACbzhB,SAAO,OACDwU,IAAQjD,wBAA0B0M,GAAwB,GADzD,KAYZ,SAAS2D,EAASf,GACrB,OAAOQ,YAAa,CAChBjlB,IAAS8iB,IAAcG,SAApB,IAAkCwB,EAAlC,WA+BJ,SAASgB,EAAT,GAA0R,MAAzPC,EAAyP,EAAzPA,kBAAmBjB,EAAsO,EAAtOA,QAASkB,EAA6N,EAA7NA,gBAAiBC,EAA4M,EAA5MA,wBAAyB/D,EAAmL,EAAnLA,qBAAsBF,EAA6J,EAA7JA,gBAChI1C,cAAY2B,KAAZ,+BAEA,IAAMhd,IAAgB,MAChBwU,IAAQC,eADQ,UAC6BqN,EAD7B,EAEhBtN,IAAQjD,wBAA0B0M,EAFlB,EAGhBzJ,IAAQO,oBAA0BgJ,EAHlB,GAMhBkE,EAAgC,CAClCC,MAAO,CACHhB,GAAMa,EACNI,KAAM,UAIVH,IACAC,EAAcG,cAAgB,CAlCb,cAqCrB,IAAMniB,EAAO,CACToiB,eAAgBJ,GAGpB,OAAOliB,YAAQ,CACX9H,OAAQ,OACRmE,IAAY0iB,IAAT,IAA6B+B,EAA7B,IAA0C5B,IAC7Cjf,UACAC,SAID,SAASqiB,EAAsBC,GAClC,OAAOlB,YAAa,CAChBppB,OAAQ,OACRmE,IAAY8iB,IAAcI,QAAvB,IAAoCiD,EAApC,aACJ/nB,MAAK,SAAA0F,GACJ,OAAOA,EAAKgiB,SAIb,SAASM,EAAuBC,GACnC,OAAOpB,YAAa,CAChBppB,OAAQ,OACRmE,IAAY8iB,IAAcK,aAAvB,IAAyCkD,EAAzC,YACJjoB,MAAK,SAAA0F,GACJ,OAAOA,EAAKgiB,SAIb,SAASQ,EAAT,GAA8H,MAAvG7B,EAAuG,EAAvGA,QAASiB,EAA8F,EAA9FA,kBACnC,OAAOzB,YAAY,CACf9jB,MAAO,0MASP+jB,UAAW,CACPO,WAEJ7gB,SAAO,OACDwU,IAAQG,cAAgBmN,EADvB,KAMR,SAASa,EAAT,GAA8I,MAAvHZ,EAAuH,EAAvHA,gBAAiBD,EAAsG,EAAtGA,kBAC3C,OAAOzB,YAAY,CACf9jB,MAAO,oOASP+jB,UAAW,CACPyB,mBAEJ/hB,SAAO,OACDwU,IAAQG,cAAgBmN,EADvB,KAcR,SAASc,EAAT,GAAkJ,IAApH/B,EAAoH,EAApHA,QAASgC,EAA2G,EAA3GA,cAAeC,EAA4F,EAA5FA,oBAAqBC,EAAuE,EAAvEA,mBAAoBC,EAAmD,EAAnDA,YAClG,OAAO3C,YAAY,CACf9jB,MAAO,0qBAiBP+jB,UAAW,CAAEO,UAASgC,gBAAeC,sBAAqBC,qBAAoBC,iBAC/ExoB,KAAKxB,KCzOL,SAASiqB,EAAmBC,EAA5B,GACH,OApCG,SAAuBA,EAAvB,GAA6J,MAApGvC,EAAoG,EAApGA,uBAAwB1C,EAA4E,EAA5EA,qBAGpF,OAFA5C,cAAY2B,KAAZ,8BAEOgE,YAAY,CACfC,YAAaN,EACb1oB,OAAQ,OACRmE,IAAK,GAAY2iB,IACjB7e,KAAagjB,EACbljB,SAAO,OACFwU,IAAQjD,wBAAyB0M,GAAwB,GADvD,KAGRzjB,MAAK,SAAAS,GAAQ,MAENkoB,EAAYloB,GAAQA,EAAKimB,GAE/B,IAAKiC,EACD,MAAM,IAAI9tB,MAAJ,kCAA6CmC,KAAKC,UAAUwD,EAAM,KAAM,IAUlF,OAPAogB,cAAY6B,QAAZ,MACKvN,IAASG,YAAekH,IAAgBK,eAD7C,EAEK1H,IAASS,cAAesG,IAAkBG,WAF/C,EAGKlH,IAASO,OAAeiT,EAH7B,EAIKxT,IAASQ,YAAegT,EAJ7B,IAOOloB,KAUJmoB,CAAcF,EAAS,CAAEvC,uBAD4H,EAA3FA,uBACT1C,qBADoG,EAAnEA,uBAEpFzjB,MAAK,SAAA+e,GACF,GAAIA,EAAI8J,OAAS9J,EAAI8J,MAAMrvB,OACvB,IAAK,IAAIlE,EAAI,EAAGA,EAAIypB,EAAI8J,MAAMrvB,OAAQlE,IAClC,GAA4B,aAAxBypB,EAAI8J,MAAMvzB,GAAGmI,QAA8C,iBAArBshB,EAAI8J,MAAMvzB,GAAGwzB,IAAwB,CAC3E,IAAMC,EAAQhK,EAAI8J,MAAMvzB,GAAG+M,KAAK0mB,MAAM,8BACtC,GAAIA,EACA,OAAOA,EAAM,GAM7B,MAAM,IAAIluB,MAAJ,mCAIX,SAASmuB,EAAWL,EAApB,GAAgK,MAAtHxC,EAAsH,EAAtHA,uBAAwBC,EAA8F,EAA9FA,iBAAkB3C,EAA4E,EAA5EA,qBACvF,OAAO2C,EACDS,YAAa,CACXJ,YAAaL,EACbxkB,IAAiB8iB,IAAcI,QAA5B,IAAyC6D,IAE9CnC,YAAY,CACVC,YAAaN,EACbvkB,IAAiB2iB,IAAd,IAAoCoE,EACvCnjB,SAAO,OACFwU,IAAQjD,wBAAyB0M,GAAwB,GADvD,KAMZ,SAASwF,EAAeN,EAAoBO,EAA5C,GAAsL,MAAtH/C,EAAsH,EAAtHA,uBAAwBC,EAA8F,EAA9FA,iBAAkB3C,EAA4E,EAA5EA,qBAC7G,OAAO2C,EACDS,YAAa,CACXJ,YAAaL,EACb3oB,OAAa,OACbmE,IAAiB8iB,IAAcI,QAA5B,IAAyC6D,EAAzC,WACHljB,KAAa,CACTC,KAAM,CACFyjB,SAAUD,MAIpB1C,YAAY,CACVC,YAAaN,EACb1oB,OAAQ,OACRmE,IAAiB2iB,IAAd,IAAoCoE,EAApC,WACHnjB,SAAO,OACFwU,IAAQjD,wBAAyB0M,GAAwB,GADvD,GAGP/d,KAAM,CACFyjB,SAAUD,KASnB,SAASE,EAAaT,EAAoBjjB,EAA1C,GAAoL,MAAtHygB,EAAsH,EAAtHA,uBAAwBC,EAA8F,EAA9FA,iBAAkB3C,EAA4E,EAA5EA,qBACrGwD,EAAY/pB,MAAMgqB,QAAQxhB,GAAQ,CAAEyhB,MAAOzhB,GAASA,EAE1D,OAAO0gB,EACDS,YAAa,CACXJ,YAAaL,EACb3oB,OAAa,OACbmE,IAAiB8iB,IAActM,MAA5B,IAAuCuQ,EAAvC,SACHljB,KAAa,CAAEC,KAAMuhB,KAEvBT,YAAY,CACVC,YAAaN,EACb1oB,OAAQ,QACRmE,IAAiB2iB,IAAd,IAAoCoE,EACvCjjB,KAAauhB,EACbzhB,SAAO,OACFwU,IAAQjD,wBAAyB0M,GAAwB,GADvD,KC7GZ,SAAS4F,EAAmB5C,EAAsB6C,EAAlD,GAAyK,IAApE7F,EAAoE,EAApEA,qBAGxG,GAFA5C,cAAY2B,KAAZ,oCAEKiE,EACD,MAAM,IAAI5rB,MAAJ,2BAGV,IAAKyuB,EACD,MAAM,IAAIzuB,MAAJ,8CAGV,IAAM2K,EAAmB,CACrB,wBAA4CihB,EAC5C,gCAAiChD,GAGrC,OAAOle,YAAQ,CACX9H,OAAQ,OACRmE,IAAQ4iB,IACRhf,UACAC,KAAQ6jB,IACTtpB,MAAK,YAAuB,IAApBS,EAAoB,EAApBA,KAEP,IAAKA,IAASA,EAAKimB,GACf,MAAM,IAAI7rB,MAAJ,8CAAyDmC,KAAKC,UAAUwD,EAAM,KAAM,IAE9F,OAAOA,EAAKimB,MAIb,SAAS6C,EAAmB9C,EAAsBwB,EAAyBqB,EAA3E,GAAmM,IAApE7F,EAAoE,EAApEA,qBAGlI,GAFA5C,cAAY2B,KAAZ,oCAEKiE,EACD,MAAM,IAAI5rB,MAAJ,2BAGV,IAAKotB,EACD,MAAM,IAAIptB,MAAJ,sFAGV,IAAKyuB,EACD,MAAM,IAAIzuB,MAAJ,8CAGV,IAAM2K,EAAmB,CACrB,wBAA4CihB,EAC5C,gCAAiChD,GAGrC,OAAOle,YAAQ,CACX9H,OAAQ,OACRmE,IAAY4iB,IAAT,IAA2CyD,EAA3C,UACHziB,UACAC,KAAQ6jB,IACTtpB,MAAK,YAA+B,IAAtB7H,EAAsB,EAAtBA,OAEb,GAAe,MAAXA,EACA,MAAM,IAAI0C,MAAJ,gCAA2C1C,EAA3C,wBAA2E6E,KAAKC,UAHvD,EAA5BwD,KAGmG,KAAM,IAGhH,OAAOwnB,KAQR,SAASuB,EAAqBvB,EAA9B,GAA+I,IAAtF7B,EAAsF,EAAtFA,iBAC5D,OAAOS,YAAa,CAChBJ,YAAaL,EACb3oB,OAAQ,OACRmE,IAAiB8iB,IAAcK,aAA5B,IAA8CkD,EAA9C,cAIJ,SAASwB,EAAgBxB,EAAzB,GAA0I,IAAtF7B,EAAsF,EAAtFA,iBACvD,OAAOS,YAAa,CAChBJ,YAAaL,EACbxkB,IAAiB8iB,IAAcK,aAA5B,IAA8CkD,I,mBCuUlD,IAAMyB,EAAkBlsB,aAAQ,SAACmsB,GACpC,OAAOC,YAAWvE,IAAiBC,KAAKtlB,MAAK,WACzC,OAAOH,IAAaigB,IAAI,CACpB8J,YAAWvE,IAAiBV,MAC5BiF,YAAWvE,IAAiBE,eAEjCvlB,MAAK,WACJ,IAAM+lB,EAAWzuB,OAAOyuB,SAExB,IAAKA,EACD,MAAM,IAAIlrB,MAAJ,2BAIV,OADAkrB,EAAS8D,cAAcF,GAChB5D,QAIR,SAAS+D,EAAT,GAAgI,IAAtGlE,EAAsG,EAAtGA,WAAY+D,EAA0F,EAA1FA,OAiFzC,OAncG,YAA4I,IAyI3II,EAQAC,EACAC,EAlJwBrE,EAAmH,EAAnHA,WAAYsE,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,UAAWC,EAAoF,EAApFA,iBAAkBC,EAAkE,EAAlEA,UAAkE,IAAvDC,aAAuD,SAEzIC,EAAmB,GACnBC,EAAoB,GACpBC,EAAiB,GAEnBC,EAAmB,GACnBC,EAAiB,GAEfC,EAAc,SAACC,EAAQnlB,GACzB,IAAMolB,EAAaxuB,cACnBiuB,EAAiBO,IAAc,EAE/B,IAAMhsB,EAAU,aACZisB,YAAoBnF,EACpBoF,YAAoBF,EACpBG,WAAoBd,EACpBe,mBAAoBd,EACpBe,WAAoBd,GACjB3kB,GAGPmlB,EAAOhkB,KAAK7J,KAAKC,UAAU6B,KAGzBssB,EAAe,SAACP,EAAD,GAAuE,IAA5DQ,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACvE,GAAKX,EAAOY,SAIZ,OAAOb,EAAYC,EAAQ,CACvBa,YAAoBF,EACpBG,aAAoBN,EACpBO,eAAoBN,EACpBO,aA7GG,WA8GHC,aAAoBP,KAqGxBQ,GAAS,EAYPC,EAAO,SAAPA,KACFhC,EAAgBnqB,IAAaE,KAAI,WAC7B,GAAIgqB,EAEA,OADAE,EAAepqB,IAAaL,MAAMuqB,MAGvC/pB,MAAK,WACJiqB,EAAe,KACf,IAAMgC,EAAW/B,IAEXgC,EAAoB,IAAIrsB,KAAa,SAACI,EAASC,GACjD+rB,EAASE,QAAO,WACZJ,GAAS,EACThC,EAAa,EACb9pB,EAAQgsB,MAGZA,EAASG,SAAQ,SAAAh0B,GACb2zB,GAAS,EACT7rB,EAAO9H,GAAO,IAAIyC,MAAM,kBACpByvB,IA5BZA,IACAP,EAAaA,EAA2B,EAAbA,EAAkB,GA6BjCiC,QAIRC,EAASzM,SAAQ,SAAApnB,GACb8H,EAAO9H,GADa,cAGQuyB,EAHR,gBAIhB0B,EADoB,MACNj0B,SAW1B,OANA6zB,EAASK,WAAU,SAAAC,GACf,OAAOL,EAAkBlsB,MAAK,SAAA6qB,GAC1B,OA/FE,SAAIA,EAAQ2B,GAC1B,IAAIC,EAEJ,IACIA,EAAazvB,KAAKyJ,MAAM+lB,GAC1B,MAAOp0B,GACL,MAAM,IAAIyC,MAAJ,mCAA8C2xB,GAGxD,IAAKC,EACD,MAAM,IAAI5xB,MAAJ,sCAV4B,IAclB6xB,EAQhBD,EARA1B,YACgBS,EAOhBiB,EAPAf,YACgBZ,EAMhB2B,EANAzB,YACgBK,EAKhBoB,EALAd,aACgBgB,EAIhBF,EAJAZ,aACgBe,EAGhBH,EAHAX,aACgBR,EAEhBmB,EAFAb,eAMJ,GAFAJ,EAAaA,GAAciB,EAAWI,YAElC/B,IAAcP,EAAiBO,GAAnC,CAIA,KAAKA,GAAeU,GAAeH,GAAgBsB,GAR/CF,EADAtB,YAUA,MAAM,IAAItwB,MAAJ,uBAAkC2xB,GAK5C,GAFAjC,EAAiBO,IAAc,EAxMxB,YA0MH6B,EACA,OAxFU,SAAC9B,EAAD,GAAyE,IAA9D6B,EAA8D,EAA9DA,kBAAmBlB,EAA2C,EAA3CA,WAAYH,EAA+B,EAA/BA,YAAauB,EAAkB,EAAlBA,YAC/DE,EAAgB,IAAIjtB,IAG1B,OAFA4qB,EAAexvB,KAAK6xB,GAEbjtB,IAAaE,KAAI,WACpB,IAAMgtB,EAAkBrC,EAAiBW,GAEzC,IAAK0B,EACD,MAAM,IAAIlyB,MAAJ,+BAA0CwwB,GAJ1B,IAOlBhoB,EAA+B0pB,EAA/B1pB,QAER,GAFuC0pB,EAAtBC,mBAEQN,IAAsB9G,EAC3C,MAAM,IAAI/qB,MAAJ,0BAAoC6xB,GAAqB,cAGnE,OAAOrpB,EAAQ,CAAEqC,KAAMknB,OACxB5sB,MAAK,SAAA+e,GACJqM,EAAaP,EAAQ,CAAES,eAjIrB,UAiI8DC,aAAcxM,EAAKsM,cAAaG,kBACjG,SAAApzB,GAECgzB,EAAaP,EAAQ,CAAES,eAnIrB,QAmI4DC,aADlD,CAAEzsB,QAAU1G,GAAOA,EAAI0G,QAAW1G,EAAI0G,QAAU,iBACqBusB,cAAaqB,oBAAmBlB,kBAClH9L,SAAQ,WACPoN,EAAc7sB,UACdwqB,EAAe9vB,OAAO8vB,EAAe7yB,QAAQk1B,GAAgB,MA+DtDG,CAAUpC,EAAQ,CAAE6B,oBAAmBlB,aAAYH,cAAauB,gBACpE,GA3MA,aA2MID,EACP,OA7DW,SAAC,GAAmE,IAAjEnB,EAAiE,EAAjEA,WAAYkB,EAAqD,EAArDA,kBAAmBpB,EAAkC,EAAlCA,eAAgBsB,EAAkB,EAAlBA,YAAkB,EACpCpC,EAAkBgB,GAAzD0B,EAD2E,EAC3EA,gBAAiBF,EAD0D,EAC1DA,kBAEzB,IAAKE,EACD,MAAM,IAAIryB,MAAJ,6CAAwD2wB,GAGlE,GAAIwB,GAAqBN,IAAsB9G,EAC3C,MAAM,IAAI/qB,MAAJ,0BAAoC6xB,GAAqB,cAKnE,UAFOlC,EAAkBgB,GAtJnB,YAwJFF,EACA4B,EAAgBjtB,QAAQ,CAAEyF,KAAMknB,QAC7B,IAzJD,UAyJKtB,EAGP,MAAM,IAAIzwB,MAAJ,oCAA8C1C,QAAU,cAF9D+0B,EAAgBhtB,OAAO,IAAIrF,MAAM+xB,EAAY9tB,WA6CtCquB,CAAW,CAAE3B,aAAYkB,oBAAmBpB,iBAAgBsB,gBAGnE,MAAM,IAAI/xB,MAAJ,8BAAyC8xB,IAqDhCL,CAAUzB,EAAQ0B,SAI1BL,MAGGzM,MAAMjhB,MAwFxB,OArFAwtB,IAqFO,CAAEoB,GAnFE,SAACv3B,EAAMwN,EAAP,GAAsD,kBAAP,GAAO,GAApC2pB,yBAAoC,SAC7D,GAAItC,EAAiB70B,GACjB,MAAM,IAAIgF,MAAJ,yCAAoDhF,GAQ9D,OALA60B,EAAiB70B,GAAQ,CACrBwN,UACA2pB,qBAGG,CACH3sB,OAAQ,kBACGqqB,EAAiB70B,MAuEvBgR,KAlEA,SAAOwkB,EAAauB,EAApB,GAA0G,iBAAzB,GAAyB,MAAnEI,yBAAmE,aAAzCttB,eAAyC,MAA/B,EAA+B,EACnH,OAAOsqB,EAAchqB,MAAK,SAAA6qB,GACtB,IAAMW,EAAalvB,cAEb4wB,EAAkB,IAAIrtB,IAmB5B,OAlBA2qB,EAAkBgB,GAAc,CAC5B0B,kBACAF,qBAGJpC,EAAYC,EAAQ,CAChBa,YAAcF,EACdG,aAAcN,EACdQ,aA/SD,UAgTCC,aAAcc,IAGdltB,GACAI,YAAW,WACPotB,EAAgBhtB,OAAO,IAAIrF,MAAJ,4BAAuCwwB,EAAvC,mBAAuE3rB,EAAvE,SACxBA,GAGAwtB,MA2CI1N,QAJH,SAACnc,GACbsnB,EAAe1vB,KAAKoI,IAGIgqB,UAvCV,WACd,OAAOxtB,IAAaE,KAAI,WACpB,OAAKgsB,EAID9B,GACAA,EAAahqB,UACN+pB,IAGXD,EAAa,EACNiC,KATIhC,MAoCoBtlB,MAvBzB,WACV4lB,GAAQ,EAERI,EAAmB,GACnBC,EAAiB,GAJD,cAMS30B,OAAO4D,KAAK4wB,GANrB,eAOgBA,EADX,MACT0C,gBACQ/N,YAAY,IAAItkB,MAAJ,kBAGhCgF,IAAaigB,IAAI2K,GAAgBzqB,MAAK,WAClC,OAAOgqB,EAAchqB,MACjB,SAAA6qB,GAAM,OAAIA,EAAOnmB,UACjBlG,UAoLL8uB,CAAc,CAAE1H,aAAYsE,OAhFpB,WACX,IAAIzlB,GAAO,EAEL8oB,EAAoB,GACpBC,EAAkB,GAClBC,EAAkB,GAClBC,EAAiB,GAEjB/O,EAAQ,SAACvmB,GAAQ,cACGo1B,EADH,YAEfnqB,EADkBmqB,EAAJ,IACNp1B,IAIVu1B,EAAkB9tB,IAAaigB,IAAI,CACrC4J,EAAgBC,GAChBhE,EAAwBC,KACzB5lB,MAAK,YAAgC,IAA7B+lB,EAA6B,KAAnBE,EAAmB,KACpC,OAAOF,EAASC,OAAO4H,sBAAsB3H,GAAcjmB,MAAK,WAC5D,IAAM6tB,EAAW9H,EAAS8H,WAC1B9H,EAAS8H,SAASC,SAASC,kBAE3BtpB,GAAO,EAJ2D,cAM5CipB,EAN4C,YAO9DrqB,EADkBqqB,EAAJ,MAiBlB,OAbAG,EAASG,IAAT,SAAuBpI,EAAvB,aAA+CwH,GAAG,SAAS,SAACrO,GAAQ,IAChE,IAAMkP,EAAWlP,EAAI3hB,OAAS,GADkC,MAExCpH,OAAO4D,KAAKq0B,GAF4B,eAEjB,IAA1C,IACKnvB,EAAUmvB,EADA,MAA2B,MAErBV,EAFqB,YAGvClqB,EADkBkqB,EAAJ,IACNzuB,MAGjB,SAAA1G,GACCumB,EAAMvmB,MAGVy1B,EAASK,WACFL,QAMf,OAFAF,EAAgBlO,MAAMjhB,KAEf,CACHqI,KAAM,SAACnB,GACHioB,EAAgB3tB,MAAK,SAAA6tB,GACjB,OAAOA,EAASG,IAAT,SAAuBpI,EAAvB,aAAgDtpB,eAAejC,IAAIqL,MAC3E+Z,MAAMd,IAEbja,MAAO,WACHipB,EAAgB3tB,MAAK,SAAA6tB,GACjBA,EAASM,gBAGjB7B,UAAW,SAACjpB,GACRkqB,EAAkBtyB,KAAKoI,IAE3Bmc,QAAS,SAACnc,GACNmqB,EAAgBvyB,KAAKoI,IAEzB8oB,OAAQ,SAAC9oB,GACDoB,EACApB,IAEAqqB,EAAezyB,KAAKoI,IAG5B+oB,QAAS,SAAC/oB,GACNoqB,EAAgBxyB,KAAKoI,IAEzBooB,OAAQ,WACJ,OAAOhnB,KAKwB0lB,UAjFwF,EAAlFA,UAiFKC,iBAjF6E,EAAvEA,iBAiFYC,UAjF2D,EAArDA,YCxclF,6uB,0KCcO,SAAS7D,EAAT,GAA6G,MAAhFC,EAAgF,EAAhFA,YAAahpB,EAAmE,EAAnEA,OAAQmE,EAA2D,EAA3DA,IAAK8D,EAAsD,EAAtDA,KAAMF,EAAgD,EAAhDA,QAEhE,IAAKihB,EACD,MAAM,IAAI5rB,MAAJ,6BAAwC+G,GAGlD,IAAMwsB,EAAiB,oBACjBpU,IAAQC,eADM,UACsBwM,EADtB,EAEdzM,IAAQE,cAFM,sBAGb1U,GAGP,OAAOD,YAAQ,CACX9H,SACAmE,MACA4D,QAAS4oB,EACT3oB,KAASC,IACV1F,MAAK,YAAoD,IAAjD7H,EAAiD,EAAjDA,OAAQsI,EAAyC,EAAzCA,KACf,GAAItI,GAAU,IACV,MAAM,IAAI0C,MAAU+G,EAAd,qBAAwCzJ,EAAxC,cAF8C,EAAnCqN,QAEmEwU,IAAQQ,iBAAtF,KAGV,OAAO/Z,KAWR,SAASomB,EAAT,GAAsG,MAA9EJ,EAA8E,EAA9EA,YAAa7kB,EAAiE,EAAjEA,IAAiE,IAA5DnE,cAA4D,MAAnD,MAAmD,EAA5CgI,EAA4C,EAA5CA,KAEvD4oB,IAAkC,MAClCrU,IAAQM,cAAgBP,IADU,GAQxC,OAJI0M,IACA4H,EAAWrU,IAAQG,cAAgBsM,GAGhClhB,YAAQ,CAAE3D,MAAKnE,SAAQ+H,QAAS6oB,EAAY5oB,SAC9CzF,MAAK,YAA+B,IAA5B7H,EAA4B,EAA5BA,OAAQsI,EAAoB,EAApBA,KAAM+E,EAAc,EAAdA,QACnB,GAAiB,gBAAb/E,EAAK6tB,IAAuB,CAC5B,IAAMl2B,EAAM,IAAIyC,MAAM4F,EAAK8tB,aAG3B,MADAn2B,EAAIsN,KAAOjF,EAAKiF,KACVtN,EAGV,GAAID,EAAS,IACT,MAAM,IAAI0C,MAAJ,QAAmB+G,EAAnB,0BAAkDzJ,EAAlD,cAAwEqN,EAAQwU,IAAQQ,iBAAxF,KAGV,GAAiB,YAAb/Z,EAAK6tB,IACL,MAAM,IAAIzzB,MAAJ,QAAmB+G,EAAnB,kBAA0CnB,EAAK6tB,IAA/C,cAAkE9oB,EAAQwU,IAAQQ,iBAAlF,KAGV,OAAO/Z,EAAKiF,QAIjB,SAASmgB,EAAT,GAA6K,IAAnJ9jB,EAAmJ,EAAnJA,MAAmJ,IAA5I+jB,iBAA4I,MAAhI,GAAgI,MAA5HtgB,eAA4H,MAAlH,GAAkH,EAChL,OAAOD,YAAQ,CACX3D,IAASojB,IACTvnB,OAAS,OACTgI,KAAS,CACL1D,QACA+jB,aAEJtgB,QAAS,aACL,aAAcuU,KACXvU,KAERxF,MAAK,YAAsB,IAAnB7H,EAAmB,EAAnBA,OAAQsI,EAAW,EAAXA,KACT+tB,EAAS/tB,EAAK+tB,QAAU,GAE9B,GAAIA,EAAOh1B,OAAQ,CACf,IAAMsF,EAAU0vB,EAAO,GAAG1vB,SAAW9B,KAAKC,UAAUuxB,EAAO,IAC3D,MAAM,IAAI3zB,MAAMiE,GAGpB,GAAe,MAAX3G,EACA,MAAM,IAAI0C,MAAUmqB,IAAd,oBAA+C7sB,GAGzD,OAAOsI,EAAKiF,U,6BCtGb,ICKH+oB,EAAsB,mCAMnB,SAASC,EAAgBvsB,GAC5B,YAD2E,IAA/CA,MAA6B7K,QDRjD,WCSD6K,EAAIC,SAASyf,SAGjB,SAAS8M,EAAUxsB,GAEtB,QAFsF,IAAhEA,MAA+B7K,QAEhD6K,EAIL,IACI,GAAIA,EAAIysB,QAAUzsB,EAAIysB,SAAWzsB,EAC7B,OAAOA,EAAIysB,OAEjB,MAAOx2B,KAuBN,SAASy2B,EAAkB1sB,GAC9B,IAGI,OAAO,EACT,MAAO/J,IAIT,OAAO,EAGJ,SAAS02B,EAAgB3sB,QAA+C,IAA/CA,MAA8B7K,QAE1D,IAAI8K,EAAWD,EAAIC,SAEnB,IAAKA,EACD,MAAM,IAAIvH,MAAJ,gCAGV,IAAIgnB,EAAWzf,EAASyf,SAExB,IAAKA,EACD,MAAM,IAAIhnB,MAAJ,gCAGV,GDxEQ,UCwEJgnB,EACA,MAAWkN,UAGf,GD3EQ,WC2EJlN,EAA6B,CAE7B,IAAI+M,EAASD,EAAUxsB,GACvB,OAAIysB,GAAUC,IAEHC,EAAgBF,GAGhBG,WAGf,IAAI9K,EAAO7hB,EAAS6hB,KAEpB,IAAKA,EACD,MAAM,IAAIppB,MAAJ,4BAGV,OAAWgnB,EAAX,KAA0BoC,EAGvB,SAAS+K,EAAU7sB,QAA+C,IAA/CA,MAA8B7K,QAEpD,IAAI23B,EAASH,EAAgB3sB,GAE7B,OAAI8sB,GAAU9sB,EAAI+sB,YAAwD,IAA1C/sB,EAAI+sB,WAAWt3B,QDrGvC,SCsGGuK,EAAI+sB,WAGRD,EAgEJ,SAASE,EAAahtB,GAEzB,IA9CG,SAA8BA,GAEjC,IACI,GAAIA,IAAQ7K,OACR,OAAO,EAGb,MAAOc,IAIT,IACI,IAAIg3B,EAAOp5B,OAAOq5B,yBAAyBltB,EAAK,YAEhD,GAAIitB,IAA4B,IAApBA,EAAKl5B,WACb,OAAO,EAGb,MAAOkC,IAIT,IAEI,GAAIs2B,EAAgBvsB,IAAQ0sB,IACxB,OAAO,EAEb,MAAOz2B,IAIT,IAEI,GAAI02B,EAAgB3sB,KAAS2sB,EAAgBx3B,QACzC,OAAO,EAGb,MAAOc,IAIT,OAAO,EAKFk3B,CAAqBntB,GACtB,OAAO,EAGX,IAEI,GAAIA,IAAQ7K,OACR,OAAO,EAIX,GAAIo3B,EAAgBvsB,IAAQ0sB,IACxB,OAAO,EAIX,GAAIG,EAAU13B,UAAY03B,EAAU7sB,GAChC,OAAO,EAGb,MAAO/J,IAIT,OAAO,EAIJ,SAASm3B,EAAiBptB,GAC7B,IAAKgtB,EAAahtB,GACd,MAAM,IAAItH,MAAJ,qCAIV,OAAOsH,EAqBJ,SAASqtB,EAAiBZ,EAAgCa,GAE7D,IAAKb,IAAWa,EACZ,OAAO,EAGX,IAAIC,EAAcf,EAAUc,GAE5B,OAAIC,EACOA,IAAgBd,GAGgB,IA9BxC,SAAoBzsB,GAEvB,IAAI9C,EAAS,GAEb,IAEI,KAAO8C,EAAIysB,SAAWzsB,GAClB9C,EAAOpE,KAAKkH,EAAIysB,QAChBzsB,EAAMA,EAAIysB,OAGhB,MAAOx2B,IAIT,OAAOiH,EAeHswB,CAAWF,GAAO73B,QAAQg3B,GAmF3B,SAASgB,EAAOztB,QAAgE,IAAhEA,MAA+B7K,QAElD,IACI,GAAI6K,EAAI0B,IACJ,OAAO1B,EAAI0B,IAEjB,MAAOzL,IAIT,GAAIu2B,EAAUxsB,KAASA,EACnB,OAAOA,EAGX,IACI,GAAIqtB,EAAiBl4B,OAAQ6K,IAAQ7K,OAAOuM,IACxC,OAAOvM,OAAOuM,IAEpB,MAAOzL,IAIT,IACI,GAAIo3B,EAAiBrtB,EAAK7K,SAAWA,OAAOuM,IACxC,OAAOvM,OAAOuM,IAEpB,MAAOzL,IA1B0E,cAfhF,SAASy3B,EAAkB1tB,GAA4D,IAE1F,IAAI9C,EAAS,GAF6E,MA7DvF,SAAmB8C,GAEtB,IAEI2tB,EAQAC,EAVA1wB,EAAS,GAIb,IACIywB,EAAS3tB,EAAI2tB,OACf,MAAO13B,GACL03B,EAAS3tB,EAKb,IACI4tB,EAAMD,EAAOt2B,OACf,MAAOpB,IAIT,GAAY,IAAR23B,EACA,OAAO1wB,EAGX,GAAI0wB,EAAK,CACL,IAAK,IAAIz6B,EAAI,EAAGA,EAAIy6B,EAAKz6B,IAAK,CAE1B,IAAI06B,OAAK,EAET,IACIA,EAAQF,EAAOx6B,GACjB,MAAO8C,GACL,SAGJiH,EAAOpE,KAAK+0B,GAGhB,OAAO3wB,EAGX,IAAK,IAAI/J,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAI06B,OAAK,EAET,IACIA,EAAQF,EAAOx6B,GACjB,MAAO8C,GACL,OAAOiH,EAGX,IAAK2wB,EACD,OAAO3wB,EAGXA,EAAOpE,KAAK+0B,GAGhB,OAAO3wB,EAQW4wB,CAAU9tB,GAJ8D,eAIxD,CAA7B,IAAI6tB,EAAK,KACV3wB,EAAOpE,KAAK+0B,GADkB,cAGPH,EAAkBG,GAHX,eAI1B3wB,EAAOpE,KADQ,MAKvB,OAAOoE,EAiCWwwB,CAAkB1tB,GA9B+C,eA8BzC,CAArC,IAAI6tB,EAAK,KACV,IACI,GAAIA,EAAMnsB,IACN,OAAOmsB,EAAMnsB,IAEnB,MAAOzL,IAIT,GAAIu2B,EAAUqB,KAAWA,EACrB,OAAOA,GA8EnB,IAAIE,EAAgB,GAChBC,EAAe,GAEZ,SAAS11B,EAAe0H,EAA6BiuB,QAAsC,IAAtCA,OAAsB,GAE9E,IACI,GAAIjuB,IAAQ7K,OACR,OAAO,EAEb,MAAOc,GACL,OAAO,EAGX,IACI,IAAK+J,EACD,OAAO,EAGb,MAAO/J,GACL,OAAO,EAGX,IACI,GAAI+J,EAAI4pB,OACJ,OAAO,EAGb,MAAO3zB,GAIL,OAAIA,GAAOA,EAAI0G,UAAY2vB,EAQ/B,GAAI2B,GAAajB,EAAahtB,GAC1B,IAEI,GAAIA,EAAIkuB,WACJ,OAAO,EAEb,MAAOj4B,IAOb,IACI,IAAK+J,EAAIysB,SAAWzsB,EAAI0B,IACpB,OAAO,EAEb,MAAOzL,IAeT,IAAIk4B,EAtFR,SAAwBh3B,EAAuBC,GAC3C,IAAK,IAAIjE,EAAI,EAAGA,EAAIgE,EAAWE,OAAQlE,IAEnC,IACI,GAAIgE,EAAWhE,KAAOiE,EAClB,OAAOjE,EAEb,MAAO8C,IAKb,OAAQ,EA0EUiB,CAAY62B,EAAe/tB,GAE7C,IAAqB,IAAjBmuB,EAAoB,CACpB,IAAIN,EAAQG,EAAaG,GAEzB,GAAIN,GA9GL,SAA6BA,GAEhC,IAAKA,EAAMO,cACP,OAAO,EAGX,IAAKP,EAAM5qB,WACP,OAAO,EAGX,IAAIlC,EAAM8sB,EAAMQ,cAEhB,SAAIttB,IAAOA,EAAI6B,iBAAoB7B,EAAI6B,gBAAgB0rB,SAAST,IAkG/CU,CAAoBV,GAC7B,OAAO,EAIf,OAAO,EAoBJ,SAASW,EAAgBX,GAI5B,GArBJ,WACI,IAAK,IAAI16B,EAAI,EAAGA,EAAI46B,EAAc12B,OAAQlE,IAAK,CAC3C,IAAIy2B,GAAS,EAEb,IACIA,EAASmE,EAAc56B,GAAGy2B,OAC5B,MAAO3zB,IAIL2zB,IACAoE,EAAax1B,OAAOrF,EAAG,GACvB46B,EAAcv1B,OAAOrF,EAAG,KAOhCs7B,GAEIZ,GAASA,EAAMO,cACf,IACIL,EAAcj1B,KAAK+0B,EAAMO,eACzBJ,EAAal1B,KAAK+0B,GACpB,MAAO53B,KA4WV,SAASoC,EAAS6C,GAErB,IACI,GAAIA,IAAQ/F,OACR,OAAO,EAEb,MAAOc,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAIf,IACI,GAA4C,oBAAxCz4B,GAAiBqG,SAAS5G,KAAK4H,GAC/B,OAAO,EAEb,MAAOjF,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAIf,IACI,GAAIn3B,OAAOymB,QAAU1gB,aAAe/F,OAAOymB,OACvC,OAAO,EAEb,MAAO3lB,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAIf,IACI,GAAIpxB,GAAOA,EAAIwzB,OAASxzB,EACpB,OAAO,EAEb,MAAOjF,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAIf,IACI,GAAIpxB,GAAOA,EAAIuxB,SAAWvxB,EACtB,OAAO,EAEb,MAAOjF,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAIf,IACI,GAAIpxB,GAAOA,EAAIwG,MAAQxG,EACnB,OAAO,EAEb,MAAOjF,GACL,GAAIA,GAAOA,EAAI0G,UAAY2vB,EACvB,OAAO,EAaf,IACI,GAAIpxB,GAAmD,uBAA5CA,EAAIyzB,oCACX,OAAO,EAGb,MAAO14B,GACL,OAAO,EAGX,OAAO,ECj+BX,+O,6BCAA,iMAKO,SAAS24B,IACZ,OAAO/tB,YAAiB,KAAMyX,IAAgBC,eAAvB,MAGpB,SAASsW,EAAmBC,GAC/B,IAAM5I,EAAgB4I,EAAOC,aAAazW,IAAgBC,gBACpD6M,EAAkB0J,EAAOC,aAAazW,IAAgBE,mBAI5D,MAAO,CAAE0N,gBAAe8I,KAHXF,EAAOC,aAAazW,IAAgB5B,MAGnB0O,mBAG3B,SAAS6J,EAAqBH,GACjCA,EAAOI,UAAUC,IAAIxW,IAAMC,SAGxB,SAASwW,EAAsBN,GAClCA,EAAOI,UAAUG,OAAO1W,IAAMC,SAG3B,SAAS0W,IACZ,IAAIC,EAAQ,GAIZ,OAHIz5B,SAASwI,OACTixB,EAAQz5B,SAASwI,KAAKywB,aAAd,GAA+BzW,IAAgBI,QAAa,IAEjE6W,I,6BC/BX,o8E,6BCAA,qOAKO,SAASC,IACZ,OAAO,IAAI9xB,IAAarB,KAGrB,SAASozB,IACZ,OAAO/xB,IAAaI,UAajB,SAAS4xB,EAAWjwB,GACvB,IAAMkwB,EAAM75B,SAAS85B,cAAc,OACnCD,EAAIE,IAAMpwB,EACVkwB,EAAIG,MAAMC,WAAa,SACvBJ,EAAIG,MAAME,SAAW,WACjBl6B,SAASwI,MACTxI,SAASwI,KAAKyE,YAAY4sB,GAI3B,SAASM,EAAcxtB,GAC1BA,EAAGtB,iBAAiBwY,IAAUC,WAAW,WACrCnX,EAAGysB,UAAUC,IAAIxW,IAAME,YAG3BpW,EAAGtB,iBAAiBwY,IAAUE,OAAO,SAACzY,GAC9BqB,EAAGysB,UAAUZ,SAAS3V,IAAME,WAC5BzX,EAAM8uB,iBACNztB,EAAG0tB,OACH1tB,EAAGysB,UAAUG,OAAO1W,IAAME,aAmB/B,SAAS4O,EAAWhoB,GACvB,OAAO,IAAI/B,KAAa,SAACI,EAASC,GAC9B,IAAMqyB,EAAYt6B,SAASwI,MAAQxI,SAASu6B,KAE5C,IAAKD,EACD,OAAOryB,EAAO,IAAIrF,MAAJ,sCAAiD+G,IAGnE,IAAM6wB,EAASx6B,SAAS85B,cAAc,UACtCU,EAAOC,aAAa,MAAO9wB,GAC3B6wB,EAAOnvB,iBAAiB,QAAQ,kBAAMrD,EAAQwyB,MAE9CA,EAAOnvB,iBAAiB,SAAS,SAAClL,GAAD,OAAS8H,EAAO9H,MACjDm6B,EAAUrtB,YAAYutB,MAIvB,SAASE,EAAc5S,GAC1B,OAAO,IAAIlgB,KAAa,SAACI,EAASC,GAAW,cACnB6f,EADmB,WACnBA,EAAJ,GACN/f,KAAKC,EAASC,Q,6BCnFnB,SAAS0yB,EAA8BhS,EAAQiS,GAC5D,GAAc,MAAVjS,EAAgB,MAAO,GAC3B,IAEI/pB,EAAKvB,EAFLqrB,EAAS,GACTmS,EAAa98B,OAAO4D,KAAKgnB,GAG7B,IAAKtrB,EAAI,EAAGA,EAAIw9B,EAAWt5B,OAAQlE,IAE7Bu9B,EAASj7B,QADbf,EAAMi8B,EAAWx9B,KACY,IAC7BqrB,EAAO9pB,GAAO+pB,EAAO/pB,IAGvB,OAAO8pB,EAZT,mC,6BCEA,iHAeO,SAASoS,IAEZ,MAAO,GAGJ,SAASC,EAAoB34B,GAChC,MAAO,CACH44B,OAAS,kBAAMpzB,IAAaE,KAAI,kBAAM1F,GAAI,OAC1C64B,QAAS,kBAAMrzB,IAAaE,KAAI,kBAAM1F,GAAI,QAS3C,SAAS84B,EAAUC,GAA0B,IACxCC,EAAWD,EAAXC,OAER,OAAO,WACH,IAAIC,GAAU,EAUd,MAAO,CACHC,YATgB1zB,IAAaE,KAAI,WACjC,GAAIszB,EACA,OAAOA,EAvBZ,GAuBuCL,GAAoB,SAAA51B,GAClDk2B,EAAUl2B,SAOlBo2B,UAAW,kBAAMF,O,0QCdtB,SAASG,IAEZ,MAAO,GAWJ,SAASC,EAAT,GAAyI,IAA5GvN,EAA4G,EAA5GA,uBAAwBwN,EAAoF,EAApFA,OAAQC,EAA4E,EAA5EA,SAAU/P,EAAkE,EAAlEA,WAAYJ,EAAsD,EAAtDA,qBA2CtF,MAAO,CAAE7sB,OA1CM,SAAC8O,GAEZ,IAAI6gB,EAAiB,eAAK7gB,GAE1B,GAAI6gB,EAAMoN,QAAUpN,EAAMoN,OAAO92B,gBAAkB82B,EAC/C,MAAM,IAAI94B,MAAJ,sBAAiC0rB,EAAMoN,OAAvC,kEAAiHjgB,IAAeU,OAAhI,IAA4ImS,EAAMoN,OAAO92B,cAAzJ,8BAkCV,OA/BA0pB,EAAQ,eAAKA,EAAR,CAAeoN,OAAQA,EAAOE,iBAE7BC,eAAiBvN,EAAMuN,eAAeryB,KAAI,SAAAsyB,GAC5C,GAAIA,EAAKC,OAAOC,eAAiBF,EAAKC,OAAOC,gBAAkBL,EAC3D,MAAM,IAAI/4B,MAAJ,wBAAmCk5B,EAAKC,OAAOC,cAA/C,kEAAgIvgB,IAAeS,SAA/I,IAA6J4f,EAAKC,OAAOC,cAAzK,8BAGV,IAAIC,EAAQH,EAAKG,MAEjB,GAAIA,GAASrQ,GAAcA,EAAWrqB,OAAQ,CAC1C,IAAKqqB,EAAW,GACZ,MAAM,IAAIhpB,MAAJ,QAAmB6Y,IAAeM,YAAlC,kCAGV,GAAIkgB,EAAMC,aAAeD,EAAMC,cAAgBtQ,EAAW,GACtD,MAAM,IAAIhpB,MAAJ,qCAAgDgpB,EAAW,GAA3D,KAWd,OAPIA,IACAqQ,EAAQ,eACDA,EADF,CAEDC,YAAatQ,EAAW,MAIhC,eAAYkQ,EAAZ,CAAkBG,QAAOF,OAAQ,eAAKD,EAAKC,OAAZ,CAAoBC,cAAeL,SAGtErN,EAAM6N,oBAAsB7N,EAAM6N,qBAAuB,GAElD9N,YAAcC,EAAO,CAAEJ,yBAAwB1C,uBAAsBmD,cAAc,MAM3F,SAASyN,EAAT,GAA6I,IAA9GlO,EAA8G,EAA9GA,uBAAwBwN,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,SAAU/P,EAAoE,EAApEA,WAAYJ,EAAwD,EAAxDA,qBAiDxF,MAAO,CAAE7sB,OAhDM,SAAC8O,GAEZ,IAAIgjB,EAAmB,eAAKhjB,GAEtB4uB,EAAkBX,IAAWvf,IAAO8D,QAAU,OAASyb,EAE7D,GAAIjL,EAAQiL,QAAUjL,EAAQiL,SAAWW,EACrC,MAAM,IAAIz5B,MAAJ,sBAAiC6tB,EAAQiL,OAAzC,qCAAsFW,GAsChG,OAnCA5L,EAAU,eAAKA,EAAR,CAAiBiL,OAAQW,KAExBC,aAAe7L,EAAQ6L,aAAa9yB,KAAI,SAAA+yB,GAC5C,GAAIA,EAAYR,OAAOJ,UAAYY,EAAYR,OAAOJ,WAAaA,EAC/D,MAAM,IAAI/4B,MAAJ,wBAAmC25B,EAAYR,OAAOJ,SAAtD,kEAAkIlgB,IAAeS,SAAjJ,IAA+JqgB,EAAYR,OAAOJ,SAAlL,8BAGV,IAAIM,EAAQM,EAAYN,MAExB,GAAIA,GAASrQ,GAAcA,EAAWrqB,OAAQ,CAC1C,IAAKqqB,EAAW,GACZ,MAAM,IAAIhpB,MAAJ,QAAmB6Y,IAAeM,YAAlC,kCAGV,GAAIkgB,EAAMC,aAAeD,EAAMC,cAAgBtQ,EAAW,GACtD,MAAM,IAAIhpB,MAAJ,qCAAgDgpB,EAAW,GAA3D,KAWd,OAPIA,IACAqQ,EAAQ,eACDA,EADF,CAEDC,YAAatQ,EAAW,MAIhC,eAAY2Q,EAAZ,CAAyBN,QAAOF,OAAQ,eAAKQ,EAAYR,OAAnB,CAA2BJ,kBAGrElL,EAAQ+L,cAAgB/L,EAAQ+L,eAAiB,GACjD/L,EAAQ+L,cAAcC,WAAahM,EAAQ+L,cAAcC,YAAkB1F,cAAxC,qBACnCtG,EAAQ+L,cAAcE,WAAajM,EAAQ+L,cAAcE,YAAkB3F,cAAxC,qBACnCtG,EAAQkM,MAAQlM,EAAQkM,OAAS,GACjClM,EAAQkM,MAAMC,eAAiBnM,EAAQkM,MAAMC,gBAAkB,SAExDpM,YAAmBC,EAAS,CAAEvC,yBAAwB1C,2BAM9D,SAASqR,EAAT,GAA2J,IAAvH3O,EAAuH,EAAvHA,uBAAwBwN,EAA+F,EAA/FA,OAAQC,EAAuF,EAAvFA,SAAU/P,EAA6E,EAA7EA,WAAYJ,EAAiE,EAAjEA,qBACvF8C,EAAQmN,EAAkB,CAAEvN,yBAAwBwN,SAAQC,WAAU/P,aAAYJ,yBAClFiF,EAAU2L,EAAoB,CAAElO,yBAAwBwN,SAAQC,WAAU/P,aAAYJ,yBAE5F,MAAO,CACH8C,QACAmC,QAASlD,IAAqBkD,EAAU,MAIzC,SAASqM,EAAe3B,EAAxB,GAAiQ,IAA9L4B,EAA8L,EAA9LA,uBAAwB3L,EAAsK,EAAtKA,mBACtF4L,EAAqF7B,EAArF6B,YAAa1R,EAAwE6P,EAAxE7P,gBAAyBqQ,EAA+CR,EAA/CQ,SAExCluB,EA1HC,GA2HDwvB,EAAUJ,EAAyB,CAAE3O,uBAJyN,EAAtNA,uBAIqBwN,OAH0BP,EAAvDO,OAGqCC,WAAU/P,WAHQuP,EAArCvP,WAGyCJ,qBAHJ2P,EAAzB3P,uBAKpE,OAAOjmB,aAAQ,WACX,IAAM23B,EAAYz4B,KAAKuB,MAEvB,OAAO4B,IAAaE,KAAI,WACpB,OAAIi1B,EACOA,IAAyBh1B,KAAK8nB,KAC9BuB,EACAA,IAAqBrpB,KAAKgoB,KAC1BiN,EACAA,EAAYvvB,EAAMwvB,GAElBA,EAAQ3O,MAAM3vB,OAAO,CACxBk9B,eAAgB,CACZ,CACIE,OAAQ,CACJC,cAAeL,EACfr9B,MAAe,eAMpCyJ,MAAK,SAAAqmB,GAAW,MACf,IAAKA,GAA8B,iBAAZA,EACnB,MAAM,IAAIxrB,MAAJ,qCAGV,GAAgC,IAA5BwrB,EAAQzuB,QAAQ,SAA+C,IAA9ByuB,EAAQzuB,QAAQ,UACjD,MAAM,IAAIiD,MAAJ,6FAGV,IAAMu6B,EAAW14B,KAAKuB,MAAQk3B,EAW9B,OATAtU,cAAY6B,OAAZ,OACKvN,IAASE,OAAqBiH,IAAWC,OAD9C,EAEKpH,IAASG,YAAqBkH,IAAgBI,cAFnD,EAGKzH,IAASS,cAAqBsG,IAAkBE,SAHrD,EAIKjH,IAASQ,YAAqB0Q,EAJnC,EAKKlR,IAASM,oBAAqB8N,EALnC,EAMKpO,IAASqC,mBAAqB4d,EAAS/4B,WAN5C,IAOGikB,QAEI+F,U,6BC3MnB,uFAqNO,SAASgP,EAAajC,EAAtB,GAA6J,IAApHjN,EAAoH,EAApHA,uBAAwB8O,EAA4F,EAA5FA,YAC5DtB,EAAwGP,EAAxGO,OADwJ,EAChDP,EAAhGkC,iBADgJ,MAZpK,SAA6B3B,GACzB,OAAO,SAACjuB,EAAMwvB,GACV,GAAIvB,IAAWvf,IAAO8D,QAClB,OAAOgd,EAAQ3O,MAAMgP,UAAUv1B,KAAKxB,KACjC,GAAIm1B,IAAWvf,IAAO+D,UACzB,OAAO+c,EAAQ3O,MAAMiP,YAAYx1B,KAAKxB,KAEtC,MAAM,IAAI3D,MAAJ,wCAAmD84B,IAMrC8B,CAAoB9B,GADgH,EACvGlQ,EAAuD2P,EAAvD3P,qBAAsBjE,EAAiC4T,EAAjC5T,QADiF,EAChD4T,EAAxBsC,mBADwE,SAGhK,IAAKJ,EACD,MAAM,IAAIz6B,MAAJ,sBAGV,OAAO2C,aAAQ,cAAqH,IAAlH0rB,EAAkH,EAAlHA,QAASP,EAAyG,EAAzGA,UAAWZ,EAA8F,EAA9FA,aAAcE,EAAgF,EAAhFA,eAAgB7B,EAAgE,EAAhEA,iBAAgE,IAA9CQ,oBAA8C,MAA/B8O,EAA+B,EAAdC,EAAc,EAAdA,QAClH,OAAO91B,IAAaE,KAAI,WACpB,GAAI21B,EACA,OAAOT,IAAcj1B,MAAK,SAAAqmB,GAAO,OAAIH,YAA8BC,EAAwB,CAAEC,mBAAkBC,kBAEpHrmB,MAAK,WACJ,OAAOi1B,OACRj1B,MAAK,SAAAqmB,GAAW,MAEfxF,cACK2B,KAAK,kBACLE,OAFL,OAGSvN,IAASG,YAAakH,IAAgBO,mBAH/C,IAIOuD,QAEP,IAAM5a,EAAO,CAAE2gB,UAAS6C,UAASP,YAAWZ,eAAcE,iBAAgB9B,0BACpE+O,EAnFlB,YAAsN,IAAtLvB,EAAsL,EAAtLA,OAAQtN,EAA8K,EAA9KA,QAASsC,EAAqK,EAArKA,UAAWO,EAA0J,EAA1JA,QAASyM,EAAiJ,EAAjJA,QAAS1N,EAAwI,EAAxIA,eAAgB9B,EAAwH,EAAxHA,uBAAwBC,EAAgG,EAAhGA,iBAAkB3C,EAA8E,EAA9EA,qBAAsBmD,EAAwD,EAAxDA,aAGpJgP,EAAqBp4B,aAAQ,kBAAMisB,YAAgBxB,EAAgB,CAAE7B,wBACrEyP,EAA0Br4B,aAAQ,kBAAMgsB,YAAqBvB,EAAgB,CAAE7B,wBAiB/EG,EApHV,YAAsK,IAAzIoN,EAAyI,EAAzIA,OAAQtN,EAAiI,EAAjIA,QAASsP,EAAwH,EAAxHA,QAASxP,EAA+G,EAA/GA,uBAAwBC,EAAuF,EAAvFA,iBAAkB3C,EAAqE,EAArEA,qBAAsBmD,EAA+C,EAA/CA,aAE7GkP,EAAuB,SAAC19B,GAM1B,GAJ2BA,GAAOA,EAAIsN,MAAQtN,EAAIsN,KAAKqwB,SAAW39B,EAAIsN,KAAKqwB,QAAQC,MAAK,SAAAC,GACpF,OAAOA,EAAOC,QAAUjb,IAAgBC,qBAAuB+a,EAAOC,QAAUjb,IAAgBE,yBAIhG,OAAOwa,IAAU31B,KAAK2xB,KAG1B,MAAM,IAAI92B,MAAM,gCAGd1E,EAAMqH,aAAQ,WAChB,OAAOmpB,YAASN,EAAS,CAAEF,yBAAwBC,mBAAkB3C,uBAAsBmD,oBAGzF2O,EAAU/3B,aAAQ,WACpB,GAAIm2B,IAAWvf,IAAO8D,QAClB,MAAM,IAAIrd,MAAJ,OAAkB6Y,IAAeU,OAAjC,IAA6CA,IAAO8D,QAApD,+BAGV,OAAO4O,YAAaT,EAAS,CAAEF,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAC1FlH,QAAQvpB,EAAIiI,OACZshB,QAAQ6V,EAAQn3B,OAChBqhB,MAAMqW,MAGTN,EAAYh4B,aAAQ,WACtB,GAAIm2B,IAAWvf,IAAO+D,UAClB,MAAM,IAAItd,MAAJ,OAAkB6Y,IAAeU,OAAjC,IAA6CA,IAAO+D,UAApD,iCAGV,OAAO4O,YAAeV,EAAS,CAAEF,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAC5FlH,QAAQvpB,EAAIiI,OACZshB,QAAQ8V,EAAUp3B,OAClBqhB,MAAMqW,MASf,MAAO,CAAEP,UAASC,YAAWrO,MANf,SAACzhB,GACX,YADyB,IAAdA,MAAO,IACXshB,YAAWX,EAAS3gB,EAAM,CAAEygB,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAAgBnH,OAAM,WACrH,MAAM,IAAI5kB,MAAM,kCAIY1E,OAqEtBu9B,CAAkB,CAAEC,SAAQtN,UAASsC,YAAWO,UAASjB,iBAAgB0N,UAASxP,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAC1J8B,EAnEV,YAAwK,IAAzIiL,EAAyI,EAAzIA,OAAQhL,EAAiI,EAAjIA,UAAWO,EAAsH,EAAtHA,QAASyM,EAA6G,EAA7GA,QAASxP,EAAoG,EAApGA,uBAAwBC,EAA4E,EAA5EA,iBAAkB3C,EAA0D,EAA1DA,qBAE1G,GAAKkF,EAAL,CAIA,IAAMmN,EAAuB,SAAC19B,GAM1B,GAJ2BA,GAAOA,EAAIsN,MAAQtN,EAAIsN,KAAKqwB,SAAW39B,EAAIsN,KAAKqwB,QAAQC,MAAK,SAAAC,GACpF,OAAOA,EAAOC,QAAUjb,IAAgBC,qBAAuB+a,EAAOC,QAAUjb,IAAgBE,yBAIhG,OAAOwa,IAAU31B,KAAK2xB,KAG1B,MAAM,IAAI92B,MAAM,gCAGd1E,EAAMqH,aAAQ,WAChB,OAAOwrB,YAAWL,EAAW,CAAExC,yBAAwBC,mBAAkB3C,4BAGvE0S,EAAU34B,aAAQ,WACpB,GAAIm2B,IAAWvf,IAAO8D,QAClB,MAAM,IAAIrd,MAAJ,OAAkB6Y,IAAeU,OAAjC,IAA6CA,IAAO8D,QAApD,+BAGV,OAAO+Q,YAAeN,EAAWO,EAAS,CAAE/C,yBAAwBC,mBAAkB3C,yBACjF/D,QAAQvpB,EAAIiI,OACZshB,QAAQyW,EAAQ/3B,OAChBqhB,MAAMqW,MASf,MAAO,CAAEK,UAAShP,MANJ,SAACzhB,GACX,YADyB,IAAdA,MAAO,IACX0jB,YAAaT,EAAWjjB,EAAM,CAAEygB,yBAAwBC,mBAAkB3C,yBAAwBhE,OAAM,WAC3G,MAAM,IAAI5kB,MAAM,kCAIC1E,QA2BTk+B,CAAoB,CAAEV,SAAQtN,UAASsC,YAAWO,UAASjB,iBAAgB0N,UAASxP,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAEpK,MAAO,CACHL,QACAmC,QAAclD,IAAqBkD,EAAU,KAC7C0N,aAAc,CAAEjgC,IAAKy/B,EAAoBS,SAAUR,GACnDF,UACAzzB,SAvBa,SAACN,GACd,IAAKA,EACD,MAAM,IAAI/G,MAAJ,yBAGV,IAA4B,IAAxB+G,EAAIhK,QAAQ,OAEZ,MADAipB,cAAY4B,KAAK,uBAAwB,CAAE7gB,QAAO0e,QAC5C,IAAIzlB,MAAJ,yBAAoC+G,EAApC,kCAKV,OAJYA,EAAImnB,MAAM,iBAClBlI,cAAY4B,KAAK,qBAAsB,CAAE7gB,QAAO0e,QAG7CgW,YAAM10B,EAAKtK,OAAOuM,OAiEL0yB,CAAqB,CAAElQ,UAASsC,YAAWO,UAASyK,SAAQgC,UAAS1N,iBAAgB9B,yBAAwBC,mBAAkB3C,uBAAsBmD,iBAErK,OAAO0O,EAAU5vB,EAAMwvB,GAASzV,OAAM,SAAArnB,GAClC,OAAOyH,IAAaE,KAAI,WACpB,OAAOyf,EAAQpnB,MAChB4H,MAAK,WACJ,MAAM5H,gB,6BClP1B,6IAoBO,SAASo+B,EAAT,GACH,MAAO,CACHnQ,QAFmF,EAAtDA,SAM9B,SAASoQ,IAiBZ,MAAO,CACHv0B,SAjBa,SAACN,GACd,IAAKA,EACD,MAAM,IAAI/G,MAAJ,yBAGV,IAA4B,IAAxB+G,EAAIhK,QAAQ,OAEZ,MADAipB,cAAY4B,KAAK,uBAAwB,CAAE7gB,QAAO0e,QAC5C,IAAIzlB,MAAJ,yBAAoC+G,EAApC,kCAKV,OAJYA,EAAImnB,MAAM,iBAClBlI,cAAY4B,KAAK,qBAAsB,CAAE7gB,QAAO0e,QAG7CgW,YAAM10B,EAAKtK,OAAOuM,OAW1B,SAAS6yB,EAAYtD,EAArB,GAAkG,IAA1D6B,EAA0D,EAA1DA,YAA0D,EAChE7B,EAA7BuD,gBAD6F,MAClFn4B,IADkF,EAC5EghB,EAAY4T,EAAZ5T,QAEzB,OAAOhiB,aAAQ,WACX,OAAOy3B,IAAcj1B,MAAK,SAAAqmB,GAAW,MAOjC,OANAxF,cACK2B,KAAK,iBACLE,OAFL,OAGSvN,IAASG,YAAakH,IAAgBQ,gBAH/C,IAIOsD,QAEAqW,EAASH,EAAmB,CAAEnQ,YAAYoQ,QAClDhX,OAAM,SAAArnB,GACL,OAAOonB,EAAQpnB,W,kLCvCpB,SAASw+B,EAA2BlxB,GACvC,OAAOA,EAWJ,SAASmxB,EAAT,GAAqT,IAA9QxQ,EAA8Q,EAA9QA,QAAkBF,EAA4P,EAA5PA,uBAAwBC,EAAoO,EAApOA,iBAAkB3C,EAAkN,EAAlNA,qBAatG,MAAO,CACHxjB,QANY,kBAAMJ,IAAaI,WAO/BC,OAfoT,EAArQg1B,QAS5Bh1B,QAAU,WAC7B,MAAM,IAAIrF,MAAJ,mCAMN0rB,MAAO,CAAEY,MAdC,SAACzhB,GACX,YADyB,IAAdA,MAAO,IACXshB,YAAWX,EAAS3gB,EAAM,CAAEygB,yBAAwBC,mBAAkB3C,uBAAsBmD,cAAc,IAASnH,OAAM,WAC5H,MAAM,IAAI5kB,MAAM,oCAkBrB,SAASi8B,EAAoB1D,EAA7B,GAA4K,IAA5HjN,EAA4H,EAA5HA,uBAAwB8O,EAAoG,EAApGA,YACnE8B,EAA2C3D,EAA3C2D,iBAAkBtT,EAAyB2P,EAAzB3P,qBAE1B,GAAIsT,EACA,OAAO,WAAgC7B,GAAY,IAAzC9O,EAAyC,EAAzCA,iBAAqB1gB,EAAoB,oCAC/C,OAAOuvB,IAAcj1B,MAAK,SAAAqmB,GAAW,MAOjC,OANAxF,cACK2B,KAAK,0BACLE,OAFL,OAGSvN,IAASG,YAAakH,IAAgBM,yBAH/C,IAIOwD,QAEAyW,EAA4CrxB,EAAOmxB,EAA4B,CAAExQ,UAASF,yBAAwBC,mBAAkB8O,UAASzR,gC,6BCtEpK,iKAiBauT,EAAc,CACvBC,OAAU,EACVC,SAAU,GAGP,SAASC,EAAT,GACH,MAAO,CAAE9O,cADyG,EAAlFA,eAI7B,SAAS+O,IACZ,MAAO,CACHn3B,QAAS,kBAAMJ,IAAaE,KAAI,kBAAMi3B,EAAYC,UAClD/2B,OAAS,kBAAML,IAAaE,KAAI,kBAAMi3B,EAAYE,aAUnD,SAASG,EAAWjE,GAAkC,IACjDjwB,EAAYiwB,EAAZjwB,QAER,GAAKA,EAIL,OAAO3F,aAAQ,YACX,OAAO2F,EAAQg0B,EAAkB,CAAE9O,cAD6C,EAAlEA,gBACuC+O,KAAwBp3B,MAAK,SAAAs3B,GAC9E,OAAQA,IAAUN,EAAYE,gB,6BClCnC,SAASK,IAEZ,MAAO,GAGJ,SAASC,IAEZ,MAAO,GAKJ,SAASC,EAA0BrE,GAA2C,IACzE4B,EAA2B5B,EAA3B4B,uBAER,GAAIA,EACA,OAAO,WACH,OAAOA,EAfR,GAKA,IAU0Gh1B,MAAK,SAAA+nB,GAC1G,IAAKA,GAAwC,iBAAjBA,EACxB,MAAM,IAAIltB,MAAJ,mEAGV,OAAOktB,MAtBvB,uG,6BCZA,iHAeO,SAAS2P,IAEZ,MAAO,GAGJ,SAASC,EAAT,GAAkM,IAAvJxR,EAAuJ,EAAvJA,uBAAwB1C,EAA+H,EAA/HA,qBAStE,MAAO,CACH2S,aAAc,CAAEx/B,OATL,SAAC8O,GACZ,OAAO2jB,YAAmBlD,EAAwBzgB,EAAM,CAAE+d,0BAQlCmU,OALb,SAAC3P,EAAyBviB,GACrC,OAAO6jB,YAAmBpD,EAAwB8B,EAAgBviB,EAAM,CAAE+d,4BAU3E,SAASoU,EAAsBzE,EAA/B,GAAwI,IAAtFjN,EAAsF,EAAtFA,uBACzB2R,EAAiD1E,EAArE/J,mBAA4C5F,EAAyB2P,EAAzB3P,qBACpD,GAAIqU,EACA,OAAO,WACH,OAAOA,EAvBR,GAuB+DH,EAAgC,CAAExR,yBAAwB1C,0BAAyBzjB,MAAK,SAAAioB,GAClJ,IAAKA,GAA4C,iBAAnBA,EAC1B,MAAM,IAAIptB,MAAJ,kEAGV,OAAOotB,Q,6BC9CvB,M,6BCDA,2NAgBO,SAAS8P,EAAT,GAA4F,IAAxE5R,EAAwE,EAAxEA,uBAEjBiN,EAAkB97B,OAAO87B,OAG3B/P,EAyBA+P,EAzBA/P,IACA2U,EAwBA5E,EAxBA4E,MACAtU,EAuBA0P,EAvBA1P,OACAE,EAsBAwP,EAtBAxP,OACAqU,EAqBA7E,EArBA6E,SACA3U,EAoBA8P,EApBA9P,UACAC,EAmBA6P,EAnBA7P,gBACAC,EAkBA4P,EAlBA5P,SACAC,EAiBA2P,EAjBA3P,qBACAE,EAgBAyP,EAhBAzP,cACAuU,EAeA9E,EAfA8E,gBACA5Q,EAcA8L,EAdA9L,kBACA6Q,EAaA/E,EAbA+E,eACAC,EAYAhF,EAZAgF,oBACAC,EAWAjF,EAXAiF,WACA7Q,EAUA4L,EAVA5L,wBACA8Q,EASAlF,EATAkF,yBArB2F,EA8B3FlF,EARAmF,4BAtB2F,SAuBjFC,EAOVpF,EAPAqF,SACAjZ,EAMA4T,EANA5T,QACAkZ,EAKAtF,EALAsF,UACAC,EAIAvF,EAJAuF,aACA1G,EAGAmB,EAHAnB,MACAtD,EAEAyE,EAFAzE,UACAiF,EACAR,EADAQ,SAGEP,EAASF,YAAUC,GACnBtP,EAA6C,mBAApBoU,EAAkCA,IAAoB,UAE/E/0B,EAAUk0B,YAAWjE,GAE3B,GAAIA,EAAO4B,uBAAwB,CAC/B,GAAI5B,EAAO6B,YACP,MAAM,IAAIp6B,MAAJ,2DAGV,IAAKu4B,EAAO4E,MACR,MAAM,IAAIn9B,MAAJ,6DAId,GAAIu4B,EAAO/J,mBAAoB,CAC3B,GAAI+J,EAAO6B,YACP,MAAM,IAAIp6B,MAAJ,uDAGV,GAAIu4B,EAAO6B,YACP,MAAM,IAAIp6B,MAAJ,kEAGV,IAAKu4B,EAAO4E,MACR,MAAM,IAAIn9B,MAAJ,yDAId,IAAMm6B,EAAyByC,YAA0BrE,GACnD/J,EAAqBwO,YAAsBzE,EAAQ,CAAEjN,2BAErD8O,EAAcF,YAAe3B,EAAQ,CAAEjN,yBAAwB6O,yBAAwB3L,uBAM7F,MAAO,CACHhG,MACA4O,QAEA+F,QACAtU,SAEA4D,oBACA1D,SAEAN,YACAC,kBACAC,WACAC,uBACAE,gBACAG,iBACAmU,WACArE,WAEAuE,iBACAC,sBACAC,aACAG,kBACA7J,YAEAnH,0BACA8Q,2BACAC,uBAEAp1B,UACAkwB,SACA7T,UACAkZ,YACAC,eAEA1D,cACAD,yBACA3L,qBACAiM,UA1CcD,YAAajC,EAAQ,CAAEjN,yBAAwB8O,gBA2C7D0B,SA1CaD,YAAYtD,EAAQ,CAAEjN,yBAAwB8O,gBA2C3D8B,iBA1CqBD,YAAoB1D,EAAQ,CAAEjN,yBAAwB8O,iBAoD5E,SAAS2D,IAA6B,MACWC,OACpD,MAAO,CAAEC,SAFgC,EACjCA,SACWC,WAFsB,EACvBA,WACaC,kBAFU,EACXA,mBAU3B,SAASC,EAAT,GAAiI,IAA5FC,EAA4F,EAA5FA,eAClCC,EAD8H,EAA5GC,gBACW3H,cAGnC,MAAO,CACH1N,QAHgB8U,OAAZ9U,QAIJoV,WACApT,SAAUmT,GAmCX,SAASG,EAAT,GACH,MAAO,CACHxV,WAFoL,EAApEyV,iBAGhHC,aAHoL,EAA1HC,iBAGzB1yB,IAAQ6L,GACzC8mB,mBAJoL,EAAzGA,mBAK3EC,QALoL,EAAnIA,QAMjDC,gBANoL,EAArFA,gBAO/FxT,uBAPoL,EAA3JA,uBAQzByT,YARoL,EAAlDA,e,6CC7L1I,2CAEaC,EAAsB,CAC/B/U,QAAU,UACVgV,OAAU,W,6BCJd,W,6BCAA,M,yGCwBA,SAASC,EAAkB/0B,EAAsEg1B,GAAmD,IAChJ,IAAM36B,EAAS,GADiI,MAG5H2F,EAH4H,WAGlH,CAAzB,IACKi1B,EADUj1B,EAAJ,GACgBk1B,OAAOF,GAEnC,GAAKC,EAEE,GAAI/8B,MAAMgqB,QAAQ+S,GAAgB,cACdA,EADc,WACC,CAAjC,IAAME,EAAYF,EAAJ,GACXE,GACA96B,EAAOpE,KAAKk/B,QAIpB96B,EAAOpE,KAAKg/B,GAIpB,OAAO56B,EAGJ,IAAM+6B,EAAb,WAQI,WAAYvkC,EAAe2L,EAAuBwD,GAAsE,KAPxH2iB,KC9CY,UDqD4G,KALxH9xB,UAKwH,OAJxH2L,WAIwH,OAHxHwD,cAGwH,OAFxHq1B,cAEwH,EACpHvgC,KAAKjE,KAAOA,EACZiE,KAAK0H,MAAQA,EACb1H,KAAKkL,SAAWA,EAEhB,IAAMq1B,EAAW74B,EAAM64B,SACC,mBAAbA,IACPvgC,KAAKugC,SAAWA,SACT74B,EAAM64B,UAhBzB,2BAoBIH,OAAA,SAAUF,GACN,IAAMp1B,EAAKo1B,EAASlgC,MAIpB,OAHIA,KAAKugC,UACLvgC,KAAKugC,SAASz1B,GAEXA,GAzBf,EA4BIm1B,eAAA,SAAkBC,GACd,OAAOD,EAAejgC,KAAKkL,SAAUg1B,IA7B7C,KAiCaM,EAAb,WAKI,WAAYt1B,GAAsE,KAJlF2iB,KC5EY,WDgFsE,KAFlF3iB,cAEkF,EAC9ElL,KAAKkL,SAAWA,EANxB,mBASIk1B,OAAA,SAAUF,GACN,OAAOD,EAAejgC,KAAKkL,SAAUg1B,IAV7C,KAcaO,EAAb,WAKI,WAAYC,GAAe,KAJ3B7S,KC5FY,ODgGe,KAF3B6S,UAE2B,EACvB1gC,KAAK0gC,KAAOA,EANpB,mBASIN,OAAA,SAAUF,GACN,OAAOA,EAASlgC,OAVxB,KAca2gC,EAAb,WAOI,WAAYC,EAAsCl5B,EAAuBwD,GAAsE,KAN/I2iB,KCzGY,YD+GmI,KAJ/I+S,eAI+I,OAH/Il5B,WAG+I,OAF/IwD,cAE+I,EAC3IlL,KAAK4gC,UAAYA,EACjB5gC,KAAK0H,MAAQA,EACb1H,KAAKkL,SAAWA,EAVxB,2BAaI21B,gBAAA,SAAgBX,GAEZ,IACMvK,EAsCd,SAAwBA,GACpB,IAAMzqB,EAAW41B,EAAkB19B,MAAMgqB,QAAQuI,GAASA,EAAQ,CAAEA,IAEpE,OAAwB,IAApBzqB,EAASxL,OACFwL,EAAS,GACTA,EAASxL,OAAS,EAClB,IAAI8gC,EAAat1B,QADrB,EA3CW61B,CAAe/gC,KAAK4gC,UADhB5gC,KAAK0H,MAC4B1H,KAAKkL,WACxD,GAAIyqB,EACA,OAAOA,EAAMyK,OAAOF,IAlBhC,EAsBIE,OAAA,SAAUF,GACN,OAAOA,EAASlgC,OAvBxB,EA0BIigC,eAAA,SAAkBC,GACd,OAAOD,EAAejgC,KAAKkL,SAAUg1B,IA3B7C,KA+BA,SAASY,EAAkB51B,GAA6F,IACpH,IAAM3F,EAAS,GADqG,MAGhG2F,EAHgG,WAGtF,CAAzB,IAAMyqB,EAASzqB,EAAJ,GACZ,GAAKyqB,EAEE,GAAqB,iBAAVA,EACdpwB,EAAOpE,KAAK,IAAIs/B,EAAS9K,SACtB,GAAIvyB,MAAMgqB,QAAQuI,GAAQ,cACNmL,EAAkBnL,GADZ,eAEzBpwB,EAAOpE,KADQ,UAGhB,KAAIw0B,GCrJH,YDqJaA,EAAM9H,MCpJnB,SDoJiD8H,EAAM9H,MCnJvD,cDmJkF8H,EAAM9H,KAI5F,MAAM,IAAI9H,UAAJ,kCAAiD4P,GAHvDpwB,EAAOpE,KAAKw0B,IAOpB,OAAOpwB,EAaJ,I,EAAMy7B,EAAuB,SAAC13B,EAAS5B,GAAuB,2BAAbwD,EAAa,iCAAbA,EAAa,kBAKjE,GAHAxD,EAAQA,GAAS,GACjBwD,EAAW41B,EAAkB51B,GAEN,iBAAZ5B,EAEP,OAAO,IAAIg3B,EAAYh3B,EAAS5B,EAAOwD,GAG3C,GAAuB,mBAAZ5B,EAEP,OAAO,IAAIq3B,EAAcr3B,EAAS5B,EAAOwD,GAG7C,MAAM,IAAI6a,UAAJ,sDE7GJkb,IAAiF,aAE3D,SAACn2B,EAAIk2B,GACzB,IAAME,EAAaF,EAAK91B,SAAS,GAEjC,GAA6B,IAAzB81B,EAAK91B,SAASxL,SAAkBwhC,GDjF5B,YCiF0CA,EAAWrT,MAxExD,SAwEuFqT,EAAWnlC,KACnG,MAAM,IAAIgF,MAAJ,qEAGV+J,EAAGtB,iBAAiB,QAAQ,WAGxB,IAAMnB,EAAMyC,EAAG2rB,cAEf,IAAKpuB,EACD,MAAM,IAAItH,MAAJ,wCAMV,IAHA,IAAMqI,EAAMf,EAAIlK,SACVgjC,EAAa/3B,EAAI6B,gBAEhBk2B,EAAWj2B,UAAYi2B,EAAWj2B,SAASxL,QAC9CyhC,EAAWh2B,YAAYg2B,EAAWj2B,SAAS,IAM/C,IAFA,IAAMyqB,EAAsBuL,EAAWd,OAAOgB,EAAI,CAAEh4B,SAE7CusB,EAAMzqB,SAASxL,QAClByhC,EAAW/1B,YAAYuqB,EAAMzqB,SAAS,QA7BiC,SAkC3D,SAACJ,EAAIk2B,GACzB,IAAME,EAAaF,EAAK91B,SAAS,GAEjC,GAA6B,IAAzB81B,EAAK91B,SAASxL,SAAkBwhC,GDhH5B,SCgH0CA,EAAWrT,KACzD,MAAM,IAAI9sB,MAAJ,6DAIV+J,EAAG41B,KAAOQ,EAAWR,MA1C0D,UA6C1D,SAAC51B,EAAIk2B,EAAMd,GAAa,cACzBc,EAAKf,eAAeC,GADK,eAEzCp1B,EAAGM,YADS,OA9C+D,GA+EhF,SAASg2B,EAAIC,QAAgD,IAAhDA,MAA8B,IAAkB,MACrCA,EAAnBj4B,WADwD,MAClDjL,SADkD,EAwBhE,OArBkC,SAA5BmjC,EAA6BN,GAC/B,GD7JQ,cC6JJA,EAAKnT,KACL,OAAOmT,EAAKH,gBAAgBS,GAGhC,GDlKQ,SCkKJN,EAAKnT,KAEL,OAvHZ,SAA2BzkB,EAAgB43B,GACvC,OAAO53B,EAAIm4B,eAAeP,EAAKN,MAsHhBc,CAAkBp4B,EAAK43B,GAGlC,GDxKQ,YCwKJA,EAAKnT,KAA4B,CACjC,IAAM/iB,EApIlB,SAAuB1B,EAAgB43B,GACnC,OAAIA,EAAKt5B,MAAL,GAEOs5B,EAAKt5B,MAAL,GAGJ0B,EAAI6uB,cAAc+I,EAAKjlC,MA8HXk8B,CAAc7uB,EAAK43B,GAI9B,OA3HZ,SAAkBl2B,EAAkBk2B,GAAM,IACtC,IAAMt5B,EAAQs5B,EAAKt5B,MADmB,MAGnBxL,OAAO4D,KAAK4H,GAHO,eAGC,CAAlC,IAAM+5B,EAAI,KACLn+B,EAAMoE,EAAM+5B,GAEdn+B,SArCI,OAqC0Cm+B,GAtC1C,cAsCsEA,IAI1EA,EAAKxS,MAAM,kBAAmC,mBAAR3rB,EACtCwH,EAAGtB,iBAAiBi4B,EAAK3+B,MAAM,GAAGC,cAAeO,GAC3B,iBAARA,GAAmC,iBAARA,EACzCwH,EAAG8tB,aAAa6I,EAAMn+B,EAAIf,YAEJ,kBAARe,IACF,IAARA,GACAwH,EAAG8tB,aAAa6I,EAAM,KAzDzB,WA8DL32B,EAAGE,QAAQjI,eAAyC2E,EAAMklB,IAC1D9hB,EAAG8tB,aAxDK,KAwDR,cCvEG,aAAa52B,QAAQ,MAAM,iBAHlB,mBAGoCU,OAAOzC,KAAK0C,MAAM1C,KAAKC,SAH3D,mBAGkFR,aDwK1FgiC,CAAS52B,EAAIk2B,GA1CzB,SAAqBl2B,EAAkBk2B,EAAoB53B,EAAgB82B,GACvE,GAAIc,EAAKt5B,MAAMtK,eA/GH,aA+G4C,CAEpD,GAAI4jC,EAAK91B,SAASxL,OACd,MAAM,IAAIqB,MAAJ,gEAGV,IAAM4gC,EAAOX,EAAKt5B,MAAL,UAEb,GAAoB,iBAATi6B,EACP,MAAM,IAAI5b,UAAc6b,iCA/HvB,WAkIDZ,EAAKjlC,KAEL+O,EAAG41B,KAAOiB,GAEV72B,EAAG+2B,UAAYF,EA3H3B,SAAoB72B,EAAkB1B,QAAkC,IAAlCA,MAAiB5L,OAAOW,UAAU,cAC/C2M,EAAG5B,iBAAiB,UAD2B,eAChB,CAA/C,IAAMyvB,EAAM,KACPrtB,EAAaqtB,EAAOrtB,WAE1B,GAAKA,EAAL,CAIA,IAAMw2B,EAAY14B,EAAI6uB,cAAc,UAEpC6J,EAAUpB,KAAO/H,EAAOoJ,YACxBz2B,EAAW02B,aAAaF,EAAWnJ,KAiH/BsJ,CAAWn3B,EAAI1B,SAIU63B,EAAaD,EAAKjlC,OAASklC,EAAY,SAC/Cn2B,EAAIk2B,EAAMd,GAoB3BgC,CAAYp3B,EAAIk2B,EAAM53B,EAAKk4B,GAEpBx2B,EAGX,MAAM,IAAIib,UAAJ,sBE5GP,SAASoc,EAAT,EAAsDj3B,GAAuC,IAAtE0sB,EAAsE,EAAtEA,MAC1B,OACI,cACI,cACI,yBACA,UAAM77B,KAAK,WAAWqmC,QAAQ,yCAElC,cACI,SAAKC,MAAM,qBACP,WAAOzK,MAAQA,EAAQiK,UA3EtB,k6CA6ED,SAAKQ,MAAM,YACP,OAAGA,MAAM,iBACT,OAAGA,MAAM,aAGfn3B,I,MCvEX,IAKHo3B,GAAe,EACfC,GAAe,EA2ONC,EAAyB,CAClCzmC,KAAmB,WACnB0mC,MAhOJ,YAA0F,IAC9EzD,EAD8E,EAAjE0D,WACb1D,SAERsD,GAAe,EAHuE,MAK9D,CAAEzN,YAAUr3B,QAASs4B,YAAOt4B,SAA5Cs3B,EAL8E,KAKtE/qB,EALsE,KAOhF44B,EAAQ,GAQd,OANI54B,GAAO+qB,GAAUA,IAAW/qB,IAC5B44B,EAAMC,YAAc5D,EAAS4D,YAAY74B,GAAK7D,MAAK,SAAAX,GAC/Cg9B,EAAeh9B,MAIhBQ,IAAamC,KAAKy6B,GAAOz8B,KAAKxB,MAkNrCm+B,WA/MJ,WACI,OAAO,GA+MPC,kBA5MJ,WACI,OAAO,GA4MP5Q,KAhIJ,SAAS6Q,EAAT,GAA6M,IAArLr7B,EAAqL,EAArLA,MAAOg7B,EAA8K,EAA9KA,WAAYM,EAAkK,EAAlKA,YAAapU,EAAqJ,EAArJA,QAASiB,EAA4I,EAA5IA,OAC7D,GAAIyS,EACA,MAAM,IAAIvhC,MAAJ,6BAF+L,IAZ7M,EAiGQoxB,EAhFI6M,EAAa0D,EAAb1D,SACAxV,EAEoD9hB,EAFpD8hB,UAAWC,EAEyC/hB,EAFzC+hB,gBAAiB0R,EAEwBzzB,EAFxByzB,YAAaK,EAEW9zB,EAFX8zB,UAAWqB,EAEAn1B,EAFAm1B,SACxDI,EACwDv1B,EADxDu1B,iBAAkBnT,EACsCpiB,EADtCoiB,OAAQF,EAC8BliB,EAD9BkiB,OAAQlE,EACsBhe,EADtBge,QAASwY,EACax2B,EADbw2B,MAAO1Q,EACM9lB,EADN8lB,kBAClD0N,EAAwDxzB,EAAxDwzB,uBAAwB3L,EAAgC7nB,EAAhC6nB,mBAAoBlmB,EAAY3B,EAAZ2B,QAC1C8tB,EAAgFvI,EAAhFuI,OAAQ9uB,EAAwEumB,EAAxEvmB,IAAKkmB,EAAmEK,EAAnEL,cAAe8I,EAAoDzI,EAApDyI,KAAe/K,EAAqCsC,EAArCtC,iBAAkB2W,EAAmBrU,EAAnBqU,eAC3DtD,EAAqCqD,EAArCrD,mBAAoBF,EAAiBuD,EAAjBvD,aACpBJ,EAAaxP,EAAbwP,SAEF9Y,GAzBV,EAyB+B,CAAEle,MAAK66B,QAJoDtU,EAA9CsU,UArBtB76B,IAEPiZ,IAAQE,MAFgH,EAA5G0hB,SAKR3kC,cACJ+iB,IAAQE,MAGZF,IAAQC,OAkBX4hB,GAAW,EAETtH,EAAUn4B,aAAQ,kBACpBq/B,EAAa,CAAEr7B,QAAOg7B,aAAYM,cAAanT,SAAQjB,QAAS,CAAEuI,SAAQ9uB,MAAKkmB,gBAAe8I,OAAM6L,SAAS,KACxGE,QAAQxd,QAAQiS,QAEnBvF,EAAU,WAEZ,GADAgQ,GAAe,GACVa,EACD,OAAOtG,KA+DTjyB,EAAQ,WAEV,OADA03B,GAAe,EACRv8B,IAAaE,KAAI,WACpB,GAAIksB,EACA,OAAOA,EAASvnB,YAKtBw4B,EAAQ1/B,aAAQ,WAElB,OADAyuB,EApEO6M,EAAS,CACZxhC,OAAQ6K,EACRmhB,YACAC,kBACA+D,oBACAlB,mBACA2W,iBAEA9H,YAAa,WACT,OAAOA,IAAcj1B,MAAK,SAAAqmB,GACtB,OAnEpB,YAA+L,IAAnKA,EAAmK,EAAnKA,QAAS2R,EAA0J,EAA1JA,MAAO1Q,EAAmJ,EAAnJA,kBAAmB0N,EAAgI,EAAhIA,uBAAwB3L,EAAwG,EAAxGA,mBAAoBhB,EAAoF,EAApFA,cAAeoR,EAAqE,EAArEA,mBACtH,OAAO55B,IAAaE,KAAI,WACpB,GAAKunB,EAIL,OA1CR,YAAuL,IAAnJ0Q,EAAmJ,EAAnJA,MAAsE3P,EAA6E,EAA7EA,cAAeoR,EAA8D,EAA9DA,mBACrH,IADmL,EAA5InS,kBAEnC,OAAO,EAGX,GALmL,EAAzH0N,wBAAyH,EAAjG3L,mBAM9E,OAAO,EAGX,IAAM8T,EAAwB/9B,QAAQq6B,EAAmBpR,IAAkBoR,EAAmBpR,GAAe+U,WAE7G,GAAIpF,IAAUmF,EACV,MAAM,IAAItiC,MAAJ,gBAA2B6Y,IAAeY,MAA1C,wBAAyE+T,EAAzE,sBAGV,QAAI2P,KAIAmF,EAuBIE,CAAyB,CAAErF,QAAO1Q,oBAAmB0N,yBAAwB3L,qBAAoBhB,gBAAeoR,uBACzGvR,YAAY,CAAE7B,UAASiB,sBAAqB7H,OAAM,SAAArnB,GACrD,GAAI4/B,EACA,MAAM5/B,UAHlB,KA6DmBklC,CAAiB,CAAEjX,UAAS2R,QAAO1Q,oBAAmBmS,qBAAoBpR,gBAAe2M,yBAAwB3L,uBAAsBrpB,MAAK,WAC/I,OAAOqmB,SAKnBiP,UAAW,YAA0D,IAAvDpM,EAAuD,EAAvDA,QAASP,EAA8C,EAA9CA,UAAWZ,EAAmC,EAAnCA,aAAcE,EAAqB,EAArBA,eAK5C,OAJAgV,GAAW,EACXpc,cAAY2B,KAAZ,+BAAgD4D,EAAmB,UAAY,gBAAkB9F,QAG1F5b,IAAQ1E,MAAK,WAChB,OAAOs1B,EAAU,CAAEpM,UAASP,YAAWZ,eAAcE,iBAAgB7B,oBAAoB,CAAEuP,YAAWlW,MAAMjhB,SAIpH++B,OAAQ,YAAqB,IAAlB9W,EAAkB,EAAlBA,YACP5F,cAAY2B,KAAZ,4BAA6CiE,EAAc,UAAY,gBACvE5F,cAAY2B,KAAZ,kCAAmD4D,EAAmB,UAAY,gBAAkB9F,QACpG8F,EAAmBK,GAGvBkQ,SAAU,WAEN,OAAOjyB,IAAQ1E,MAAK,WAChB,OAAO22B,QAIfI,iBAAkBA,EACZ,SAACrxB,EAAMwvB,GACL,OAAO6B,EAAiB,aAAE3Q,oBAAqB1gB,GAAQwvB,IACvD,KAER1V,UACA4M,UAEA/D,gBACA8I,OACAoI,eACA3V,SACAF,SACAyV,cAiBYqE,UA/Md35B,EAAM+rB,YAAOt4B,QACf+kC,GAAgBx4B,EACTA,EACA8qB,cACAA,cAEAr3B,QAyMqCikB,IAAeC,KAAM6E,GAhNzE,IACUxc,KAqON,MAAO,CAAE45B,MAnBK,WACV,GAAKt6B,EASL,OAJI9K,gBACA8J,EAAMA,GCxOX,YAAoG,IAA/EwB,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,OACzBzB,EAAMotB,YAAiB7rB,YAAM,GAAI,CAAEC,QAAOC,YAE1CV,EAAMf,EAAIlK,SAEVylC,EACF,EAACzB,EAAD,CAAavK,MAAQD,gBACvByI,OAAOgB,EAAI,CAAEh4B,SAIf,OAFAyB,YAAqBxC,EAAKu7B,GAEnBv7B,ED6Ncw7B,CAAU,CAAEh6B,MAjOzB,IAiOiEC,OAhOjE,OAmOG/D,IAAaE,KAAI,WACpB,OAAOoD,GAAUA,EAAQ,CAAEklB,qBAC5BroB,MAAK,SAAAs3B,GACAn1B,IAAQm1B,GACRn1B,EAAIuC,WAZRw4B,KAiBQA,QAAOx4B,WE7OvBk5B,GAAiB,EAoCrB,SAASC,EAAc1M,GACdA,GAGLnuB,YAAiB,IAAKyX,IAAgB5B,KAAtB,KAAgCilB,SAAQ,SAAAl5B,GACpDA,EAAGqtB,MAAM8L,QAAWn5B,EAAGssB,aAAazW,IAAgB5B,QAAUsY,EAAQ,IAAM,SAUpF,IC0BIvL,EACAoY,EACAC,ED5BEC,EAAc,WAChB,IAAMC,EAAmBlmC,SAASmmC,cAAc,sBAC1CC,EAAuBpmC,SAASmmC,cAAT,IAA4B3jB,IAAgBC,eAA5C,KAAiElC,IAAQK,KAAzE,MACvBylB,EAAsBrmC,SAASmmC,cAAc,0BAEnD,IAAKD,IAAqBE,IAAyBC,EAC/C,MAAM,IAAIzjC,MAAJ,qCAGV,MAAO,CAAEsjC,mBAAkBE,uBAAsBC,wBA8GxCC,EAA2B,CACpC1oC,KAAmB,cACnB0mC,MAhLJ,aAiLII,WA3KJ,YAA+G,IAA/En7B,EAA+E,EAA/EA,MAI5B,OAH8DA,EAAtDw2B,QAAsDx2B,EAA/Cu1B,qBAA+Cv1B,EAA7B82B,0BAD0E,EAAxEwE,YAE3BlD,YAeW2E,aA2JnB3B,kBAxJJ,YAAoF,QAA7ClU,SACO,GAA7BL,EADmE,EACnEA,cAEb,QAHgF,EACxElmB,KAMJkmB,GAAiBA,IAAkB7P,IAAQK,OAkJ/CmT,KAnFJ,YAA+M,IAArLxqB,EAAqL,EAArLA,MAAOg7B,EAA8K,EAA9KA,WAAY9T,EAAkK,EAAlKA,QAASoU,EAAyJ,EAAzJA,YAAanT,EAA4I,EAA5IA,OACvDsL,EACoDzzB,EADpDyzB,YAAaK,EACuC9zB,EADvC8zB,UAAWqB,EAC4Bn1B,EAD5Bm1B,SAC5B/S,EAAwDpiB,EAAxDoiB,OAAQF,EAAgDliB,EAAhDkiB,OAAQlE,EAAwChe,EAAxCge,QAAS8D,EAA+B9hB,EAA/B8hB,UAAWC,EAAoB/hB,EAApB+hB,gBAChCwV,EAAeyD,EAAfzD,WACA1Q,EAAwBK,EAAxBL,cAAe8I,EAASzI,EAATyI,KACfgI,EAAaxP,EAAbwP,SACAI,EAAiBuD,EAAjBvD,aAER,GAAIqE,EAEA,OADAC,EAAc1M,GACP,CACH+L,MAAOtL,IACPltB,MAAOktB,KAIf,IAYIxL,EAZEuP,EAAUn4B,aAAQ,kBACpB8+B,EAAStQ,KAAK,CAAExqB,QAAOg7B,aAAY9T,QAAS,eAAKA,EAAP,CAAgBsU,SAAS,IAASF,cAAanT,WACpFuT,QAAQxd,QAAQiS,QAlBkL,EA8BhKoH,EAAW,CAClD9D,cAEA5M,gBACA8I,OAEAmE,UAAW,YAA0C,IAAvCpM,EAAuC,EAAvCA,QAASP,EAA8B,EAA9BA,UAAWZ,EAAmB,EAAnBA,aAE9B,OAAOrjB,IAAQ1E,MAAK,WAChB,OAAOs1B,EAAU,CAAEpM,UAASP,YAAWZ,eAAc3B,oBAAoB,CAAEuP,YAAWlW,MAAMjhB,SAIpG++B,OAAQ,YACJnX,EADyB,EAAlBK,aAIXkQ,WACAnX,UACA4M,QA7BY,WACZwR,GAAiB,GA6BjBY,iBA1BqB,SAAC,GACtBX,EAD6C,EAArB1M,OA4BxB7N,YACAC,kBACAgW,eACA3V,SACAF,SACAyV,aA3BIe,EA9BmM,EA8BnMA,OAAeuE,EA9BoL,EA8B3L/5B,MA8BhBk5B,GAAiB,EAEjB,IAQMl5B,EAAQ,WAEV,OA9EIy5B,EAAqBD,IAArBC,iBAxCRn7B,YAAiB,IAAKyX,IAAgB5B,KAAtB,KAAgCilB,SAAQ,SAAAl5B,GACpDA,EAAGqtB,MAAM8L,QAAU,OA0CvBI,EAAiBlM,MAAMyM,UAAvB,MA2EWD,IA/EU,IACbN,GAiFR,MAAO,CAAEjB,MAbK,WACVU,GAAiB,EACjB,IAAMe,EAAgBzE,EAAO,0BAG7B,OAhGe,WAAM,MAC+CgE,IAAhEC,EADiB,EACjBA,iBAAkBE,EADD,EACCA,qBAAsBC,EADvB,EACuBA,oBAEhD,IAAKH,IAAqBE,IAAyBC,EAC/C,MAAM,IAAIzjC,MAAJ,+BAGVyjC,EAAoBrM,MAAM2M,UAAY,MACtCN,EAAoBrM,MAAM4M,QAAU,QAEpC,IAAMC,EAAoB,WACtBX,EAAiBlM,MAAMyM,UAAgBP,EAAiBY,UAAYV,EAAqBU,UAAzF,MAGJznC,OAAOgM,iBAAiB,SAAU/C,aAAS,WACvC49B,EAAiBlM,MAAM+M,mBAAqB,KAC5CF,QAGJA,IA2EIG,GACApB,EAAc1M,GACPwN,GAQKj6B,UAShBw6B,QAAmB,GE1EVC,EAA6B,CACtCtpC,KAAmB,gBACnB0mC,MA7GJ,aA8GII,WA1GJ,YAGI,OAHqE,EAAvCn7B,MACtBu1B,kBA0GR6F,kBAjGJ,YAAsF,QAA7ClU,SACO,GAE5C,OAHkF,EAC1EvmB,OAD0E,EACrEolB,iBAiGbyE,KA3CJ,YAAgJ,IAApHxqB,EAAoH,EAApHA,MAChByzB,EAC0EzzB,EAD1EyzB,YAAaK,EAC6D9zB,EAD7D8zB,UAAWhO,EACkD9lB,EADlD8lB,kBAC5BE,EAA8EhmB,EAA9EgmB,wBAAyBjE,EAAqD/hB,EAArD+hB,gBAAiBE,EAAoCjiB,EAApCiiB,qBAAsBkL,EAAcntB,EAAdmtB,UAC5DqK,EAHoI,EAA7GwD,WAGvBxD,kBACAzR,EAJoI,EAAjGmB,QAInCnB,gBAER,IAAKA,EACD,MAAM,IAAI1sB,MAAJ,gDAGV,IAAKysB,EACD,MAAM,IAAIzsB,MAAJ,kDAGV,IAAM86B,EAAU,WACZ,OAAO91B,IAAaE,KAAI,WACpB,MAAM,IAAIlF,MAAJ,6CAgBd,MAAO,CACHqiC,MAbU,WACV,OAAOr9B,IAAaE,KAAI,WACpB,OAAOk1B,OACRj1B,MAAK,SAACqmB,GACL,OAAOgB,YAAsB,CAAEC,oBAAmBjB,UAASkB,kBAAiBC,0BAAyBjE,kBAAiBE,4BACvHzjB,MAAK,YACJ,OAtCZ,YAA2I,IAAzGg5B,EAAyG,EAAzGA,kBAAmB7gC,EAAsF,EAAtFA,OAAQsI,EAA8E,EAA9EA,KAAMw0B,EAAwE,EAAxEA,YAAatG,EAA2D,EAA3DA,UAC5E,OAAO9uB,IAAaE,KAAI,WACpB,GAAe,MAAX5H,GAAkBsI,EAAKooB,OAASpoB,EAAKooB,MAAMmN,MAAK,SAAAoJ,GAAI,MAAiB,+BAAbA,EAAKtW,OAC7D,OA1BZ,YAA8H,IAA3FkQ,EAA2F,EAA3FA,kBAAmB/D,EAAwE,EAAxEA,YAAatG,EAA2D,EAA3DA,UAEzDlvB,EAAU,IAAII,IACdosB,EAAW+M,EAAkB,CAC/B/D,cACA1V,UAAW,kBAAM9f,EAAQQ,WACzB02B,SAAW,kBAAMl3B,EAAQS,OAAO,IAAIrF,MAAJ,mBAChC2kB,QAAW,SAACpnB,GAAD,OAASqH,EAAQS,OAAO9H,MAGvC,OAAO6zB,EAASuR,SAAS7O,IAAapT,IAAeC,MAChDxb,MAAK,kBAAMP,KACXigB,QAAQuM,EAASvnB,OAcP26B,CAAwB,CAAErG,oBAAmB/D,cAAatG,cAGrE,GAAe,MAAXx2B,EACA,MAAM,IAAI0C,MAAJ,wCAAmD1C,MA+BlDmnC,CAAuB,CAAEtG,oBAAmB7gC,OADzB,EAAnBA,OACoDsI,KADjC,EAAXA,KACkDw0B,cAAatG,iBAC/E3uB,MAAK,WACJ,OAAOs1B,EAAU,GAAI,CAAEK,gBAM3BjxB,MAAO,kBAAM7E,IAAaI,aAU9By9B,SAAmB,EACnBwB,QAAmB,G,ODtFjBK,EAAkB/hC,aAAQ,YAAmF,IAAhFooB,EAAgF,EAAhFA,WAAYsT,EAAoE,EAApEA,eAAgBnV,EAAoD,EAApDA,QAC3D,OAAO+F,YAAe,CAClBlE,aACAuE,UA3BW,+BA4BXC,iBAAkBrG,EAClBsG,UA5BW,yBA6BXV,OAAkBuP,OAQ1B,SAASsG,IACL,OAAO3nC,eAAesB,cAG1B,SAASsmC,IACL,OAAOD,IAiBX,SAASE,EAAT,GAGI,GAH8D,EAAvCl+B,MACf+2B,qBAGJ,OAAO,EAGX,IACI,GAAIjhC,OAAOqoC,aAAaC,QAAQ,uBAC5B,OAAO,EAEb,MAAOxnC,IAIT,OAAO,EAsWJ,IEpbHynC,ECoBAC,EHgaSC,EAAuB,CAChClqC,KAAmB,SACnB0mC,MAzRJ,YAAkG,IAA3E5S,EAA2E,EAA3EA,OAAQnoB,EAAmE,EAAnEA,MAC3B,OAAO3B,IAAaE,KAAI,WAAM,IAClBgkB,EAAsC4F,EAAtC5F,QAAmBmV,EAAmBvP,EAA7B5D,SACTsS,EAAe72B,EAAf62B,WAYR,OAVAzS,EAAatpB,eACb0hC,EAAeuB,EAAgB,CAC3B3Z,aAAYsT,iBAAgBnV,aAGnBvE,SAAQ,SAAApnB,GACjB4lC,EAAe,KACfnd,cAAYlC,MAAM,sBAAuB,CAAEvmB,IAAKuG,YAAevG,QAG5DigC,IAAar4B,MAAK,SAAAggC,GACrB/B,EAAiB+B,SA0QzBrD,WAlWJ,YAAoI,IAAxGn7B,EAAwG,EAAxGA,MAGN03B,EAH8G,EAAjGvP,OAGvB5D,SACA6T,EAJwH,EAAzFkD,YAI/BlD,YAER,QAJmFp4B,EAA3Ey2B,WAIS5f,IAASE,QAJyD/W,EAAjEu1B,kBAAiEv1B,EAA/CwzB,wBAA+CxzB,EAAvB6nB,qBAgBvDhxB,gBAIA6gC,KArEEnhC,eAAWqB,eAyEKomC,OAInBE,EAAgB,CAAEl+B,YAIlBo4B,EAAYqG,eAAepH,SAAUe,EAAYqG,eAAeC,QAiUpEtD,kBA1TJ,YAA8I,IAA3GlU,EAA2G,EAA3GA,QAASlnB,EAAkG,EAAlGA,MAC3B6mB,EAAkBK,EAAlBL,cACLuR,EAFkI,EAA3FkD,YAEvClD,YAER,QAH+BlR,EAAvBvmB,MAOH67B,IAIAC,GAID5V,IAAkB7P,IAAQE,QAAUgnB,EAAgB,CAAEl+B,YAItDk+B,EAAgB,CAAEl+B,YAIlBo4B,EAAYqG,eAAe5X,KAmS/B2D,KAzPJ,YAA2M,IAMnMC,EAoHA9pB,EACA49B,EA3Hcv+B,EAAqL,EAArLA,MAAOg7B,EAA8K,EAA9KA,WAAY7S,EAAkK,EAAlKA,OAAQjB,EAA0J,EAA1JA,QAASoU,EAAiJ,EAAjJA,YAC9C7H,EACuDzzB,EADvDyzB,YAAaK,EAC0C9zB,EAD1C8zB,UAAWqB,EAC+Bn1B,EAD/Bm1B,SAAUnX,EACqBhe,EADrBge,QAASkE,EACYliB,EADZkiB,OAAQ2U,EACI72B,EADJ62B,WACvD9U,EAA2D/hB,EAA3D+hB,gBAAiBF,EAA0C7hB,EAA1C6hB,IAAKqV,EAAqCl3B,EAArCk3B,UAAWC,EAA0Bn3B,EAA1Bm3B,aAAcx1B,EAAY3B,EAAZ2B,QAC3CgjB,EAAoC2W,EAApC3W,uBAAwBuT,EAAYoD,EAAZpD,QACxBrR,EAAkBK,EAAlBL,cAIF8X,EAAwB,SAAC,GAAoD,IAAlDh+B,QAAkD,MAAP,GAAO,GAAlDA,IACvBi+B,EAAkB,eAAK1X,EAAR,CAAiBvmB,MAAK66B,SAAS,IAEpD,OADA/Q,EAAWqQ,EAAStQ,KAAK,CAAExqB,QAAOg7B,aAAY9T,QAAS0X,EAAiBzW,SAAQmT,iBAChEI,SASdmD,EAAe,SAAC,GAA+C,kBAAhB,GAAgB,GAA7CL,eAA6C,MAAnC/B,EAAmC,EACjE,OAAOt8B,YAAU,IANT0mB,IAAkB7P,IAAQE,MAC5B,yBACAsW,eAIqC9J,IAAoBmD,GAAmB,CAC9EtmB,MAAO,CAAE23B,UAAS9T,aAAYrC,kBAAiByc,cAuBjDM,EAAc,WAChB,OAAOzgC,IAAamC,KAAK,CACrBqkB,QAAS4O,IACT+K,QAAS3H,MACVr4B,MAAK,YAA0B,IAAvBqmB,EAAuB,EAAvBA,QAAS2Z,EAAc,EAAdA,QACVvoC,EAAYJ,cACZkpC,EAnBY,SAAC,GAAyB,IAAvBla,EAAuB,EAAvBA,QACzB,OAAO1kB,YAAU,GAAIqtB,cAAgB/J,IAAqB,CACtDljB,MAAO,CACHsmB,gBACAlC,yBACAuB,MAAerB,EACfma,WAAe9c,EAASvM,IAAY9C,OAAS8C,IAAYU,SACzD4oB,UAAe,IACfC,cAAgBrY,IAAkB7P,IAAQE,MAAS,IAAM,OAWtCioB,CAAkB,CAAEta,YACrCua,EAAgBlB,EAAgB,CAAEl+B,UAExC,MAAO,CACH6kB,UAASF,yBAAwB6Z,UAAStc,SAAQ6c,iBAClD9oC,YAAW8rB,kBAAiBF,MAAKqV,YAAWC,eAAciI,qBAkFhEl8B,EAAQ,WACV,OAAO7E,IAAaE,KAAI,WAKpB,OAJIoC,GACAA,EAAIuC,QAGJunB,EACOA,EAASvnB,QAGhBq7B,EACOA,EAAOr7B,aADlB,MAyFR,MAAO,CACH+4B,MApFU,WAGV,OA/BMoD,EAAYR,IACZS,EApGCn/B,YAAU,GAAIqtB,cAAgB7J,IAA0BkD,GAAmB,CAC9EtmB,MAAO,CAAE23B,aAsGTv3B,EADAs9B,IA5QZ,SAA+B79B,GAC3B,IACI,OAAO8B,YAAM9B,GACf,MAAOxJ,GACL,KAAMA,aAAeqL,KACjB,MAAMrL,GAwQA2oC,CAAsBF,GAEtBn9B,YAAMo9B,GAGhBf,EArEkB,WAClB,IAAMlV,EAASmT,EAEf,IAAKnT,EACD,MAAM,IAAIhwB,MAAJ,4CAGV,IAAMmmC,EAAWviC,aAAK,WAClB,OAAO6hC,IAActgC,MAAK,SAAAihC,GAEtB,OADApgB,cAAY2B,KAAZ,2BAA4ClC,QACrCuK,EAAOhkB,KA/Pd,WA+P6Co6B,MAC9CjhC,MAAK,WAAM,MACV6gB,cAAY2B,KAAZ,4BAA6CE,OAA7C,OACKvN,IAASG,YAAakH,IAAgBW,sBAD3C,IAEGmD,cAIL5b,EAAQjG,aAAK,WAEf,OADAoiB,cAAY2B,KAAZ,wBAAyClC,QAClCuK,EAAOhkB,KAvQV,SAuQqC7G,MAAK,WAC1C6gB,cAAY2B,KAAZ,yBAA0ClC,QAC1CuK,EAAOnmB,cA+Bf,OA3BAmmB,EAAOuC,GA9QC,YA8Q4B,WAEhC,OADAvM,cAAY2B,KAAZ,2BAA4ClC,QACrCggB,OAGXzV,EAAOuC,GAjRC,aAiR6B,YAAoD,QAAjD1nB,KAAQwjB,EAAyC,EAAzCA,QAASP,EAAgC,EAAhCA,UAAWZ,EAAqB,EAArBA,aAKhE,OAJAlH,cAAY2B,KAAZ,4BAA6ClC,QAC7CuK,EAAOnmB,QAGA4wB,EAFM,CAAEpM,UAASP,YAAWZ,eAAcnB,cAAc,GAC/C,CAAE+O,QAAS,kBAAMwK,UAIrCtV,EAAOuC,GAxRC,YAwR4B,WAGhC,OAFAvM,cAAY2B,KAAZ,2BAA4ClC,QAC5CuK,EAAOnmB,QACAiyB,OAGX9L,EAAOuC,GA7RC,WA6R2B,YAA4B,IAAhBtuB,EAAgB,EAAzB4G,KAAS5G,QAG3C,OAFA+hB,cAAY2B,KAAZ,yBAA2C,CAAEpqB,IAAK0G,IAAWwhB,QAC7DuK,EAAOnmB,QACA8a,EAAQ,IAAI3kB,MAAMiE,OAG7B+rB,EAAOwC,YAEA,CAAE2T,WAAUt8B,SAgBVw8B,GAsBFrhC,IAAaE,KAAI,WACpB,OAAOoD,GAAUA,EAAQ,CAAEklB,qBAC5BroB,MAAK,SAAAs3B,GACCA,GACD5yB,OAEL,SAAAtM,GAEC,MADAsM,IACMtM,KAxCD,IACHyoC,EACAC,GAgHN5D,MAfU1/B,aAAQ,WAClB,OAAQiiC,IAvDDxK,IAAcj1B,MAAK,WACC,MAMP,EANhB,GA1TZ,SAAsBmC,GAClB,OAAQA,GAAO1H,YAAe0H,GAyTlBg/B,CAAah/B,GAKb,OAJA0e,cAAY2B,KAAZ,4BAA6CE,OAA7C,OACKvN,IAASG,YAAakH,IAAgBS,yBAD3C,IAEGqD,QAEIyf,EAAOiB,WACX,GAAI7+B,EAKP,OAJA0e,cAAY2B,KAAZ,yCAA0DE,OAA1D,OACKvN,IAASG,YAAakH,IAAgBU,yBAD3C,IAEGoD,QAEI6f,EAAsB,CAAEh+B,QAE/B,MAAM,IAAItH,MAAJ,uBAMNumC,EAAcvI,OAAduI,UAEFC,EAAS,SAAC99B,EAAOF,GAAR,OACX+9B,EAAU3iC,KAAK8E,EAAO,CAAEjM,OAAQ6K,EAAK8sB,OAAQD,eAAe3rB,IAEhEg+B,EA5Xe,iBA4XqB,YAA2B,IAAhBrB,EAAgB,EAAxBt6B,KAAQs6B,QAG3C,OAFAnf,cAAY2B,KAAZ,sCAAuDlC,QAEhD,CAAEghB,YADWjB,EAAa,CAAEL,gBAIhCrN,YAAW,CACd0O,EAlYW,mBAkY4B,WAAM,MAKzC,OAJAxgB,cAAY2B,KAAZ,yCAA0DE,OAA1D,OACKvN,IAASG,YAAakH,IAAgBS,yBAD3C,IAEGqD,QAEIyf,EAAOiB,cAGlBK,EAzYW,mBAyY4B,WAAM,MAKzC,GAJAxgB,cAAY2B,KAAZ,yCAA0DE,OAA1D,OACKvN,IAASG,YAAakH,IAAgBU,yBAD3C,IAEGoD,QAECne,EACA,OAAOg+B,EAAsB,CAAEh+B,QAE/B,MAAM,IAAItH,MAAJ,yDAOmD4kB,OAAM,SAAArnB,GAAO,MAQ9E,MAPAyoB,cAAY2B,KAAZ,eAAiC,CAAEpqB,IAAKuG,YAAevG,KAAQsqB,OAA/D,OACKvN,IAASG,YAAakH,IAAgBY,aAD3C,EAEKjI,IAASgB,YAAa,eAF3B,EAGKhB,IAASiB,YAAapX,YAAsB5G,GAHjD,IAIGkoB,QAEH5b,IACMtM,KA5CS,IACXgpC,EAEFC,KAgDN38B,UAUJg5B,SAAmB,GE7WV6D,EAA4B,CACrC1rC,KAAmB,eACnB0mC,MA7EJ,YAA8E,IAAlD/6B,EAAkD,EAAlDA,MACxB,OAAO3B,IAAaE,KAAI,WAAM,IAClBo4B,EAAmB32B,EAAnB22B,eACR,GAAIA,EACA,OAAOA,IAAiBn4B,MAAK,SAAAwhC,GACzB3B,EAAoB2B,SAyEhC7E,WAnEJ,YAGI,OAHoE,EAAvCn7B,MACrBu1B,kBAmER6F,kBA1DJ,YAGI,OAHiF,EAA7ClU,QAC5BvmB,OAMH09B,GAoDL7T,KA7CJ,YAA0G,IAA/ExqB,EAA+E,EAA/EA,MACfyzB,EAA6CzzB,EAA7CyzB,YAAaK,EAAgC9zB,EAAhC8zB,UAAWqB,EAAqBn1B,EAArBm1B,SAAUjT,EAAWliB,EAAXkiB,OAClC2E,EAF8F,EAAxEK,QAEtBL,cAgCR,MAAO,CACH6U,MA/BU,SAARA,IACF,OAAOjI,IAAcj1B,MAAK,SAAAqmB,GACtB,IAAKwZ,EACD,MAAM,IAAIhlC,MAAJ,yBAGV,IAAM+G,EAAMD,YAAU,GAAIqtB,cAAgB/J,IAAqB,CAC3DljB,MAAO,CACHsmB,gBACAX,MAAcrB,EACdma,WAAc9c,EAASvM,IAAY9C,OAAS8C,IAAYU,SACxD4pB,aAAc5B,EAAkBgB,aAIxC,OAAOhB,EAAkB3C,MAAMt7B,MAEhC5B,MAAK,YAAgF,IAA7E0hC,EAA6E,EAA7EA,OACP,GAAIA,IAAW7H,sBAAoB/U,QAC/B,OAAOwQ,EAAU,CAAEpM,QAF6D,EAArEyY,QAEiBhZ,UAFoD,EAAnDiZ,UAEU7Z,aAFyC,EAA7B8Z,UAEI,CAAElM,QAASuH,IAGtE,GAAIwE,IAAW7H,sBAAoBC,OAC/B,OAAOnD,IAGX,MAAM,IAAI97B,MAAJ,wBAAmC6mC,OAM7Ch9B,MAAOktB,MAUX8L,SAAmB,G,OElFjBoE,EAA8C,CAChD3C,EACAZ,EACAgD,EACAxB,EACAzD,GDEE54B,EAAQ,CACVC,MNLQ,IMMRC,ONLQ,KQoBL,SAASm+B,EAAY5G,GACxB,IAAK7jC,OAAOuhC,OACR,MAAM,IAAIh+B,MAAJ,yBAFsD,IAKxDsrB,EACuHgV,EADvHhV,uBAAwByT,EAC+FuB,EAD/FvB,YAAaH,EACkF0B,EADlF1B,mBAAkCD,EACgD2B,EAD9D5B,aAA+B2C,EAC+Bf,EAD/Be,QAASxC,EACsByB,EADtBzB,QAC3FN,EAAiH+B,EAA3HhC,SAAsCG,EAAqF6B,EAAjGtX,WAA8B8V,EAAmEwB,EAAnExB,gBAAiBqI,EAAkD7G,EAAlD6G,8BAA+B9I,EAAmBiC,EAAnBjC,eAEtG1V,EAAWlsB,OAAO87B,OAAO5P,SAEzBsZ,EAAczD,yBAAe,CAAEO,cAAazT,yBAAwBqT,kBAAiBF,mBAAkBG,qBAAoBE,kBAAiBqI,gCAA+BtI,YACzK7V,EAAeiZ,EAAfjZ,WAEJriB,EAAQu2B,mBAAS,CAAE5R,2BACf9C,EAEM7hB,EAFN6hB,IAAKC,EAEC9hB,EAFD8hB,UAAWG,EAEVjiB,EAFUiiB,qBAAsBC,EAEhCliB,EAFgCkiB,OAAQC,EAExCniB,EAFwCmiB,cAAeC,EAEvDpiB,EAFuDoiB,OACjEL,EACU/hB,EADV+hB,gBAAiBO,EACPtiB,EADOsiB,eAAgBuP,EACvB7xB,EADuB6xB,OAAQ+E,EAC/B52B,EAD+B42B,oBAAqBI,EACpDh3B,EADoDg3B,gBAC9DvG,EAAUzwB,EAAVywB,MAEEtI,EAASsP,oBAAU,CAAEG,iBAAgBF,mBACnCnV,EAAY4F,EAAZ5F,QAEFyY,EAAa5D,0BAEnBxV,YAAY,CAAEC,MAAKU,UAAST,YAAWE,WAAUC,uBAAsBC,SACnEC,gBAAeC,SAAQC,aAAYN,kBAAiBO,mBAxBQ,MA0B7BuP,IAA3BE,EA1BwD,EA0BxDA,YAAaC,EA1B2C,EA0B3CA,UAEjByO,GAAoB,EAExB,SAASC,EAAT,GAAmF,IAAxDxZ,EAAwD,EAAxDA,QACvB,OAAO7oB,IAAaE,KAAI,WACpB,IAAIkiC,EAAJ,CAIAzgC,EAAQu2B,mBAAS,CAAE5R,2BALO,IAOlBhkB,EAAuBumB,EAAvBvmB,IACAgB,EAAY3B,EAAZ2B,QAMR,GAJIA,GACAA,EAAQ,CAAEklB,cAJiBK,EAAlBL,gBAOTmL,IAGA,OAFAyO,GAAoB,ED3B7B,YAA6H,IAA9FvZ,EAA8F,EAA9FA,QAASoU,EAAqF,EAArFA,YAAanT,EAAwE,EAAxEA,OAAQ6S,EAAgE,EAAhEA,WAAYh7B,EAAoD,EAApDA,MACpEyvB,EAA0DvI,EAA1DuI,OAAQ5I,EAAkDK,EAAlDL,cADgH,EAC9DK,EAAnCyZ,2BADiG,MAC3E7iC,IAD2E,EAGhI,OAAOO,IAAaE,KAAI,WAAM,MAClB45B,EAAgCmD,EAAhCnD,gBAAiB9V,EAAeiZ,EAAfjZ,WACnBL,EAAmChiB,EAAnCgiB,SAAUrgB,EAAyB3B,EAAzB2B,QAAS8xB,EAAgBzzB,EAAhByzB,YAEzBA,EAAckN,EAAoBlN,GAxBP,SAAC0E,GAC5BA,GAAmBA,EAAgByI,SAAWzI,EAAgByI,QAAQjhB,UACtE0Q,YAAW8H,EAAgByI,QAAQjhB,SAASsc,OAE5C9D,GAAmBA,EAAgB0I,YAAc1I,EAAgB0I,WAAWlhB,UAC5E0Q,YAAW8H,EAAgB0I,WAAWlhB,SAASsc,OAqB/C6E,CAA2B3I,GAND,MA9B3B,YAAuM,QAA7Kn4B,EAA6K,EAA7KA,MAAOknB,EAAsK,EAAtKA,QAASiB,EAA6J,EAA7JA,OAAQ6S,EAAqJ,EAArJA,WAAYM,EAAyI,EAAzIA,YAAyI,MACvLgF,EADuL,WACxK,CAA7B,IAAMS,EAAQT,EAAJ,GACX,GAAIS,EAAK5F,WAAW,CAAEn7B,QAAOmoB,SAAQ6S,aAAYM,iBAAkByF,EAAK3F,kBAAkB,CAAEp7B,QAAOknB,UAASiB,SAAQ6S,aAAYM,gBAC5H,OAAOyF,EAIf,MAAM,IAAI1nC,MAAJ,wCA+BsC2nC,CAAe,CAAEhhC,QAAOknB,UAASiB,SAAQ6S,aAAYM,gBAArFjnC,EARkB,EAQlBA,KAAYqpC,EARM,EAQNA,OAAQxB,EARF,EAQEA,QARF,GASoB1R,EATpB,EAQZA,MACqC,CAAExqB,QAAOmoB,SAAQmT,cAAaN,aAAY9T,YATnE,IASlB+U,MAAqBP,EATH,EASGA,MAAOx4B,EATV,EASUA,MAE9B+9B,QAXoB,MASV7Q,IATU,KAmB1B,OANA/Q,cAAY2B,KAAZ,gBAAiCA,KAAjC,YAAmD3sB,GAAS6sB,OAA5D,OACKvN,IAASG,YAAiBkH,IAAgBE,aAD/C,EAEKvH,IAASwB,gBAAiB0R,EAF/B,EAGKlT,IAASuC,cAAiB7hB,EAH/B,IAIGyqB,QAEIzgB,IAAamC,KAAK,CACrBs1B,OAAOn0B,GAAUA,EAAQ,CAAEklB,oBAC5BroB,MAAK,YACJ,GADmB,EAAZs3B,MAaP,OARIoG,GACAtM,YAAqBH,GAGzBgE,IACKj1B,MAAK,SAAAqmB,GAAO,OEhFtB,YAA4L,IAAxJA,EAAwJ,EAAxJA,QAASgC,EAA+I,EAA/IA,cAA+I,IAAhI6W,cAAgI,SAC/L,OAAO9W,YAAmB,CACtB/B,UACAgC,gBACAC,oBAAqB7M,IAAqBC,cAC1C6M,mBAAqB2W,EAASvjB,IAAqBE,OAASF,IAAqBC,UACjF4M,YAAqBvM,IAAalC,wBF0ET2oB,CAAyB,CAAErc,UAASgC,gBAAe6W,cACnEzf,OAAM,SAAArnB,GAAG,OAAIyoB,cAAYlC,MAAM,6BAA8B,CAAEvmB,IAAKuG,YAAevG,QAEjF8kC,IACFl9B,MAAK,kBAAMi1B,OACXj1B,MAAK,SAAAqmB,GAAO,OE3EtB,SAAuBA,EAAvB,GAAsJ,IAA3G7C,EAA2G,EAA3GA,SAAUK,EAAiG,EAAjGA,WAGxD,OAAOhkB,IAAaigB,IAAI,CAEpB+F,YAAY,CACR9jB,MAAO,qdAcP+jB,UAAW,CAAEO,aAGjBe,YAASf,KAEVrmB,MAAK,YAAoB,IAAZk0B,EAAY,KAElByO,EAFkB,KAEPC,gBAAgBD,KAE3BhP,EAAwC,SAA9BgP,EAAKhP,OAAO92B,cAA4BuX,IAAO8D,QAAUyqB,EAAKhP,OAAO92B,cAC/E+2B,EAAW+O,EAAKE,SAAWF,EAAKE,QAAQC,MAAMC,aAG9CC,EAAmBpP,EAEzB,GAAID,GAHmBA,EAInB,MAAM,IAAI94B,MAAJ,6CAJa84B,EAIb,SAAiFA,EAAjF,mCAA4HjgB,IAAeU,OAA3I,IAAuJuf,EAAvJ,eAGV,GAAIC,GAAYA,IAAaoP,EACzB,MAAM,IAAInoC,MAAJ,+CAA0DmoC,EAA1D,SAAqFpP,EAArF,mCAAkIlgB,IAAeS,SAAjJ,IAA+Jyf,EAA/J,eAGV,IAAMqP,EAAkB/O,GAASA,EAAMgP,UAAYhP,EAAMgP,SAASxc,GAC5Dyc,EAAmBtf,GAAcA,EAAWrqB,QAAUqqB,EAAW,GAEvE,IAAKsf,EACD,MAAM,IAAItoC,MAAJ,2CAGV,IAAKooC,EACD,MAAM,IAAIpoC,MAAJ,2CAAsDsoC,GAG5DF,IAAoBE,GAChB3f,IAA4D,IAAhD4B,IAAyBxtB,QAAQ4rB,IAC7C3C,cAAY2B,KAAZ,4BAA8CgB,GAAalD,QAKnE,IAAM8iB,EAAkB9rC,OAAO87B,OAAOvP,YAAcvsB,OAAO87B,OAAOvP,WAAW,GAC7E,GAAIuf,GAAmBH,IAAoBG,EACvC,MAAM,IAAIvoC,MAAJ,oEAA+EuoC,MFYhEC,CAAchd,EAAS,CAAE7C,WAAUK,kBACnD7jB,MAAK,kBAAMyiC,KACXhjB,OAAM,SAAArnB,GACH,OAAOyH,IAAaigB,IAAI,CACpBpb,IACA7E,IAAaK,OAAO9H,QAEzB4H,KAAKxB,WAGjBkhB,SAAQ,WACP6R,YAAsBN,MCrBPqS,CAAoB,CAAE5a,UAASiB,SAAQmT,cAAaN,aAAYh7B,UAASke,SAAQ,WACpFuiB,GAAoB,KAGpB9/B,GACAA,EAAIuC,YAGb+a,OAAM,SAAArnB,GAAO,MASZ,MAPAyoB,cACK2B,KAAK,8BAA+B,CAAEpqB,IAAKuG,YAAevG,KAC1DsqB,QAFL,MAGSvN,IAASgB,YAAa,8BAH/B,EAIShB,IAASiB,YAAapX,YAAsB5G,GAJrD,IAOMA,KAId24B,cAAa+M,SAAQ,SAAA7M,GAAU,MACsBD,YAAmBC,GAC9DvI,EAAU,CAAEuI,SAAQ5I,cAFC,EACnBA,cACiC8I,KAFd,EACJA,KACwB5J,gBAFpB,EACEA,gBACmCyV,SAAS,GAEzE5K,YAAcnB,GF5Ef,YAAkG,IAAlEzvB,EAAkE,EAAlEA,MAAOknB,EAA2D,EAA3DA,QAASwT,EAAkD,EAAlDA,QAASgG,EAAyC,EAAzCA,gBACpD1e,EAAgGhiB,EAAhGgiB,SAAU8D,EAAsF9lB,EAAtF8lB,kBAAmBE,EAAmEhmB,EAAnEgmB,wBAAyBjE,EAA0C/hB,EAA1C+hB,gBAAiBE,EAAyBjiB,EAAzBiiB,qBACvEwN,EAA2CvI,EAA3CuI,OAAQ5I,EAAmCK,EAAnCL,cAAed,EAAoBmB,EAApBnB,gBACzBgc,EAAatS,EAAOmN,cAAP,IAA0B3jB,IAAgBG,KAA1C,KAEb4oB,EAAevS,EAAOwS,cAExBjgB,GAAYggB,GAAgBD,GAAchc,GAAmBD,IAC7DwY,EAAYA,GIdb,YAAoE,IAAzCtc,EAAyC,EAAzCA,SAEtBkgB,EAAS7K,OAAT6K,KAER,IAAKA,EACD,MAAM,IAAI7oC,MAAJ,4BAL6D,MAQzB6oC,EAAK,CAAElgB,aAA7Cga,EAR+D,EAQ/DA,SAAUmG,EARqD,EAQrDA,YAAaC,EARwC,EAQxCA,KAAMC,EARkC,EAQlCA,KAE/B3J,EAAS18B,aAAQ,WACnB,OAAOggC,EAASlmC,OAAO87B,OAAOzE,YAAa,kBAqB/C,OAHAkV,IACA3J,IAEO,CAAE2E,QAlBO,SAAC,GAA0C,IAAxCiF,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SACxC,OAAO9J,IAASl6B,MAAK,WACjB,OAAO2jC,EAAY,CACfI,iBACAD,UACAE,SAAU,YAAiB,IAAdtd,EAAc,EAAdA,GAAIvkB,EAAU,EAAVA,IAEb,OADA0hC,IACOG,EAAS,CAAEtd,KAAIvkB,cAG/BnC,MAAK,WACJ,OAAO4jC,SJXcK,CAAgB,CAAEzgB,aAE3C0gB,YAAeX,GAAY,SAAAhgC,GACvBA,EAAM8uB,iBACN9uB,EAAM4gC,kBAEN,IA2BML,EAAWzb,IAAkB7P,IAAQC,OA3BpB,CAQnB,CACIiO,GAxCS,iBAyCT0d,MAAOlI,EAAQmI,oBACf3gC,UASa,CACjB,CACIgjB,GAvDS,eAwDT0d,MAAOlI,EAAQoI,oBAQjBP,EAAiB9S,EAAOsT,wBAAwBC,OAChDC,EAAiB3kC,YAAW,kBAAMsxB,YAAqBH,KAAS,IAEtE6O,EAAUjB,QAAQ,CACdiF,UACAC,iBACAC,SAAU,YAAiB,IAAdtd,EAAc,EAAdA,GAAIvkB,EAAU,EAAVA,IACb,GArES,mBAqELukB,EACA,OAAOwb,EAAgB,CAAExZ,QAAS,eAAKA,EAAP,CAAgBvmB,UAE7C,GA1EE,iBA0EEukB,EAAiC,CACxC,IAAKY,IAAsBC,EACvB,MAAM,IAAI1sB,MAAJ,0EAIV,OADAu2B,YAAqBH,GACd9I,YAAY,CAAEZ,kBAAiBD,sBAAqBtnB,MAAK,WAI5D,GAHAuxB,YAAsBN,GACtB9rB,YAAe8rB,GAE0E,IAArFuS,EAAaxgC,iBAAb,IAAmCyX,IAAgBE,kBAAnD,KAA0EnhB,OAAc,CACxF,IAAMkrC,EAAqBlB,EAAapF,cAAc,wBAClDsG,GACAv/B,YAAeu/B,OAKxB,GA3FE,4BA2FEhe,EAA4C,CACnD,IAAKY,IAAsBC,EACvB,MAAM,IAAI1sB,MAAJ,wFAmBV,OAAOqnC,EAAgB,CAAExZ,QAAS,eAAKA,EAAP,CAAgBvmB,MAAKggC,oBAhBzB,SAAClN,GACzB,OAAOz3B,aAAQ,WACX,OAAOy3B,IAAcj1B,MAAK,SAAAqmB,GACtB,OAAOgB,YAAsB,CACzBC,oBAAmBjB,UAASkB,kBAAiBC,0BAAyBjE,kBAAiBE,yBACxFzjB,MAAK,YAAgB,IAAb7H,EAAa,EAAbA,OACP,GAAe,MAAXA,EACA,MAAM,IAAI0C,MAAJ,wCAAmD1C,GAG7D,OAAOkuB,oBAShCrmB,MAAK,WACJL,aAAa8kC,GACblT,YAAsBN,UEtB9B0T,CAAqB,CAAEnjC,QAAOknB,UAASwT,UAASgG,oBAEhDgC,YAAejT,GAAQ,SAAA1tB,GACnBA,EAAM8uB,iBACN9uB,EAAM4gC,kBAEN,IAAMS,EAAa1C,EAAgB,CAAExZ,YAGrCuI,EAAO2T,WAAaA,QAI5B,IAAMC,EAAqBtR,EAAYvzB,MAAK,WACxC,OAAOH,IAAamC,KAAK,CAAE8iC,iBAAkB1M,IAAuB7E,gBAAevzB,MAAK,YAA0B,IAAvB8kC,EAAuB,EAAvBA,iBACvF,GAAKA,EAAL,CAD8G,IAKtG3iC,EAA6B2iC,EAA7B3iC,IAAKkmB,EAAwByc,EAAxBzc,cAAe8I,EAAS2T,EAAT3T,KACtBF,EAASh5B,SAASmmC,cAAT,IAA4B3jB,IAAgBC,eAA5C,IAAgE2N,EAAhE,KAEf,IAAK4I,EACD,MAAM,IAAIp2B,MAAJ,+BAGV,IACM+pC,EAAa1C,EAAgB,CAAExZ,QADrB,CAAEvmB,MAAK8uB,SAAQ5I,gBAAe8I,UAI9CF,EAAO2T,WAAaA,SAItBG,EGzIH,YAA0K,IAAjJvM,EAAiJ,EAAjJA,gBAAiBiB,EAAgI,EAAhIA,mBAC7C,OAAO55B,IAAaE,KAAI,WACpB,GAAI05B,GAAsBA,EAAmByG,OAASzG,EAAmByG,MAAM8E,SAC3E,OAAOxM,EAAgB,CAAEhgB,IAAQE,WHsIfusB,CAAc,CAAEzM,kBAAiBiB,uBACrDyL,EIxIH,YAAmF,IAAxDjT,EAAwD,EAAxDA,MACxBhQ,EAASpB,cAMf,OAJI7oB,eACAiqB,EAAOQ,KAAK,8BAGT5f,cAAoB7C,MAAK,SAAAmlC,GAAkB,MAExCC,EAAiBloC,GAAgBN,MAAMnH,KAAKwC,SAAS+K,iBAAT,IAA+ByX,IAAgBC,eAA/C,MAAoEjZ,KAAI,SAAAmD,GACtH,OAAOA,EAAGssB,aAAazW,IAAgB5B,OAASjU,EAAGssB,aAAazW,IAAgBC,mBACjFvb,QAAO,SAAAyhB,GACN,OAAOA,GAAUA,IAAWpI,IAAQK,QAGhCwsB,EAAgDpT,EAAhDoT,OAAQC,EAAwCrT,EAAxCqT,MAAOC,EAAiCtT,EAAjCsT,MAAOnB,EAA0BnS,EAA1BmS,MARgB,EAQUnS,EAAnBmQ,eARS,SAU9CngB,EAAOO,KAAP,uBAAoC8iB,GACpCrjB,EAAOO,KAAP,uBAAoC+iB,GACpCtjB,EAAOO,KAAP,uBAAoC4hB,GACpCniB,EAAOO,KAAP,wBAAqC6iB,GACrCpjB,EAAOO,KAAP,yBAAsC4f,EAAQ/lC,YAE9C4lB,EAAOS,QAAP,MACKvN,IAASG,YAAgCkH,IAAgBC,YAD9D,EAEKtH,IAASsB,cAAgC2uB,EAAe1jC,KAAK,KAFlE,EAGKyT,IAASuB,eAAgC0uB,EAAe5rC,OAAO6C,WAHpE,EAIK8Y,IAASkB,gBAAgC8uB,EAAiBA,EAAe9oC,WAAa,GAJ3F,EAKKihB,IAAgB1G,eAAyByuB,EAL9C,EAMK/nB,IAAgBC,cAAyB+nB,EAN9C,EAOKhoB,IAAgBE,aAAyB,aAP9C,EAQKF,IAAgBG,cAAyB8nB,EAR9C,EASKjoB,IAAgBI,cAAyB0mB,EAT9C,EAUK9mB,IAAgBK,cAAyBrmB,OAAOkuC,WAVrD,EAWKloB,IAAgB/H,aAAyB8H,IAAiBhC,OAX/D,EAYKiC,IAAgBM,wBAAyBwkB,EAAU,IAAM,IAZ9D,IAeAngB,EAAO3B,WJkGiBmlB,CAAgB,CAAExT,UACxCyT,ED9HH,YAAqL,IAAxJlkC,EAAwJ,EAAxJA,MAAOmoB,EAAiJ,EAAjJA,OAAQmT,EAAyI,EAAzIA,YAAaN,EAA4H,EAA5HA,WAC5D,OAAO38B,IAAaigB,IAAIgiB,EAAcrgC,KAAI,SAAA8gC,GACtC,OAAOA,EAAK5F,WAAW,CAAEn7B,QAAOmoB,SAAQmT,cAAaN,eAC/C+F,EAAKhG,MAAM,CAAE/6B,QAAOmoB,SAAQmT,cAAaN,eACzC,SACNx8B,KAAKxB,KCyHqBmnC,CAAkB,CAAEnkC,QAAOmoB,SAAQmT,cAAaN,eAE9E,OAAO38B,IAAamC,KAAK,CACrBuxB,cAAapN,yBACb+e,sBAAqBL,qBAAoBE,oBACzCW,0BACD1lC,KAAKxB,KAxJZ,mC,6BKAA","file":"smart-payment-buttons.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    NAMESPACE:              ('data-namespace' : 'data-namespace'),\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce'),\n    ENABLE_3DS:             ('data-enable-3ds' : 'data-enable-3ds'),\n    SDK_INTEGRATION_SOURCE: ('data-sdk-integration-source' : 'data-sdk-integration-source')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:           ('client-id' : 'client-id'),\n    MERCHANT_ID:         ('merchant-id' : 'merchant-id'),\n    MERCHANT_EMAIL_HASH: ('merchant-email-hash' : 'merchant-email-hash'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault'),\n\n    STAGE_HOST: ('stage-host' : 'stage-host')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n\nexport const PROTOCOL = {\n    HTTP:  ('http' : 'http'),\n    HTTPS: ('https' : 'https')\n};\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration'),\n    SDK_INTEGRATION_SOURCE: ('sdk_integration_source' : 'sdk_integration_source'),\n    PAYMENT_FLOW:           ('payment_flow' : 'payment_flow'),\n    BUTTON_VERSION:         ('button_version' : 'button_version')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_AUTHORIZE:       ('process_checkout_authorize' : 'process_checkout_authorize'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = __DEBUG__ ? LOG_LEVEL.DEBUG : LOG_LEVEL.WARN;\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Payload = { [string] : string };\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {|\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n|};\n\ntype ClientPayload = { [string] : ?string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {|\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n|};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    const payloadBuilders : Array<Builder> = [];\n    const metaBuilders : Array<Builder> = [];\n    const trackingBuilders : Array<Builder> = [];\n    const headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(logLevel)) {\n            return;\n        }\n\n        const args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            const meta = {};\n            for (const builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            const headers = {};\n            for (const builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            const req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    const flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        const logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (const builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        const trackingPayload : Payload = objFilter(payload);\n\n        for (const builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.BUTTON_SESSION_UID]:     buttonSessionID,\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID,\n            [FPTI_KEY.BUTTON_VERSION]:         __SMART_BUTTONS__.__MINOR_VERSION__\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : { buyerAccessToken : string, orderID : string }) : ZalgoPromise<void> {\n    return callGraphQL({\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !forceRestAPI)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !forceRestAPI)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !forceRestAPI)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return (buyerAccessToken || !forceRestAPI)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : { paymentMethodID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { SMART_API_URI, PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.PAYMENT }/${ paymentID }`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.PAYMENT }/${ paymentID }/execute`,\n            json:        {\n                data: {\n                    payer_id: payerID\n                }\n            }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            },\n            data: {\n                payer_id: payerID\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ paymentID }/patch`,\n            json:        { data: patchData }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({ data : T }) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => {|\n        cancel : () => void\n    |},\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    onError : ((mixed) => void) => void,\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    let requestListeners = {};\n    let errorListeners = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            session_uid:        sessionUID,\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID];\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        let {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        requestUID = requestUID || parsedData.request_id;\n\n        if (messageUID && receivedMessages[messageUID]) {\n            return;\n        }\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n\n                    for (const errorListener of errorListeners) {\n                        errorListener(err);\n                    }\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n\n        return {\n            cancel: () => {\n                delete requestListeners[name];\n            }\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        requestListeners = {};\n        errorListeners = [];\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    const onError = (handler) => {\n        errorListeners.push(handler);\n    };\n        \n    return { on, send, onError, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\nexport const loadFirebaseSDK = memoize((config) => {\n    return loadScript(FIREBASE_SCRIPTS.APP).then(() => {\n        return ZalgoPromise.all([\n            loadScript(FIREBASE_SCRIPTS.AUTH),\n            loadScript(FIREBASE_SCRIPTS.DATABASE)\n        ]);\n    }).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.all([\n            loadFirebaseSDK(config),\n            getFirebaseSessionToken(sessionUID)\n        ]).then(([ firebase, sessionToken ]) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                }, err => {\n                    error(err);\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        databasePromise.catch(noop);\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './payment';\nexport * from './subscription';\nexport * from './socket';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onError';\nexport * from './getPopupBridge';\nexport * from './rememberFunding';\nexport * from './getPageUrl';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessToken : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, forceRestAPI: false });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n\n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n\n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n\n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\nexport function getCreateOrder(xprops : XProps, { facilitatorAccessToken, createBillingAgreement, createSubscription } : { facilitatorAccessToken : string, createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, buttonSessionID, intent, currency, merchantID, partnerAttributionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: currency,\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment, upgradeFacilitatorAccessToken } from '../../api';\nimport { ORDER_API_ERROR, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string,\n    facilitatorAccessToken : string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : string,\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : OrderActions {\n    \n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n    \n    const get = memoize(() => {\n        return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n    });\n\n    const execute = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(execute.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : XOnApproveActionsType {\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID, { buyerAccessToken }));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID, { buyerAccessToken }));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string,\n    buyerAccessToken? : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nfunction getDefaultOnApprove(intent : $Values<typeof INTENT>) : XOnApprove {\n    return (data, actions) => {\n        if (intent === INTENT.CAPTURE) {\n            return actions.order.capture().then(noop);\n        } else if (intent === INTENT.AUTHORIZE) {\n            return actions.order.authorize().then(noop);\n        } else {\n            throw new Error(`Unsupported intent for auto-capture: ${ intent }`);\n        }\n    };\n}\n\nexport function getOnApprove(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : OnApprove {\n    const { intent, onApprove = getDefaultOnApprove(intent), partnerAttributionID, onError, upgradeLSAT = false } = xprops;\n\n    if (!onApprove) {\n        throw new Error(`Expected onApprove`);\n    }\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, forceRestAPI = upgradeLSAT }, { restart }) => {\n        return ZalgoPromise.try(() => {\n            if (upgradeLSAT) {\n                return createOrder().then(orderID => upgradeFacilitatorAccessToken(facilitatorAccessToken, { buyerAccessToken, orderID }));\n            }\n        }).then(() => {\n            return createOrder();\n        }).then(orderID => {\n\n            getLogger()\n                .info('button_approve')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_AUTHORIZE\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken };\n            const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n            return onApprove(data, actions).catch(err => {\n                return ZalgoPromise.try(() => {\n                    return onError(err);\n                }).then(() => {\n                    throw err;\n                });\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_CANCEL\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : { orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI: false }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, partnerAttributionID } = xprops;\n\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick | void {\n    const { onClick } = xprops;\n\n    if (!onClick) {\n        return;\n    }\n\n    return memoize(({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID } : { facilitatorAccessToken : string, partnerAttributionID : ?string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createSubscription(facilitatorAccessToken, data, { partnerAttributionID });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return reviseSubscription(facilitatorAccessToken, subscriptionID, data, { partnerAttributionID });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps, { facilitatorAccessToken } : { facilitatorAccessToken : string }) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc, partnerAttributionID } = xprops;\n    if (createSubscriptionFunc) {\n        return () => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\nimport type { RememberFunding } from './rememberFunding';\nimport type { GetPageURL } from './getPageUrl';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type Props = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    enableStandardCardFields : ?boolean,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { FundingEligibilityType, CheckoutFlowType, CardFieldsFlowType, ThreeDomainSecureFlowType, PersonalizationType } from '../../types';\nimport { type FirebaseConfig } from '../../api';\nimport { getNonce } from '../dom';\n\nimport type { XProps, Props } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getProps({ facilitatorAccessToken } : { facilitatorAccessToken : string }) : Props {\n\n    const xprops : XProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        currency\n    } = xprops;\n\n    const onInit = getOnInit(xprops);\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick(xprops);\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops, { facilitatorAccessToken });\n    \n    const createOrder = getCreateOrder(xprops, { facilitatorAccessToken, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { facilitatorAccessToken, createOrder });\n    const onCancel = getOnCancel(xprops, { facilitatorAccessToken, createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { facilitatorAccessToken, createOrder });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n        currency,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure } = paypal;\n    return { Checkout, CardFields, ThreeDomainSecure };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : { serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig }) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const { version } = paypal;\n    \n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    facilitatorAccessToken : string,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [ $Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function getServiceData({ facilitatorAccessToken, sdkMeta, buyerGeoCountry, fundingEligibility, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        sdkMeta,\n        personalization,\n        facilitatorAccessToken,\n        eligibility\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport type RememberFunding = ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type GetPageURL = () => ZalgoPromise<string>;\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport type { Props, Components, ServiceData, Config, CreateBillingAgreement, CreateSubscription } from '../button/props';\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { openPopup } from '../ui';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : { components : Components }) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\nfunction isCheckoutPaymentEligible() : boolean {\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : { win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean }) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : { props : Props, components : Components, serviceData : ServiceData, payment : Payment, config : Config }) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { sessionID, buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick } = props;\n    let { button, win, fundingSource, card, isClick, buyerAccessToken, venmoPayloadID } = payment;\n    const { fundingEligibility, buyerCountry } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ props, components, serviceData, config, payment: { button, win, fundingSource, card, isClick: false } })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        if (!approved) {\n            return onCancel();\n        }\n    };\n    \n    const init = () => {\n        return Checkout({\n            window: win,\n            sessionID,\n            buttonSessionID,\n            clientAccessToken,\n            buyerAccessToken,\n            venmoPayloadID,\n    \n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n    \n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n                approved = true;\n                getLogger().info(`spb_onapprove_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n    \n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken }, { restart }).catch(noop);\n                });\n            },\n    \n            onAuth: ({ accessToken }) => {\n                getLogger().info(`spb_onauth_access_token_${ accessToken ? 'present' : 'not_present' }`);\n                getLogger().info(`spb_onauth_buyer_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n                buyerAccessToken = accessToken;\n            },\n    \n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n    \n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n    \n            onError,\n            onClose,\n    \n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce\n        });\n    };\n\n    let instance;\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n    });\n\n    const click = () => {\n        if (!onClick) {\n            start();\n            return;\n        }\n\n        if (supportsPopups()) {\n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n        }\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (win && !valid) {\n                win.close();\n            }\n        });\n    };\n\n    return { click, start, close };\n}\n\nexport const checkout : PaymentFlow = {\n    name:              'checkout',\n    setup:             setupCheckout,\n    isEligible:        isCheckoutEligible,\n    isPaymentEligible: isCheckoutPaymentEligible,\n    init:              initCheckout\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../button/dom';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce, noop } from 'belter/src';\n\nimport type { Props, Config, ServiceData, Components } from '../button/props';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { Payment, PaymentFlow, PaymentFlowInstance } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, serviceData } : { props : Props, serviceData : ServiceData }) : boolean {\n    const { vault, onShippingChange, enableStandardCardFields } = props;\n    const { eligibility } = serviceData;\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields) {\n        return true;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction isCardFieldsPaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, fundingSource } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource && fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : ?$Values<typeof CARD>) {\n    if (!card) {\n        return;\n    }\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : { props : Props, config : Config, components : Components, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, sessionID, buttonSessionID } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart }).catch(noop);\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        sessionID,\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    name:              'card_fields',\n    setup:             setupCardFields,\n    isEligible:        isCardFieldsEligible,\n    isPaymentEligible: isCardFieldsPaymentEligible,\n    init:              initCardFields,\n    inline:            true\n};\n","/* @flow */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, popup, memoize, stringifyError, isIos, isAndroid, isSafari, isChrome, stringifyErrorMessage, once, PopupOpenError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, FUNDING, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { type CrossDomainWindowType, getDomain, isWindowClosed } from 'cross-domain-utils/src';\n\nimport type { Props, Components, Config, ServiceData } from '../button/props';\nimport { NATIVE_CHECKOUT_URI, WEB_CHECKOUT_URI, NATIVE_CHECKOUT_POPUP_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { getLogger, promiseOne } from '../lib';\nimport { USER_ACTION, FPTI_TRANSITION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout';\n\nconst POST_MESSAGE = {\n    AWAIT_REDIRECT:    'awaitRedirect',\n    DETECT_APP_SWITCH: 'detectAppSwitch',\n    DETECT_WEB_SWITCH: 'detectWebSwitch'\n};\n\nconst SOCKET_MESSAGE = {\n    SET_PROPS:  'setProps',\n    GET_PROPS:  'getProps',\n    CLOSE:      'close',\n    ON_APPROVE: 'onApprove',\n    ON_CANCEL:  'onCancel',\n    ON_ERROR:   'onError'\n};\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    return firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n});\n\nfunction isIOSSafari() : boolean {\n    return isIos() && isSafari();\n}\n\nfunction isAndroidChrome() : boolean {\n    return isAndroid() && isChrome();\n}\n\nfunction useDirectAppSwitch() : boolean {\n    return isAndroidChrome();\n}\n\nfunction didAppSwitch(win : ?CrossDomainWindowType) : boolean {\n    return !win || isWindowClosed(win);\n}\n\nfunction attemptPopupAppSwitch(url) : ?CrossDomainWindowType {\n    try {\n        return popup(url);\n    } catch (err) {\n        if (!(err instanceof PopupOpenError)) {\n            throw err;\n        }\n    }\n}\n\nfunction isNativeOptedIn({ props } : { props : Props }) : boolean {\n    const { enableNativeCheckout } = props;\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n\n    try {\n        if (window.localStorage.getItem('__native_checkout__')) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nlet sessionUID;\nlet nativeSocket;\nlet initialPageUrl;\n\nfunction isNativeEligible({ props, config, serviceData } : { props : Props, config : Config, serviceData : ServiceData }) : boolean {\n    \n    const { platform, onShippingChange, createBillingAgreement, createSubscription } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (!isIOSSafari() && !isAndroidChrome()) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout.paypal || eligibility.nativeCheckout.venmo) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isNativePaymentEligible({ payment, props, serviceData } : { payment : Payment, props : Props, serviceData : ServiceData }) : boolean {\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (!nativeSocket) {\n        return false;\n    }\n\n    if (!initialPageUrl) {\n        return false;\n    }\n\n    if (fundingSource === FUNDING.VENMO && !isNativeOptedIn({ props })) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout[fundingSource]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupNative({ config, props } : { config : Config, props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { version, firebase: firebaseConfig } = config;\n        const { getPageUrl } = props;\n\n        sessionUID = uniqueID();\n        nativeSocket = getNativeSocket({\n            sessionUID, firebaseConfig, version\n        });\n\n        nativeSocket.onError(err => {\n            nativeSocket = null;\n            getLogger().error('native_socket_error', { err: stringifyError(err) });\n        });\n\n        return getPageUrl().then(pageUrl => {\n            initialPageUrl = pageUrl;\n        });\n    });\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    webCheckoutUrl : string,\n    stageHost : ?string,\n    apiStageHost : ?string,\n    forceEligible : boolean\n|};\n\nfunction initNative({ props, components, config, payment, serviceData } : { props : Props, components : Components, config : Config, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, getPageUrl,\n        buttonSessionID, env, stageHost, apiStageHost, onClick } = props;\n    const { facilitatorAccessToken, sdkMeta } = serviceData;\n    const { fundingSource } = payment;\n\n    let instance;\n\n    const fallbackToWebCheckout = ({ win } : { win? : CrossDomainWindowType } = {}) => {\n        const checkoutPayment = { ...payment, win, isClick: false };\n        instance = checkout.init({ props, components, payment: checkoutPayment, config, serviceData });\n        return instance.start();\n    };\n\n    const getNativeDomain = () : string => {\n        return (fundingSource === FUNDING.VENMO)\n            ? 'https://www.paypal.com'\n            : getDomain();\n    };\n\n    const getNativeUrl = ({ pageUrl = initialPageUrl } = {}) : string => {\n        return extendUrl(`${ getNativeDomain() }${ NATIVE_CHECKOUT_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, pageUrl }\n        });\n    };\n\n    const getNativePopupUrl = () : string => {\n        return extendUrl(`${ getDomain() }${ NATIVE_CHECKOUT_POPUP_URI[fundingSource] }`, {\n            query: { sdkMeta }\n        });\n    };\n\n    const getWebCheckoutUrl = ({ orderID }) : string => {\n        return extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n            query: {\n                fundingSource,\n                facilitatorAccessToken,\n                token:         orderID,\n                useraction:    commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                native_xo:     '1',\n                venmoOverride: (fundingSource === FUNDING.VENMO) ? '1' : '0'\n            }\n        });\n    };\n\n    const getSDKProps = () : ZalgoPromise<NativeSDKProps> => {\n        return ZalgoPromise.hash({\n            orderID: createOrder(),\n            pageUrl: getPageUrl()\n        }).then(({ orderID, pageUrl }) => {\n            const userAgent = getUserAgent();\n            const webCheckoutUrl = getWebCheckoutUrl({ orderID });\n            const forceEligible = isNativeOptedIn({ props });\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit, webCheckoutUrl,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost, forceEligible\n            };\n        });\n    };\n\n    type NativeConnection = {|\n        setProps : () => ZalgoPromise<void>,\n        close : () => ZalgoPromise<void>\n    |};\n\n    const connectNative = () : NativeConnection => {\n        const socket = nativeSocket;\n\n        if (!socket) {\n            throw new Error(`Native socket connection not established`);\n        }\n\n        const setProps = once(() => {\n            return getSDKProps().then(sdkProps => {\n                getLogger().info(`native_message_setprops`).flush();\n                return socket.send(SOCKET_MESSAGE.SET_PROPS, sdkProps);\n            }).then(() => {\n                getLogger().info(`native_response_setprops`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_APP_SWITCH_ACK\n                }).flush();\n            });\n        });\n\n        const close = once(() => {\n            getLogger().info(`native_message_close`).flush();\n            return socket.send(SOCKET_MESSAGE.CLOSE).then(() => {\n                getLogger().info(`native_response_close`).flush();\n                socket.close();\n            });\n        });\n\n        socket.on(SOCKET_MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            getLogger().info(`native_message_getprops`).flush();\n            return getSDKProps();\n        });\n\n        socket.on(SOCKET_MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            getLogger().info(`native_message_onapprove`).flush();\n            socket.close();\n            const data = { payerID, paymentID, billingToken, forceRestAPI: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return onApprove(data, actions);\n        });\n\n        socket.on(SOCKET_MESSAGE.ON_CANCEL, () => {\n            getLogger().info(`native_message_oncancel`).flush();\n            socket.close();\n            return onCancel();\n        });\n\n        socket.on(SOCKET_MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            getLogger().info(`native_message_onerror`, { err: message }).flush();\n            socket.close();\n            return onError(new Error(message));\n        });\n\n        socket.reconnect();\n        \n        return { setProps, close };\n    };\n\n    let win : ?CrossDomainWindowType;\n    let native : NativeConnection;\n\n    const open = () => {\n        const nativeUrl = getNativeUrl();\n        const nativePopupUrl = getNativePopupUrl();\n\n        if (useDirectAppSwitch()) {\n            win = attemptPopupAppSwitch(nativeUrl);\n        } else {\n            win = popup(nativePopupUrl);\n        }\n\n        native = connectNative();\n    };\n    \n    const close = () => {\n        return ZalgoPromise.try(() => {\n            if (win) {\n                win.close();\n            }\n\n            if (instance) {\n                return instance.close();\n            }\n\n            if (native) {\n                return native.close();\n            }\n        });\n    };\n\n    const click = () => {\n        open();\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (!valid) {\n                close();\n            }\n        }, err => {\n            close();\n            throw err;\n        });\n    };\n\n    const directAppSwitch = () => {\n        return createOrder().then(() => {\n            if (didAppSwitch(win)) {\n                getLogger().info(`native_detect_app_switch`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n                }).flush();\n\n                return native.setProps();\n            } else if (win) {\n                getLogger().info(`native_post_message_detect_web_switch`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n                }).flush();\n\n                return fallbackToWebCheckout({ win });\n            } else {\n                throw new Error(`No window found`);\n            }\n        });\n    };\n\n    const popupAppSwitch = () => {\n        const { postRobot } = paypal;\n        \n        const listen = (event, handler) =>\n            postRobot.once(event, { window: win, domain: getDomain() }, handler);\n\n        listen(POST_MESSAGE.AWAIT_REDIRECT, ({ data: { pageUrl } }) => {\n            getLogger().info(`native_post_message_await_redirect`).flush();\n            const redirectUrl = getNativeUrl({ pageUrl });\n            return { redirectUrl };\n        });\n\n        return promiseOne([\n            listen(POST_MESSAGE.DETECT_APP_SWITCH, () => {\n                getLogger().info(`native_post_message_detect_app_switch`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n                }).flush();\n\n                return native.setProps();\n            }),\n\n            listen(POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n                getLogger().info(`native_post_message_detect_web_switch`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n                }).flush();\n\n                if (win) {\n                    return fallbackToWebCheckout({ win });\n                } else {\n                    throw new Error(`No window found to do web fallback from native`);\n                }\n            })\n        ]);\n    };\n\n    const start = memoize(() => {\n        return (useDirectAppSwitch() ? directAppSwitch() : popupAppSwitch()).catch(err => {\n            getLogger().info(`native_error`, { err: stringifyError(err) }).track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ERROR,\n                [FPTI_KEY.ERROR_CODE]: 'native_error',\n                [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n            }).flush();\n\n            close();\n            throw err;\n        });\n    });\n\n    return {\n        click,\n        start,\n        close\n    };\n}\n\nexport const native : PaymentFlow = {\n    name:              'native',\n    setup:             setupNative,\n    isEligible:        isNativeEligible,\n    isPaymentEligible: isNativePaymentEligible,\n    init:              initNative,\n    spinner:           true\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ThreeDomainSecureFlowType } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, Props, Components } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isVaultCapturePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, paymentMethodID } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment } : { props : Props, components : Components, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken,\n        enableThreeDomainSecure, buttonSessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { paymentMethodID } = payment;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const vaultCapture : PaymentFlow = {\n    name:              'vault_capture',\n    setup:             setupVaultCapture,\n    isEligible:        isVaultCaptureEligible,\n    isPaymentEligible: isVaultCapturePaymentEligible,\n    init:              initVaultCapture,\n    spinner:           true,\n    inline:            true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { WEB_CHECKOUT_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE, type Props } from '../button/props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : { props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isPopupBridgePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : { props : Props, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    name:              'popup_bridge',\n    setup:             setupPopupBridge,\n    isEligible:        isPopupBridgeEligible,\n    isPaymentEligible: isPopupBridgePaymentEligible,\n    init:              initPopupBridge,\n    spinner:           true\n};\n","/* @flow */\n\nimport { onClick as onElementClick, destroyElement, memoize } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ContentType } from '../types';\nimport { renderSmartMenu } from '../menu/interface';\nimport { CHECKOUT_POPUP_DIMENSIONS, type Payment } from '../payment-flows';\nimport { deleteVault, validatePaymentMethod } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\n\nimport { type Props } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\n\nconst MENU_CHOICE = {\n    DELETE_VAULT:            'DELETE_VAULT',\n    SELECT_FUNDING_SHIPPING: 'SELECT_FUNDING_SHIPPING',\n    CHANGE_ACCOUNT:          'CHANGE_ACCOUNT'\n};\n\nconst popup = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\ntype ButtonDropdownProps = {|\n    payment : Payment,\n    props : Props,\n    content : ContentType,\n    initiatePayment : ({ payment : Payment }) => ZalgoPromise<void>\n|};\n\nlet smartMenu;\n\nexport function renderButtonDropdown({ props, payment, content, initiatePayment } : ButtonDropdownProps) {\n    const { clientID, clientAccessToken, enableThreeDomainSecure, buttonSessionID, partnerAttributionID } = props;\n    const { button, fundingSource, paymentMethodID } = payment;\n    const menuToggle = button.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`);\n\n    const buttonParent = button.parentElement;\n\n    if (clientID && buttonParent && menuToggle && paymentMethodID && clientAccessToken) {\n        smartMenu = smartMenu || renderSmartMenu({ clientID });\n\n        onElementClick(menuToggle, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const PAYPAL_CHOICES = [\n                /*\n                {\n                    id:    MENU_CHOICE.SELECT_FUNDING_SHIPPING,\n                    label: content.chooseCardOrShipping,\n                    popup\n                },\n                */\n                {\n                    id:    MENU_CHOICE.CHANGE_ACCOUNT,\n                    label: content.useDifferentAccount,\n                    popup\n                } /* ,\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedAccount\n                }\n                */\n            ];\n\n            const CARD_CHOICES = [\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedCard\n                }\n            ];\n\n            const choices = (fundingSource === FUNDING.PAYPAL)\n                ? PAYPAL_CHOICES\n                : CARD_CHOICES;\n\n            const verticalOffset = button.getBoundingClientRect().bottom;\n            const loadingTimeout = setTimeout(() => enableLoadingSpinner(button), 50);\n\n            smartMenu.display({\n                choices,\n                verticalOffset,\n                onChoose: ({ id, win }) => {\n                    if (id === MENU_CHOICE.CHANGE_ACCOUNT) {\n                        return initiatePayment({ payment: { ...payment, win } });\n\n                    } else if (id === MENU_CHOICE.DELETE_VAULT) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not delete vault without client access token and payment method id`);\n                        }\n\n                        enableLoadingSpinner(button);\n                        return deleteVault({ paymentMethodID, clientAccessToken }).then(() => {\n                            disableLoadingSpinner(button);\n                            destroyElement(button);\n\n                            if (buttonParent.querySelectorAll(`[${ DATA_ATTRIBUTES.PAYMENT_METHOD_ID }]`).length === 0) {\n                                const payInstantlyHeader = buttonParent.querySelector('.paypal-vault-header');\n                                if (payInstantlyHeader) {\n                                    destroyElement(payInstantlyHeader);\n                                }\n                            }\n                        });\n\n                    } else if (id === MENU_CHOICE.SELECT_FUNDING_SHIPPING) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not change funding or shipping without client access token and payment method id`);\n                        }\n\n                        const decorateCreateOrder = (createOrder) => {\n                            return memoize(() => {\n                                return createOrder().then(orderID => {\n                                    return validatePaymentMethod({\n                                        clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID\n                                    }).then(({ status }) => {\n                                        if (status !== 200) {\n                                            throw new Error(`Validate payment failed with status: ${ status }`);\n                                        }\n\n                                        return orderID;\n                                    });\n                                });\n                            });\n                        };\n\n                        return initiatePayment({ payment: { ...payment, win, decorateCreateOrder } });\n                    }\n                }\n            }).then(() => {\n                clearTimeout(loadingTimeout);\n                disableLoadingSpinner(button);\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { noop, identity, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { checkout, cardFields, native, vaultCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\nimport { sendBeacon, getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION } from '../constants';\n\nimport { type Props, type Config, type ServiceData, type Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    vaultCapture,\n    cardFields,\n    popupBridge,\n    native,\n    checkout\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : { props : Props, config : Config, serviceData : ServiceData, components : Components }) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.isEligible({ props, config, serviceData, components })\n            ? flow.setup({ props, config, serviceData, components })\n            : null;\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, components, serviceData } : { props : Props, payment : Payment, config : Config, components : Components, serviceData : ServiceData }) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, config, components, serviceData }) && flow.isPaymentEligible({ props, payment, config, components, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n\nconst sendPersonalizationBeacons = (personalization) => {\n    if (personalization && personalization.tagline && personalization.tagline.tracking) {\n        sendBeacon(personalization.tagline.tracking.click);\n    }\n    if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n        sendBeacon(personalization.buttonText.tracking.click);\n    }\n};\n\ntype InitiatePaymentType = {|\n    payment : Payment,\n    props : Props,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiatePaymentFlow({ payment, serviceData, config, components, props } : InitiatePaymentType) : ZalgoPromise<void> {\n    const { button, fundingSource, decorateCreateOrder = identity } = payment;\n\n    return ZalgoPromise.try(() => {\n        const { personalization, merchantID } = serviceData;\n        let { clientID, onClick, createOrder } = props;\n\n        createOrder = decorateCreateOrder(createOrder);\n\n        sendPersonalizationBeacons(personalization);\n\n        const { name, init, inline, spinner } = getPaymentFlow({ props, payment, config, components, serviceData });\n        const { click = promiseNoop, start, close } = init({ props, config, serviceData, components, payment });\n\n        const clickPromise = click();\n\n        getLogger().info(`button_click`).info(`pay_flow_${ name }`).track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n            [FPTI_KEY.PAYMENT_FLOW]:   name\n        }).flush();\n\n        return ZalgoPromise.hash({\n            valid: onClick ? onClick({ fundingSource }) : true\n        }).then(({ valid }) => {\n            if (!valid) {\n                return;\n            }\n\n            if (spinner) {\n                enableLoadingSpinner(button);\n            }\n\n            createOrder()\n                .then(orderID => updateButtonClientConfig({ orderID, fundingSource, inline }))\n                .catch(err => getLogger().error('update_client_config_error', { err: stringifyError(err) }));\n\n            return start()\n                .then(() => createOrder())\n                .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                .then(() => clickPromise)\n                .catch(err => {\n                    return ZalgoPromise.all([\n                        close(),\n                        ZalgoPromise.reject(err)\n                    ]);\n                }).then(noop);\n        });\n\n    }).finally(() => {\n        disableLoadingSpinner(button);\n    });\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop, stringifyErrorMessage, stringifyError } from 'belter/src';\nimport { COUNTRY, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, PersonalizationType, ContentType } from '../types';\nimport { setupLogger, fixClickFocus, getLogger } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData } from './props';\nimport { getSelectedFunding, getButtons } from './dom';\nimport { setupButtonLogs } from './logs';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, initiatePaymentFlow } from './pay';\nimport { renderButtonDropdown } from './menu';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken : string,\n    content : ContentType,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function setupButton(opts : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const { facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, content, sdkMeta,\n        cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig } = opts;\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({ eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization, isCardFieldsExperimentEnabled, sdkMeta });\n    const { merchantID } = serviceData;\n\n    let props = getProps({ facilitatorAccessToken });\n    const { env, sessionID, partnerAttributionID, commit, correlationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n    \n    setupLogger({ env, version, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    const { initPromise, isEnabled } = onInit();\n\n    let paymentProcessing = false;\n\n    function initiatePayment({ payment } : { payment : Payment }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            props = getProps({ facilitatorAccessToken });\n\n            const { win, fundingSource } = payment;\n            const { onClick } = props;\n\n            if (onClick) {\n                onClick({ fundingSource });\n            }\n\n            if (isEnabled()) {\n                paymentProcessing = true;\n\n                return initiatePaymentFlow({ payment, config, serviceData, components, props }).finally(() => {\n                    paymentProcessing = false;\n                });\n            } else  {\n                if (win) {\n                    win.close();\n                }\n            }\n        }).catch(err => {\n            \n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n        const payment = { button, fundingSource, card, paymentMethodID, isClick: true };\n        \n        fixClickFocus(button);\n        renderButtonDropdown({ props, payment, content, initiatePayment });\n        \n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            const payment = { win, button, fundingSource, card };\n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogs({ style });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessToken,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask\n    }).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : { orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : ?string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = intent;\n        const expectedCurrency = currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (clientID && CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { ProxyWindow } from '../types';\n\ntype SmartMenuProps = {|\n    clientID : string\n|};\n\ntype SmartMenu = {|\n    display : ({\n        verticalOffset : number,\n        choices : $ReadOnlyArray<{|\n            id : string,\n        label : string,\n        popup? : {\n            width : number,\n            height : number\n        }\n            |}>,\n        onChoose : ({|\n            id : string,\n            win : ?ProxyWindow\n                |}) => void\n    }) => ZalgoPromise<void>\n|};\n\nexport function renderSmartMenu({ clientID } : SmartMenuProps) : SmartMenu {\n\n    const { Menu } = paypal;\n\n    if (!Menu) {\n        throw new Error(`Menu component not found`);\n    }\n\n    const { renderTo, updateProps, show, hide } = Menu({ clientID });\n\n    const render = memoize(() => {\n        return renderTo(window.xprops.getParent(), '#smart-menu');\n    });\n\n    const display = ({ choices, verticalOffset, onChoose }) => {\n        return render().then(() => {\n            return updateProps({\n                verticalOffset,\n                choices,\n                onChoose: ({ id, win }) => {\n                    hide();\n                    return onChoose({ id, win });\n                }\n            });\n        }).then(() => {\n            return show();\n        });\n    };\n\n    hide();\n    render();\n\n    return { display };\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\n\nimport type { RememberFunding } from './props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : { rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nexport function setupButtonLogs({ style } : { style : ButtonStyle }) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n"],"sourceRoot":""}