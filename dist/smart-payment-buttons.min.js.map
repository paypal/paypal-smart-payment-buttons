{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/api/index.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/lib/util.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/rememberFunding.js","webpack://spb/./src/button/props/getPageUrl.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/button/pay.js","webpack://spb/./src/button/button.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","MERCHANT_EMAIL_HASH","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","MERCHANT_DOMAIN","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","SDK_CACHE","SDK_LOAD_TIME","IS_VAULT","RESPONSE_DURATION","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","PLATFORM","DESKTOP","MOBILE","FUNDING","PAYPAL","VENMO","ITAU","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","VERKKOPANKKI","PAYU","BLIK","TRUSTLY","ZIMPLER","MAXIMA","OXXO","BOLETO","WECHATPAY","SMART_PAYMENT_BUTTONS","HEADERS","AUTHORIZATION","CONTENT_TYPE","ACCESS_TOKEN","CSRF_TOKEN","SOURCE","REQUESTED_BY","CLIENT_METADATA_ID","PAYPAL_DEBUG_ID","DATA_ATTRIBUTES","FUNDING_SOURCE","PAYMENT_METHOD_ID","CLASS","LOADING","CLICKED","ORDER_API_ERROR","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","CONTEXT","IFRAME","POPUP","TARGET_ELEMENT","BODY","INTEGRATION_ARTIFACT","PAYPAL_JS_SDK","USER_EXPERIENCE_FLOW","INCONTEXT","INLINE","DOM_EVENT","MOUSEDOWN","HOVER","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","BUTTON_SESSION_ID","ORDER_ID","PAYMENT_ID","FPTI_STATE","BUTTON","FPTI_TRANSITION","BUTTON_LOAD","BUTTON_CLICK","CREATE_ORDER","RECEIVE_ORDER","CREATE_PAYMENT","CHECKOUT_SHIPPING_CHANGE","CHECKOUT_AUTHORIZE","CHECKOUT_CANCEL","FPTI_BUTTON_TYPE","FTPI_BUTTON_KEY","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","BUTTON_TAGLINE_ENABLED","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","this","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","getUserAgent","navigator","mockUserAgent","userAgent","isOperaMini","ua","isIEIntranet","document","documentMode","status","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","objectIDs","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","slice","toLowerCase","serializeArgs","JSON","stringify","Array","subkey","val","obj","uid","getObjectID","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","arguments","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","stringifyError","level","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","promiseDebounce","localPromise","safeInterval","loop","arrayFrom","debounce","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","extendUrl","url","originalUrl","originalHash","query","hashString","redirect","win","location","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","addEventListener","event","keyCode","PopupOpenError","popup","width","height","top","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","open","close","writeElementToWindow","el","tag","tagName","documentElement","children","removeChild","appendChild","prototype","ACCEPT","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","setRequestHeader","ontimeout","send","LOGGER_URL","AUTH_API_URL","ORDERS_API_URL","PAYMENTS_API_URL","CREATE_SUBSCRIPTIONS_API_URL","VALIDATE_PAYMENT_METHOD_API","SMART_API_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","PAYMENT","SUBSCRIPTION","GRAPHQL_URI","EXPERIENCE_URI","NATIVE_CHECKOUT","CLIENT_ID_PAYEE_NO_MATCH","FIREBASE_SCRIPTS","APP","DATABASE","ENABLE_PAYMENT_API","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","target","source","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","setupLogger","env","sessionID","buttonSessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","merchantDomain","version","referer","host","lang","country","callRestAPI","accessToken","requestHeaders","callSmartAPI","reqHeaders","ack","contingency","callGraphQL","variables","errors","_extends","assign","createAccessToken","basicAuth","Authorization","grant_type","access_token","getFirebaseSessionToken","sessionUID","firebase","auth","sessionToken","createOrderID","order","facilitatorAccessToken","orderID","id","getOrder","buyerAccessToken","isNativeTransaction","captureOrder","authorizeOrder","patchOrder","patchData","isArray","patch","getPayee","VALIDATE_CONTINGENCIES","THREE_DOMAIN_SECURE","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","paymentSource","token","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","enableVault","updateClientConfig","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createPaymentToken","payment","paymentID","createPayment","links","rel","match","getPayment","executePayment","payerID","payer_id","patchPayment","createSubscription","subscriptionPayload","reviseSubscription","activateSubscription","getSubscription","MESSAGE_TYPE","REQUEST","RESPONSE","RESPONSE_STATUS","SUCCESS","loadFirebaseSDK","config","loadScript","initializeApp","firebaseSocket","retryDelay","socketPromise","retryPromise","driver","sourceApp","sourceAppVersion","targetApp","retry","receivedMessages","requestListeners","responseListeners","activeRequests","sendMessage","socket","messageUID","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","messageSessionUID","requestUID","isOpen","session_uid","request_uid","message_name","message_status","message_type","message_data","closed","init","instance","connectionPromise","onOpen","onClose","onMessage","rawMessage","rawData","parsedData","messageType","messageData","messageTargetApp","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","database","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isBlankDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getTop","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","allowMock","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","__cross_domain_utils_window_check__","getButtons","getSelectedFunding","button","getAttribute","card","enableLoadingSpinner","classList","add","disableLoadingSpinner","remove","getNonce","nonce","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","fixClickFocus","preventDefault","blur","container","head","script","setAttribute","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","xprops","onInit","enabled","initPromise","isEnabled","buildXCreateOrderData","buildOrderActions","facilitatorAccessTokenPromise","intent","currency","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","buildPaymentActions","expectedIntent","transactions","transaction","redirect_urls","return_url","cancel_url","payer","payment_method","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createOrder","actions","startTime","duration","getOnApprove","onApprove","restart","getSubscriptionApi","activateSubscriptionApi","handleProcessorError","details","some","detail","issue","capture","authorize","execute","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","CLICK_VALID","VALID","INVALID","buildXOnClickData","buildXOnClickActions","getOnClick","valid","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","revise","getCreateSubscription","createSubscriptionFunc","_objectWithoutPropertiesLoose","excluded","sourceKeys","getProps","vault","platform","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","getConfig","firebaseConfig","cspNonce","serverCSPNonce","getServiceData","buyerGeoCountry","isCardFieldsExperimentEnabled","fundingEligibility","personalization","serverMerchantID","eligibility","buyerCountry","cardFields","native","POPUP_BRIDGE_OPTYPE","CANCEL","NODE_TYPE","ELEMENT","TEXT","COMPONENT","FRAGMENT","renderChildren","renderer","renderedChild","render","subchild","ElementNode","onRender","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ALPHA_CHARS","ELEMENT_TAG","HTML","SCRIPT","NODE","DEFAULT","ELEMENT_PROP","INNER_HTML","EL","ADD_CHILDREN","firstChild","docElement","dom","opts","domRenderer","createTextNode","createTextElement","prop","addProps","html","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","spinnerStyle","SpinnerPage","content","class","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","initCheckout","serviceData","isClick","approved","start","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","onAuth","renderTo","click","spinner","openPopup","cardFieldsOpen","highlightCard","forEach","opacity","parentPopupBridge","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","onCardTypeChange","closeCardFields","marginTop","renderPromise","minHeight","display","recalculateMargin","offsetTop","transitionDuration","slideUpButtons","inline","vaultCapture","link","handleThreeDomainSecure","handleValidateResponse","getNativeSocket","PAYMENT_FLOWS","bridge","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","forceNativeEligible","startPromise","fallbackToWebCheckout","startCheckout","pageUrl","setupButton","paymentProcessing","handleButtonClick","flow","getPaymentFlow","payPromise","tagline","buttonText","updateButtonClientConfig","cart","checkoutSession","amounts","total","currencyCode","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","validateOrder","onElementClick","stopPropagation","setupPrerenderTask","prerenderDetails","setupRememberTask","venmo","eligible","setupRemember","setupButtonLogsTask","pageRenderTime","fundingSources","layout","color","shape","label","innerWidth","setupButtonLogs","setupPaymentFlowsTask","setupPaymentFlows"],"mappings":"uBACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,MAAOjB,GAAiBkB,eAAezB,KAAKuB,EAAQC,IAGzG/B,EAAoBiC,EAAI,GAIjBjC,EAAoBA,EAAoBkC,EAAI,I,+BC/E9C,IAAMC,EAAU,CACnhMIC,EAAiB,CAC1BC,WAAa,aAEbC,IAAY,MACZC,MAAY,QACZC,UAAY,YAEZC,UAAsB,YACtBC,YAAsB,cACtBC,oBAAsB,sBAEtBC,OAAS,SAETC,SAAW,WACXC,OAAW,SACXC,OAAW,SACXC,MAAW,QAEXC,cAAgB,gBAEhBC,gBAAkB,kBAClBC,aAAkB,eAElBC,eAAiB,iBACjBC,YAAiB,cAEjBC,UAAY,YAEZC,iBAAmB,mBAEnBC,eAAiB,iBACjBC,aAAiB,eACjBC,aAAiB,eACjBC,YAAiB,eC7CRC,EAAW,CACpBC,KAAyB,YACzBC,MAAyB,aACzBC,WAAyB,kBACzBC,YAAyB,cACzBC,YAAyB,kBACzBC,mBAAyB,oBACzBC,MAAyB,QACzBC,WAAyB,aACzBC,aAAyB,eACzBC,QAAyB,cACzBC,gBAAyB,kBACzBC,OAAyB,SACzBC,UAAyB,YACzBhC,UAAyB,YACzBiC,YAAyB,yBACzBC,cAAyB,gBACzBC,WAAyB,iBACzBC,WAAyB,iBACzBC,eAAyB,iBACzBC,gBAAyB,aACzBC,eAAyB,gBACzBC,gBAAyB,kBACzBC,aAAyB,2BACzBC,cAAyB,yBACzBC,eAAyB,0BACzBC,cAAyB,gBACzBC,QAAyB,qBACzB1C,OAAyB,SACzBK,cAAyB,cACzBsC,uBAAyB,yBACzBC,uBAAyB,UACzBC,SAAyB,WACzBC,YAAyB,cACzBC,WAAyB,aACzBC,YAAyB,cACzBC,eAAyB,yBACzBC,UAAyB,YACzBC,cAAyB,gBACzBC,SAAyB,WACzB9C,gBAAyB,kBACzBC,aAAyB,eACzB8C,kBAAyB,qBAGhBC,EAAmB,CAC5BnD,OAAW,SACXoD,SAAW,YAIFC,EAAmB,CAC5BC,aAAe,YAGNC,EAAY,CACrBD,aAAe,gBAGNE,EAAgB,CACzBF,aAAe,gBC5DNvD,EAAS,CAClB0D,QAAY,UACZC,UAAY,YACZC,MAAY,SCHHC,EAAW,CACpBC,QAAU,UACVC,OAAU,UCFDC,EAAU,CACnBC,OAAiB,SACjBC,MAAiB,QACjBC,KAAiB,OACjBC,OAAiB,SACjBC,KAAiB,OACjBC,MAAiB,QACjBC,KAAiB,OACjBC,WAAiB,aACjBC,QAAiB,UACjBC,OAAiB,SACjBC,IAAiB,MACjBC,OAAiB,SACjBC,IAAiB,MACjBC,aAAiB,eACjBC,KAAiB,OACjBC,KAAiB,OACjBC,QAAiB,UACjBC,QAAiB,UACjBC,OAAiB,SACjBC,KAAiB,OACjBC,OAAiB,SACjBC,UAAiB,aCtBrB,qV,6BCAA,kkBAAO,IAAMC,EAAwB,wBAExBC,EAAU,CACnBC,cAAe,gBACfC,aAAe,eAEfC,aAAe,yBACfC,WAAe,aACfC,OAAe,WACfC,aAAe,iBAEfpD,uBAAwB,gCACxBqD,mBAAwB,4BACxBC,gBAAwB,mBAGfC,EAAkB,CAC3BC,eAAmB,sBACnB7B,KAAmB,YACnB8B,kBAAmB,0BAGVC,EAAQ,CACjBC,QAAS,wBACTC,QAAS,yBAGAC,EAAkB,CAC3BC,oBAAuB,sBACvBC,sBAAuB,yBAGdC,EAAU,CACnBC,OAAQ,SACRC,MAAQ,SAGCC,EAAiB,CAC1BC,KAAM,QAGGC,EAAuB,CAChCC,cAAe,iBAGNC,EAAuB,CAChCC,UAAW,YACXC,OAAW,UAGFC,EAAY,CACrBC,UAAW,YACXC,MAAW,SAGFC,EAAe,CACxBhC,sBAAuB,yBAGdiC,EAAoB,CAC7BC,kBAAoB,oBACpBC,SAAoB,WACpBC,WAAoB,UAGXC,EAAa,CACtBC,OAAW,gBAGFC,EAAkB,CAC3BC,YAA2B,sBAC3BC,aAA2B,uBAC3BC,aAA2B,uBAC3BC,cAA2B,wBAC3BC,eAA2B,yBAC3BC,yBAA2B,mCAC3BC,mBAA2B,6BAC3BC,gBAA2B,2BAGlBC,EAAmB,CAC5B5B,OAAS,UAGA6B,EAAkB,CAC3BjG,cAAyB,gBACzBkG,aAAyB,eACzBC,YAAyB,cACzBC,aAAyB,eACzBC,aAAyB,eACzBC,aAAyB,eACzB3H,YAAyB,cACzB4H,uBAAyB,0BAGhBhG,EAAc,CACvB7C,OAAU,SACVoD,SAAU,a,6BCjGP,SAAS0F,EAAUC,GACtB,IACI,IAAKA,EACD,OAAO,EAGX,GAAuB,oBAAZC,SAA2BD,aAAgBC,QAClD,OAAO,EAGX,GAAsB,oBAAXC,QAAmD,mBAAlBA,OAAOC,QAAyBH,aAAgBE,OAAOC,OAC/F,OAAO,EAGX,GAAsB,oBAAXD,QAAwD,mBAAvBA,OAAOE,aAA8BJ,aAAgBE,OAAOE,YACpG,OAAO,EAGX,IAAIC,EAAY,GAAIA,SAEpB,GAAIA,EAAU,CACV,IAAInY,EAAOmY,EAASvY,KAAKkY,GAEzB,GAAa,oBAAT9X,GAAuC,oBAATA,GAAuC,uBAATA,EAC5D,OAAO,EAIf,GAAyB,mBAAd8X,EAAKM,KACZ,OAAO,EAEb,MAAOC,GACL,OAAO,EAGX,OAAO,ECjCX,ICCIC,EDDEC,EAAmB,GACnBC,EAA4F,GCD9FC,EAAc,EAGlB,SAASC,IACL,IAAKD,GAAeH,EAAc,CAC9B,IAAMK,EAAUL,EAChBA,EAAe,KACfK,EAAQC,WAIT,SAASC,IACZJ,GAAe,EAGZ,SAASK,IACZL,GAAe,EACfC,ICfG,IAAMK,EAAb,WAeI,WAAYC,GAAuF,WAQ/F,GAR+F,KAbnGC,cAamG,OAZnGC,cAYmG,OAXnGC,kBAWmG,OAVnGzY,WAUmG,OATnG0Y,WASmG,OARnGC,cAQmG,OAHnGC,iBAGmG,OAFnGC,WAEmG,EAE/FC,KAAKP,UAAW,EAChBO,KAAKN,UAAW,EAChBM,KAAKL,cAAe,EAEpBK,KAAKH,SAAW,GAEZL,EAAS,CAET,IAAIS,EACAL,EACAH,GAAW,EACXC,GAAW,EACXQ,GAAU,EAEdb,IAEA,IACIG,GAAQ,SAAAW,GACAD,EACA,EAAKd,QAAQe,IAEbV,GAAW,EACXQ,EAASE,MAGd,SAAAtB,GACKqB,EACA,EAAKE,OAAOvB,IAEZa,GAAW,EACXE,EAAQf,MAIlB,MAAOA,GAGL,OAFAS,SACAU,KAAKI,OAAOvB,GAIhBS,IAEAY,GAAU,EAENT,EAEAO,KAAKZ,QAAQa,GACNP,GACPM,KAAKI,OAAOR,IAjE5B,2BA8EIR,QAAA,SAAQa,GACJ,GAAID,KAAKP,UAAYO,KAAKN,SACtB,OAAOM,KAGX,GAAI3B,EAAU4B,GACV,MAAM,IAAII,MAAM,gDAOpB,OAJAL,KAAKP,UAAW,EAChBO,KAAK9Y,MAAQ+Y,EACbD,KAAKM,WAEEN,MA3Ff,EA8FII,OAAA,SAAOR,GAAiC,WACpC,GAAII,KAAKP,UAAYO,KAAKN,SACtB,OAAOM,KAGX,GAAI3B,EAAUuB,GACV,MAAM,IAAIS,MAAM,+CAGpB,IAAKT,EAAO,CAER,IAAIf,EAAOe,GAAmC,mBAAnBA,EAAMjB,SAA0BiB,EAAMjB,WAAahY,GAAiBgY,SAASvY,KAAKwZ,GAC7GA,EAAQ,IAAIS,MAAJ,gDAA2DxB,GAgBvE,OAbAmB,KAAKN,UAAW,EAChBM,KAAKJ,MAAQA,EAERI,KAAKL,cACNY,YAAW,WACF,EAAKZ,cFjHnB,SAA2Cd,EAAaM,GAE3D,IAAuC,IAAnCJ,EAAiByB,QAAQ3B,GAA7B,CAIAE,EAAiB0B,KAAK5B,GAEtB0B,YAAW,WAMP,MAAM1B,IACP,GAEH,IAAK,IAAI6B,EAAI,EAAGA,EAAI1B,EAAiC2B,OAAQD,IAEzD1B,EAAiC0B,GAAG7B,EAAKM,IE+F7ByB,CAA+BhB,EAAO,KAE3C,GAGPI,KAAKM,WAEEN,MA1Hf,EA6HIa,YAAA,SAAYjB,GAGR,OAFAI,KAAKL,cAAe,EACpBK,KAAKI,OAAOR,GACLI,MAhIf,EAmIIM,SAAA,WAAW,IAEYb,EAAiCO,KAAjCP,SAAUC,EAAuBM,KAAvBN,SAAUG,EAAaG,KAAbH,SAEvC,IAFoDG,KAA9CF,cAMDL,GAAaC,GAAlB,CAIAM,KAAKF,aAAc,EACnBT,IAUA,IARA,IAAMyB,EAAQ,SAAIC,EAAgCC,GAC9C,OAAOD,EAAanC,MAAK,SAAAuB,GACrBa,EAAc5B,QAAQe,MACvB,SAAAtB,GACCmC,EAAcZ,OAAOvB,OAIpB5Y,EAAI,EAAGA,EAAI4Z,EAASc,OAAQ1a,IAAK,OAEA4Z,EAAS5Z,GAAzCgb,EAFgC,EAEhCA,UAAWC,EAFqB,EAErBA,QAAS/B,EAFY,EAEZA,QAEtBc,OAAM,EAEV,GAAIR,EAEA,IACIQ,EAASgB,EAAYA,EAAUjB,KAAK9Y,OAAS8Y,KAAK9Y,MACpD,MAAO2X,GACLM,EAAQiB,OAAOvB,GACf,cAGD,GAAIa,EAAU,CAEjB,IAAKwB,EAAS,CACV/B,EAAQiB,OAAOJ,KAAKJ,OACpB,SAGJ,IACIK,EAASiB,EAAQlB,KAAKJ,OACxB,MAAOf,GACLM,EAAQiB,OAAOvB,GACf,UAIJoB,aAAkBV,IAAiBU,EAAOR,UAAYQ,EAAOP,WAEzDO,EAAOR,SACPN,EAAQC,QAAQa,EAAO/Y,OAEvBiY,EAAQiB,OAAOH,EAAOL,OAG1BK,EAAON,cAAe,GAEftB,EAAU4B,GAEbA,aAAkBV,IAAiBU,EAAOR,UAAYQ,EAAOP,UACzDO,EAAOR,SACPN,EAAQC,QAAQa,EAAO/Y,OAEvBiY,EAAQiB,OAAOH,EAAOL,OAK1BkB,EAAMb,EAAQd,GAKlBA,EAAQC,QAAQa,GAIxBJ,EAASc,OAAS,EAClBX,KAAKF,aAAc,EACnBR,MAxNR,EA2NIV,KAAA,SAA2BqC,EAA0DC,GAEjF,GAAID,GAAkC,mBAAdA,IAA6BA,EAAU7a,KAC3D,MAAM,IAAIia,MAAM,wDAGpB,GAAIa,GAA8B,mBAAZA,IAA2BA,EAAQ9a,KACrD,MAAM,IAAIia,MAAM,sDAGpB,IAAIlB,EAAgC,IAAII,EAYxC,OAVAS,KAAKH,SAASY,KAAK,CACftB,UACA8B,YACAC,YAGJlB,KAAKL,cAAe,EAEpBK,KAAKM,WAEEnB,GAjPf,EAoPIgC,MAAA,SAA4BD,GACxB,OAAOlB,KAAKpB,UAAKwC,EAAWF,IArPpC,EAwPIG,QAAA,SAAQC,GAEJ,GAAIA,GAAkC,mBAAdA,IAA6BA,EAAUlb,KAC3D,MAAM,IAAIia,MAAM,uCAGpB,OAAOL,KAAKpB,MAAK,SAACqB,GACd,OAAOV,EAAagC,IAAID,GACnB1C,MAAK,WACF,OAAOqB,QAEhB,SAACpB,GACA,OAAOU,EAAagC,IAAID,GACnB1C,MAAK,WACF,MAAMC,SAtQ1B,EA2QI2C,QAAA,SAAQC,EAAe5C,GAAgC,WAEnD,GAAImB,KAAKP,UAAYO,KAAKN,SACtB,OAAOM,KAGX,IAAIwB,EAAUjB,YAAW,WAEjB,EAAKd,UAAY,EAAKC,UAI1B,EAAKU,OAAOvB,GAAO,IAAIwB,MAAJ,2BAAsCoB,EAAtC,SAEpBA,GAEH,OAAOzB,KAAKpB,MAAK,SAAAqB,GAEb,OADAyB,aAAaF,GACNvB,MA7RnB,EAkSI0B,UAAA,WAEI,GAAuB,oBAAZpD,QACP,MAAM,IAAIqD,UAAJ,0BAGV,OAAOrD,QAAQa,QAAQY,OAxS/B,EA2SWZ,QAAP,SAA0BlY,GAEtB,OAAIA,aAAiBqY,EACVrY,EAGPmX,EAAUnX,GAEH,IAAIqY,GAAa,SAACH,EAASgB,GAAV,OAAqBlZ,EAAM0X,KAAKQ,EAASgB,OAG9D,IAAIb,GAAeH,QAAQlY,IAtT1C,EAyTWkZ,OAAP,SAAcR,GACV,OAAO,IAAIL,GAAea,OAAOR,IA1TzC,EA6TWiB,YAAP,SAAmBjB,GACf,OAAO,IAAIL,GAAesB,YAAYjB,IA9T9C,EAiUWiC,IAAP,SAA6BC,GAEzB,IAAI3C,EAAU,IAAII,EACdwC,EAAQD,EAASnB,OACjBqB,EAAU,GAEd,IAAKD,EAED,OADA5C,EAAQC,QAAQ4C,GACT7C,EAeX,IAZA,IAAM2B,EAAQ,SAAI7a,EAAY8a,EAAgCC,GAC1D,OAAOD,EAAanC,MAAK,SAAAuB,GACrB6B,EAAQ/b,GAAKka,EAEC,IADd4B,GAAS,IAEL5C,EAAQC,QAAQ4C,MAErB,SAAAnD,GACCmC,EAAcZ,OAAOvB,OAIpB5Y,EAAI,EAAGA,EAAI6b,EAASnB,OAAQ1a,IAAK,CACtC,IAAIgc,EAAOH,EAAS7b,GAEpB,GAAIgc,aAAgB1C,GAChB,GAAI0C,EAAKxC,SAAU,CACfuC,EAAQ/b,GAAKgc,EAAK/a,MAClB6a,GAAS,EACT,eAED,IAAK1D,EAAU4D,GAAO,CACzBD,EAAQ/b,GAAKgc,EACbF,GAAS,EACT,SAGJjB,EAAM7a,EAAGsZ,EAAaH,QAAQ6C,GAAO9C,GAOzC,OAJc,IAAV4C,GACA5C,EAAQC,QAAQ4C,GAGb7C,GA9Wf,EAiXW+C,KAAP,SAAwBJ,GACpB,IAAI7B,EAAS,GAEb,OAAOV,EAAasC,IAAIlb,OAAOwb,KAAKL,GAAUM,KAAI,SAAA5a,GAC9C,OAAO+X,EAAaH,QAAQ0C,EAASta,IAAMoX,MAAK,SAAA1X,GAC5C+Y,EAAOzY,GAAON,SAElB0X,MAAK,WACL,OAAOqB,MAzXnB,EA6XWmC,IAAP,SAAiBC,EAAkBC,GAE/B,OAAO/C,EAAasC,IAAIQ,EAAMD,IAAIE,KA/X1C,EAkYWC,6BAAP,SAAoC/C,GAChC,OF3WD,SAAsCA,GAGzC,OAFAR,EAAiCyB,KAAKjB,GAE/B,CACHgD,OADG,WAECxD,EAAiCyD,OAAOzD,EAAiCwB,QAAQhB,GAAU,KEsWxF+C,CAA6B/C,IAnY5C,EAsYW+B,IAAP,SAA8De,EAAiDI,EAAcC,GAEzH,GAAIL,GAA4B,mBAAXA,IAA0BA,EAAOlc,KAClD,MAAM,IAAIia,MAAM,mCAGpB,IAAIJ,EAEJZ,IAEA,IAEIY,EAASqC,EAAOM,MAAMF,EAASC,GAAQ,IACzC,MAAO9D,GAEL,OADAS,IACOC,EAAaa,OAAOvB,GAK/B,OAFAS,IAEOC,EAAaH,QAAQa,IA1ZpC,EA6ZW4C,MAAP,SAAaA,GACT,OAAO,IAAItD,GAAa,SAAAH,GACpBmB,WAAWnB,EAASyD,OA/ZhC,EAmaWxE,UAAP,SAAiBnX,GAEb,SAAIA,GAASA,aAAiBqY,IAIvBlB,EAAUnX,IAzazB,EA4aW4b,MAAP,WACI,OD1ZA3D,EAAUL,EAAeA,GAAgB,IC0ZtBS,EDzZvBL,IACOC,EAHJ,IACCA,GCnBR,KCJA,mC,6BCAO,SAAS4D,IACZ,OAAOvE,OAAOwE,UAAUC,eAAiBzE,OAAOwE,UAAUE,UAkCvD,SAASC,EAAYC,GACxB,YADiE,IAAzCA,MAAeL,KAChCK,EAAG5C,QAAQ,eAAiB,EAiEhC,SAAS6C,IAIZ,GAAI7E,OAAO8E,SAASC,aAChB,IACI,IAAIC,EAAShF,OAAOgF,OAIpB,OAFAhF,OAAOgF,OAAS,mBAEM,qBAAlBhF,OAAOgF,SACPhF,OAAOgF,OAASA,GAET,GAKb,MAAO3E,GAEL,OAAO,EAIf,OAAO,EAQJ,SAAS4E,EAAeL,GAC3B,YADoE,IAAzCA,MAAeL,OA9EvC,SAAsBK,GACzB,YADkE,IAAzCA,MAAeL,OAZrC,SAAeK,GAClB,YAD2D,IAAzCA,MAAeL,KACzB,mBAAoBW,KAAKN,GAY7BO,CAAMP,OATP,SAA2BA,GAC9B,YADuE,IAAzCA,MAAeL,KACrC,UAAWW,KAAKN,GAShBQ,CAAkBR,IAGd,4BAA6BM,KAAKN,IA0ErCS,CAAaT,IArEnB,SAA0BA,GAC7B,YADsE,IAAzCA,MAAeL,OA1BzC,SAAmBK,GACtB,YAD+D,IAAzCA,MAAeL,KAC7B,UAAWW,KAAKN,GA0BpBU,CAAUV,IACF,kBAAmBM,KAAKN,KAAQD,EAAYC,GAmE3BW,CAAiBX,IAAOD,EAAYC,IA3G9D,SAAsBA,GACzB,YADkE,IAAzCA,MAAeL,KAChC,SAAUW,KAAKN,GA2GnBY,CAAaZ,IAxGd,SAAmBA,GACtB,YAD+D,IAAzCA,MAAeL,KAC7B,UAAWW,KAAKN,GAuGAa,CAAUb,IAhH/B,SAA2BA,GAC9B,YADuE,IAAzCA,MAAeL,MACb,IAAxBK,EAAG5C,QAAQ,UAA4C,IAAxB4C,EAAG5C,QAAQ,QA+GT0D,CAAkBd,IApFxD,SAAqBA,GACxB,YADiE,IAAzCA,MAAeL,KAC/B,YAAaW,KAAKN,GAmFwCe,CAAYf,IAxCvD,oBAAZgB,SAA2BA,QAAQC,UAAYD,QAAQC,SAASC,WAkCvEpB,EAAYH,IACR,sCAAuCW,KAAKR,MA9GZ,IAAhC1E,OAAOwE,UAAUuB,YAAuB/F,OAAOgG,WAAW,8BAA8BC,SA4G7F,IACCvB,E,yBCjID,SAASwB,EAAeC,EAAuBrG,GAClD,IAAK,IAAIrY,EAAI,EAAGA,EAAI0e,EAAWhE,OAAQ1a,IAEnC,IACI,GAAI0e,EAAW1e,KAAOqY,EAClB,OAAOrY,EAEb,MAAO4Y,IAKb,OAAQ,ECPL,IC0EH+F,ED1ESC,EAAb,WAOI,aAII,GAJU,KALdre,UAKc,OAJdse,aAIc,OAHd3C,UAGc,OAFd4C,YAEc,EAEV/E,KAAKxZ,KAAL,cAA0C,IAAhBwe,KAAKC,WAAmB,GAAlD,KEdD,WAEH,GAAuB,oBAAZC,QACP,OAAO,EAGX,QAA6B,IAAlBve,OAAOwe,OACd,OAAO,EAGX,IAEI,IAAIC,EAAc,IAAIF,QAClBG,EAAU,GAOd,OAJA1e,OAAOwe,OAAOE,GAEdD,EAAYE,IAAID,EAJA,mCAMZD,EAAYte,IAAIue,GAMtB,MAAOxG,GAEL,OAAO,GFZH0G,GACA,IACIvF,KAAK8E,QAAU,IAAII,QACrB,MAAOrG,IAKbmB,KAAKmC,KAAQ,GACbnC,KAAK+E,OAAS,GApBtB,2BAuBIS,sBAAA,WAKI,IAHA,IAAIV,EAAU9E,KAAK8E,QACf3C,EAAOnC,KAAKmC,KAEPlc,EAAI,EAAGA,EAAIkc,EAAKxB,OAAQ1a,IAAK,CAClC,IAAIiB,EAAQib,EAAKlc,GAEjB,GAAIwf,YAASve,IAAUwe,YAAexe,GAAQ,CAE1C,GAAI4d,EACA,IACIA,EAAQa,OAAOze,GACjB,MAAO2X,IAKbsD,EAAKM,OAAOxc,EAAG,GACf+Z,KAAK+E,OAAOtC,OAAOxc,EAAG,GAEtBA,GAAK,KA5CrB,EAiDI2f,kBAAA,SAAkBpe,GAEd,OAAIie,YAASje,IAnDrB,EAiEI8d,IAAA,SAAI9d,EAASN,GAET,IAAKM,EACD,MAAM,IAAI6Y,MAAJ,wBAGV,IAAIyE,EAAU9E,KAAK8E,QAEnB,GAAIA,EACA,IACIA,EAAQQ,IAAI9d,EAAKN,GACnB,MAAO2X,UACEmB,KAAK8E,QAIpB,GAAI9E,KAAK4F,kBAAkBpe,GACvB,IACI,IAAIhB,EAAOwZ,KAAKxZ,KACZqf,EAAQre,EAAIhB,GAWhB,YATIqf,GAASA,EAAM,KAAOre,EACtBqe,EAAM,GAAK3e,EAEXP,OAAOC,eAAeY,EAAKhB,EAAM,CAC7BU,MAAU,CAAEM,EAAKN,GACjB4e,UAAU,KAMpB,MAAOjH,IAKbmB,KAAKwF,wBAEL,IAAIrD,EAAOnC,KAAKmC,KACZ4C,EAAS/E,KAAK+E,OACdgB,EAAQrB,EAAYvC,EAAM3a,IAEf,IAAXue,GACA5D,EAAK1B,KAAKjZ,GACVud,EAAOtE,KAAKvZ,IAEZ6d,EAAOgB,GAAS7e,GAhH5B,EAoHIJ,IAAA,SAAIU,GAEA,IAAKA,EACD,MAAM,IAAI6Y,MAAJ,wBAGV,IAAIyE,EAAU9E,KAAK8E,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQkB,IAAIxe,GACZ,OAAOsd,EAAQhe,IAAIU,GAGzB,MAAOqX,UACEmB,KAAK8E,QAIpB,GAAI9E,KAAK4F,kBAAkBpe,GACvB,IACI,IAAIqe,EAAQre,EAAIwY,KAAKxZ,MAErB,OAAIqf,GAASA,EAAM,KAAOre,EACfqe,EAAM,QAGjB,EACF,MAAOhH,IAKbmB,KAAKwF,wBAEL,IACIO,EAAQrB,EADD1E,KAAKmC,KACc3a,GAE9B,IAAe,IAAXue,EAIJ,OAAO/F,KAAK+E,OAAOgB,IA9J3B,EAiKIJ,OAAA,SAAOne,GAEH,IAAKA,EACD,MAAM,IAAI6Y,MAAJ,wBAGV,IAAIyE,EAAU9E,KAAK8E,QAEnB,GAAIA,EACA,IACIA,EAAQa,OAAOne,GACjB,MAAOqX,UACEmB,KAAK8E,QAIpB,GAAI9E,KAAK4F,kBAAkBpe,GACvB,IACI,IAAIqe,EAAQre,EAAIwY,KAAKxZ,MAEjBqf,GAASA,EAAM,KAAOre,IACtBqe,EAAM,GAAKA,EAAM,QAAKzE,GAE5B,MAAOvC,IAKbmB,KAAKwF,wBAEL,IAAIrD,EAAOnC,KAAKmC,KACZ4D,EAAQrB,EAAYvC,EAAM3a,IAEf,IAAXue,IACA5D,EAAKM,OAAOsD,EAAO,GACnB/F,KAAK+E,OAAOtC,OAAOsD,EAAO,KApMtC,EAwMIC,IAAA,SAAIxe,GAEA,IAAKA,EACD,MAAM,IAAI6Y,MAAJ,wBAGV,IAAIyE,EAAU9E,KAAK8E,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQkB,IAAIxe,GACZ,OAAO,EAEb,MAAOqX,UACEmB,KAAK8E,QAIpB,GAAI9E,KAAK4F,kBAAkBpe,GACvB,IACI,IAAIqe,EAAQre,EAAIwY,KAAKxZ,MAErB,SAAIqf,GAASA,EAAM,KAAOre,GAK5B,MAAOqX,IAQb,OAHAmB,KAAKwF,yBAGa,IADNd,EAAY1E,KAAKmC,KAAM3a,IA1O3C,EA8OIye,SAAA,SAASze,EAASf,GACd,GAAIuZ,KAAKgG,IAAIxe,GAET,OAAOwY,KAAKlZ,IAAIU,GAGpB,IAAIN,EAAQT,IAEZ,OADAuZ,KAAKsF,IAAI9d,EAAKN,GACPA,GAtPf,KCCO,SAASgf,EAA+BC,GAC3C,OAAOA,EAAG3f,MAAQ2f,EAAGC,UAAYD,EAAGE,aAAe,YAGhD,SAASC,EAA+BH,EAAQ3f,GACnD,WACW2f,EAAG3f,KACV2f,EAAG3f,KAAOA,EACZ,MAAOqY,IAKT,OADAsH,EAAGC,SAAWD,EAAGE,YAAc7f,EACxB2f,EAGJ,SAASI,EAAaC,GACzB,GAAoB,mBAATC,KACP,OAAOA,KAAKC,mBAAmBF,GAAKG,QAAQ,mBAAmB,SAACtgB,EAAGugB,GAC/D,OAAOC,OAAOC,aAAaC,SAASH,EAAI,SAIhD,GAAsB,oBAAXI,OACP,OAAOA,OAAOC,KAAKT,EAAK,QAAQ7H,SAAS,UAG7C,MAAM,IAAI0B,MAAJ,sCAkBH,SAAS6G,IAEZ,IAAIC,EAAQ,mBAUZ,MARe,aAAaR,QAAQ,MAAM,WACtC,OAAOQ,EAAMC,OAAOpC,KAAKqC,MAAMrC,KAAKC,SAAWkC,EAAMxG,YAOzD,IAJa4F,GACT,IAAIe,MAAOC,cAAcC,MAAM,GAAI,IAAIb,QAAQ,IAAK,MACtDA,QAAQ,gBAAiB,IAAIc,cAsCnC,SAASC,EAAiB/E,GACtB,IACI,OAAOgF,KAAKC,UAAUC,GAAgBL,MAAMphB,KAAKuc,IAAO,SAACmF,EAAQC,GAC7D,MAAmB,mBAARA,EACP,WAtBT,SAAqBC,GAIxB,GAFApD,EAAYA,GAAa,IAAIM,EAEzB8C,SAAqD,iBAARA,GAAmC,mBAARA,EACxE,MAAM,IAAI3H,MAAJ,kBAGV,IAAI4H,EAAMrD,EAAU9d,IAAIkhB,GAOxB,OALKC,IACDA,SAAiBD,EAAd,IAAuBd,IAC1BtC,EAAUU,IAAI0C,EAAKC,IAGhBA,EAOwBC,CAAYH,GAA/B,IAEGA,KAEb,MAAOlJ,GACL,MAAM,IAAIwB,MAAJ,6DAGP,SAAS8H,EAAyH7F,EAAY8F,GAAiE,oBAAjEA,MAAyD,IAC1M,IAAIC,EAAW,IAAInD,EAGfoD,EAAuB,WAAkD,2BAArB3F,EAAqB,yBAArBA,EAAqB,gBACzE,IAAI4F,EAAQF,EAASpC,SAASmC,EAAQI,cAAgBxI,KAAOsC,GAAQ,iBAAO,MAExE9a,EAAekgB,EAAc/E,GAE7B8F,EAAYL,EAAQ3G,KAKxB,GAJI8G,EAAM/gB,IAAQihB,GAAcnB,KAAKoB,MAAQH,EAAM/gB,GAAKia,KAAQgH,UACrDF,EAAM/gB,GAGb+gB,EAAM/gB,GACN,OAAO+gB,EAAM/gB,GAAKN,MAGtB,IAAIua,EAAQ6F,KAAKoB,MACbxhB,EAAQob,EAAOM,MAAM5C,KAAM2I,WAI/B,OAFAJ,EAAM/gB,GAAO,CAAEia,OAAMva,SAEdqhB,EAAM/gB,GAAKN,OAOtB,OAJAohB,EAAiBM,MAAQ,WACrBP,EAAS1C,OAAOyC,EAAQI,cAAgB,EAAOlG,IAG5CgE,EAAgBgC,EAAsBpC,EAAgB5D,GAAvC,cA4CnB,SAASuG,EAAiBvG,EAAsCwG,EAAqCnG,QAA4B,IAA5BA,MAAoB,IAE5H,IAAI4F,EAAQjG,EAAOyG,yBAA2BzG,EAAOyG,0BAA4B,GAC7EvhB,EAAMkgB,EAAc/E,GAExB,OAAI4F,EAAM1gB,eAAeL,GACd+gB,EAAM/gB,GAGJ+gB,EAAM/gB,GAAOshB,EAAK,WAAL,EAASnG,GAMhC,SAASqG,KA8ET,SAASC,EAAepK,EAAaqK,GAExC,QAFqE,IAA7BA,MAAiB,GAErDA,GAAS,EACT,MAAO,gCAGX,IACI,IAAKrK,EACD,yBAA2BlY,GAAiBgY,SAASvY,KAAKyY,GAA1D,IAGJ,GAAmB,iBAARA,EACP,OAAOA,EAGX,GAAIA,aAAewB,MAAO,CACtB,IAAIN,EAAQlB,GAAOA,EAAIkB,MACnBoJ,EAAUtK,GAAOA,EAAIsK,QAEzB,GAAIpJ,GAASoJ,EACT,OAAgC,IAA5BpJ,EAAMS,QAAQ2I,GACPpJ,EAEIoJ,EAAX,KAAyBpJ,EAE1B,GAAIA,EACP,OAAOA,EACJ,GAAIoJ,EACP,OAAOA,EAIf,OAAItK,GAAOA,EAAIF,UAAoC,mBAAjBE,EAAIF,SAE3BE,EAAIF,WAGRhY,GAAiBgY,SAASvY,KAAKyY,GAExC,MAAOuK,GACL,yCAA2CH,EAAeG,EAAQF,EAAQ,IAI3E,SAASG,EAAsBxK,GAElC,IAAIyK,EAAiB,mBAAoB3iB,GAAiBgY,SAASvY,KAAKyY,GAAtD,IAElB,OAAKA,EAIDA,aAAewB,MACRxB,EAAIsK,SAAWG,EAGC,iBAAhBzK,EAAIsK,SACJtK,EAAIsK,SAGRG,EAXIA,EAsGR,SAASC,EAAgBvB,EAAwBwB,QAA8D,IAA9DA,MAAkCC,SACtF,IAAIxJ,EAAS,GAEb,IAAK,IAAIzY,KAAOwgB,EACPA,EAAIngB,eAAeL,IAASgiB,EAAOxB,EAAIxgB,GAAMA,KAIlDyY,EAAOzY,GAAOwgB,EAAIxgB,IAGtB,OAAOyY,EAgBJ,SAASyJ,EAAmBpH,EAAoCO,GAEnE,IAAI1D,EACAqC,EAsBJ,YAzBgH,IAA7CqB,MAAiB,IAyB7EyD,GApBkB,WACjB9E,GACAE,aAAaF,GAGjB,IAAImI,EAAexK,EAAUA,GAAW,IAAII,IAY5C,OAVAiC,EAAUjB,YAAW,WACjBpB,EAAU,KACVqC,EAAU,KAEVjC,IAAagC,IAAIe,GAAQ1D,MACrB,SAAAqB,GAAY0J,EAAavK,QAAQa,MACjC,SAAApB,GAAS8K,EAAavJ,OAAOvB,QAElCgE,GAEI8G,IAGkCzD,EAAgB5D,GAAvC,sBAGnB,SAASsH,EAAatH,EAAmBb,GAE5C,IAAID,EAWJ,OATA,SAASqI,IACLrI,EAAUjB,YAAW,WACjB+B,IACAuH,MACDpI,GAGPoI,GAEO,CACHrH,OADG,WAECd,aAAaF,KAiPlB,SAASsI,EAAaxL,GACzB,MAAOuJ,GAAgBL,MAAMphB,KAAKkY,GAiL/B,SAASyL,EAAYzH,EAAwCb,GAEhE,IAAID,EAUJ,YAZwH,IAAxDC,MAAgB,KAYzE6E,GARiB,WAAW,uBAC/B5E,aAAaF,GAEbA,EAAUjB,YAAW,WACjB,OAAO+B,EAAOM,MAAM,EAAM+F,KAC3BlH,KAGqCyE,EAAgB5D,GAAtC,eEl6BnB,IAAM0H,EAAY,CACrBC,MAAO,ICaJ,SAASC,IACZ,OAAOT,QAAQnG,SAAS6G,OAAiC,aAAxB7G,SAAS8G,WAGvC,SAASC,EAAU7D,GACtB,OAAOA,EAAIG,QAAQ,MAAO,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAevF,SAAS2D,IACZ,OAAOzB,EAAcyB,GAAsB,WACvC,OAAO,IAAI/K,KAAa,SAAAH,GAEpB,GAAI8K,IACA,OAAO9K,IAGX,IAAImL,EAAWC,aAAY,WACvB,GAAIN,IAEA,OADAO,cAAcF,GACPnL,MAEZ,UAeR,SAASsL,EAAWC,GACvB,OAAO9B,EAAc6B,GAAY,WAC7B,IAAIE,EAAS,GAEb,IAAKD,EACD,OAAOC,EAGX,IAAkC,IAA9BD,EAAYnK,QAAQ,KACpB,OAAOoK,EARiC,cAW3BD,EAAYE,MAAM,KAXS,eAWH,CAApC,IAAIC,EAAI,MACTA,EAAOA,EAAKD,MAAM,MAET,IAAMC,EAAK,KAChBF,EAAOG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,KAItE,OAAOF,IACR,CAAED,IAkCF,SAASK,EAAYC,EAAwBC,GAEhD,YAF+F,IAA/CA,MAAkC,IAE7EA,GAAUvkB,OAAOwb,KAAK+I,GAAOvK,aAXmC,KAA7CqH,EAeL,eACZ0C,EAAWO,GADA,GAEXC,MAjBiBlD,EAAgC,IAEjDrhB,OAAOwb,KAAK6F,GAAKwB,QAAO,SAAAhiB,GAC3B,MAA2B,iBAAbwgB,EAAIxgB,MACnB4a,KAAI,SAAA5a,GACH,OAAW6iB,EAAU7iB,GAArB,IAA+B6iB,EAAUrC,EAAIxgB,OAC9C2jB,KAAK,MAMGF,EAZR,IAAqBjD,EAqBrB,SAASoD,EAAUC,EAAcjD,QAA2F,IAA3FA,MAA8E,IAElH,IAGIkD,EAEAC,EALAC,EAAQpD,EAAQoD,OAAS,GACzBtJ,EAAOkG,EAAQlG,MAAQ,GAHoG,EAS/FmJ,EAAIR,MAAM,KAA3BU,EATgH,YAS7HD,EAT6H,MAUlFT,MAAM,KAAjDS,EAV6H,KAY/H,IAAIX,EAAcK,EAZ6G,KAYlFQ,GACzCC,EAAaT,EAAYO,EAAcrJ,GAU3C,OARIyI,IACAW,EAAkBA,EAAP,IAAwBX,GAGnCc,IACAH,EAAkBA,EAAP,IAAwBG,GAGhCH,EAGJ,SAASI,EAASL,EAAcM,GACnC,YAD8F,IAA3DA,MAA8BnN,QAC1D,IAAIe,KAAa,SAAAH,GACpBuM,EAAIC,SAAWP,EAlEhB,SAA6BA,GAEhC,OAA0B,IAAtBA,EAAI7K,QAAQ,MAIS,IAArB6K,EAAI7K,QAAQ,MAIZ6K,EAAIR,MAAM,KAAK,KAAOrM,OAAOoN,SAASC,KAAKhB,MAAM,KAAK,GAyDjDiB,CAAoBT,IACrBjM,OAmBL,SAAS2M,IACZ,OAAOlD,EAAckD,GAAmB,WAEpC,OAAOtC,QACHjL,OAAOwN,aACPA,YAAYtD,KACZsD,YAAYC,QACZD,YAAYC,OAAOC,YACnBF,YAAYC,OAAOE,iBAClBnH,KAAKoH,IAAIJ,YAAYtD,MAAQpB,KAAKoB,OAAS,KAC3CsD,YAAYtD,OAASsD,YAAYC,OAAOC,WAAaF,YAAYC,OAAOE,iBAAoB,MAMlG,SAASE,IACZ,OAAO/B,IAAuB1L,MAAK,WAE/B,GAAKmN,IAAL,CAIA,IAAIE,EAASzN,OAAOwN,YAAYC,OAEhC,OAAIA,EAAOC,YAAcD,EAAOK,eACrBL,EAAOK,eAAiBL,EAAOC,gBAD1C,MAgBD,SAASK,IACZ,MAA0B,oBAAX/N,OAGZ,SAASgO,EAAiBC,EAAmBC,GAChD,YAD0G,IAA1DA,MAAoBlO,OAAO8E,UACpEuE,GAAgBL,MAAMphB,KAAKsmB,EAAIF,iBAAiBC,IAGpD,SAASE,EAAQC,EAAuBpN,GAC3CoN,EAAQC,iBAAiB,aAAc7D,GACvC4D,EAAQC,iBAAiB,QAASrN,GAClCoN,EAAQC,iBAAiB,YAAY,SAACC,GAElC,GAAIA,EAAMC,UAAY/C,EAAUC,MAC5B,OAAOzK,EAAQsN,MAuJpB,SAASE,EAAe7D,GAC3BnJ,KAAKmJ,QAAUA,EAkBZ,SAAS8D,EAAM5B,EAAcjD,GAAiD,IAK3E8E,GAFN9E,EAAUA,GAAW,IAEf8E,MAAOC,EAAW/E,EAAX+E,OAETC,EAAM,EACNC,EAAO,EAEPH,IACI1O,OAAO8O,WACPD,EAAOrI,KAAKuI,OAAO/O,OAAO8O,WAAaJ,GAAS,GAAK1O,OAAOgP,QACrDhP,OAAOiP,OAAOP,QACrBG,EAAOrI,KAAKuI,OAAO/O,OAAOiP,OAAOP,MAAQA,GAAS,KAItDC,IACI3O,OAAOkP,YACPN,EAAMpI,KAAKuI,OAAO/O,OAAOkP,YAAcP,GAAU,GAAK3O,OAAOmP,QACtDnP,OAAOiP,OAAON,SACrBC,EAAMpI,KAAKuI,OAAO/O,OAAOiP,OAAON,OAASA,GAAU,KAIvDD,GAASC,IACT/E,EAAU,aACNgF,MACAC,OACAH,QACAC,SACA3J,OAAY,EACZoK,QAAY,EACZC,QAAY,EACZC,UAAY,EACZC,WAAY,GACT3F,IAIX,IAAI5hB,EAAO4hB,EAAQ5hB,MAAQ,UACpB4hB,EAAQ5hB,KAGf,IAOImlB,EASI9M,EAhBJ+L,EAASjkB,OAAOwb,KAAKiG,GAAShG,KAAI,SAAA5a,GAElC,GAAI4gB,QAAQ5gB,GACR,OAAWA,EAAX,KH7GY,iBADE8W,EG8GgB8J,EAAQ5gB,IH5GnC8W,EAGPA,GAAQA,EAAKK,UAAqC,mBAAlBL,EAAKK,SAE9BL,EAAKK,WAGThY,GAAiBgY,SAASvY,KAAKkY,IAVnC,IAAmBA,KGgHnBkL,OAAOC,SAAS0B,KAAK,KAIxB,IACIQ,EAAMnN,OAAOwP,KAAK3C,EAAK7kB,EAAMokB,GAAQ,GACvC,MAAO/L,GACL,MAAM,IAAImO,EAAJ,gCAAmDnO,EAAIkB,OAASlB,EAAIsK,UAG9E,GAAIzD,YAAeiG,GAEf,MADU,IAAIqB,EAAJ,uCAMd,OAFAxO,OAAOqO,iBAAiB,UAAU,kBAAMlB,EAAIsC,WAErCtC,EAkBJ,SAASuC,EAAqBvC,EAA4BwC,GAE7D,IAAIC,EAAMD,EAAGE,QAAQ5G,cAErB,GAAY,SAAR2G,EACA,MAAM,IAAI/N,MAAJ,oCAA+C+N,GALsB,IAQ/E,IAAIE,EAAkB3C,EAAIrI,SAASgL,gBAR4C,MAU3DxE,EAAUwE,EAAgBC,UAViC,eAW3ED,EAAgBE,YADJ,MAV+D,cAc3D1E,EAAUqE,EAAGI,UAd8C,eAe3ED,EAAgBG,YADJ,MAlHpBzB,EAAe0B,UAAY/nB,OAAOY,OAAO8Y,MAAMqO,WChX/C,IAAM5T,EAAU,CACZE,aAAc,eACd2T,OAAc,UAGdC,EAAiB,GAWd,SAASC,EAAT,GAAuJ,IAApIxD,EAAoI,EAApIA,IAAoI,IAA/H/I,cAA+H,MAAtH,MAAsH,MAA/GwM,eAA+G,MAArG,GAAqG,EAAjGC,EAAiG,EAAjGA,KAAMC,EAA2F,EAA3FA,KAAM7E,EAAqF,EAArFA,KAAqF,IAA/EwB,WAA+E,MAAzEnN,OAAyE,MAAjEgD,eAAiE,MAAvD,EAAuD,EAC1J,OAAO,IAAIjC,KAAa,SAACH,EAASgB,GAE9B,GAAK2O,GAAQC,GAAUD,GAAQ5E,GAAU6E,GAAQD,EAC7C,MAAM,IAAI1O,MAAJ,sEAH+B,IAMzC,IAAI4O,EAAoB,GANiB,MAQzBtoB,OAAOwb,KAAK2M,GARa,eAQH,CAAjC,IAAItnB,EAAG,KACRynB,EAAkBznB,EAAIigB,eAAiBqH,EAAQtnB,GAG/CunB,EACAE,EAAkBnU,EAAQE,cAAgBiU,EAAkBnU,EAAQE,eAAiB,oBAC9EgU,GAAQ7E,KACf8E,EAAkBnU,EAAQE,cAAgBiU,EAAkBnU,EAAQE,eAAiB,oDAGzFiU,EAAkBnU,EAAQ6T,QAAUM,EAAkBnU,EAAQ6T,SAAW,mBAlBhC,cAoBfC,EApBe,WAoBC,IAArC,IACGM,GAAeC,EADGP,EAAJ,MAAoB,MAGtBjoB,OAAOwb,KAAK+M,GAHU,eAGK,CAAtC,IAAI1nB,EAAG,KACRynB,EAAkBznB,EAAIigB,eAAiByH,EAAa1nB,GAI5D,IAAI4nB,EAAM,IAAIzD,EAAI0D,eAsClB,IAAK,IAAI7nB,KApCT4nB,EAAIvC,iBAAiB,QAAQ,WAEzB,IAAIyC,EA1ChB,SAAsBC,QAAkD,IAAlDA,MAAsB,IAA4B,IACpE,IAAItP,EAAS,GADuD,MAEnDsP,EAAWC,OAAO3E,MAAM,MAF2B,eAEpB,CAA3C,IAA2C,EAAnC,KACqBA,MAAM,KAA9BrjB,EADsC,KAC9Bud,EAD8B,WAE5C9E,EAAOzY,EAAIigB,eAAiB1C,EAAOoG,KAAK,KAAKqE,OAEjD,OAAOvP,EAoCuBwP,CAAazP,KAAK0P,yBAExC,IAAK1P,KAAKwD,OACN,OAAOpD,EAAO,IAAIC,MAAJ,cAAyBiC,EAAOmF,cAAhC,IAAmD4D,EAAnD,sCAGlB,IAAIsE,EAAcL,EAAgB,gBAC9BM,EAASD,IAA4D,IAA5CA,EAAYnP,QAAQ,qBAAkE,IAArCmP,EAAYnP,QAAQ,cAC9FqP,EAAe7P,KAAK8P,aAExB,IACID,EAAelI,KAAKoI,MAAMF,GAC5B,MAAOhR,GACL,GAAI+Q,EACA,OAAOxP,EAAO,IAAIC,MAAJ,iBAA4BL,KAAK8P,aAAjC,MAUtB,OAAO1Q,EANG,CACNoE,OAASxD,KAAKwD,OACdsL,QAASQ,EACTnF,KAAS0F,OAKd,GAEHT,EAAIvC,iBAAiB,SAAS,SAACmD,GAC3B5P,EAAO,IAAIC,MAAJ,cAAyBiC,EAAOmF,cAAhC,IAAmD4D,EAAnD,YAAoE2E,EAAIrR,WAAxE,SACR,GAEHyQ,EAAIpB,KAAK1L,EAAQ+I,GAAK,GAEN4D,EACRA,EAAkBpnB,eAAeL,IACjC4nB,EAAIa,iBAAiBzoB,EAAKynB,EAAkBznB,IAIhDunB,EACA5E,EAAOxC,KAAKC,UAAUmH,GACfC,IACP7E,EAAOxjB,OAAOwb,KAAK6M,GAAM5M,KAAI,SAAA5a,GACzB,OAAWkf,mBAAmBlf,GAA9B,KAAwCwnB,EAAOtI,mBAAmBsI,EAAKxnB,IAAQ,OAChF2jB,KAAK,MAGZiE,EAAI5N,QAAUA,EACd4N,EAAIc,UAAY,WACZ9P,EAAO,IAAIC,MAAJ,cAAyBiC,EAAOmF,cAAhC,IAAmD4D,EAAnD,oBAGX+D,EAAIe,KAAKhG,MC1HjB,+wB,6BCAA,wZAAO,IAAMiG,EAAa,gCACbC,EAAe,mBACfC,EAAiB,sBACjBC,EAAmB,uBACnBC,EAA+B,4BAC/BC,EAA8B,0BAG9BC,EAAgB,CACzBC,KAAoBC,kBACpBC,SAAoBD,sBACpB1X,MAAoB0X,mBACpBE,QAAoBF,qBACpBG,aAAoBH,qCAGXI,EAAc,WAEdC,EAAiB,CAC1BJ,SAAiB,eACjBK,gBAAiB,0BAKRC,EAA2B,CACpC,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,oFAGSC,EAAmB,CAC5BC,IAAU,gEACVV,KAAU,iEACVW,SAAU,sEAGDC,GAAqB,G,8DChDrBC,EAAY,CACrBzc,MAAQ,QACR0c,KAAQ,OACRC,KAAQ,OACRC,MAAQ,SAGCC,EAAW,CACpBC,KAAM,SCNGC,EAAmB,CAAEN,EAAUE,KAAMF,EAAUG,OAE/CI,EAAqB,CAAEP,EAAUG,MAAOH,EAAUE,KAAMF,EAAUC,KAAMD,EAAUzc,OAElFid,EAAiB,IAEjBC,EAAoBT,EAAUE,KCmC3C,SAASQ,EAAT,GAAgK,IAAvI7G,EAAuI,EAAvIA,IAAK/I,EAAkI,EAAlIA,OAAQwM,EAA0H,EAA1HA,QAASC,EAAiH,EAAjHA,KAC3C,OAAOF,YAAQ,CAAExD,MAAK/I,SAAQwM,UAASC,SAAQnQ,KAAKoK,KAGxD,SAASmJ,EAAgBC,EAAgCC,GACrD,IAAK,IAAI7qB,KAAO6qB,EACRA,EAAOxqB,eAAeL,IAAQ6qB,EAAO7qB,KAAS4qB,EAAO5qB,KACrD4qB,EAAO5qB,GAAO6qB,EAAO7qB,I,yBCzC1B,SAAS8qB,IACZ,OAAOzJ,YAAcyJ,GAAW,kBD6C7B,YAAuJ,IAArIjH,EAAqI,EAArIA,IAAKkH,EAAgI,EAAhIA,OAAgI,IAAxHC,gBAAwH,MAA7GP,EAA6G,MAA1FQ,iBAA0F,MAA9EP,EAA8E,MAA/DQ,qBAA+D,MAA/CV,EAA+C,EAEtJW,EAA2F,GAC3FC,EAA4B,GAE5BC,EAAmC,GACnCC,EAAgC,GAChCC,EAAoC,GACpCnE,EAAkC,GAEtC,SAASoE,EAAM9J,EAAmC4D,EAAgBmG,GAE9D,GAAK1G,eAAgB/N,OAAO0U,SAAY1U,OAAO0U,QAAQC,IAAvD,CAIA,IAAIC,EAAkBZ,EAMtB,GAJIhU,OAAOgT,YAA+D,IAAlDO,EAAmBvR,QAAQhC,OAAOgT,aACtD4B,EAAkB5U,OAAOgT,aAGzBO,EAAmBvR,QAAQ0I,GAAS6I,EAAmBvR,QAAQ4S,IAAnE,CAIA,IAAIzQ,EAAO,CAAEmK,GAEbnK,EAAKlC,KAAKwS,IAENA,EAAQrT,OAASqT,EAAQI,UACzB1Q,EAAKlC,KAAK,OAAQwS,EAAQrT,OAASqT,EAAQI,SAG/C,IACQ7U,OAAO0U,QAAQhK,IAAU1K,OAAO0U,QAAQhK,GAAOtG,MAC/CpE,OAAO0U,QAAQhK,GAAOtG,MAAMpE,OAAO0U,QAASvQ,GACrCnE,OAAO0U,QAAQC,KAAO3U,OAAO0U,QAAQC,IAAIvQ,OAChDpE,OAAO0U,QAAQC,IAAIvQ,MAAMpE,OAAO0U,QAASvQ,GAE/C,MAAO9D,OAKb,SAASyU,IACL,OAAO/T,IAAagC,KAAI,WACpB,GAAKgL,eAAe/N,OAAOoN,SAAS2H,WAAa3B,EAASC,OAIrDc,EAAOhS,QAAWiS,EAASjS,QAAhC,CAL0B,IAS1B,IAAI6S,EAAO,GATe,MAUNV,EAVM,WAWtBX,EAAgBqB,GAAMC,EADNX,EAAJ,IACkBU,IAXR,IAc1B,IAAI1E,EAAU,GAdY,MAeNF,EAfM,WAgBtBuD,EAAgBrD,GAAS2E,EADT7E,EAAJ,IACqBE,IAGrC,IAAI4E,EAAMjB,EAAU,CAChBnQ,OAAQ,OACR+I,MACAyD,UACAC,KAAQ,CACJ4D,SACAa,OACAZ,cAOR,OAHAD,EAAS,GACTC,EAAW,GAEJc,EAAI9U,KAAKoK,SAIxB,IAAIlG,EAAQ4G,YAAgB4J,GAe5B,SAASH,EAAIjK,EAAmC4D,EAAgBmG,GAE5D,QAFuF,IAA3BA,MAAU,KAEjE1G,cACD,OAAOoH,EAGPpB,IACAzF,EAAYyF,EAAP,IAAmBzF,GAP2D,IAUvF,IAAI8G,EAAuB,eACpBrK,YAAU0J,GADO,CAEpBY,UAAWvM,KAAKoB,MAAM/J,aAZ6D,MAenEkU,EAfmE,WAgBnFV,EAAgByB,GAAYH,EADZZ,EAAJ,IACwBe,IAMxC,OAnCJ,SAAiB1K,EAAmC4D,EAAgBmG,GAEhEN,EAAOlS,KAAK,CACRyI,QACA4D,QACAmG,aAGqC,IAArCnB,EAAiBtR,QAAQ0I,IACzBpG,IAuBJgR,CAAQ5K,EAAO4D,EAAO8G,GACtBZ,EAAM9J,EAAO4D,EAAO8G,GAEbD,EAGX,SAASI,EAAWC,EAAUP,GAE1B,OADAO,EAASvT,KAAKgT,GACPE,EAyDPpH,eACA3C,YAAa9G,EAAO4P,GAGxB,IAAMiB,EAAS,CACXM,MA3CJ,SAAenH,EAAOmG,GAClB,OAAOE,EAAI3B,EAAUzc,MAAO+X,EAAOmG,IA2CnCiB,KAxCJ,SAAcpH,EAAOmG,GACjB,OAAOE,EAAI3B,EAAUC,KAAM3E,EAAOmG,IAwClCkB,KArCJ,SAAcrH,EAAOmG,GACjB,OAAOE,EAAI3B,EAAUE,KAAM5E,EAAOmG,IAqClCrT,MAlCJ,SAAekN,EAAOmG,GAClB,OAAOE,EAAI3B,EAAUG,MAAO7E,EAAOmG,IAkCnCmB,MA/BJ,SAAenB,GACX,QADsC,IAA3BA,MAAU,KAChB1G,cACD,OAAOoH,EAF2B,IAKtC,IAAIU,EAA4B9K,YAAU0J,GALJ,MAOlBF,EAPkB,WAQlCZ,EAAgBkC,GAAiBZ,EADjBV,EAAJ,IAC6BsB,IAM7C,OAHArB,EAAMxB,EAAUzc,MAAO,QAASsf,GAChCzB,EAASnS,KAAK4T,GAEPV,GAkBP7Q,QACAwQ,iBACAgB,kBAlEJ,SAA2Bb,GACvB,OAAOM,EAAWlB,EAAiBY,IAkEnCc,eA/DJ,SAAwBd,GACpB,OAAOM,EAAWjB,EAAcW,IA+DhCe,mBA5DJ,SAA4Bf,GACxB,OAAOM,EAAWhB,EAAkBU,IA4DpCgB,iBAzDJ,SAA0BhB,GACtB,OAAOM,EAAWnF,EAAgB6E,IAyDlCiB,aArBJ,SAAsBC,GAElB,OADAlC,EAAYkC,EACLhB,IAsBX,OAAOA,ECrPHiB,CAAO,CACHvJ,IAAK+E,SAkBV,SAASyE,EAAT,GAA8K,IAAvJC,EAAuJ,EAAvJA,IAAKC,EAAkJ,EAAlJA,UAAWC,EAAuI,EAAvIA,gBAAiBC,EAAsH,EAAtHA,SAAUC,EAA4G,EAA5GA,qBAAsBC,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,cAAeC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,eAAgBC,EAA2B,EAA3BA,QAChJ7B,EAASrB,IAEfqB,EAAOW,mBAAkB,WACrB,MAAO,CACHmB,QAASjX,OAAOoN,SAAS8J,KACzBzN,IAAS8M,EACTD,UAIRnB,EAAOa,oBAAmB,WAAM,MACpBmB,EAAkBN,EAAlBM,KAAMC,EAAYP,EAAZO,QAEd,aACKxf,IAASS,cAAyBiG,IAAkBC,kBADzD,EAEK3G,IAASQ,YAAyBoe,EAFvC,EAGK5e,IAASE,OAAyB4G,IAAWC,OAHlD,EAIK/G,IAASC,MAAyByC,IAAUD,aAJjD,EAKKzC,IAASc,aAAyB0B,IAAiBC,aALxD,EAMKzC,IAASnB,WAAyBggB,EANvC,EAOK7e,IAASa,WAAyBqe,EAAW,GAPlD,EAQKlf,IAASK,aAAyBse,EARvC,EASK3e,IAASU,SAAyB0H,OAAOoN,SAAS8J,KATvD,EAUKtf,IAASW,iBAAyBwe,EAVvC,EAWKnf,IAAShB,QAA6BugB,EAX3C,IAWqDC,EAXrD,EAYKxf,IAAS2B,wBAAyBkd,EAZvC,EAaK7e,IAAS4B,wBAAyBkd,EAbvC,EAcK9e,IAAS6B,UAAyBc,IAAcF,aAdrD,EAeKzC,IAAS8B,aAAyBsd,EAfvC,EAgBKpf,IAAS+B,YAAyBqG,OAAOwE,WAAaxE,OAAOwE,UAAUE,UAhB5E,EAiBK9M,IAASgC,aAAyB+c,EAASzc,IAAiBnD,OAASmD,IAAiBC,SAjB3F,EAkBKvC,IAASiC,gBAAyB+c,EAlBvC,KAsBJ7V,IAAagD,8BAA6B,SAAA1D,GAAO,MAE7C8U,EAAOS,QAAP,MACKhe,IAASgB,YAAa,qBAD3B,EAEKhB,IAASiB,YAAagS,YAAsBxK,GAFjD,IAKA8U,EAAO/T,MAAM,kBAAmB,CAC5Bf,IAAKoK,YAAepK,KAIxB8U,EAAO7Q,QAAQ3B,MAAM6H,QC9E7B,qN,0KCcO,SAAS6M,EAAT,GAA6G,MAAhFC,EAAgF,EAAhFA,YAAaxT,EAAmE,EAAnEA,OAAQ+I,EAA2D,EAA3DA,IAAK2D,EAAsD,EAAtDA,KAAMF,EAAgD,EAAhDA,QAEhE,IAAKgH,EACD,MAAM,IAAIzV,MAAJ,6BAAwCgL,GAGlD,IAAM0K,EAAiB,oBACjBjb,IAAQC,eADM,UACsB+a,EADtB,EAEdhb,IAAQE,cAFM,sBAGb8T,GAGP,OAAOD,YAAQ,CACXvM,SACA+I,MACAyD,QAASiH,EACThH,KAASC,IACVpQ,MAAK,YAAoD,IAAjD4E,EAAiD,EAAjDA,OAAQ2G,EAAyC,EAAzCA,KACf,GAAI3G,GAAU,IACV,MAAM,IAAInD,MAAUgL,EAAd,qBAAwC7H,EAAxC,cAF8C,EAAnCsL,QAEmEhU,IAAQQ,iBAAtF,KAGV,OAAO6O,KAWR,SAAS6L,EAAT,GAAsG,MAA9EF,EAA8E,EAA9EA,YAAazK,EAAiE,EAAjEA,IAAiE,IAA5D/I,cAA4D,MAAnD,MAAmD,EAA5CyM,EAA4C,EAA5CA,KAEvDkH,IAAkC,MAClCnb,IAAQM,cAAgBP,IADU,GAQxC,OAJIib,IACAG,EAAWnb,IAAQG,cAAgB6a,GAGhCjH,YAAQ,CAAExD,MAAK/I,SAAQwM,QAASmH,EAAYlH,SAC9CnQ,MAAK,YAA+B,IAA5B4E,EAA4B,EAA5BA,OAAQ2G,EAAoB,EAApBA,KAAM2E,EAAc,EAAdA,QACnB,GAAiB,gBAAb3E,EAAK+L,IAAuB,CAC5B,IAAMrX,EAAM,IAAIwB,MAAM8J,EAAKgM,aAG3B,MADAtX,EAAImQ,KAAO7E,EAAK6E,KACVnQ,EAGV,GAAI2E,EAAS,IACT,MAAM,IAAInD,MAAJ,QAAmBgL,EAAnB,0BAAkD7H,EAAlD,cAAwEsL,EAAQhU,IAAQQ,iBAAxF,KAGV,GAAiB,YAAb6O,EAAK+L,IACL,MAAM,IAAI7V,MAAJ,QAAmBgL,EAAnB,kBAA0ClB,EAAK+L,IAA/C,cAAkEpH,EAAQhU,IAAQQ,iBAAlF,KAGV,OAAO6O,EAAK6E,QAIjB,SAASoH,EAAT,GAA6K,IAAnJ5K,EAAmJ,EAAnJA,MAAmJ,IAA5I6K,iBAA4I,MAAhI,GAAgI,MAA5HvH,eAA4H,MAAlH,GAAkH,EAChL,OAAOD,YAAQ,CACXxD,IAAS2F,IACT1O,OAAS,OACTyM,KAAS,CACLvD,QACA6K,aAEJvH,QAAS,aACL,aAAcjU,KACXiU,KAERlQ,MAAK,YAAsB,IAAnB4E,EAAmB,EAAnBA,OAAQ2G,EAAW,EAAXA,KACTmM,EAASnM,EAAKmM,QAAU,GAE9B,GAAIA,EAAO3V,OAAQ,CACf,IAAMwI,EAAUmN,EAAO,GAAGnN,SAAWxB,KAAKC,UAAU0O,EAAO,IAC3D,MAAM,IAAIjW,MAAM8I,GAGpB,GAAe,MAAX3F,EACA,MAAM,IAAInD,MAAU2Q,IAAd,oBAA+CxN,GAGzD,OAAO2G,EAAK6E,U,6BCxGL,SAASuH,IAetB,OAdAA,EAAW5vB,OAAO6vB,QAAU,SAAUpE,GACpC,IAAK,IAAInsB,EAAI,EAAGA,EAAI0iB,UAAUhI,OAAQ1a,IAAK,CACzC,IAAIosB,EAAS1J,UAAU1iB,GAEvB,IAAK,IAAIuB,KAAO6qB,GACV1rB,IAAiBkB,eAAezB,KAAKisB,EAAQ7qB,KAC/C4qB,EAAO5qB,GAAO6qB,EAAO7qB,IAK3B,OAAO4qB,IAGOxP,MAAM5C,KAAM2I,WAf9B,mC,2ECWO,SAAS8N,EAAmBxB,GAC/B,OAAOpM,YAAc4N,GAAmB,WAEpCnE,cAAY4B,KAAZ,gCAEA,IAAMwC,EAAYnQ,YAAiB0O,EAAL,KAE9B,OAAOpG,YAAQ,CAEXvM,OAAQ,OACR+I,IAASgF,IACTvB,QAAS,CACL6H,cAAe,SAAUD,GAE7B1H,KAAM,CACF4H,WAAY,wBAGjBhY,MAAK,YAAc,IAAXuL,EAAW,EAAXA,KAEP,GAAIA,GAAuB,mBAAfA,EAAKvK,MACb,MAAM,IAAIS,MAAJ,+BAA0C4U,EAA1C,QAA4DtN,KAAKC,UAAUuC,EAAM,KAAM,IAGjG,IAAKA,IAASA,EAAK0M,aACf,MAAM,IAAIxW,MAAJ,+BAA0CsH,KAAKC,UAAUuC,EAAM,KAAM,IAG/E,OAAOA,EAAK0M,kBAEjB,CAAE5B,IAGF,SAAS6B,EAAwBC,GACpC,OAAOX,YAAY,CACf5K,MAAO,gQASP6K,UAAW,CAAEU,gBACdnY,MAAK,SAAAuB,GACJ,OAAOA,EAAI6W,SAASC,KAAKC,gB,WCpB1B,SAASC,EAAcC,EAAvB,GAA8I,MAAzFC,EAAyF,EAAzFA,uBAAwBnC,EAAiE,EAAjEA,qBAGhF,OAFA5C,cAAY4B,KAAZ,4BAEO2B,YAAY,CACfC,YAAauB,EACb/U,OAAQ,OACR+I,IAAK,GAAYiF,IACjBtB,KAAaoI,EACbtI,SAAO,OACDhU,IAAQ9C,wBAA0Bkd,GAAwB,GADzD,KAGRtW,MAAK,SAACuL,GAAkB,MAEjBmN,EAAUnN,GAAQA,EAAKoN,GAE7B,IAAKD,EACD,MAAM,IAAIjX,MAAJ,gCAA2CsH,KAAKC,UAAUuC,EAAM,KAAM,IAWhF,OARAmI,cAAY8B,QAAZ,MACKhe,IAASE,OAAe4G,IAAWC,OADxC,EAEK/G,IAASG,YAAe6G,IAAgBG,aAF7C,EAGKnH,IAASS,cAAeiG,IAAkBE,SAH/C,EAIK5G,IAASO,OAAe2gB,EAJ7B,EAKKlhB,IAASQ,YAAe0gB,EAL7B,IAQOA,KAIR,SAASE,EAASF,EAAlB,GAAqL,MAA/ID,EAA+I,EAA/IA,uBAAwBI,EAAuH,EAAvHA,iBAAkBvC,EAAqG,EAArGA,qBAAqG,IAA/EwC,oBACzG,OAAQD,QADgL,UAElLzB,YAAa,CACXF,YAAa2B,EACbpM,IAAiBqF,IAAcxX,MAA5B,IAAuCoe,IAE5CzB,YAAY,CACVC,YAAauB,EACbhM,IAAiBiF,IAAd,IAAkCgH,EACrCxI,SAAO,OACDhU,IAAQ9C,wBAA0Bkd,GAAwB,GADzD,KAMZ,SAASyC,EAAaL,EAAtB,GAAyL,MAA/ID,EAA+I,EAA/IA,uBAAwBI,EAAuH,EAAvHA,iBAAkBvC,EAAqG,EAArGA,qBAAqG,IAA/EwC,oBAC7G,OAAQD,QADoL,UAEtLzB,YAAa,CACXF,YAAa2B,EACbnV,OAAa,OACb+I,IAAiBqF,IAAcxX,MAA5B,IAAuCoe,EAAvC,aAELzB,YAAY,CACVC,YAAauB,EACb/U,OAAQ,OACR+I,IAAiBiF,IAAd,IAAkCgH,EAAlC,WACHxI,SAAO,OACDhU,IAAQ9C,wBAA0Bkd,GAAwB,GADzD,KAMZ,SAAS0C,EAAeN,EAAxB,GAA2L,MAA/ID,EAA+I,EAA/IA,uBAAwBI,EAAuH,EAAvHA,iBAAkBvC,EAAqG,EAArGA,qBAAqG,IAA/EwC,oBAC/G,OAAQD,QADsL,UAExLzB,YAAa,CACXF,YAAa2B,EACbnV,OAAa,OACb+I,IAAiBqF,IAAcxX,MAA5B,IAAuCoe,EAAvC,eAELzB,YAAY,CACVC,YAAauB,EACb/U,OAAQ,OACR+I,IAAiBiF,IAAd,IAAkCgH,EAAlC,aACHxI,SAAO,OACDhU,IAAQ9C,wBAA0Bkd,GAAwB,GADzD,KAUZ,SAAS2C,EAAWP,EAAkBtI,EAAtC,GAAyM,MAA/IqI,EAA+I,EAA/IA,uBAAwBI,EAAuH,EAAvHA,iBAAkBvC,EAAqG,EAArGA,qBAAqG,IAA/EwC,2BAA+E,SACtMI,EAAYjQ,MAAMkQ,QAAQ/I,GAAQ,CAAEgJ,MAAOhJ,GAASA,EAE1D,OAAQyI,IAAqBC,EACvB1B,YAAa,CACXF,YAAa2B,EACbnV,OAAa,OACb+I,IAAiBqF,IAAcxX,MAA5B,IAAuCoe,EAAvC,SACHvI,KAAa,CAAEC,KAAM8I,KAEvBjC,YAAY,CACVC,YAAauB,EACb/U,OAAQ,QACR+I,IAAiBiF,IAAd,IAAkCgH,EACrCtI,KAAa8I,EACbhJ,SAAO,OACDhU,IAAQ9C,wBAA0Bkd,GAAwB,GADzD,KAYZ,SAAS+C,EAASX,GACrB,OAAOtB,YAAa,CAChB3K,IAASqF,IAAcG,SAApB,IAAkCyG,EAAlC,WAaX,IAAMY,EAAyB,CAC3BC,oBAAqB,aAiBlB,SAASC,EAAT,GAA0R,MAAzPC,EAAyP,EAAzPA,kBAAmBf,EAAsO,EAAtOA,QAASgB,EAA6N,EAA7NA,gBAAiBC,EAA4M,EAA5MA,wBAAyBrD,EAAmL,EAAnLA,qBAAsBF,EAA6J,EAA7JA,gBAChI1C,cAAY4B,KAAZ,+BAEA,IAAMpF,IAAgB,MAChBhU,IAAQC,eADQ,UAC6Bsd,EAD7B,EAEhBvd,IAAQ9C,wBAA0Bkd,EAFlB,EAGhBpa,IAAQO,oBAA0B2Z,EAHlB,GAMhBwD,EAAgC,CAClCC,MAAO,CACHlB,GAAMe,EACNI,KAAM,UAIVH,IACAC,EAAcG,cAAgB,CAAET,EAAuBC,sBAG3D,IAAMpJ,EAAO,CACT6J,eAAgBJ,GAGpB,OAAO3J,YAAQ,CACXvM,OAAQ,OACR+I,IAAYiF,IAAT,IAA6BgH,EAA7B,IAA0C7G,IAC7C3B,UACAC,SAID,SAAS8J,EAAsBC,GAClC,OAAO9C,YAAa,CAChB1T,OAAQ,OACR+I,IAAYqF,IAAcI,QAAvB,IAAoCgI,EAApC,aACJla,MAAK,SAAAoQ,GACJ,OAAOA,EAAKyJ,SAIb,SAASM,EAAuBC,GACnC,OAAOhD,YAAa,CAChB1T,OAAQ,OACR+I,IAAYqF,IAAcK,aAAvB,IAAyCiI,EAAzC,YACJpa,MAAK,SAAAoQ,GACJ,OAAOA,EAAKyJ,SAIb,SAASQ,EAAT,GAA8H,MAAvG3B,EAAuG,EAAvGA,QAASe,EAA8F,EAA9FA,kBACnC,OAAOjC,YAAY,CACf5K,MAAO,0MASP6K,UAAW,CACPiB,WAEJxI,SAAO,OACDhU,IAAQG,cAAgBod,EADvB,KAkCR,SAASa,EAAT,GAAkJ,IAApH5B,EAAoH,EAApHA,QAAS6B,EAA2G,EAA3GA,cAAeC,EAA4F,EAA5FA,oBAAqBC,EAAuE,EAAvEA,mBAAoBC,EAAmD,EAAnDA,YAClG,OAAOlD,YAAY,CACf5K,MAAO,0qBAiBP6K,UAAW,CAAEiB,UAAS6B,gBAAeC,sBAAqBC,qBAAoBC,iBAC/E1a,KAAKoK,KCzOL,SAASuQ,EAAmBC,EAA5B,GACH,OArCG,SAAuBA,EAAvB,GAA6J,MAApGnC,EAAoG,EAApGA,uBAAwBnC,EAA4E,EAA5EA,qBAGpF,OAFA5C,cAAY4B,KAAZ,8BAEO2B,YAAY,CACfC,YAAauB,EACb/U,OAAQ,OACR+I,IAAK,GAAYkF,IACjBvB,KAAawK,EACb1K,SAAO,OACFhU,IAAQ9C,wBAAyBkd,GAAwB,GADvD,KAGRtW,MAAK,SAAAuL,GAAQ,MAENsP,EAAYtP,GAAQA,EAAKoN,GAE/B,IAAKkC,EACD,MAAM,IAAIpZ,MAAJ,kCAA6CsH,KAAKC,UAAUuC,EAAM,KAAM,IAWlF,OARAmI,cAAY8B,QAAZ,MACKhe,IAASE,OAAe4G,IAAWC,OADxC,EAEK/G,IAASG,YAAe6G,IAAgBK,eAF7C,EAGKrH,IAASS,cAAeiG,IAAkBG,WAH/C,EAIK7G,IAASO,OAAe8iB,EAJ7B,EAKKrjB,IAASQ,YAAe6iB,EAL7B,IAQOtP,KAUJuP,CAAcF,EAAS,CAAEnC,uBAD4H,EAA3FA,uBACTnC,qBADoG,EAAnEA,uBAEpFtW,MAAK,SAAAuB,GACF,GAAIA,EAAIwZ,OAASxZ,EAAIwZ,MAAMhZ,OACvB,IAAK,IAAI1a,EAAI,EAAGA,EAAIka,EAAIwZ,MAAMhZ,OAAQ1a,IAClC,GAA4B,aAAxBka,EAAIwZ,MAAM1zB,GAAGqc,QAA8C,iBAArBnC,EAAIwZ,MAAM1zB,GAAG2zB,IAAwB,CAC3E,IAAMC,EAAQ1Z,EAAIwZ,MAAM1zB,GAAG4lB,KAAKgO,MAAM,8BACtC,GAAIA,EACA,OAAOA,EAAM,GAM7B,MAAM,IAAIxZ,MAAJ,mCAIX,SAASyZ,EAAWL,EAApB,GAAgK,MAAtHpC,EAAsH,EAAtHA,uBAAwBI,EAA8F,EAA9FA,iBAAkBvC,EAA4E,EAA5EA,qBACvF,OAAOuC,EACDzB,YAAa,CACXF,YAAa2B,EACbpM,IAAiBqF,IAAcI,QAA5B,IAAyC2I,IAE9C5D,YAAY,CACVC,YAAauB,EACbhM,IAAiBkF,IAAd,IAAoCkJ,EACvC3K,SAAO,OACFhU,IAAQ9C,wBAAyBkd,GAAwB,GADvD,KAMZ,SAAS6E,EAAeN,EAAoBO,EAA5C,GAAsL,MAAtH3C,EAAsH,EAAtHA,uBAAwBI,EAA8F,EAA9FA,iBAAkBvC,EAA4E,EAA5EA,qBAC7G,OAAOuC,EACDzB,YAAa,CACXF,YAAa2B,EACbnV,OAAa,OACb+I,IAAiBqF,IAAcI,QAA5B,IAAyC2I,EAAzC,WACH1K,KAAa,CACTC,KAAM,CACFiL,SAAUD,MAIpBnE,YAAY,CACVC,YAAauB,EACb/U,OAAQ,OACR+I,IAAiBkF,IAAd,IAAoCkJ,EAApC,WACH3K,SAAO,OACFhU,IAAQ9C,wBAAyBkd,GAAwB,GADvD,GAGPlG,KAAM,CACFiL,SAAUD,KASnB,SAASE,EAAaT,EAAoBzK,EAA1C,GAAoL,MAAtHqI,EAAsH,EAAtHA,uBAAwBI,EAA8F,EAA9FA,iBAAkBvC,EAA4E,EAA5EA,qBACrG4C,EAAYjQ,MAAMkQ,QAAQ/I,GAAQ,CAAEgJ,MAAOhJ,GAASA,EAE1D,OAAOyI,EACDzB,YAAa,CACXF,YAAa2B,EACbnV,OAAa,OACb+I,IAAiBqF,IAAcxX,MAA5B,IAAuCugB,EAAvC,SACH1K,KAAa,CAAEC,KAAM8I,KAEvBjC,YAAY,CACVC,YAAauB,EACb/U,OAAQ,QACR+I,IAAiBkF,IAAd,IAAoCkJ,EACvCzK,KAAa8I,EACbhJ,SAAO,OACFhU,IAAQ9C,wBAAyBkd,GAAwB,GADvD,KC9GZ,SAASiF,EAAmBrE,EAAsBsE,EAAlD,GAAyK,IAApElF,EAAoE,EAApEA,qBAGxG,GAFA5C,cAAY4B,KAAZ,oCAEK4B,EACD,MAAM,IAAIzV,MAAJ,2BAGV,IAAK+Z,EACD,MAAM,IAAI/Z,MAAJ,8CAGV,IAAMyO,EAAmB,CACrB,wBAA4CgH,EAC5C,gCAAiCZ,GAGrC,OAAOrG,YAAQ,CACXvM,OAAQ,OACR+I,IAAQmF,IACR1B,UACAC,KAAQqL,IACTxb,MAAK,YAAuB,IAApBuL,EAAoB,EAApBA,KAEP,IAAKA,IAASA,EAAKoN,GACf,MAAM,IAAIlX,MAAJ,8CAAyDsH,KAAKC,UAAUuC,EAAM,KAAM,IAE9F,OAAOA,EAAKoN,MAIb,SAAS8C,EAAmBvE,EAAsBkD,EAAyBoB,EAA3E,GAAmM,IAApElF,EAAoE,EAApEA,qBAGlI,GAFA5C,cAAY4B,KAAZ,oCAEK4B,EACD,MAAM,IAAIzV,MAAJ,2BAGV,IAAK2Y,EACD,MAAM,IAAI3Y,MAAJ,sFAGV,IAAK+Z,EACD,MAAM,IAAI/Z,MAAJ,8CAGV,IAAMyO,EAAmB,CACrB,wBAA4CgH,EAC5C,gCAAiCZ,GAGrC,OAAOrG,YAAQ,CACXvM,OAAQ,OACR+I,IAAYmF,IAAT,IAA2CwI,EAA3C,UACHlK,UACAC,KAAQqL,IACTxb,MAAK,YAA+B,IAAtB4E,EAAsB,EAAtBA,OAEb,GAAe,MAAXA,EACA,MAAM,IAAInD,MAAJ,gCAA2CmD,EAA3C,wBAA2EmE,KAAKC,UAHvD,EAA5BuC,KAGmG,KAAM,IAGhH,OAAO6O,KAQR,SAASsB,EAAqBtB,EAA9B,GAA+I,IAAtFvB,EAAsF,EAAtFA,iBAC5D,OAAOzB,YAAa,CAChBF,YAAa2B,EACbnV,OAAQ,OACR+I,IAAiBqF,IAAcK,aAA5B,IAA8CiI,EAA9C,cAIJ,SAASuB,EAAgBvB,EAAzB,GAA0I,IAAtFvB,EAAsF,EAAtFA,iBACvD,OAAOzB,YAAa,CAChBF,YAAa2B,EACbpM,IAAiBqF,IAAcK,aAA5B,IAA8CiI,I,mBCtGnDwB,EAAe,CACjBC,QAAW,UACXC,SAAW,YAGTC,EAAkB,CACpBC,QAAU,UACVjJ,MAAU,SA8YP,IAAMkJ,EAAkB1S,aAAQ,SAAC2S,GACpC,OAAOvb,IAAasC,IAAI,CACpBkZ,YAAW3J,IAAiBC,KAC5B0J,YAAW3J,IAAiBT,MAC5BoK,YAAW3J,IAAiBE,YAC7B1S,MAAK,WACJ,IAAMoY,EAAWxY,OAAOwY,SAExB,IAAKA,EACD,MAAM,IAAI3W,MAAJ,2BAIV,OADA2W,EAASgE,cAAcF,GAChB9D,QAIR,SAASiE,EAAT,GAAgI,IAAtGlE,EAAsG,EAAtGA,WAAY+D,EAA0F,EAA1FA,OA6EzC,OAzaG,YAA4I,IAqI3II,EAQAC,EACAC,EA9IwBrE,EAAmH,EAAnHA,WAAYsE,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,UAAWC,EAAoF,EAApFA,iBAAkBC,EAAkE,EAAlEA,UAAkE,IAAvDC,aAAuD,SAEzIC,EAAmB,GACnBC,EAAmB,GACnBC,EAAoB,GACpBC,EAAiB,GAEjBC,EAAc,SAACC,EAAQ/M,GACzB,IAAMgN,EAAa9U,cACnBwU,EAAiBM,IAAc,EAE/B,IAAM7S,EAAU,aACZ8S,YAAoBD,EACpBE,WAAoBZ,EACpBa,mBAAoBZ,EACpBa,WAAoBZ,GACjBxM,GAGP+M,EAAO5L,KAAKxI,KAAKC,UAAUuB,KAGzBkT,EAAe,SAACN,EAAD,GAA0F,IAA/EO,EAA+E,EAA/EA,YAAaC,EAAkE,EAAlEA,eAAgBC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,WAC1F,GAAKX,EAAOY,SAIZ,OAAOb,EAAYC,EAAQ,CACvBa,YAAoBH,EACpBI,YAAoBH,EACpBI,aAAoBR,EACpBS,eAAoBR,EACpBS,aAAoBxC,EAAaE,SACjCuC,aAAoBT,KAmGxBU,GAAS,EAYPC,EAAO,SAAPA,KACFhC,EAAgB5b,IAAagC,KAAI,WAC7B,GAAI2Z,EAEA,OADAE,EAAe7b,IAAasD,MAAMqY,MAGvCtc,MAAK,WACJwc,EAAe,KACf,IAAMgC,EAAW/B,IAEXgC,EAAoB,IAAI9d,KAAa,SAACH,EAASgB,GACjDgd,EAASE,QAAO,WACZJ,GAAS,EACThC,EAAa,EACb9b,EAAQge,MAGZA,EAASG,SAAQ,SAAA1e,GACbqe,GAAS,EACT9c,EAAOvB,GAAO,IAAIwB,MAAM,kBACpBob,IA5BZA,IACAP,EAAaA,EAA2B,EAAbA,EAAkB,GA6BjCiC,QAIRC,EAASlc,SAAQ,SAAArC,GACbuB,EAAOvB,SAUf,OANAue,EAASI,WAAU,SAAAC,GACf,OAAOJ,EAAkBze,MAAK,SAAAmd,GAC1B,OAzFE,SAAIA,EAAQ2B,GAC1B,IAAIC,EAEJ,IACIA,EAAahW,KAAKoI,MAAM2N,GAC1B,MAAO7e,GACL,MAAM,IAAIwB,MAAJ,mCAA8Cqd,GAGxD,IAAKC,EACD,MAAM,IAAItd,MAAJ,sCAV4B,IAclBoc,EAQhBkB,EARAf,YACgBF,EAOhBiB,EAPAd,YACgBb,EAMhB2B,EANA1B,YACgBK,EAKhBqB,EALAb,aACgBc,EAIhBD,EAJAX,aACgBa,EAGhBF,EAHAV,aACgBV,EAEhBoB,EAFAZ,eACgBe,EAChBH,EADAvB,WAGJ,KAAKJ,GAAeU,GAAeJ,GAAgBsB,GAAgBE,GAC/D,MAAM,IAAIzd,MAAJ,uBAAkCqd,GAG5C,IAAIhC,EAAiBM,IAAe8B,IAAqBxC,EAAzD,CAMA,GAFAI,EAAiBM,IAAc,EAE3B4B,IAAgBpD,EAAaC,QAC7B,OAtFU,SAACsB,EAAD,GAAyE,IAA9DU,EAA8D,EAA9DA,kBAAmBC,EAA2C,EAA3CA,WAAYJ,EAA+B,EAA/BA,YAAauB,EAAkB,EAAlBA,YAC/DE,EAAgB,IAAIxe,IAG1B,OAFAsc,EAAepb,KAAKsd,GAEbxe,IAAagC,KAAI,WACpB,IAAMyc,EAAkBrC,EAAiBW,GAEzC,IAAK0B,EACD,MAAM,IAAI3d,MAAJ,+BAA0Cic,GAJ1B,IAOlB9c,EAA+Bwe,EAA/Bxe,QAER,GAFuCwe,EAAtBC,mBAEQxB,IAAsB1F,EAC3C,MAAM,IAAI1W,MAAJ,0BAAoCoc,GAAqB,cAGnE,OAAOjd,EAAQ,CAAEwP,KAAM6O,OACxBjf,MAAK,SAAAuB,GACJkc,EAAaN,EAAQ,CAAEQ,eAAgB5B,EAAgBC,QAAS4B,aAAcrc,EAAKmc,cAAaG,oBAAmBC,kBACpH,SAAA7d,GAECwd,EAAaN,EAAQ,CAAEQ,eAAgB5B,EAAgBhJ,MAAO6K,aADlD,CAAErT,QAAUtK,GAAOA,EAAIsK,QAAWtK,EAAIsK,QAAU,iBACqBmT,cAAaG,oBAAmBC,kBAClHrb,SAAQ,WACP0c,EAAc3e,UACdyc,EAAepZ,OAAOoZ,EAAerb,QAAQud,GAAgB,MA6DtDG,CAAUnC,EAAQ,CAAEU,oBAAmBC,aAAYJ,cAAauB,gBACpE,GAAID,IAAgBpD,EAAaE,SACpC,OA3DW,SAAC,GAAmE,IAAjEgC,EAAiE,EAAjEA,WAAYD,EAAqD,EAArDA,kBAAmBF,EAAkC,EAAlCA,eAAgBsB,EAAkB,EAAlBA,YAAkB,EACpCjC,EAAkBc,GAAzDyB,EAD2E,EAC3EA,gBAAiBF,EAD0D,EAC1DA,kBAEzB,IAAKE,EACD,MAAM,IAAI9d,MAAJ,6CAAwDqc,GAGlE,GAAIuB,GAAqBxB,IAAsB1F,EAC3C,MAAM,IAAI1W,MAAJ,0BAAoCoc,GAAqB,cAKnE,UAFOb,EAAkBc,GAErBH,IAAmB5B,EAAgBC,QACnCuD,EAAgB/e,QAAQ,CAAE4P,KAAM6O,QAC7B,IAAItB,IAAmB5B,EAAgBhJ,MAG1C,MAAM,IAAItR,MAAJ,oCAA8CmD,QAAU,cAF9D2a,EAAgB/d,OAAO,IAAIC,MAAMwd,EAAY1U,WA2CtCiV,CAAW,CAAE1B,aAAYD,oBAAmBF,iBAAgBsB,gBAGnE,MAAM,IAAIxd,MAAJ,8BAAyCud,IAiDhCJ,CAAUzB,EAAQ0B,SAI1BJ,MAGGlc,MAAM6H,MA2ExB,OAxEAmU,IAwEO,CAAEkB,GAtEE,SAAC73B,EAAMgZ,EAAP,GAAsD,kBAAP,GAAO,GAApCye,yBAAoC,SAC7D,GAAItC,EAAiBn1B,GACjB,MAAM,IAAI6Z,MAAJ,yCAAoD7Z,GAG9Dm1B,EAAiBn1B,GAAQ,CACrBgZ,UACAye,sBA+DK9N,KA3DA,SAAOmM,EAAauB,EAApB,GAA0G,iBAAzB,GAAyB,MAAnEI,yBAAmE,aAAzCzc,eAAyC,MAA/B,EAA+B,EACnH,OAAO2Z,EAAcvc,MAAK,SAAAmd,GACtB,IAAMW,EAAaxV,cAEbiX,EAAkB,IAAI5e,IAmB5B,OAlBAqc,EAAkBc,GAAc,CAC5ByB,kBACAF,qBAGJnC,EAAYC,EAAQ,CAChBc,YAAcH,EACdI,aAAcR,EACdU,aAAcxC,EAAaC,QAC3BwC,aAAcY,IAGdrc,GACAjB,YAAW,WACP4d,EAAgB/d,OAAO,IAAIC,MAAJ,4BAAuCic,EAAvC,mBAAuE9a,EAAvE,SACxBA,GAGA2c,MAoCIG,UAhCD,WACd,OAAO/e,IAAagC,KAAI,WACpB,OAAK2b,EAID9B,GACAA,EAAahc,UACN+b,IAGXD,EAAa,EACNiC,KATIhC,MA6BWlN,MAhBhB,WACVwN,GAAQ,EADQ,cAGS90B,OAAOwb,KAAKyZ,GAHrB,eAIgBA,EADX,MACTuC,gBACQtd,YAAY,IAAIR,MAAJ,kBAGhCd,IAAasC,IAAIga,GAAgBjd,MAAK,WAClC,OAAOuc,EAAcvc,MACjB,SAAAmd,GAAM,OAAIA,EAAO9N,UACjBjF,UA2KLuV,CAAc,CAAExH,aAAYsE,OA5EpB,WACX,IAAIrN,GAAO,EAELwQ,EAAoB,GACpBC,EAAkB,GAClBC,EAAkB,GAClBC,EAAiB,GAEjB/e,EAAQ,SAACf,GAAQ,cACG4f,EADH,YAEfjf,EADkBif,EAAJ,IACN5f,IAIV+f,EAAkBrf,IAAasC,IAAI,CACrCgZ,EAAgBC,GAChBhE,EAAwBC,KACzBnY,MAAK,YAAgC,IAA7BoY,EAA6B,KAAnBE,EAAmB,KACpC,OAAOF,EAASC,OAAO4H,sBAAsB3H,GAActY,MAAK,WAC5D,IAAMkgB,EAAW9H,EAAS8H,WAC1B9H,EAAS8H,SAASC,SAASC,kBAE3BhR,GAAO,EAJ2D,cAM5C2Q,EAN4C,YAO9Dnf,EADkBmf,EAAJ,MAelB,OAXAG,EAASG,IAAT,SAAuBlI,EAAvB,aAA+CsH,GAAG,SAAS,SAACle,GAAQ,IAChE,IAAM+e,EAAW/e,EAAI4H,OAAS,GADkC,MAExCphB,OAAOwb,KAAK+c,GAF4B,eAEjB,IAA1C,IACK/V,EAAU+V,EADA,MAA2B,MAErBV,EAFqB,YAGvChf,EADkBgf,EAAJ,IACNrV,MAKpB2V,EAASK,WACFL,QAIf,MAAO,CACH3O,KAAM,SAACnB,GACH4P,EAAgBhgB,MAAK,SAAAkgB,GACjB,OAAOA,EAASG,IAAT,SAAuBlI,EAAvB,aAAgD7P,eAAe5B,IAAI0J,MAC3E7N,MAAMvB,IAEbqO,MAAO,WACH2Q,EAAgBhgB,MAAK,SAAAkgB,GACjBA,EAASM,gBAGjB5B,UAAW,SAAChe,GACRgf,EAAkB/d,KAAKjB,IAE3B0B,QAAS,SAAC1B,GACNif,EAAgBhe,KAAKjB,IAEzB8d,OAAQ,SAAC9d,GACDwO,EACAxO,IAEAmf,EAAele,KAAKjB,IAG5B+d,QAAS,SAAC/d,GACNkf,EAAgBje,KAAKjB,IAEzBmd,OAAQ,WACJ,OAAO3O,KAKwBsN,UA7EwF,EAAlFA,UA6EKC,iBA7E6E,EAAvEA,iBA6EYC,UA7E2D,EAArDA,YC/alF,2sB,6BCAO,IAAM5J,EAAW,CACpByN,KAAQ,QACRxN,KAAQ,QACRyN,MAAQ,UCERC,EAAsB,mCAMnB,SAASC,EAAgB7T,GAC5B,YAD2E,IAA/CA,MAA6BnN,QAClDmN,EAAIC,SAAS2H,WAAa3B,EAAS0N,MAGvC,SAASG,EAAU9T,GAEtB,QAFsF,IAAhEA,MAA+BnN,QAEhDmN,EAIL,IACI,GAAIA,EAAI+T,QAAU/T,EAAI+T,SAAW/T,EAC7B,OAAOA,EAAI+T,OAEjB,MAAO7gB,KAuBN,SAAS8gB,EAAkBhU,GAC9B,IAGI,OAAO,EACT,MAAO9M,IAIT,OAAO,EAGJ,SAAS+gB,EAAgBjU,QAA+C,IAA/CA,MAA8BnN,QAE1D,IAAIoN,EAAWD,EAAIC,SAEnB,IAAKA,EACD,MAAM,IAAIvL,MAAJ,gCAGV,IAAIkT,EAAW3H,EAAS2H,SAExB,IAAKA,EACD,MAAM,IAAIlT,MAAJ,gCAGV,GAAIkT,IAAa3B,EAASC,KACtB,OAAWD,EAASC,KAApB,KAGJ,GAAI0B,IAAa3B,EAAS0N,MAAO,CAE7B,IAAII,EAASD,EAAU9T,GACvB,OAAI+T,GAAUC,IAEHC,EAAgBF,GAGhB9N,EAAS0N,MAApB,KAGJ,IAAI5J,EAAO9J,EAAS8J,KAEpB,IAAKA,EACD,MAAM,IAAIrV,MAAJ,4BAGV,OAAWkT,EAAX,KAA0BmC,EAGvB,SAASmK,EAAUlU,QAA+C,IAA/CA,MAA8BnN,QAEpD,IAAIshB,EAASF,EAAgBjU,GAE7B,OAAImU,GAAUnU,EAAIoU,YAAwD,IAA1CpU,EAAIoU,WAAWvf,QAAQoR,EAASyN,MACrD1T,EAAIoU,WAGRD,EAGJ,SAASE,EAAcrU,GAC1B,IAEI,IAAKA,EAAIC,SAASC,KACd,OAAO,EAGX,GAA0B,gBAAtBF,EAAIC,SAASC,KACb,OAAO,EAEb,MAAOhN,IAIT,OAAO,EA+CJ,SAASohB,EAAatU,GAEzB,IA9CG,SAA8BA,GAEjC,IACI,GAAIA,IAAQnN,OACR,OAAO,EAGb,MAAOK,IAIT,IACI,IAAIqhB,EAAOv5B,OAAOw5B,yBAAyBxU,EAAK,YAEhD,GAAIuU,IAA4B,IAApBA,EAAKr5B,WACb,OAAO,EAGb,MAAOgY,IAIT,IAEI,GAAI2gB,EAAgB7T,IAAQgU,IACxB,OAAO,EAEb,MAAO9gB,IAIT,IAEI,GAAI+gB,EAAgBjU,KAASiU,EAAgBphB,QACzC,OAAO,EAGb,MAAOK,IAIT,OAAO,EAKFuhB,CAAqBzU,GACtB,OAAO,EAGX,IAEI,GAAIA,IAAQnN,OACR,OAAO,EAIX,GAAIghB,EAAgB7T,IAAQgU,IACxB,OAAO,EAIX,GAAIE,EAAUrhB,UAAYqhB,EAAUlU,GAChC,OAAO,EAGb,MAAO9M,IAIT,OAAO,EAIJ,SAASwhB,EAAiB1U,GAC7B,IAAKsU,EAAatU,GACd,MAAM,IAAItL,MAAJ,qCAIV,OAAOsL,EAqBJ,SAAS2U,EAAiBZ,EAAgCa,GAE7D,IAAKb,IAAWa,EACZ,OAAO,EAGX,IAAIC,EAAcf,EAAUc,GAE5B,OAAIC,EACOA,IAAgBd,GAGgB,IA9BxC,SAAoB/T,GAEvB,IAAI1L,EAAS,GAEb,IAEI,KAAO0L,EAAI+T,SAAW/T,GAClB1L,EAAOQ,KAAKkL,EAAI+T,QAChB/T,EAAMA,EAAI+T,OAGhB,MAAO7gB,IAIT,OAAOoB,EAeHwgB,CAAWF,GAAO/f,QAAQkf,GAmF3B,SAASgB,EAAO/U,QAAgE,IAAhEA,MAA+BnN,QAElD,IACI,GAAImN,EAAIyB,IACJ,OAAOzB,EAAIyB,IAEjB,MAAOvO,IAIT,GAAI4gB,EAAU9T,KAASA,EACnB,OAAOA,EAGX,IACI,GAAI2U,EAAiB9hB,OAAQmN,IAAQnN,OAAO4O,IACxC,OAAO5O,OAAO4O,IAEpB,MAAOvO,IAIT,IACI,GAAIyhB,EAAiB3U,EAAKnN,SAAWA,OAAO4O,IACxC,OAAO5O,OAAO4O,IAEpB,MAAOvO,IA1B0E,cAfhF,SAAS8hB,EAAkBhV,GAA4D,IAE1F,IAAI1L,EAAS,GAF6E,MA7DvF,SAAmB0L,GAEtB,IAEIiV,EAQAC,EAVA5gB,EAAS,GAIb,IACI2gB,EAASjV,EAAIiV,OACf,MAAO/hB,GACL+hB,EAASjV,EAKb,IACIkV,EAAMD,EAAOjgB,OACf,MAAO9B,IAIT,GAAY,IAARgiB,EACA,OAAO5gB,EAGX,GAAI4gB,EAAK,CACL,IAAK,IAAI56B,EAAI,EAAGA,EAAI46B,EAAK56B,IAAK,CAE1B,IAAI66B,OAAK,EAET,IACIA,EAAQF,EAAO36B,GACjB,MAAO4Y,GACL,SAGJoB,EAAOQ,KAAKqgB,GAGhB,OAAO7gB,EAGX,IAAK,IAAIha,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAI66B,OAAK,EAET,IACIA,EAAQF,EAAO36B,GACjB,MAAO4Y,GACL,OAAOoB,EAGX,IAAK6gB,EACD,OAAO7gB,EAGXA,EAAOQ,KAAKqgB,GAGhB,OAAO7gB,EAQW8gB,CAAUpV,GAJ8D,eAIxD,CAA7B,IAAImV,EAAK,KACV7gB,EAAOQ,KAAKqgB,GADkB,cAGPH,EAAkBG,GAHX,eAI1B7gB,EAAOQ,KADQ,MAKvB,OAAOR,EAiCW0gB,CAAkBhV,GA9B+C,eA8BzC,CAArC,IAAImV,EAAK,KACV,IACI,GAAIA,EAAM1T,IACN,OAAO0T,EAAM1T,IAEnB,MAAOvO,IAIT,GAAI4gB,EAAUqB,KAAWA,EACrB,OAAOA,GA8EnB,IAAIE,EAAgB,GAChBC,EAAe,GAEZ,SAASvb,EAAeiG,EAA6BuV,QAAsC,IAAtCA,OAAsB,GAE9E,IACI,GAAIvV,IAAQnN,OACR,OAAO,EAEb,MAAOK,GACL,OAAO,EAGX,IACI,IAAK8M,EACD,OAAO,EAGb,MAAO9M,GACL,OAAO,EAGX,IACI,GAAI8M,EAAIuR,OACJ,OAAO,EAGb,MAAOre,GAIL,OAAIA,GAAOA,EAAIsK,UAAYoW,EAQ/B,GAAI2B,GAAajB,EAAatU,GAC1B,IAEI,GAAIA,EAAIwV,WACJ,OAAO,EAEb,MAAOtiB,IAOb,IACI,IAAK8M,EAAI+T,SAAW/T,EAAIyB,IACpB,OAAO,EAEb,MAAOvO,IAeT,IAAIuiB,EAtFR,SAAwBzc,EAAuBrG,GAC3C,IAAK,IAAIrY,EAAI,EAAGA,EAAI0e,EAAWhE,OAAQ1a,IAEnC,IACI,GAAI0e,EAAW1e,KAAOqY,EAClB,OAAOrY,EAEb,MAAO4Y,IAKb,OAAQ,EA0EU6F,CAAYsc,EAAerV,GAE7C,IAAqB,IAAjByV,EAAoB,CACpB,IAAIN,EAAQG,EAAaG,GAEzB,GAAIN,GA9GL,SAA6BA,GAEhC,IAAKA,EAAMO,cACP,OAAO,EAGX,IAAKP,EAAMQ,WACP,OAAO,EAGX,IAAI5U,EAAMoU,EAAMS,cAEhB,SAAI7U,IAAOA,EAAI4B,iBAAoB5B,EAAI4B,gBAAgBkT,SAASV,IAkG/CW,CAAoBX,GAC7B,OAAO,EAIf,OAAO,EAoBJ,SAASY,EAAgBZ,GAI5B,GArBJ,WACI,IAAK,IAAI76B,EAAI,EAAGA,EAAI+6B,EAAcrgB,OAAQ1a,IAAK,CAC3C,IAAIi3B,GAAS,EAEb,IACIA,EAAS8D,EAAc/6B,GAAGi3B,OAC5B,MAAOre,IAILqe,IACA+D,EAAaxe,OAAOxc,EAAG,GACvB+6B,EAAcve,OAAOxc,EAAG,KAOhC07B,GAEIb,GAASA,EAAMO,cACf,IACIL,EAAcvgB,KAAKqgB,EAAMO,eACzBJ,EAAaxgB,KAAKqgB,GACpB,MAAOjiB,KA4WV,SAAS4G,EAASuC,GAErB,IACI,GAAIA,IAAQxJ,OACR,OAAO,EAEb,MAAOK,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAIf,IACI,GAA4C,oBAAxC54B,GAAiBgY,SAASvY,KAAK4hB,GAC/B,OAAO,EAEb,MAAOnJ,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAIf,IACI,GAAI/gB,OAAOC,QAAUuJ,aAAexJ,OAAOC,OACvC,OAAO,EAEb,MAAOI,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAIf,IACI,GAAIvX,GAAOA,EAAI4Z,OAAS5Z,EACpB,OAAO,EAEb,MAAOnJ,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAIf,IACI,GAAIvX,GAAOA,EAAI0X,SAAW1X,EACtB,OAAO,EAEb,MAAOnJ,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAIf,IACI,GAAIvX,GAAOA,EAAIoF,MAAQpF,EACnB,OAAO,EAEb,MAAOnJ,GACL,GAAIA,GAAOA,EAAIsK,UAAYoW,EACvB,OAAO,EAaf,IACI,GAAIvX,GAAmD,uBAA5CA,EAAI6Z,oCACX,OAAO,EAGb,MAAOhjB,GACL,OAAO,EAGX,OAAO,ECj+BX,iR,6BCAA,o8E,6BCAA,iMAKO,SAASijB,IACZ,OAAOtV,YAAiB,KAAMjR,IAAgBC,eAAvB,MAGpB,SAASumB,EAAmBC,GAC/B,IAAM7I,EAAgB6I,EAAOC,aAAa1mB,IAAgBC,gBACpD8c,EAAkB0J,EAAOC,aAAa1mB,IAAgBE,mBAI5D,MAAO,CAAE0d,gBAAe+I,KAHXF,EAAOC,aAAa1mB,IAAgB5B,MAGnB2e,mBAG3B,SAAS6J,EAAqBH,GACjCA,EAAOI,UAAUC,IAAI3mB,IAAMC,SAGxB,SAAS2mB,EAAsBN,GAClCA,EAAOI,UAAUG,OAAO7mB,IAAMC,SAG3B,SAAS6mB,IACZ,IAAIC,EAAQ,GAIZ,OAHInf,SAAS6G,OACTsY,EAAQnf,SAAS6G,KAAK8X,aAAa,eAAiB,IAEjDQ,I,6BC/BX,mMAKO,SAASC,IACZ,OAAO,IAAInjB,IAAayJ,KAGrB,SAAS2Z,IACZ,OAAOpjB,IAAaH,UAajB,SAASwjB,EAAWvX,GACvB,IAAMwX,EAAMvf,SAASwf,cAAc,OACnCD,EAAIE,IAAM1X,EACVwX,EAAIG,MAAMC,WAAa,SACvBJ,EAAIG,MAAME,SAAW,WACjB5f,SAAS6G,MACT7G,SAAS6G,KAAKsE,YAAYoU,GAI3B,SAASM,EAAchV,GAC1BA,EAAGtB,iBAAiBnQ,IAAUC,WAAW,WACrCwR,EAAGiU,UAAUC,IAAI3mB,IAAME,YAG3BuS,EAAGtB,iBAAiBnQ,IAAUE,OAAO,SAACkQ,GAC9BqB,EAAGiU,UAAUZ,SAAS9lB,IAAME,WAC5BkR,EAAMsW,iBACNjV,EAAGkV,OACHlV,EAAGiU,UAAUG,OAAO7mB,IAAME,aAmB/B,SAASmf,EAAW1P,GACvB,OAAO,IAAI9L,KAAa,SAACH,EAASgB,GAC9B,IAAMkjB,EAAYhgB,SAAS6G,MAAQ7G,SAASigB,KAE5C,IAAKD,EACD,OAAOljB,EAAO,IAAIC,MAAJ,sCAAiDgL,IAGnE,IAAMmY,EAASlgB,SAASwf,cAAc,UACtCU,EAAOC,aAAa,MAAOpY,GAC3BmY,EAAO3W,iBAAiB,QAAQ,kBAAMzN,EAAQokB,MAE9CA,EAAO3W,iBAAiB,SAAS,SAAChO,GAAD,OAASuB,EAAOvB,MACjDykB,EAAU7U,YAAY+U,Q,6BC1E9B,iHAeO,SAASE,IAEZ,MAAO,GAGJ,SAASC,EAAoBre,GAChC,MAAO,CACHse,OAAS,kBAAMrkB,IAAagC,KAAI,kBAAM+D,GAAI,OAC1Cue,QAAS,kBAAMtkB,IAAagC,KAAI,kBAAM+D,GAAI,QAS3C,SAASwe,EAAUC,GAA0B,IACxCC,EAAWD,EAAXC,OAER,OAAO,WACH,IAAIC,GAAU,EAUd,MAAO,CACHC,YATgB3kB,IAAagC,KAAI,WACjC,GAAIyiB,EACA,OAAOA,EAvBZ,GAuBuCL,GAAoB,SAAA5b,GAClDkc,EAAUlc,SAOlBoc,UAAW,kBAAMF,O,0QCdtB,SAASG,IAEZ,MAAO,GAWJ,SAASC,EAAT,GAAgJ,IAAnHC,EAAmH,EAAnHA,8BAA+BC,EAAoF,EAApFA,OAAQC,EAA4E,EAA5EA,SAAUlP,EAAkE,EAAlEA,WAAYJ,EAAsD,EAAtDA,qBA6C7F,MAAO,CAAE3tB,OA5CM,SAACynB,GAEZ,IAAIoI,EAAiB,eAAKpI,GAE1B,GAAIoI,EAAMmN,QAAUnN,EAAMmN,OAAO9c,gBAAkB8c,EAC/C,MAAM,IAAIlkB,MAAJ,sBAAiC+W,EAAMmN,OAAvC,kEAAiH3vB,IAAeU,OAAhI,IAA4I8hB,EAAMmN,OAAO9c,cAAzJ,8BAkCV,OA/BA2P,EAAQ,eAAKA,EAAR,CAAemN,OAAQA,EAAOE,iBAE7BC,eAAiBtN,EAAMsN,eAAetiB,KAAI,SAAAuiB,GAC5C,GAAIA,EAAKC,OAAOC,eAAiBF,EAAKC,OAAOC,gBAAkBL,EAC3D,MAAM,IAAInkB,MAAJ,wBAAmCskB,EAAKC,OAAOC,cAA/C,kEAAgIjwB,IAAeS,SAA/I,IAA6JsvB,EAAKC,OAAOC,cAAzK,8BAGV,IAAIC,EAAQH,EAAKG,MAEjB,GAAIA,GAASxP,GAAcA,EAAW3U,OAAQ,CAC1C,IAAK2U,EAAW,GACZ,MAAM,IAAIjV,MAAJ,QAAmBzL,IAAeM,YAAlC,kCAGV,GAAI4vB,EAAMC,aAAeD,EAAMC,cAAgBzP,EAAW,GACtD,MAAM,IAAIjV,MAAJ,qCAAgDiV,EAAW,GAA3D,KAWd,OAPIA,IACAwP,EAAQ,eACDA,EADF,CAEDC,YAAazP,EAAW,MAIhC,eAAYqP,EAAZ,CAAkBG,QAAOF,OAAQ,eAAKD,EAAKC,OAAZ,CAAoBC,cAAeL,SAGtEpN,EAAM4N,oBAAsB5N,EAAM4N,qBAAuB,GAElDV,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOF,YAAcC,EAAO,CAAEC,yBAAwBnC,uBAAsBwC,qBAAqB,SAOtG,SAASuN,EAAT,GAAoJ,IAArHX,EAAqH,EAArHA,8BAA+BC,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,SAAUlP,EAAoE,EAApEA,WAAYJ,EAAwD,EAAxDA,qBAmD/F,MAAO,CAAE3tB,OAlDM,SAACynB,GAEZ,IAAIwK,EAAmB,eAAKxK,GAEtBkW,EAAkBX,IAAWjvB,IAAO0D,QAAU,OAASurB,EAE7D,GAAI/K,EAAQ+K,QAAU/K,EAAQ+K,SAAWW,EACrC,MAAM,IAAI7kB,MAAJ,sBAAiCmZ,EAAQ+K,OAAzC,qCAAsFW,GAsChG,OAnCA1L,EAAU,eAAKA,EAAR,CAAiB+K,OAAQW,KAExBC,aAAe3L,EAAQ2L,aAAa/iB,KAAI,SAAAgjB,GAC5C,GAAIA,EAAYR,OAAOJ,UAAYY,EAAYR,OAAOJ,WAAaA,EAC/D,MAAM,IAAInkB,MAAJ,wBAAmC+kB,EAAYR,OAAOJ,SAAtD,kEAAkI5vB,IAAeS,SAAjJ,IAA+J+vB,EAAYR,OAAOJ,SAAlL,8BAGV,IAAIM,EAAQM,EAAYN,MAExB,GAAIA,GAASxP,GAAcA,EAAW3U,OAAQ,CAC1C,IAAK2U,EAAW,GACZ,MAAM,IAAIjV,MAAJ,QAAmBzL,IAAeM,YAAlC,kCAGV,GAAI4vB,EAAMC,aAAeD,EAAMC,cAAgBzP,EAAW,GACtD,MAAM,IAAIjV,MAAJ,qCAAgDiV,EAAW,GAA3D,KAWd,OAPIA,IACAwP,EAAQ,eACDA,EADF,CAEDC,YAAazP,EAAW,MAIhC,eAAY8P,EAAZ,CAAyBN,QAAOF,OAAQ,eAAKQ,EAAYR,OAAnB,CAA2BJ,kBAGrEhL,EAAQ6L,cAAgB7L,EAAQ6L,eAAiB,GACjD7L,EAAQ6L,cAAcC,WAAa9L,EAAQ6L,cAAcC,YAAkBzF,cAAxC,qBACnCrG,EAAQ6L,cAAcE,WAAa/L,EAAQ6L,cAAcE,YAAkB1F,cAAxC,qBACnCrG,EAAQgM,MAAQhM,EAAQgM,OAAS,GACjChM,EAAQgM,MAAMC,eAAiBjM,EAAQgM,MAAMC,gBAAkB,SAExDnB,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOkC,YAAmBC,EAAS,CAAEnC,yBAAwBnC,8BAOlE,SAASwQ,EAAT,GAAkK,IAA9HpB,EAA8H,EAA9HA,8BAA+BC,EAA+F,EAA/FA,OAAQC,EAAuF,EAAvFA,SAAUlP,EAA6E,EAA7EA,WAAYJ,EAAiE,EAAjEA,qBAC9FkC,EAAQiN,EAAkB,CAAEC,gCAA+BC,SAAQC,WAAUlP,aAAYJ,yBACzFsE,EAAUyL,EAAoB,CAAEX,gCAA+BC,SAAQC,WAAUlP,aAAYJ,yBAEnG,MAAO,CACHkC,QACAoC,QAASjI,IAAqBiI,EAAU,MAIzC,SAASmM,EAAe5B,EAAxB,GAA6R,IAAnN6B,EAAmN,EAAnNA,uBAAwBzL,EAA2L,EAA3LA,mBAC7F0L,EAAqF9B,EAArF8B,YAAa7Q,EAAwE+O,EAAxE/O,gBAEfhG,EA9HC,GA+HD8W,EAAUJ,EAAyB,CAAEpB,8BAJqP,EAAlPA,8BAI4BC,OAHmBR,EAAvDQ,OAG4CC,SAHWT,EAA/CS,SAG8ClP,WAHCyO,EAArCzO,WAGgDJ,qBAHX6O,EAAzB7O,uBAKpE,OAAO/M,aAAQ,WACX,IAAM4d,EAAYze,KAAKoB,MAEvB,OAAOnJ,IAAagC,KAAI,WACpB,OAAIqkB,EACOA,IAAyBhnB,KAAKia,KAC9BsB,EACAA,IAAqBvb,KAAKma,KAC1B8M,EACAA,EAAY7W,EAAM8W,GAElBA,EAAQ1O,MAAM7vB,OAAO,CACxBm9B,eAAgB,CACZ,CACIE,OAAQ,CACJC,cAAe,MACf39B,MAAe,eAMpC0X,MAAK,SAAA0Y,GAAW,MACf,IAAKA,GAA8B,iBAAZA,EACnB,MAAM,IAAIjX,MAAJ,qCAGV,GAAgC,IAA5BiX,EAAQ9W,QAAQ,SAA+C,IAA9B8W,EAAQ9W,QAAQ,UACjD,MAAM,IAAIH,MAAJ,6FAGV,IAAM2lB,EAAW1e,KAAKoB,MAAQqd,EAW9B,OATAzT,cAAY8B,OAAZ,OACKhe,IAASE,OAAqB4G,IAAWC,OAD9C,EAEK/G,IAASG,YAAqB6G,IAAgBI,cAFnD,EAGKpH,IAASS,cAAqBiG,IAAkBE,SAHrD,EAIK5G,IAASQ,YAAqB0gB,EAJnC,EAKKlhB,IAASM,oBAAqBse,EALnC,EAMK5e,IAASqC,mBAAqButB,EAASrnB,WAN5C,IAOGmE,QAEIwU,U,6BC9MnB,gFAqNO,SAAS2O,EAAalC,EAAtB,GAAyL,IAAhJO,EAAgJ,EAAhJA,8BAA+BuB,EAAiH,EAAjHA,YACnEK,EAAsEnC,EAAtEmC,UAAWhlB,EAA2D6iB,EAA3D7iB,QAASqjB,EAAkDR,EAAlDQ,OAAQvP,EAA0C+O,EAA1C/O,gBAAiBE,EAAyB6O,EAAzB7O,qBAErD,OAAO/M,aAAQ,cAAsH,IAAnH6R,EAAmH,EAAnHA,QAASP,EAA0G,EAA1GA,UAAWX,EAA+F,EAA/FA,aAAcE,EAAiF,EAAjFA,eAAgBvB,EAAiE,EAAjEA,iBAAiE,IAA/CC,2BAA+C,SAAdyO,EAAc,EAAdA,QACnH,OAAON,IAAcjnB,MAAK,SAAA0Y,GAAW,MAEjChF,cACK4B,KAAK,oBACLE,OAFL,OAGShe,IAASE,OAAqB4G,IAAWC,OAHlD,EAIS/G,IAASG,YAAqB6G,IAAgBO,mBAJvD,EAKSvH,IAASM,oBAAqBse,EALvC,IAMOlS,QAEP,IAAMkM,EAAO,CAAEsI,UAAS0C,UAASP,YAAWX,eAAcE,kBACpD8M,EA/DlB,YAAoO,IAApMvB,EAAoM,EAApMA,OAAQjN,EAA4L,EAA5LA,QAASmC,EAAmL,EAAnLA,UAAWO,EAAwK,EAAxKA,QAASmM,EAA+J,EAA/JA,QAASnN,EAAsJ,EAAtJA,eAAgBsL,EAAsI,EAAtIA,8BAA+B7M,EAAuG,EAAvGA,iBAAkBvC,EAAqF,EAArFA,qBAAsBwC,EAA+D,EAA/DA,oBAG3J0O,EAAqBje,aAAQ,kBAAMoS,YAAgBvB,EAAgB,CAAEvB,wBACrE4O,EAA0Ble,aAAQ,kBAAMmS,YAAqBtB,EAAgB,CAAEvB,wBAiB/EL,EAlIV,YAAoL,IAAvJmN,EAAuJ,EAAvJA,OAAQjN,EAA+I,EAA/IA,QAAS6O,EAAsI,EAAtIA,QAAS7B,EAA6H,EAA7HA,8BAA+B7M,EAA8F,EAA9FA,iBAAkBvC,EAA4E,EAA5EA,qBAAsBwC,EAAsD,EAAtDA,oBAEpH4O,EAAuB,SAACznB,GAM1B,GAJ2BA,GAAOA,EAAImQ,MAAQnQ,EAAImQ,KAAKuX,SAAW1nB,EAAImQ,KAAKuX,QAAQC,MAAK,SAAAC,GACpF,OAAOA,EAAOC,QAAU7qB,IAAgBC,qBAAuB2qB,EAAOC,QAAU7qB,IAAgBE,yBAIhG,OAAOoqB,IAAUvnB,KAAK8jB,KAG1B,MAAM,IAAIriB,MAAM,gCAGdvZ,EAAMqhB,aAAQ,WAChB,OAAOmc,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOG,YAASF,EAAS,CAAED,yBAAwBI,mBAAkBvC,uBAAsBwC,8BAI7FiP,EAAUxe,aAAQ,WACpB,GAAIoc,IAAWjvB,IAAO0D,QAClB,MAAM,IAAIqH,MAAJ,OAAkBzL,IAAeU,OAAjC,IAA6CA,IAAO0D,QAApD,+BAGV,OAAOsrB,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOM,YAAaL,EAAS,CAAED,yBAAwBI,mBAAkBvC,uBAAsBwC,wBAC1FrW,QAAQva,EAAI8hB,OACZvH,QAAQslB,EAAQ/d,OAChBzH,MAAMmlB,SAIbM,EAAYze,aAAQ,WACtB,GAAIoc,IAAWjvB,IAAO2D,UAClB,MAAM,IAAIoH,MAAJ,OAAkBzL,IAAeU,OAAjC,IAA6CA,IAAO2D,UAApD,iCAGV,OAAOqrB,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOO,YAAeN,EAAS,CAAED,yBAAwBI,mBAAkBvC,uBAAsBwC,wBAC5FrW,QAAQva,EAAI8hB,OACZvH,QAAQulB,EAAUhe,OAClBzH,MAAMmlB,SAYnB,MAAO,CAAEK,UAASC,YAAW5O,MARf,SAAChJ,GACX,YADyB,IAAdA,MAAO,IACXsV,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOQ,YAAWP,EAAStI,EAAM,CAAEqI,yBAAwBI,mBAAkBvC,uBAAsBwC,wBAAuBvW,OAAM,WAC5H,MAAM,IAAId,MAAM,qCAKQvZ,OA2EtBu9B,CAAkB,CAAEE,SAAQjN,UAASmC,YAAWO,UAAShB,iBAAgBmN,UAAS7B,gCAA+B7M,mBAAkBvC,uBAAsBwC,wBACjK8B,EAzEV,YAA+K,IAAhJ+K,EAAgJ,EAAhJA,OAAQ9K,EAAwI,EAAxIA,UAAWO,EAA6H,EAA7HA,QAASmM,EAAoH,EAApHA,QAAS7B,EAA2G,EAA3GA,8BAA+B7M,EAA4E,EAA5EA,iBAAkBvC,EAA0D,EAA1DA,qBAEjH,GAAKuE,EAAL,CAIA,IAAM6M,EAAuB,SAACznB,GAM1B,GAJ2BA,GAAOA,EAAImQ,MAAQnQ,EAAImQ,KAAKuX,SAAW1nB,EAAImQ,KAAKuX,QAAQC,MAAK,SAAAC,GACpF,OAAOA,EAAOC,QAAU7qB,IAAgBC,qBAAuB2qB,EAAOC,QAAU7qB,IAAgBE,yBAIhG,OAAOoqB,IAAUvnB,KAAK8jB,KAG1B,MAAM,IAAIriB,MAAM,gCAGdvZ,EAAMqhB,aAAQ,WAChB,OAAOmc,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOyC,YAAWL,EAAW,CAAEpC,yBAAwBI,mBAAkBvC,+BAI3E2R,EAAU1e,aAAQ,WACpB,GAAIoc,IAAWjvB,IAAO0D,QAClB,MAAM,IAAIqH,MAAJ,OAAkBzL,IAAeU,OAAjC,IAA6CA,IAAO0D,QAApD,+BAGV,OAAOsrB,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAO0C,YAAeN,EAAWO,EAAS,CAAE3C,yBAAwBI,mBAAkBvC,yBACjF7T,QAAQva,EAAI8hB,OACZvH,QAAQwlB,EAAQje,OAChBzH,MAAMmlB,SAYnB,MAAO,CAAEO,UAAS7O,MARJ,SAAChJ,GACX,YADyB,IAAdA,MAAO,IACXsV,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAO6C,YAAaT,EAAWzK,EAAM,CAAEqI,yBAAwBI,mBAAkBvC,yBAAwB/T,OAAM,WAC3G,MAAM,IAAId,MAAM,qCAKHvZ,QA2BTm+B,CAAoB,CAAEV,SAAQjN,UAASmC,YAAWO,UAAShB,iBAAgBmN,UAAS7B,gCAA+B7M,mBAAkBvC,uBAAsBwC,wBAE3K,MAAO,CACHN,QACAoC,QAAcjI,IAAqBiI,EAAU,KAC7CsN,aAAc,CAAEhgC,IAAKs/B,EAAoBW,SAAUV,GACnDF,UACAza,SAvBa,SAACL,GACd,IAAKA,EACD,MAAM,IAAIhL,MAAJ,yBAGV,IAA4B,IAAxBgL,EAAI7K,QAAQ,OAEZ,MADA8R,cAAY6B,KAAK,uBAAwB,CAAE9I,QAAOvI,QAC5C,IAAIzC,MAAJ,yBAAoCgL,EAApC,kCAKV,OAJYA,EAAIwO,MAAM,iBAClBvH,cAAY6B,KAAK,qBAAsB,CAAE9I,QAAOvI,QAG7CkkB,YAAM3b,EAAK7M,OAAO4O,OA6CL6Z,CAAqB,CAAE3P,UAASmC,YAAWO,UAASuK,SAAQ4B,UAASnN,iBAAgBsL,gCAA+B7M,mBAAkBvC,uBAAsBwC,wBAE5K,OAAIwO,EACOA,EAAUlX,EAAM8W,GAAS3kB,MAAMD,GAElCqjB,IAAWjvB,IAAO0D,QACX8sB,EAAQ1O,MAAMuP,UAAU/nB,KAAKoK,KAC7Bub,IAAWjvB,IAAO2D,UAClB6sB,EAAQ1O,MAAMwP,YAAYhoB,KAAKoK,UADnC,U,6BC5OvB,6IAoBO,SAASke,EAAT,GACH,MAAO,CACH5P,QAFmF,EAAtDA,SAM9B,SAAS6P,IAiBZ,MAAO,CACHzb,SAjBa,SAACL,GACd,IAAKA,EACD,MAAM,IAAIhL,MAAJ,yBAGV,IAA4B,IAAxBgL,EAAI7K,QAAQ,OAEZ,MADA8R,cAAY6B,KAAK,uBAAwB,CAAE9I,QAAOvI,QAC5C,IAAIzC,MAAJ,yBAAoCgL,EAApC,kCAKV,OAJYA,EAAIwO,MAAM,iBAClBvH,cAAY6B,KAAK,qBAAsB,CAAE9I,QAAOvI,QAG7CkkB,YAAM3b,EAAK7M,OAAO4O,OAW1B,SAASga,EAAYrD,EAArB,GAAkG,IAA1D8B,EAA0D,EAA1DA,YAA0D,EAC/C9B,EAA9CsD,gBAD6F,MAClFre,IADkF,EAC5E9H,EAA6B6iB,EAA7B7iB,QAAS8T,EAAoB+O,EAApB/O,gBAElC,OAAO7M,aAAQ,WACX,OAAO0d,IAAcjnB,MAAK,SAAA0Y,GAAW,MASjC,OARAhF,cACK4B,KAAK,iBACLE,OAFL,OAGShe,IAASE,OAAqB4G,IAAWC,OAHlD,EAIS/G,IAASG,YAAqB6G,IAAgBQ,gBAJvD,EAKSxH,IAASM,oBAAqBse,EALvC,IAMOlS,QAEAukB,EAASH,EAAmB,CAAE5P,YAAY6P,QAClDhmB,OAAM,SAAAtC,GACL,OAAOqC,EAAQrC,W,kLCzCpB,SAASyoB,EAA2BtY,GACvC,OAAOA,EAWJ,SAASuY,EAAT,GAAiV,IAA1SjQ,EAA0S,EAA1SA,QAAkBgN,EAAwR,EAAxRA,8BAA+B7M,EAAyP,EAAzPA,iBAAkBvC,EAAuO,EAAvOA,qBAe7G,MAAO,CACH9V,QANY,kBAAMG,IAAaH,WAO/BgB,OAjBgV,EAAjS0lB,QAW5B1lB,QAAU,WAC7B,MAAM,IAAIC,MAAJ,mCAMN+W,MAAO,CAAEY,MAhBC,SAAChJ,GACX,YADyB,IAAdA,MAAO,IACXsV,EAA8B1lB,MAAK,SAAAyY,GACtC,OAAOQ,YAAWP,EAAStI,EAAM,CAAEqI,yBAAwBI,mBAAkBvC,uBAAsBwC,qBAAqB,IAASvW,OAAM,WACnI,MAAM,IAAId,MAAM,uCAmBzB,SAASmnB,EAAoBzD,EAA7B,GAAwM,IAAxJO,EAAwJ,EAAxJA,8BAA+BuB,EAAyH,EAAzHA,YAC1E4B,EAA4D1D,EAA5D0D,iBAAkBzS,EAA0C+O,EAA1C/O,gBAAiBE,EAAyB6O,EAAzB7O,qBAE3C,GAAIuS,EACA,OAAO,WAAgC3B,GAAY,IAAzCrO,EAAyC,EAAzCA,iBAAqBzI,EAAoB,oCAC/C,OAAO6W,IAAcjnB,MAAK,SAAA0Y,GAAW,MASjC,OARAhF,cACK4B,KAAK,0BACLE,OAFL,OAGShe,IAASE,OAAqB4G,IAAWC,OAHlD,EAIS/G,IAASG,YAAqB6G,IAAgBM,yBAJvD,EAKStH,IAASM,oBAAqBse,EALvC,IAMOlS,QAEA2kB,EAAiBH,EAA2BtY,GAAOuY,EAA4B,CAAEjQ,UAASgN,gCAA+B7M,mBAAkBqO,UAAS5Q,gC,6BC1E3K,wKAmBawS,EAAc,CACvBC,OAAU,EACVC,SAAU,GAGP,SAASC,EAAT,GACH,MAAO,CAAE1O,cADyG,EAAlFA,eAI7B,SAAS2O,IACZ,MAAO,CACH1oB,QAAS,kBAAMG,IAAagC,KAAI,kBAAMmmB,EAAYC,UAClDvnB,OAAS,kBAAMb,IAAagC,KAAI,kBAAMmmB,EAAYE,aAUnD,SAASG,EAAWhE,GAAkC,IACjDpX,EAA6BoX,EAA7BpX,QAASqI,EAAoB+O,EAApB/O,gBAEjB,GAAKrI,EAIL,OAAO,YAAqE,MAAlEwM,EAAkE,EAAlEA,cAQN,OAPA7G,cAAY4B,KAAK,gBAAgBE,OAAjC,OACKhe,IAASE,OAAqB4G,IAAWC,OAD9C,EAEK/G,IAASG,YAAqB6G,IAAgBE,aAFnD,EAGKlH,IAASM,oBAAqBse,EAHnC,EAIK5e,IAASwB,gBAAqBuhB,EAJnC,IAKGrW,QAEI6J,EAAQkb,EAAkB,CAAE1O,kBAAkB2O,KAAwBlpB,MAAK,SAAAopB,GAC9E,OAAQA,IAAUN,EAAYE,c,6BC3CnC,SAASK,IAEZ,MAAO,GAGJ,SAASC,IAEZ,MAAO,GAKJ,SAASC,EAA0BpE,GAA2C,IACzE6B,EAA2B7B,EAA3B6B,uBAER,GAAIA,EACA,OAAO,WACH,OAAOA,EAfR,GAKA,IAU0GhnB,MAAK,SAAAka,GAC1G,IAAKA,GAAwC,iBAAjBA,EACxB,MAAM,IAAIzY,MAAJ,mEAGV,OAAOyY,MAtBvB,uG,6BCZA,iHAeO,SAASsP,IAEZ,MAAO,GAGJ,SAASC,EAAT,GAA8N,IAAnL/D,EAAmL,EAAnLA,8BAA+BpP,EAAoJ,EAApJA,qBAa7E,MAAO,CACH4R,aAAc,CAAEv/B,OAbL,SAACynB,GACZ,OAAOsV,EAA8B1lB,MAAK,SAAAkX,GACtC,OAAOqE,YAAmBrE,EAAa9G,EAAM,CAAEkG,6BAW3BoT,OAPb,SAACtP,EAAyBhK,GACrC,OAAOsV,EAA8B1lB,MAAK,SAAAkX,GACtC,OAAOuE,YAAmBvE,EAAakD,EAAgBhK,EAAM,CAAEkG,+BAWpE,SAASqT,EAAsBxE,EAA/B,GAAoK,IAAlHO,EAAkH,EAAlHA,8BACzBkE,EAAiDzE,EAArE5J,mBAA4CjF,EAAyB6O,EAAzB7O,qBACpD,GAAIsT,EACA,OAAO,WACH,OAAOA,EA3BR,GA2B+DH,EAAgC,CAAE/D,gCAA+BpP,0BAAyBtW,MAAK,SAAAoa,GACzJ,IAAKA,GAA4C,iBAAnBA,EAC1B,MAAM,IAAI3Y,MAAJ,kEAGV,OAAO2Y,Q,6BCrDR,SAASyP,EAA8BpW,EAAQqW,GAC5D,GAAc,MAAVrW,EAAgB,MAAO,GAC3B,IAEI7qB,EAAKvB,EAFLmsB,EAAS,GACTuW,EAAahiC,OAAOwb,KAAKkQ,GAG7B,IAAKpsB,EAAI,EAAGA,EAAI0iC,EAAWhoB,OAAQ1a,IAE7ByiC,EAASloB,QADbhZ,EAAMmhC,EAAW1iC,KACY,IAC7BmsB,EAAO5qB,GAAO6qB,EAAO7qB,IAGvB,OAAO4qB,EAZT,mC,6BCGA,M,6BCDA,yOAiBO,SAASwW,EAAT,GAAwH,IAApGtE,EAAoG,EAApGA,8BAEjBP,EAAkBvlB,OAAOulB,OAG3BjP,EAyBAiP,EAzBAjP,IACA+T,EAwBA9E,EAxBA8E,MACA1T,EAuBA4O,EAvBA5O,OACAE,EAsBA0O,EAtBA1O,OACAyT,EAqBA/E,EArBA+E,SACA/T,EAoBAgP,EApBAhP,UACAC,EAmBA+O,EAnBA/O,gBACAC,EAkBA8O,EAlBA9O,SACAC,EAiBA6O,EAjBA7O,qBACAE,EAgBA2O,EAhBA3O,cACA2T,EAeAhF,EAfAgF,gBACA1Q,EAcA0L,EAdA1L,kBACA2Q,EAaAjF,EAbAiF,eACAC,EAYAlF,EAZAkF,oBACAC,EAWAnF,EAXAmF,WACA3Q,EAUAwL,EAVAxL,wBACA4Q,EASApF,EATAoF,yBArBuH,EA8BvHpF,EARAqF,4BAtBuH,SAuB7GC,EAOVtF,EAPAuF,SACApoB,EAMA6iB,EANA7iB,QACAqoB,EAKAxF,EALAwF,UACAC,EAIAzF,EAJAyF,aACAxG,EAGAe,EAHAf,MACAvD,EAEAsE,EAFAtE,UACA+E,EACAT,EADAS,SAGER,EAASF,YAAUC,GACnBxO,EAA6C,mBAApBwT,EAAkCA,IAAoB,UAE/Epc,EAAUob,YAAWhE,GAE3B,GAAIA,EAAO6B,uBAAwB,CAC/B,GAAI7B,EAAO8B,YACP,MAAM,IAAIxlB,MAAJ,2DAGV,IAAK0jB,EAAO8E,MACR,MAAM,IAAIxoB,MAAJ,6DAId,GAAI0jB,EAAO5J,mBAAoB,CAC3B,GAAI4J,EAAO8B,YACP,MAAM,IAAIxlB,MAAJ,uDAGV,GAAI0jB,EAAO8B,YACP,MAAM,IAAIxlB,MAAJ,kEAGV,IAAK0jB,EAAO8E,MACR,MAAM,IAAIxoB,MAAJ,yDAId,IAAMulB,EAAyBuC,YAA0BpE,GACnD5J,EAAqBoO,YAAsBxE,EAAQ,CAAEO,kCAErDuB,EAAcF,YAAe5B,EAAQ,CAAEO,gCAA+BsB,yBAAwBzL,uBAMpG,MAAO,CACHrF,MACAkO,QAEA6F,QACA1T,SAEAkD,oBACAhD,SAEAN,YACAC,kBACAC,WACAC,uBACAE,gBACAG,iBACAuT,WACAtE,WAEAwE,iBACAC,sBACAC,aACAG,kBACA5J,YAEAlH,0BACA4Q,2BACAC,uBAEAzc,UACAqX,SACA9iB,UACAqoB,YACAC,eAEA3D,cACAD,yBACAzL,qBACA+L,UA1CcD,YAAalC,EAAQ,CAAEO,gCAA+BuB,gBA2CpEwB,SA1CaD,YAAYrD,EAAQ,CAAEO,gCAA+BuB,gBA2ClE4B,iBA1CqBD,YAAoBzD,EAAQ,CAAEO,gCAA+BuB,iBAoDnF,SAAS4D,IAA6B,MACWjrB,OAAOkrB,OAC3D,MAAO,CAAEC,SAFgC,EACjCA,SACWC,WAFsB,EACvBA,WACaC,kBAFU,EACXA,mBAU3B,SAASC,EAAT,GAAiI,IAA5FC,EAA4F,EAA5FA,eAClCC,EAD8H,EAA5GC,gBACWzH,cAGnC,MAAO,CACHhN,QAHYhX,OAAOkrB,OAAOlU,QAI1BwU,WACAhT,SAAU+S,GA8BX,SAASG,EAAT,GAAqN,IAEpN5F,EAFyBjN,EAA2L,EAA3LA,uBAAwBpC,EAAmK,EAAnKA,SAAUkV,EAAyJ,EAAzJA,gBAAiBC,EAAwI,EAAxIA,8BAA+BC,EAAyG,EAAzGA,mBAAoBC,EAAqF,EAArFA,gBAAiBC,EAAoE,EAApEA,iBAAkBC,EAAkD,EAAlDA,YAatK,OATInT,EACAiN,EAAgC/kB,IAAaH,QAAQiY,GAC9CpC,EACPqP,EAAgC7N,YAAkBxB,GAGlDoC,EAAyB9X,IAAasB,YAAY,IAAIR,MAAJ,0BAG/C,CACHiV,WAAciV,EACdE,aAAcN,GAAmBniC,IAAQ6L,GACzCw2B,qBACAC,kBAEAhG,gCACAkG,YAAc,CACVE,WAAYN,EACZO,SAAYH,GAAcA,EAAYG,W,6CC/MlD,2CAEaC,EAAsB,CAC/B9Z,QAAU,UACV+Z,OAAU,W,6BCJd,W,6BCAA,M,yGCAaC,EAAY,CACrBC,QAAY,UACZC,KAAY,OACZC,UAAY,YACZC,SAAY,YCoBhB,SAASC,EAAkB5c,EAAsE6c,GAAmD,IAChJ,IAAMnrB,EAAS,GADiI,MAG5HsO,EAH4H,WAGlH,CAAzB,IACK8c,EADU9c,EAAJ,GACgB+c,OAAOF,GAEnC,GAAKC,EAEE,GAAIxjB,MAAMkQ,QAAQsT,GAAgB,cACdA,EADc,WACC,CAAjC,IAAME,EAAYF,EAAJ,GACXE,GACAtrB,EAAOQ,KAAK8qB,QAIpBtrB,EAAOQ,KAAK4qB,GAIpB,OAAOprB,EAGJ,IAAMurB,EAAb,WAQI,WAAYhlC,EAAe0kB,EAAuBqD,GAAsE,KAPxHmK,KAAoCoS,EAAUC,QAO0E,KALxHvkC,UAKwH,OAJxH0kB,WAIwH,OAHxHqD,cAGwH,OAFxHkd,cAEwH,EACpHzrB,KAAKxZ,KAAOA,EACZwZ,KAAKkL,MAAQA,EACblL,KAAKuO,SAAWA,EAEhB,IAAMkd,EAAWvgB,EAAMugB,SACC,mBAAbA,IACPzrB,KAAKyrB,SAAWA,SACTvgB,EAAMugB,UAhBzB,2BAoBIH,OAAA,SAAUF,GACN,IAAMjd,EAAKid,EAASprB,MAIpB,OAHIA,KAAKyrB,UACLzrB,KAAKyrB,SAAStd,GAEXA,GAzBf,EA4BIgd,eAAA,SAAkBC,GACd,OAAOD,EAAenrB,KAAKuO,SAAU6c,IA7B7C,KAiCaM,EAAb,WAKI,WAAYnd,GAAsE,KAJlFmK,KAAqCoS,EAAUI,SAImC,KAFlF3c,cAEkF,EAC9EvO,KAAKuO,SAAWA,EANxB,mBASI+c,OAAA,SAAUF,GACN,OAAOD,EAAenrB,KAAKuO,SAAU6c,IAV7C,KAcaO,EAAb,WAKI,WAAYC,GAAe,KAJ3BlT,KAAiCoS,EAAUE,KAIhB,KAF3BY,UAE2B,EACvB5rB,KAAK4rB,KAAOA,EANpB,mBASIN,OAAA,SAAUF,GACN,OAAOA,EAASprB,OAVxB,KAca6rB,EAAb,WAOI,WAAYC,EAAsC5gB,EAAuBqD,GAAsE,KAN/ImK,KAAsCoS,EAAUG,UAM+F,KAJ/Ia,eAI+I,OAH/I5gB,WAG+I,OAF/IqD,cAE+I,EAC3IvO,KAAK8rB,UAAYA,EACjB9rB,KAAKkL,MAAQA,EACblL,KAAKuO,SAAWA,EAVxB,2BAaIwd,gBAAA,SAAgBX,GAEZ,IACM7K,EAsCd,SAAwBA,GACpB,IAAMhS,EAAWyd,EAAkBnkB,MAAMkQ,QAAQwI,GAASA,EAAQ,CAAEA,IAEpE,OAAwB,IAApBhS,EAAS5N,OACF4N,EAAS,GACTA,EAAS5N,OAAS,EAClB,IAAI+qB,EAAand,QADrB,EA3CW0d,CAAejsB,KAAK8rB,UADhB9rB,KAAKkL,MAC4BlL,KAAKuO,WACxD,GAAIgS,EACA,OAAOA,EAAM+K,OAAOF,IAlBhC,EAsBIE,OAAA,SAAUF,GACN,OAAOA,EAASprB,OAvBxB,EA0BImrB,eAAA,SAAkBC,GACd,OAAOD,EAAenrB,KAAKuO,SAAU6c,IA3B7C,KA+BA,SAASY,EAAkBzd,GAA6F,IACpH,IAAMtO,EAAS,GADqG,MAGhGsO,EAHgG,WAGtF,CAAzB,IAAMgS,EAAShS,EAAJ,GACZ,GAAKgS,EAEE,GAAqB,iBAAVA,EACdtgB,EAAOQ,KAAK,IAAIkrB,EAASpL,SACtB,GAAI1Y,MAAMkQ,QAAQwI,GAAQ,cACNyL,EAAkBzL,GADZ,eAEzBtgB,EAAOQ,KADQ,UAGhB,KAAI8f,GAAUA,EAAM7H,OAASoS,EAAUC,SAAWxK,EAAM7H,OAASoS,EAAUE,MAAQzK,EAAM7H,OAASoS,EAAUG,UAI/G,MAAM,IAAIrpB,UAAJ,kCAAiD2e,GAHvDtgB,EAAOQ,KAAK8f,IAOpB,OAAOtgB,EAaJ,I,EAAMisB,EAAuB,SAACtf,EAAS1B,GAAuB,2BAAbqD,EAAa,iCAAbA,EAAa,kBAKjE,GAHArD,EAAQA,GAAS,GACjBqD,EAAWyd,EAAkBzd,GAEN,iBAAZ3B,EAEP,OAAO,IAAI4e,EAAY5e,EAAS1B,EAAOqD,GAG3C,GAAuB,mBAAZ3B,EAEP,OAAO,IAAIif,EAAcjf,EAAS1B,EAAOqD,GAG7C,MAAM,IAAI3M,UAAJ,sDC1LJuqB,EAAc,mBCSdC,EAAc,CAChBC,KAAS,OACTpwB,OAAS,SACTqwB,OAAS,SACTC,KAAS,OACTC,QAAS,WAGPC,EAAe,CACjBx/B,GAAY,KACZy/B,WAAY,YACZC,GAAY,MAyDVC,IAAiF,MAEjFR,EAAYnwB,QAAU,SAACkS,EAAI+d,GACzB,IAAMW,EAAaX,EAAK3d,SAAS,GAEjC,GAA6B,IAAzB2d,EAAK3d,SAAS5N,SAAkBksB,GAAcA,EAAWnU,OAASoS,EAAUC,SAAY8B,EAAWrmC,OAAS4lC,EAAYC,KACxH,MAAM,IAAIhsB,MAAJ,sDAAiE+rB,EAAYnwB,OAA7E,YAGVkS,EAAGtB,iBAAiB,QAAQ,WAGxB,IAAMlB,EAAMwC,EAAGkT,cAEf,IAAK1V,EACD,MAAM,IAAItL,MAAJ,wCAMV,IAHA,IAAMqM,EAAMf,EAAIrI,SACVwpB,EAAapgB,EAAI4B,gBAEhBwe,EAAWve,UAAYue,EAAWve,SAAS5N,QAC9CmsB,EAAWte,YAAYse,EAAWve,SAAS,IAM/C,IAFA,IAAMgS,EAAsBsM,EAAWvB,OAAOyB,EAAI,CAAErgB,SAE7C6T,EAAMhS,SAAS5N,QAClBmsB,EAAWre,YAAY8R,EAAMhS,SAAS,QA7BiC,EAkCjF6d,EAAYE,QAAU,SAACne,EAAI+d,GACzB,IAAMW,EAAaX,EAAK3d,SAAS,GAEjC,GAA6B,IAAzB2d,EAAK3d,SAAS5N,SAAkBksB,GAAcA,EAAWnU,OAASoS,EAAUE,KAC5E,MAAM,IAAI3qB,MAAJ,8CAAyD+rB,EAAYE,OAArE,YAIVne,EAAGyd,KAAOiB,EAAWjB,MA1C0D,EA6CjFQ,EAAYI,SAAW,SAACre,EAAI+d,EAAMd,GAAa,cACzBc,EAAKf,eAAeC,GADK,eAEzCjd,EAAGM,YADS,OA9C+D,GA+EhF,SAASse,EAAIC,QAAgD,IAAhDA,MAA8B,IAAkB,MACrCA,EAAnBtgB,WADwD,MAClDpJ,SADkD,EAwBhE,OArBkC,SAA5B2pB,EAA6Bf,GAC/B,GAAIA,EAAKxT,OAASoS,EAAUG,UACxB,OAAOiB,EAAKH,gBAAgBkB,GAGhC,GAAIf,EAAKxT,OAASoS,EAAUE,KAExB,OAvHZ,SAA2Bte,EAAgBwf,GACvC,OAAOxf,EAAIwgB,eAAehB,EAAKN,MAsHhBuB,CAAkBzgB,EAAKwf,GAGlC,GAAIA,EAAKxT,OAASoS,EAAUC,QAAS,CACjC,IAAM5c,EApIlB,SAAuBzB,EAAgBwf,GACnC,OAAIA,EAAKhhB,MAAMuhB,EAAaE,IAEjBT,EAAKhhB,MAAMuhB,EAAaE,IAG5BjgB,EAAIoW,cAAcoJ,EAAK1lC,MA8HXs8B,CAAcpW,EAAKwf,GAI9B,OA3HZ,SAAkB/d,EAAkB+d,GAAM,IACtC,IAAMhhB,EAAQghB,EAAKhhB,MADmB,MAGnBvkB,OAAOwb,KAAK+I,GAHO,eAGC,CAAlC,IAAMkiB,EAAI,KACLrlB,EAAMmD,EAAMkiB,GAEdrlB,SAA8CqlB,IAASX,EAAaE,IAAMS,IAASX,EAAaC,aAIhGU,EAAKvT,MAAM,kBAAmC,mBAAR9R,EACtCoG,EAAGtB,iBAAiBugB,EAAK5lB,MAAM,GAAGC,cAAeM,GAC3B,iBAARA,GAAmC,iBAARA,EACzCoG,EAAGsV,aAAa2J,EAAMrlB,EAAIpJ,YAEJ,kBAARoJ,IACF,IAARA,GACAoG,EAAGsV,aAAa2J,EAAM,KAK9Bjf,EAAGE,QAAQ5G,gBAAkB2kB,EAAYnwB,QAAWiP,EAAMqM,IAC1DpJ,EAAGsV,aAAagJ,EAAax/B,GAA7B,cDvEG,aAAa0Z,QAAQ,MAAM,kBAAMwlB,EAAY/kB,OAAOpC,KAAKqC,MAAMrC,KAAKC,SAAWknB,EAAYxrB,aCwK1F0sB,CAASlf,EAAI+d,GA1CzB,SAAqB/d,EAAkB+d,EAAoBxf,EAAgB0e,GACvE,GAAIc,EAAKhhB,MAAMrjB,eAAe4kC,EAAaC,YAAa,CAEpD,GAAIR,EAAK3d,SAAS5N,OACd,MAAM,IAAIN,MAAJ,0CAAqDosB,EAAaC,WAAlE,gBAGV,IAAMY,EAAOpB,EAAKhhB,MAAMuhB,EAAaC,YAErC,GAAoB,iBAATY,EACP,MAAM,IAAI1rB,UAAc6qB,EAAaC,WAA/B,wBAGNR,EAAK1lC,OAAS4lC,EAAYE,OAE1Bne,EAAGyd,KAAO0B,GAEVnf,EAAGof,UAAYD,EA3H3B,SAAoBnf,EAAkBzB,QAAkC,IAAlCA,MAAiBlO,OAAO8E,UAAU,cAC/C6K,EAAG3B,iBAAiB,UAD2B,eAChB,CAA/C,IAAMgX,EAAM,KACPlC,EAAakC,EAAOlC,WAE1B,GAAKA,EAAL,CAIA,IAAMkM,EAAY9gB,EAAIoW,cAAc,UAEpC0K,EAAU5B,KAAOpI,EAAOiK,YACxBnM,EAAWoM,aAAaF,EAAWhK,KAiH/BmK,CAAWxf,EAAIzB,SAIUkgB,EAAaV,EAAK1lC,OAASomC,EAAaR,EAAYI,UAC5Dre,EAAI+d,EAAMd,GAoB3BwC,CAAYzf,EAAI+d,EAAMxf,EAAKugB,GAEpB9e,EAGX,MAAM,IAAIvM,UAAJ,sB,MC9Kd,IAAMisB,EAAe,g6CAkEd,SAASC,EAAT,GAAoE,IAA7CrL,EAA6C,EAA7CA,MAC1B,OACI,cACI,cACI,yBACA,UAAMj8B,KAAK,WAAWunC,QAAQ,yCAElC,cACI,SAAKC,MAAM,qBACP,WAAOvL,MAAQA,EAAQ8K,UAAYM,IAEnC,SAAKG,MAAM,YACP,OAAGA,MAAM,iBACT,OAAGA,MAAM,eCpE1B,IAKHC,GAAe,EACfC,GAAe,EAsONC,EAAyB,CAClCC,MA1NJ,YAA0F,IAC9EzE,EAD8E,EAAjE0E,WACb1E,SAERsE,GAAe,EAHuE,MAK9D,CAAExO,YAAUjhB,QAASkiB,YAAOliB,SAA5CkhB,EAL8E,KAKtEtS,EALsE,KAOhFkhB,EAAQ,GAQd,OANIlhB,GAAOsS,GAAUA,IAAWtS,IAC5BkhB,EAAMC,YAAc5E,EAAS4E,YAAYnhB,GAAKxO,MAAK,SAAAqB,GAC/CiuB,EAAejuB,MAIhBV,IAAa2C,KAAKosB,GAAO1vB,KAAKoK,MA4MrCwlB,WAzMJ,WACI,OAAO,GAyMPrR,KA7HJ,SAASsR,EAAT,GAA6M,IAArLvjB,EAAqL,EAArLA,MAAOmjB,EAA8K,EAA9KA,WAAYK,EAAkK,EAAlKA,YAAalV,EAAqJ,EAArJA,QAASsB,EAA4I,EAA5IA,OAC7D,GAAImT,EACA,MAAM,IAAI5tB,MAAJ,6BAF+L,IAZ7M,EAwCQoX,EAqDA2F,EA5EIuM,EAAa0E,EAAb1E,SACA3U,EAEoD9J,EAFpD8J,gBAAiB6Q,EAEmC3a,EAFnC2a,YAAaK,EAEsBhb,EAFtBgb,UAAWmB,EAEWnc,EAFXmc,SAC7CI,EACwDvc,EADxDuc,iBAAkBpS,EACsCnK,EADtCmK,OAAQF,EAC8BjK,EAD9BiK,OAAQjU,EACsBgK,EADtBhK,QAAS2nB,EACa3d,EADb2d,MAAOxQ,EACMnN,EADNmN,kBAClDuN,EAAwD1a,EAAxD0a,uBAAwBzL,EAAgCjP,EAAhCiP,mBAAoBxN,EAAYzB,EAAZyB,QAC1CqV,EAA8CxI,EAA9CwI,OAAQrW,EAAsC6N,EAAtC7N,IAAKwN,EAAiCK,EAAjCL,cAAe+I,EAAkB1I,EAAlB0I,KAC1BmI,EAAqCqE,EAArCrE,mBAAoBI,EAAiBiE,EAAjBjE,aACpBT,EAAalP,EAAbkP,SAEFtnB,GAzBV,EAyB+B,CAAEiJ,MAAKgjB,QAJkBnV,EAAZmV,UArBtBhjB,IAEP3P,IAAQE,MAFgH,EAA5GyyB,SAKRlrB,cACJzH,IAAQE,MAGZF,IAAQC,OAkBX2yB,GAAW,EAETzI,EAAUhe,aAAQ,kBACpBsmB,EAAa,CAAEvjB,QAAOmjB,aAAYK,cAAa5T,SAAQtB,QAAS,CAAEwI,SAAQrW,MAAKwN,gBAAe+I,OAAMyM,SAAS,KACxGE,QAAQxtB,QAAQqhB,QAEnBnF,EAAU,WAEZ,GADA0Q,GAAe,GACVW,EACD,OAAOvH,KA6DTpZ,EAAQ,WAEV,OADAggB,GAAe,EACR1uB,IAAagC,KAAI,WACpB,GAAI6b,EACA,OAAOA,EAASnP,YAKtB4gB,EAAQ1mB,aAAQ,WAElB,OADAiV,EAhEOuM,EAAS,CACZnrB,OAAQmN,EACRqJ,kBACAqD,oBAEAwN,YAAa,WACT,OAAOA,IAAcjnB,MAAK,SAAA0Y,GACtB,OAlEpB,YAA+L,IAAnKA,EAAmK,EAAnKA,QAASuR,EAA0J,EAA1JA,MAAOxQ,EAAmJ,EAAnJA,kBAAmBuN,EAAgI,EAAhIA,uBAAwBzL,EAAwG,EAAxGA,mBAAoBhB,EAAoF,EAApFA,cAAekR,EAAqE,EAArEA,mBACtH,OAAO9qB,IAAagC,KAAI,WACpB,GAAK8W,EAIL,OA1CR,YAAuL,IAAnJwQ,EAAmJ,EAAnJA,MAAsE1P,EAA6E,EAA7EA,cAAekR,EAA8D,EAA9DA,mBACrH,IADmL,EAA5IhS,kBAEnC,OAAO,EAGX,GALmL,EAAzHuN,wBAAyH,EAAjGzL,mBAM9E,OAAO,EAGX,IAAM2U,EAAwBrlB,QAAQ4gB,EAAmBlR,IAAkBkR,EAAmBlR,GAAe4V,WAE7G,GAAIlG,IAAUiG,EACV,MAAM,IAAIzuB,MAAJ,gBAA2BzL,IAAeY,MAA1C,wBAAyE2jB,EAAzE,sBAGV,QAAI0P,KAIAiG,EAuBIE,CAAyB,CAAEnG,QAAOxQ,oBAAmBuN,yBAAwBzL,qBAAoBhB,gBAAekR,uBACzGpR,YAAY,CAAE3B,UAASe,sBAAqBlX,OAAM,SAAAtC,GACrD,GAAIgqB,EACA,MAAMhqB,UAHlB,KA4DmBowB,CAAiB,CAAE3X,UAASuR,QAAOxQ,oBAAmBgS,qBAAoBlR,gBAAeyM,yBAAwBzL,uBAAsBvb,MAAK,WAC/I,OAAO0Y,SAKnB4O,UAAW,YAA0D,IAAvDlM,EAAuD,EAAvDA,QAASP,EAA8C,EAA9CA,UAAWX,EAAmC,EAAnCA,aAAcE,EAAqB,EAArBA,eAI5C,OAHA4V,GAAW,EAGJ3gB,IAAQrP,MAAK,WAChB,OAAOsnB,EAAU,CAAElM,UAASP,YAAWX,eAAcE,iBAAgBvB,oBAAoB,CAAE0O,gBAInG+I,OAAQ,YACJzX,EADyB,EAAlB3B,aAIXuR,SAAU,WAEN,OAAOpZ,IAAQrP,MAAK,WAChB,OAAOyoB,QAIfI,iBAAkBA,EACZ,SAACzY,EAAM8W,GACL,OAAO2B,EAAiB,aAAEhQ,oBAAqBzI,GAAQ8W,IACvD,KAER5kB,UACAqc,UAEApE,gBACA+I,OACAuI,eACApV,SACAF,SACA6U,cAmBYmF,UAzMd/hB,EAAMsT,YAAOliB,QACf0vB,GAAgB9gB,EACTA,EACAqS,cACAA,cAEAjhB,QAmMqCrC,IAAeC,KAAMsG,GA1MzE,IACU0K,KAgON,MAAO,CAAEgiB,MApBK,WACV,OAAO7vB,IAAagC,KAAI,WACpB,OAAKoL,GAKLhB,EAAMA,GClOX,YAAoG,IAA/EuB,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,OACzBxB,EAAM0U,YAAiBpT,YAAM,GAAI,CAAEC,QAAOC,YAE1CT,EAAMf,EAAIrI,SAEV+rB,EACF,EAACvB,EAAD,CAAarL,MAAQD,gBACvB8I,OAAOyB,EAAI,CAAErgB,SAIf,OAFAwB,YAAqBvC,EAAK0jB,GAEnB1jB,EDuNc2jB,CAAU,CAAEpiB,MA3NzB,IA2NiEC,OA1NjE,MA4NOR,EAAQ,CAAEwM,kBAAiBva,MAAK,SAAAopB,GAMnC,OAJIrc,IAAQqc,GACRrc,EAAIsC,QAGD+Z,OAZP6G,KACO,OAgBHA,QAAO5gB,WExOvBshB,GAAiB,EA+BrB,SAASC,EAActN,GACnB1V,YAAiB,IAAKjR,IAAgB5B,KAAtB,KAAgC81B,SAAQ,SAAAthB,GACpDA,EAAG6U,MAAM0M,QAAWvhB,EAAG8T,aAAa1mB,IAAgB5B,QAAUuoB,EAAQ,IAAM,SAUpF,IC/CIyN,ED+CEC,EAAc,WAChB,IAAMC,EAAmBvsB,SAASwsB,cAAc,sBAC1CC,EAAuBzsB,SAASwsB,cAAT,yBAAiDx2B,IAAQK,KAAzD,MACvBq2B,EAAsB1sB,SAASwsB,cAAc,0BAEnD,IAAKD,IAAqBE,IAAyBC,EAC/C,MAAM,IAAI3vB,MAAJ,qCAGV,MAAO,CAAEwvB,mBAAkBE,uBAAsBC,wBAiHxCtF,EAA2B,CACpC0D,MA1KJ,aA2KII,WArKJ,YAA2I,IAA3GtjB,EAA2G,EAA3GA,MAAOsO,EAAoG,EAApGA,QAKnC,OAH+BA,EAAvB7N,KAAuB6N,EAAlBL,gBAOS7f,IAAQK,OARgCuR,EAAtD2d,QAAsD3d,EAA/Cuc,qBAA+Cvc,EAA7Bie,0BADsG,EAA3FuF,YAGpClE,YAuBWE,aA4InBvN,KApFJ,YAA+M,IAArLjS,EAAqL,EAArLA,MAAOmjB,EAA8K,EAA9KA,WAAY7U,EAAkK,EAAlKA,QAASkV,EAAyJ,EAAzJA,YAAa5T,EAA4I,EAA5IA,OACvD+K,EACyC3a,EADzC2a,YAAaK,EAC4Bhb,EAD5Bgb,UAAWmB,EACiBnc,EADjBmc,SAC5BhS,EAA6CnK,EAA7CmK,OAAQF,EAAqCjK,EAArCiK,OAAQjU,EAA6BgK,EAA7BhK,QAAS8T,EAAoB9J,EAApB8J,gBACrB4U,EAAeyE,EAAfzE,WACAzQ,EAAwBK,EAAxBL,cAAe+I,EAAS1I,EAAT0I,KACf8H,EAAalP,EAAbkP,SACAS,EAAiBiE,EAAjBjE,aAER,IAAKvI,EACD,MAAM,IAAI7hB,MAAJ,uCAGV,GAAIkvB,EAEA,OADAC,EAActN,GACP,CACH2M,MAAOlM,IACP1U,MAAO0U,KAIf,IAYIlL,EAZE0O,EAAUhe,aAAQ,kBACpBgmB,EAAShR,KAAK,CAAEjS,QAAOmjB,aAAY7U,QAAS,eAAKA,EAAP,CAAgBmV,SAAS,IAASD,cAAa5T,WACpF+T,QAAQxtB,QAAQqhB,QAtBkL,EAkChKkH,EAAW,CAClD/D,cAEA1M,gBACA+I,OAEAgE,UAAW,YAA0C,IAAvClM,EAAuC,EAAvCA,QAASP,EAA8B,EAA9BA,UAAWX,EAAmB,EAAnBA,aAE9B,OAAO7K,IAAQrP,MAAK,WAChB,OAAOsnB,EAAU,CAAElM,UAASP,YAAWX,eAAcrB,oBAAoB,CAAE0O,gBAInF+I,OAAQ,YACJzX,EADyB,EAAlB3B,aAIXuR,WACAnmB,UACAqc,QA7BY,WACZgS,GAAiB,GA6BjBU,iBA1BqB,SAAC,GACtBT,EAD6C,EAArBtN,OA4BxBlN,kBACAyV,eACApV,SACAF,SACA6U,aA1BIsB,EAlCmM,EAkCnMA,OAAe4E,EAlCoL,EAkC3LjiB,MA6BhBshB,GAAiB,EAEjB,IAQMthB,EAAQ,WAEV,OAjFI4hB,EAAqBD,IAArBC,iBAxCRrjB,YAAiB,IAAKjR,IAAgB5B,KAAtB,KAAgC81B,SAAQ,SAAAthB,GACpDA,EAAG6U,MAAM0M,QAAU,OA0CvBG,EAAiB7M,MAAMmN,UAAvB,MA8EWD,IAlFU,IACbL,GAoFR,MAAO,CAAEhB,MAbK,WACVU,GAAiB,EACjB,IAAMa,EAAgB9E,EAAO,0BAG7B,OAnGe,WAAM,MAC+CsE,IAAhEC,EADiB,EACjBA,iBAAkBE,EADD,EACCA,qBAAsBC,EADvB,EACuBA,oBAEhD,IAAKH,IAAqBE,IAAyBC,EAC/C,MAAM,IAAI3vB,MAAJ,+BAGV2vB,EAAoBhN,MAAMqN,UAAY,MACtCL,EAAoBhN,MAAMsN,QAAU,QAEpC,IAAMC,EAAoB,WACtBV,EAAiB7M,MAAMmN,UAAgBN,EAAiBW,UAAYT,EAAqBS,UAAzF,MAGJhyB,OAAOqO,iBAAiB,SAAU9C,aAAS,WACvC8lB,EAAiB7M,MAAMyN,mBAAqB,KAC5CF,QAGJA,IA8EIG,GACAlB,EAActN,GACPkO,GAQKniB,UAOhBohB,SAAY,EACZsB,QAAY,GEzEHC,EAA6B,CACtCxC,MAvGJ,aAwGII,WApGJ,YAAqG,IAA5DhV,EAA4D,EAA5DA,QAIrC,OAHiCA,EAAzB7N,OAAyB6N,EAApBlB,kBADoF,EAAnEpN,MAEtBuc,kBAmGRtK,KAzCJ,YAAgJ,IAApHjS,EAAoH,EAApHA,MAChB2a,EAC0E3a,EAD1E2a,YAAaK,EAC6Dhb,EAD7Dgb,UAAW7N,EACkDnN,EADlDmN,kBAC5BE,EAA8ErN,EAA9EqN,wBAAyBvD,EAAqD9J,EAArD8J,gBAAiBE,EAAoChK,EAApCgK,qBAAsBuK,EAAcvU,EAAduU,UAC5DoK,EAHoI,EAA7GwE,WAGvBxE,kBACAvR,EAJoI,EAAjGkB,QAInClB,gBAER,IAAKA,EACD,MAAM,IAAIjY,MAAJ,gDAGV,IAAKgY,EACD,MAAM,IAAIhY,MAAJ,kDAGV,IAAM8lB,EAAU,WACZ,OAAO5mB,IAAagC,KAAI,WACpB,MAAM,IAAIlB,MAAJ,6CAgBd,MAAO,CACHwuB,MAbU,WACV,OAAOtvB,IAAagC,KAAI,WACpB,OAAOskB,OACRjnB,MAAK,SAAC0Y,GACL,OAAOc,YAAsB,CAAEC,oBAAmBf,UAASgB,kBAAiBC,0BAAyBvD,kBAAiBE,4BACvHtW,MAAK,YACJ,OAtCZ,YAA2I,IAAzGirB,EAAyG,EAAzGA,kBAAmBrmB,EAAsF,EAAtFA,OAAQ2G,EAA8E,EAA9EA,KAAM0b,EAAwE,EAAxEA,YAAapG,EAA2D,EAA3DA,UAC5E,OAAOlgB,IAAagC,KAAI,WACpB,GAAe,MAAXiC,GAAkB2G,EAAKwP,OAASxP,EAAKwP,MAAM6M,MAAK,SAAAqK,GAAI,MAAiB,+BAAbA,EAAKjX,OAC7D,OA1BZ,YAA8H,IAA3FiQ,EAA2F,EAA3FA,kBAAmBhE,EAAwE,EAAxEA,YAAapG,EAA2D,EAA3DA,UAEzDtgB,EAAU,IAAII,IACd6d,EAAWyM,EAAkB,CAC/BhE,cACA5kB,UAAW,kBAAM9B,EAAQC,WACzBioB,SAAW,kBAAMloB,EAAQiB,OAAO,IAAIC,MAAJ,mBAChCa,QAAW,SAACrC,GAAD,OAASM,EAAQiB,OAAOvB,MAGvC,OAAOue,EAAS+R,SAAS1P,IAAatjB,IAAeC,MAChDwC,MAAK,kBAAMO,KACXkC,QAAQ+b,EAASnP,OAcP6iB,CAAwB,CAAEjH,oBAAmBhE,cAAapG,cAGrE,GAAe,MAAXjc,EACA,MAAM,IAAInD,MAAJ,wCAAmDmD,MA+BlDutB,CAAuB,CAAElH,oBAAmBrmB,OADzB,EAAnBA,OACoD2G,KADjC,EAAXA,KACkD0b,cAAapG,iBAC/E7gB,MAAK,WACJ,OAAOsnB,EAAU,GAAI,CAAEC,gBAM3BlY,MAAO,kBAAM1O,IAAaH,aAQ9BiwB,SAAY,EACZsB,QAAY,G,OCtFVK,EAAkB7oB,aAAQ,YAAmF,IAAhF4O,EAAgF,EAAhFA,WAAYgT,EAAoE,EAApEA,eAAgBvU,EAAoD,EAApDA,QAC3D,OAAOyF,YAAe,CAClBlE,aACAuE,UArBW,+BAsBXC,iBAAkB/F,EAClBgG,UAtBW,6BAuBXV,OAAkBiP,OC9BpBkH,EAA8C,CAChDvG,EACAkG,EH0EqC,CACrCxC,MAvEJ,YAA8E,IAAlDljB,EAAkD,EAAlDA,MACxB,OAAO3L,IAAagC,KAAI,WAAM,IAClBynB,EAAmB9d,EAAnB8d,eACR,GAAIA,EACA,OAAOA,IAAiBpqB,MAAK,SAAAsyB,GACzBvB,EAAoBuB,SAmEhC1C,WA7DJ,YAII,OAJgG,EAA5DhV,QAC5B7N,OAOHgkB,IAR2F,EAAnEzkB,MAErBuc,kBA4DRtK,KA3CJ,YAA0G,IAA/EjS,EAA+E,EAA/EA,MACf2a,EAA6C3a,EAA7C2a,YAAaK,EAAgChb,EAAhCgb,UAAWmB,EAAqBnc,EAArBmc,SAAUlS,EAAWjK,EAAXiK,OAClCgE,EAF8F,EAAxEK,QAEtBL,cAgCR,MAAO,CACH0V,MA/BU,SAARA,IACF,OAAOhJ,IAAcjnB,MAAK,SAAA0Y,GACtB,IAAKqY,EACD,MAAM,IAAItvB,MAAJ,yBAGV,IAAMgL,EAAMD,YAAU,GAAIyU,cAAgB5O,IAAeJ,SAAa,CAClErF,MAAO,CACH2N,gBACAV,MAAcnB,EACd6Z,WAAchc,EAAS/c,IAAY7C,OAAS6C,IAAYO,SACxDy4B,aAAczB,EAAkB0B,aAIxC,OAAO1B,EAAkBd,MAAMxjB,MAEhCzM,MAAK,YAAgF,IAA7E0yB,EAA6E,EAA7EA,OACP,GAAIA,IAAW1G,sBAAoB9Z,QAC/B,OAAOoV,EAAU,CAAElM,QAF6D,EAArEuX,QAEiB9X,UAFoD,EAAnD+X,UAEU1Y,aAFyC,EAA7B2Y,UAEI,CAAEtL,QAAS0I,IAGtE,GAAIyC,IAAW1G,sBAAoBC,OAC/B,OAAOxD,IAGX,MAAM,IAAIhnB,MAAJ,wBAAmCixB,OAM7CrjB,MAAO0U,MAQX0M,SAAY,GE6IoB,CAChCjB,MA5LJ,WACI,OAAO7uB,IAAagC,KAAI,gBA4LxBitB,WAvLJ,YAAgK,IAApItjB,EAAoI,EAApIA,MAAOsO,EAA6H,EAA7HA,QAE/B,GAAIhb,OAAOulB,OAAO2N,oBACd,OAAO,EAHiJ,IAOpItI,EAAyBle,EAAzBke,qBACNW,EAR0I,EAApHjP,OAQhC9D,SACAwT,EAToJ,EAA5GkE,YASxClE,YAIR,OAF+BhR,EAAvB7N,KAJyCT,EADzC4d,WAWS3vB,IAASE,SAVuB6R,EAD/Buc,kBAKajO,EAAlBL,gBAcS7f,IAAQC,SAlBmB2R,EADb0a,yBACa1a,EAA7CiP,sBA0BC1W,iBAIAsmB,KAIDX,GACOoB,EAAYG,QA8IvBxN,KA5HJ,YAA2M,IAmEnMwU,EAnEczmB,EAAqL,EAArLA,MAAOmjB,EAA8K,EAA9KA,WAAYvT,EAAkK,EAAlKA,OAAQtB,EAA0J,EAA1JA,QAASkV,EAAiJ,EAAjJA,YAC9C7I,EACuD3a,EADvD2a,YAAaK,EAC0Chb,EAD1Cgb,UAAWmB,EAC+Bnc,EAD/Bmc,SAAUnmB,EACqBgK,EADrBhK,QAASiU,EACYjK,EADZiK,OAAQ+T,EACIhe,EADJge,WACvDlU,EAA2D9J,EAA3D8J,gBAAiBF,EAA0C5J,EAA1C4J,IAAKyU,EAAqCre,EAArCqe,UAAWC,EAA0Bte,EAA1Bse,aAAc7c,EAAYzB,EAAZyB,QAC3C6I,EAAsCsF,EAAtCtF,QAAmBuU,EAAmBjP,EAA7B9D,SACTsN,EAAkCoK,EAAlCpK,8BACAnL,EAAkBK,EAAlBL,cAEFpC,EAAa7P,cAEf+G,EAAQ0U,IAENiP,EAAwB,SAACjmB,GAAiC,MACLwiB,EAAShR,KAAK,CAAEjS,QAAOmjB,aAAY7U,QAAS,eAAKA,EAAP,CAAgB7N,MAAKgjB,SAAS,IAAS7T,SAAQ4T,gBAEhJ,OADAzgB,EAF4D,EAC9BA,OAEvB4jB,EAHqD,EACpDhD,UAsGZ,MAAO,CACHO,MA1CU,WACV,IAAMzjB,EAAMsB,YAxDL7B,YAAU,GAAIyU,cAAgB5O,IAAeC,gBAAoB,CAAE1F,MAAO,CAAEuL,iBA0DnF,OAAOxX,IAAagC,KAAI,WACpB,OAAKoL,GAIEA,EAAQ,CAAEwM,kBAAiBva,MAAK,SAAAopB,GAKnC,OAJKA,GACD/Z,IAGG+Z,QAEZppB,MAAK,SAAAopB,GAsBJ,OApBA2J,EAAepyB,IAAagC,KAAI,WAC5B,OAAOymB,EAAQnC,IAAgBtmB,IAAasD,MAAM,QACnDjE,MAAK,WACJ,GAAIohB,YAAcrU,GAAM,CACpBA,EAAIsC,QADgB,QAxD1B8N,EAASiV,EAAgB,CAAEja,aAAYgT,iBAAgBvU,aAEtD6I,GAhIC,YAgIqB,WACzB,OAlBG9e,IAAa2C,KAAK,CACrBmV,uBAAwBiN,EACxBhN,QAAwBuO,IACxBiM,QAAwB5I,MACzBtqB,MAAK,YAAkD,IAA/CyY,EAA+C,EAA/CA,uBAAwBC,EAAuB,EAAvBA,QAASwa,EAAc,EAAdA,QAClC5uB,EAAYH,cAElB,MAAO,CACHuU,UAASD,yBAAwBya,UAAS3c,SAC1CjS,YAAW8R,kBAAiBF,MAAKyU,YAAWC,sBAYpDzN,EAAOsC,GAlIC,aAkIsB,YAAoD,QAAjDrP,KAAQgL,EAAyC,EAAzCA,QAASP,EAAgC,EAAhCA,UAAWX,EAAqB,EAArBA,aAIzD,OAHAiD,EAAO9N,QAGAiY,EAFM,CAAElM,UAASP,YAAWX,eAAcpB,qBAAqB,GACtD,CAAEyO,QAAS,kBAAMyL,UAIrC7V,EAAOsC,GAxIC,YAwIqB,WAEzB,OADAtC,EAAO9N,QACAoZ,OAGXtL,EAAOsC,GA5IC,WA4IoB,YAA4B,IAAhBlV,EAAgB,EAAzB6F,KAAS7F,QAEpC,OADA4S,EAAO9N,QACA/M,EAAQ,IAAIb,MAAM8I,OAOtB,CAAE8E,MAJTA,EAAQ,WACJ,OAAO8N,EAAO5L,KArJV,YAwLIlC,EAHoB,EAEZA,MAGH+Z,GACD/Z,QAED,CACH,GAAI+Z,EACA,OAAO4J,EAAsBjmB,GAE7BsC,IArEO,IACjB8N,KAyEKiM,MAMX6G,MA/CU1mB,aAAQ,WAClB,OAAOwpB,KA+CP1jB,MAAO,kBAAM1O,IAAagC,IAAI0M,MAQlCohB,SAAY,GC5NZlB,G,OCoBG,SAAS4D,EAAT,GAA2Q,IAApP1a,EAAoP,EAApPA,uBAAwBmT,EAA4N,EAA5NA,YAAaH,EAA+M,EAA/MA,mBAAkCF,EAA6K,EAA3LM,aAAyCR,EAAkJ,EAA5JD,SAAsCO,EAAsH,EAAlIjV,WAA8BgV,EAAoG,EAApGA,gBAAiBF,EAAmF,EAAnFA,8BAA+BL,EAAoD,EAApDA,eAC1N,IAAKvrB,OAAOkrB,OACR,MAAM,IAAIrpB,MAAJ,yBAGV,IAAM4U,EAAWzW,OAAOulB,OAAO9O,SAEzByZ,EAAcxE,yBAAe,CAAEjV,WAAUuV,cAAanT,yBAAwB8S,kBAAiBI,mBAAkBF,qBAAoBC,kBAAiBF,kCACpJ9U,EAA8CoZ,EAA9CpZ,WAAYgP,EAAkCoK,EAAlCpK,8BAEhBpZ,EAAQ0d,mBAAS,CAAEtE,kCACfxP,EAEe5J,EAFf4J,IAAKC,EAEU7J,EAFV6J,UAAWG,EAEDhK,EAFCgK,qBAAsBC,EAEvBjK,EAFuBiK,OAAQC,EAE/BlK,EAF+BkK,cAAeC,EAE9CnK,EAF8CmK,OACjEL,EACmB9J,EADnB8J,gBAAiBO,EACErK,EADFqK,eAAgByO,EACd9Y,EADc8Y,OAAQiF,EACtB/d,EADsB+d,oBAAqBI,EAC3Cne,EAD2Cme,gBAC9DrG,EAAmB9X,EAAnB8X,MAAOrW,EAAYzB,EAAZyB,QAELmO,EAASgP,oBAAU,CAAEG,iBAAgBF,mBACnCvU,EAAYsF,EAAZtF,QAEF6Y,EAAa5E,0BAEnB5U,YAAY,CAAEC,MAAKU,UAAST,YAAWE,WAAUC,uBAAsBC,SACnEC,gBAAeC,SAAQC,aAAYN,kBAAiBO,mBArBsN,MAuB3OyO,IAA3BE,EAvBsQ,EAuBtQA,YAAaC,EAvByP,EAuBzPA,UAYjB6N,GAAoB,EAElBC,EAAoB,SAACzY,GAAsB,IACrCwI,EAA+BxI,EAA/BwI,OAAQrW,EAAuB6N,EAAvB7N,IAAKwN,EAAkBK,EAAlBL,cAErB,OAAO5Z,IAAagC,KAAI,WACpB,IAAIywB,EAAJ,CAQA,GAJAA,GAAoB,EAEpB9mB,EAAQ0d,mBAAS,CAAEtE,mCAEdH,IASD,OARIxY,GACAA,EAAIsC,aAGJtB,GACAA,EAAQ,CAAEwM,mBAfQ,MDnD/B,YAAuM,QAA7KjO,EAA6K,EAA7KA,MAAOsO,EAAsK,EAAtKA,QAASsB,EAA6J,EAA7JA,OAAQuT,EAAqJ,EAArJA,WAAYK,EAAyI,EAAzIA,YAAyI,MACvLuC,EADuL,WACxK,CAA7B,IAAMiB,EAAQjB,EAAJ,GACX,GAAIiB,EAAK1D,WAAW,CAAEtjB,QAAOsO,UAASsB,SAAQuT,aAAYK,gBACtD,OAAOwD,EAIf,MAAM,IAAI7xB,MAAJ,wCCiEoC8xB,CAAe,CAAEjnB,QAAOsO,UAASsB,SAAQuT,aAAYK,gBAAzEiC,EArBY,EAqBZA,OAAQtB,EArBI,EAqBJA,QArBI,GAsBMlS,EAtBN,EAqBlBA,MAC6B,CAAEjS,QAAO4P,SAAQ4T,cAAaL,aAAY7U,YAAvE4V,EAtBkB,EAsBlBA,MAAOP,EAtBW,EAsBXA,MAAO5gB,EAtBI,EAsBJA,MAuCtB,OApCA+T,EAAOoQ,WAAa7yB,IAAagC,KAAI,WAGjC,OA1CJ+oB,GAAmBA,EAAgB+H,SAAW/H,EAAgB+H,QAAQzf,UACtEgQ,YAAW0H,EAAgB+H,QAAQzf,SAASwc,OAG5C9E,GAAmBA,EAAgBgI,YAAchI,EAAgBgI,WAAW1f,UAC5EgQ,YAAW0H,EAAgBgI,WAAW1f,SAASwc,OAqCvCA,EACOA,KACAziB,GACAA,EAAQ,CAAEwM,qBAKtBva,MAAK,SAAAopB,GACJ,GAAKA,EAAL,CADa,IAKLnC,EAAgB3a,EAAhB2a,YASR,OAPIwJ,GACAlN,YAAqBH,GAGzB6D,IAAcjnB,MAAK,SAAA0Y,GAAO,OC9GnC,YAA4L,IAAxJA,EAAwJ,EAAxJA,QAAS6B,EAA+I,EAA/IA,cAA+I,IAAhIwX,cAAgI,SAC/L,OAAOzX,YAAmB,CACtB5B,UACA6B,gBACAC,oBAAqB/c,IAAqBC,cAC1C+c,mBAAqBsX,EAASp0B,IAAqBE,OAASF,IAAqBC,UACjF8c,YAAqBzc,IAAahC,wBDyGtB03B,CAAyB,CAAEjb,UAAS6B,gBAAewX,cAEhD9B,IACFjwB,MAAK,kBAAMinB,OACXjnB,MAAK,SAAA0Y,GAAO,OCzG1B,SAAuBA,EAAvB,GAAsJ,IAA3GrC,EAA2G,EAA3GA,SAAUK,EAAiG,EAAjGA,WAGxD,OAAO/V,IAAasC,IAAI,CAEpBuU,YAAY,CACR5K,MAAO,qdAcP6K,UAAW,CAAEiB,aAGjBW,YAASX,KAEV1Y,MAAK,YAAoB,IAAZkmB,EAAY,KAElB0N,EAFkB,KAEPC,gBAAgBD,KAE3BjO,EAAwC,SAA9BiO,EAAKjO,OAAO9c,cAA4BnS,IAAO0D,QAAUw5B,EAAKjO,OAAO9c,cAC/E+c,EAAWgO,EAAKE,SAAWF,EAAKE,QAAQC,MAAMC,aAG9CC,EAAmBrO,EAEzB,GAAID,GAHmBA,EAInB,MAAM,IAAIlkB,MAAJ,6CAJakkB,EAIb,SAAiFA,EAAjF,mCAA4H3vB,IAAeU,OAA3I,IAAuJivB,EAAvJ,eAGV,GAAIC,GAAYA,IAAaqO,EACzB,MAAM,IAAIxyB,MAAJ,+CAA0DwyB,EAA1D,SAAqFrO,EAArF,mCAAkI5vB,IAAeS,SAAjJ,IAA+JmvB,EAA/J,eAGV,IAAMsO,EAAkBhO,GAASA,EAAMiO,UAAYjO,EAAMiO,SAASxb,GAC5Dyb,EAAmB1d,GAAcA,EAAW3U,QAAU2U,EAAW,GAEvE,IAAK0d,EACD,MAAM,IAAI3yB,MAAJ,2CAGV,IAAKyyB,EACD,MAAM,IAAIzyB,MAAJ,2CAAsD2yB,GAG5DF,IAAoBE,GAChB/d,IAA4D,IAAhD9D,IAAyB3Q,QAAQyU,IAC7C3C,cAAY4B,KAAZ,4BAA8Ce,GAAanS,QAKnE,IAAMmwB,EAAkBz0B,OAAOulB,OAAOzO,YAAc9W,OAAOulB,OAAOzO,WAAW,GAC7E,GAAI2d,GAAmBH,IAAoBG,EACvC,MAAM,IAAI5yB,MAAJ,oEAA+E4yB,MD0C5DC,CAAc5b,EAAS,CAAErC,WAAUK,kBACnDnU,OAAM,SAAAtC,GACH,OAAOU,IAAasC,IAAI,CACpBoM,IACA1O,IAAaa,OAAOvB,QAEzBD,KAAKoK,SAGTgZ,EAAOoQ,eAEf/wB,SAAQ,WACP2wB,GAAoB,EACpB1P,YAAsBN,OAI9BF,cAAa2N,SAAQ,SAAAzN,GACjBmB,YAAcnB,GADa,MAGsBD,YAAmBC,GAA5D7I,EAHmB,EAGnBA,cAAe+I,EAHI,EAGJA,KAAM5J,EAHF,EAGEA,gBAE7B6a,YAAenR,GAAQ,SAAAlV,GACnBA,EAAMsW,iBACNtW,EAAMsmB,kBAENnB,EAAkB,CAAEjQ,SAAQ7I,gBAAe+I,OAAM5J,kBAAiBqW,SAAS,UAInF,IAAM0E,EAAqBnP,EAAYtlB,MAAK,WACxC,OAAOW,IAAa2C,KAAK,CAAEoxB,iBAAkBrK,IAAuB/E,gBAAetlB,MAAK,YAA0B,IAAvB00B,EAAuB,EAAvBA,iBACvF,GAAKA,EAAL,CAD8G,IAKtG3nB,EAA6B2nB,EAA7B3nB,IAAKwN,EAAwBma,EAAxBna,cAAe+I,EAASoR,EAATpR,KACtBF,EAAS1e,SAASwsB,cAAT,IAA4Bv0B,IAAgBC,eAA5C,IAAgE2d,EAAhE,KAEf,IAAK6I,EACD,MAAM,IAAI3hB,MAAJ,+BAGV4xB,EAAkB,CAAEtmB,MAAKqW,SAAQ7I,gBAAe+I,gBAIlDqR,EEpKH,YAA0K,IAAjJlK,EAAiJ,EAAjJA,gBAAiBgB,EAAgI,EAAhIA,mBAC7C,OAAO9qB,IAAagC,KAAI,WACpB,GAAI8oB,GAAsBA,EAAmBmJ,OAASnJ,EAAmBmJ,MAAMC,SAC3E,OAAOpK,EAAgB,CAAE/vB,IAAQE,WFiKfk6B,CAAc,CAAErK,kBAAiBgB,uBACrDsJ,EGnKH,YAAmF,IAAxD3Q,EAAwD,EAAxDA,MACxBrP,EAASrB,cAMf,OAJIjP,eACAsQ,EAAOQ,KAAK,8BAGT9H,cAAoBzN,MAAK,SAAAg1B,GAAkB,MAExCC,EAAiBhsB,GAAgBL,MAAMphB,KAAKkd,SAASkJ,iBAAT,IAA+BjR,IAAgBC,eAA/C,MAAoE4G,KAAI,SAAA+L,GACtH,OAAOA,EAAG8T,aAAa1mB,IAAgB5B,OAASwU,EAAG8T,aAAa1mB,IAAgBC,mBACjFgO,QAAO,SAAA6I,GACN,OAAOA,GAAUA,IAAW/Y,IAAQK,QAGhCm6B,EAAgD9Q,EAAhD8Q,OAAQC,EAAwC/Q,EAAxC+Q,MAAOC,EAAiChR,EAAjCgR,MAAOC,EAA0BjR,EAA1BiR,MARgB,EAQUjR,EAAnBqP,eARS,SAU9C1e,EAAOO,KAAP,uBAAoC6f,GACpCpgB,EAAOO,KAAP,uBAAoC8f,GACpCrgB,EAAOO,KAAP,uBAAoC+f,GACpCtgB,EAAOO,KAAP,wBAAqC4f,GACrCngB,EAAOO,KAAP,yBAAsCme,EAAQ1zB,YAE9CgV,EAAOS,QAAP,MACKhe,IAASG,YAAgC6G,IAAgBC,YAD9D,EAEKjH,IAASsB,cAAgCm8B,EAAe1oB,KAAK,KAFlE,EAGK/U,IAASuB,eAAgCk8B,EAAelzB,OAAOhC,WAHpE,EAIKvI,IAASkB,gBAAgCs8B,EAAiBA,EAAej1B,WAAa,GAJ3F,EAKKb,IAAgBjG,eAAyBi8B,EAL9C,EAMKh2B,IAAgBC,cAAyBg2B,EAN9C,EAOKj2B,IAAgBE,aAAyB,aAP9C,EAQKF,IAAgBG,cAAyB+1B,EAR9C,EASKl2B,IAAgBI,cAAyB+1B,EAT9C,EAUKn2B,IAAgBK,cAAyBK,OAAO01B,WAVrD,EAWKp2B,IAAgBtH,aAAyBqH,IAAiB5B,OAX/D,EAYK6B,IAAgBM,wBAAyBi0B,EAAU,IAAM,IAZ9D,IAeA1e,EAAO7Q,WH6HiBqxB,CAAgB,CAAEnR,UACxCoR,ED9JH,YAAqL,IAAxJlpB,EAAwJ,EAAxJA,MAAO4P,EAAiJ,EAAjJA,OAAQ4T,EAAyI,EAAzIA,YAAaL,EAA4H,EAA5HA,WAC5D,OAAO9uB,IAAasC,IAAIovB,EAAc7uB,KAAI,SAAA8vB,GACtC,OAAOA,EAAK9D,MAAM,CAAEljB,QAAO4P,SAAQ4T,cAAaL,mBAChDzvB,KAAKoK,KC2JqBqrB,CAAkB,CAAEnpB,QAAO4P,SAAQ4T,cAAaL,eAE9E,OAAO9uB,IAAa2C,KAAK,CACrBgiB,cAAaI,gCACbqP,sBAAqBN,qBAAoBE,oBACzCa,0BACDx1B,KAAKoK,KAnLZ,mC,6BIAA","file":"smart-payment-buttons.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    NAMESPACE:              ('data-namespace' : 'data-namespace'),\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce'),\n    ENABLE_3DS:             ('data-enable-3ds' : 'data-enable-3ds')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:           ('client-id' : 'client-id'),\n    MERCHANT_ID:         ('merchant-id' : 'merchant-id'),\n    MERCHANT_EMAIL_HASH: ('merchant-email-hash' : 'merchant-email-hash'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n\nexport const PROTOCOL = {\n    HTTP:  ('http' : 'http'),\n    HTTPS: ('https' : 'https')\n};\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_AUTHORIZE:       ('process_checkout_authorize' : 'process_checkout_authorize'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT:        '/checkoutnow',\n    NATIVE_CHECKOUT: '/smart/checkout/native'\n};\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : { buyerAccessToken : string, orderID : string }) : ZalgoPromise<void> {\n    return callGraphQL({\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    isNativeTransaction : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !isNativeTransaction)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !isNativeTransaction)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return (buyerAccessToken || !isNativeTransaction)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return (buyerAccessToken || !isNativeTransaction)\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : { paymentMethodID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { SMART_API_URI, PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.PAYMENT }/${ paymentID }`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.PAYMENT }/${ paymentID }/execute`,\n            json:        {\n                data: {\n                    payer_id: payerID\n                }\n            }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            },\n            data: {\n                payer_id: payerID\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ paymentID }/patch`,\n            json:        { data: patchData }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({ data : T }) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => void,\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const requestListeners = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, messageSessionUID, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            session_uid:        messageSessionUID,\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, messageSessionUID, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID];\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        const {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        if (receivedMessages[messageUID] || messageTargetApp !== sourceApp) {\n            return;\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    return { on, send, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\nexport const loadFirebaseSDK = memoize((config) => {\n    return ZalgoPromise.all([\n        loadScript(FIREBASE_SCRIPTS.APP),\n        loadScript(FIREBASE_SCRIPTS.AUTH),\n        loadScript(FIREBASE_SCRIPTS.DATABASE)\n    ]).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.all([\n            loadFirebaseSDK(config),\n            getFirebaseSessionToken(sessionUID)\n        ]).then(([ firebase, sessionToken ]) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './payment';\nexport * from './subscription';\nexport * from './socket';\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onError';\nexport * from './getPopupBridge';\nexport * from './rememberFunding';\nexport * from './getPageUrl';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessTokenPromise : ZalgoPromise<string>,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, isNativeTransaction: false });\n        });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n\n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n\n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n\n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n        });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\nexport function getCreateOrder(xprops : XProps, { facilitatorAccessTokenPromise, createBillingAgreement, createSubscription } : { facilitatorAccessTokenPromise : ZalgoPromise<string>, createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, buttonSessionID, intent, currency, merchantID, partnerAttributionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessTokenPromise, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: 'USD',\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment } from '../../api';\nimport { ORDER_API_ERROR, FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : string,\n    facilitatorAccessTokenPromise : ZalgoPromise<string>,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    isNativeTransaction : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID, isNativeTransaction } : ActionOptions) : OrderActions {\n    \n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n    \n    const get = memoize(() => {\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction });\n        });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction })\n                .finally(get.reset)\n                .finally(capture.reset)\n                .catch(handleProcessorError);\n        });\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction })\n                .finally(get.reset)\n                .finally(authorize.reset)\n                .catch(handleProcessorError);\n        });\n    });\n\n    const patch = (data = {}) => {\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction }).catch(() => {\n                throw new Error('Order could not be patched');\n            });\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n        });\n    });\n\n    const execute = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n                .finally(get.reset)\n                .finally(execute.reset)\n                .catch(handleProcessorError);\n        });\n    });\n\n    const patch = (data = {}) => {\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n                throw new Error('Order could not be patched');\n            });\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID, isNativeTransaction } : ActionOptions) : XOnApproveActionsType {\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID, { buyerAccessToken }));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID, { buyerAccessToken }));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID, isNativeTransaction });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID, isNativeTransaction });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string,\n    buyerAccessToken? : ?string,\n    isNativeTransaction? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { facilitatorAccessTokenPromise, createOrder } : { facilitatorAccessTokenPromise : ZalgoPromise<string>, createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent, buttonSessionID, partnerAttributionID } = xprops;\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, isNativeTransaction = false }, { restart }) => {\n        return createOrder().then(orderID => {\n\n            getLogger()\n                .info('button_authorize')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_AUTHORIZE,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID };\n            const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID, isNativeTransaction });\n\n            if (onApprove) {\n                return onApprove(data, actions).catch(onError);\n            } else {\n                if (intent === INTENT.CAPTURE) {\n                    return actions.order.capture().then(noop);\n                } else if (intent === INTENT.AUTHORIZE) {\n                    return actions.order.authorize().then(noop);\n                }\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError, buttonSessionID } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessTokenPromise, buyerAccessToken, partnerAttributionID } : { orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessTokenPromise : ZalgoPromise<string>, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n            return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, isNativeTransaction: false }).catch(() => {\n                throw new Error('Order could not be patched');\n            });\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { facilitatorAccessTokenPromise, createOrder } : { facilitatorAccessTokenPromise : ZalgoPromise<string>, createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, buttonSessionID, partnerAttributionID } = xprops;\n\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                        [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessTokenPromise, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick | void {\n    const { onClick, buttonSessionID } = xprops;\n\n    if (!onClick) {\n        return;\n    }\n\n    return ({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        getLogger().info('button_click').track({\n            [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n            [FPTI_KEY.CHOSEN_FUNDING]:     fundingSource\n        }).flush();\n        \n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessTokenPromise, partnerAttributionID } : { facilitatorAccessTokenPromise : ZalgoPromise<string>, partnerAttributionID : ?string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return facilitatorAccessTokenPromise.then(accessToken => {\n            return createSubscription(accessToken, data, { partnerAttributionID });\n        });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return facilitatorAccessTokenPromise.then(accessToken => {\n            return reviseSubscription(accessToken, subscriptionID, data, { partnerAttributionID });\n        });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps, { facilitatorAccessTokenPromise } : { facilitatorAccessTokenPromise : ZalgoPromise<string> }) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc, partnerAttributionID } = xprops;\n    if (createSubscriptionFunc) {\n        return () => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessTokenPromise, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\nimport type { RememberFunding } from './rememberFunding';\nimport type { GetPageURL } from './getPageUrl';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type Props = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    enableStandardCardFields : ?boolean,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, CheckoutFlowType, CardFieldsFlowType, ThreeDomainSecureFlowType, PersonalizationType } from '../../types';\nimport { createAccessToken, type FirebaseConfig } from '../../api';\nimport { getNonce } from '../dom';\n\nimport type { XProps, Props } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getProps({ facilitatorAccessTokenPromise } : { facilitatorAccessTokenPromise : ZalgoPromise<string> }) : Props {\n\n    const xprops : XProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        currency\n    } = xprops;\n\n    const onInit = getOnInit(xprops);\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick(xprops);\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops, { facilitatorAccessTokenPromise });\n    \n    const createOrder = getCreateOrder(xprops, { facilitatorAccessTokenPromise, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { facilitatorAccessTokenPromise, createOrder });\n    const onCancel = getOnCancel(xprops, { facilitatorAccessTokenPromise, createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { facilitatorAccessTokenPromise, createOrder });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n        currency,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure } = window.paypal;\n    return { Checkout, CardFields, ThreeDomainSecure };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : { serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig }) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const version = window.paypal.version;\n    \n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    facilitatorAccessTokenPromise : ZalgoPromise<string>,\n    eligibility : {\n        cardFields : boolean,\n        native : boolean\n    }\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : ?string,\n    clientID : ?string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    eligibility : ?{\n        native : boolean,\n        cardFields : boolean\n    }\n|};\n\nexport function getServiceData({ facilitatorAccessToken, clientID, buyerGeoCountry, isCardFieldsExperimentEnabled, fundingEligibility, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    \n    let facilitatorAccessTokenPromise : ZalgoPromise<string>;\n\n    if (facilitatorAccessToken) {\n        facilitatorAccessTokenPromise = ZalgoPromise.resolve(facilitatorAccessToken);\n    } else if (clientID) {\n        facilitatorAccessTokenPromise = createAccessToken(clientID);\n    } else {\n        // $FlowFixMe\n        facilitatorAccessToken = ZalgoPromise.asyncReject(new Error(`No access token found`));\n    }\n    \n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        personalization,\n        // $FlowFixMe\n        facilitatorAccessTokenPromise,\n        eligibility:  {\n            cardFields: isCardFieldsExperimentEnabled,\n            native:     eligibility ? eligibility.native : false\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport type RememberFunding = ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type GetPageURL = () => ZalgoPromise<string>;\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport type { Props, Components, ServiceData, Config, CreateBillingAgreement, CreateSubscription } from '../button/props';\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport { openPopup } from '../ui';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : { components : Components }) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : { win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean }) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : { props : Props, components : Components, serviceData : ServiceData, payment : Payment, config : Config }) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick } = props;\n    let { button, win, fundingSource, card, isClick } = payment;\n    const { fundingEligibility, buyerCountry } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ props, components, serviceData, config, payment: { button, win, fundingSource, card, isClick: false } })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        if (!approved) {\n            return onCancel();\n        }\n    };\n\n    let buyerAccessToken;\n\n    const init = () => {\n        return Checkout({\n            window: win,\n            buttonSessionID,\n            clientAccessToken,\n    \n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n    \n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n                approved = true;\n    \n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken }, { restart });\n                });\n            },\n    \n            onAuth: ({ accessToken }) => {\n                buyerAccessToken = accessToken;\n            },\n    \n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n    \n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n    \n            onError,\n            onClose,\n    \n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce\n        });\n    };\n\n    let instance;\n\n    // const { renderTo, close: closeCheckout } = init();\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n    });\n\n    const click = () => {\n        return ZalgoPromise.try(() => {\n            if (!onClick) {\n                start();\n                return true;\n            }\n    \n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n\n            return onClick({ fundingSource }).then(valid => {\n\n                if (win && !valid) {\n                    win.close();\n                }\n\n                return valid;\n            });\n        });\n    };\n\n    return { click, start, close };\n}\n\nexport const checkout : PaymentFlow = {\n    setup:      setupCheckout,\n    isEligible: isCheckoutEligible,\n    init:       initCheckout\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../button/dom';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce } from 'belter/src';\n\nimport type { Props, Config, ServiceData, Components } from '../button/props';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { Payment, PaymentFlow, PaymentFlowInstance } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, payment, serviceData } : { props : Props, payment : Payment, serviceData : ServiceData }) : boolean {\n    const { vault, onShippingChange, enableStandardCardFields } = props;\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields) {\n        return true;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction highlightCard(card : $Values<typeof CARD>) {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : { props : Props, config : Config, components : Components, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, buttonSessionID } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart });\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    setup:      setupCardFields,\n    isEligible: isCardFieldsEligible,\n    init:       initCardFields,\n    spinner:    true,\n    inline:     true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE, type Props } from '../button/props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : { props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props, payment } : { props : Props, payment : Payment }) : boolean {\n    const { win } = payment;\n    const { onShippingChange } = props;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : { props : Props, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    setup:      setupPopupBridge,\n    isEligible: isPopupBridgeEligible,\n    init:       initPopupBridge,\n    spinner:    true\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ThreeDomainSecureFlowType } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, Props, Components } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props, payment } : { props : Props, payment : Payment }) : boolean {\n    const { win, paymentMethodID } = payment;\n    const { onShippingChange } = props;\n\n    if (win) {\n        return false;\n    }\n    \n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment } : { props : Props, components : Components, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken,\n        enableThreeDomainSecure, buttonSessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { paymentMethodID } = payment;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const vaultCapture : PaymentFlow = {\n    setup:      setupVaultCapture,\n    isEligible: isVaultCaptureEligible,\n    init:       initVaultCapture,\n    spinner:    true,\n    inline:     true\n};\n","/* @flow */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, popup, memoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, FUNDING, ENV } from '@paypal/sdk-constants/src';\nimport { isBlankDomain, type CrossDomainWindowType, getDomain } from 'cross-domain-utils/src';\n\nimport type { Props, Components, Config, ServiceData } from '../button/props';\nimport { EXPERIENCE_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { promiseNoop } from '../lib';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout_sdk';\n\nconst MESSAGE = {\n    SET_PROPS:  'setProps',\n    GET_PROPS:  'getProps',\n    CLOSE:      'close',\n    ON_APPROVE: 'onApprove',\n    ON_CANCEL:  'onCancel',\n    ON_ERROR:   'onError'\n};\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    return firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n});\n\nfunction setupNative() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        // pass\n    });\n}\n\nfunction isNativeEligible({ props, payment, config, serviceData } : { props : Props, payment : Payment, config : Config, serviceData : ServiceData }) : boolean {\n\n    if (window.xprops.forceNativeEligible) {\n        return true;\n    }\n\n    const { platform, onShippingChange, createBillingAgreement,\n        createSubscription, enableNativeCheckout } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    const { win, fundingSource } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.PAYPAL) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (enableNativeCheckout) {\n        return eligibility.native;\n    }\n\n    return false;\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    stageHost : ?string,\n    apiStageHost : ?string\n|};\n\nfunction initNative({ props, components, config, payment, serviceData } : { props : Props, components : Components, config : Config, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, getPageUrl,\n        buttonSessionID, env, stageHost, apiStageHost, onClick } = props;\n    const { version, firebase: firebaseConfig } = config;\n    const { facilitatorAccessTokenPromise } = serviceData;\n    const { fundingSource } = payment;\n\n    const sessionUID = uniqueID();\n\n    let close = promiseNoop;\n\n    const fallbackToWebCheckout = (win? : CrossDomainWindowType) => {\n        const { start: startCheckout, close: closeCheckout } = checkout.init({ props, components, payment: { ...payment, win, isClick: false }, config, serviceData });\n        close = closeCheckout;\n        return startCheckout();\n    };\n\n    const getNativeUrl = () => {\n        return extendUrl(`${ getDomain() }${ EXPERIENCE_URI.NATIVE_CHECKOUT }`, { query: { sessionUID } });\n    };\n\n    const getSDKProps = () => {\n        return ZalgoPromise.hash({\n            facilitatorAccessToken: facilitatorAccessTokenPromise,\n            orderID:                createOrder(),\n            pageUrl:                getPageUrl()\n        }).then(({ facilitatorAccessToken, orderID, pageUrl }) => {\n            const userAgent = getUserAgent();\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost\n            };\n        });\n    };\n\n    const openCheckoutSocket = () => {\n        const socket = getNativeSocket({ sessionUID, firebaseConfig, version });\n\n        socket.on(MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            return getSDKProps();\n        });\n\n        socket.on(MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            socket.close();\n            const data = { payerID, paymentID, billingToken, isNativeTransaction: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return onApprove(data, actions);\n        });\n\n        socket.on(MESSAGE.ON_CANCEL, () => {\n            socket.close();\n            return onCancel();\n        });\n\n        socket.on(MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            socket.close();\n            return onError(new Error(message));\n        });\n\n        close = () => {\n            return socket.send(MESSAGE.CLOSE);\n        };\n        \n        return { close };\n    };\n\n    let startPromise;\n\n    const start = memoize(() => {\n        return startPromise;\n    });\n\n    const click = () => {\n        const win = popup(getNativeUrl());\n\n        return ZalgoPromise.try(() => {\n            if (!onClick) {\n                return true;\n            }\n\n            return onClick({ fundingSource }).then(valid => {\n                if (!valid) {\n                    close();\n                }\n\n                return valid;\n            });\n        }).then(valid => {\n\n            startPromise = ZalgoPromise.try(() => {\n                return valid ? createOrder() : ZalgoPromise.delay(500);\n            }).then(() => {\n                if (isBlankDomain(win)) {\n                    win.close();\n                    const { close: closeNative } = openCheckoutSocket();\n                    close = closeNative;\n\n                    if (!valid) {\n                        close();\n                    }\n                } else {\n                    if (valid) {\n                        return fallbackToWebCheckout(win);\n                    } else {\n                        close();\n                    }\n                }\n            });\n\n            return valid;\n        });\n    };\n\n    return {\n        click,\n        start,\n        close: () => ZalgoPromise.try(close)\n    };\n}\n\nexport const native : PaymentFlow = {\n    setup:      setupNative,\n    isEligible: isNativeEligible,\n    init:       initNative,\n    spinner:    true\n};\n","/* @flow */\n\nimport { noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { checkout, cardFields, native, vaultCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\n\nimport { type Props, type Config, type ServiceData, type Components } from './props';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    cardFields,\n    vaultCapture,\n    popupBridge,\n    native,\n    checkout\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : { props : Props, config : Config, serviceData : ServiceData, components : Components }) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.setup({ props, config, serviceData, components });\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, components, serviceData } : { props : Props, payment : Payment, config : Config, components : Components, serviceData : ServiceData }) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, payment, config, components, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, PersonalizationType } from '../types';\nimport { setupLogger, sendBeacon, fixClickFocus } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData } from './props';\nimport { getSelectedFunding, getButtons, enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { setupButtonLogs } from './logs';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, getPaymentFlow } from './pay';\nimport { validateOrder, updateButtonClientConfig } from './orders';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken? : string,\n    eligibility : ?{\n        cardFields : boolean,\n        native : boolean\n    }\n|};\n\nexport function setupButton({ facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig } : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({ clientID, eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization, isCardFieldsExperimentEnabled });\n    const { merchantID, facilitatorAccessTokenPromise } = serviceData;\n\n    let props = getProps({ facilitatorAccessTokenPromise });\n    const { env, sessionID, partnerAttributionID, commit, correlationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style, onClick } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n    \n    setupLogger({ env, version, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    const { initPromise, isEnabled } = onInit();\n\n    const sendPersonalizationBeacons = () => {\n        if (personalization && personalization.tagline && personalization.tagline.tracking) {\n            sendBeacon(personalization.tagline.tracking.click);\n        }\n\n        if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n            sendBeacon(personalization.buttonText.tracking.click);\n        }\n    };\n\n    let paymentProcessing = false;\n\n    const handleButtonClick = (payment : Payment) => {\n        const { button, win, fundingSource } = payment;\n\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            paymentProcessing = true;\n\n            props = getProps({ facilitatorAccessTokenPromise });\n\n            if (!isEnabled()) {\n                if (win) {\n                    win.close();\n                }\n\n                if (onClick) {\n                    onClick({ fundingSource });\n                }\n\n                return;\n            }\n\n            const { init, inline, spinner } = getPaymentFlow({ props, payment, config, components, serviceData });\n            const { click, start, close } = init({ props, config, serviceData, components, payment });\n\n            // $FlowFixMe\n            button.payPromise = ZalgoPromise.try(() => {\n                sendPersonalizationBeacons();\n\n                if (click) {\n                    return click();\n                } else if (onClick) {\n                    return onClick({ fundingSource });\n                } else {\n                    return true;\n                }\n\n            }).then(valid => {\n                if (!valid) {\n                    return;\n                }\n\n                const { createOrder } = props;\n        \n                if (spinner) {\n                    enableLoadingSpinner(button);\n                }\n            \n                createOrder().then(orderID =>\n                    updateButtonClientConfig({ orderID, fundingSource, inline }));\n            \n                return start()\n                    .then(() => createOrder())\n                    .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                    .catch(err => {\n                        return ZalgoPromise.all([\n                            close(),\n                            ZalgoPromise.reject(err)\n                        ]);\n                    }).then(noop);\n            });\n\n            return button.payPromise;\n            \n        }).finally(() => {\n            paymentProcessing = false;\n            disableLoadingSpinner(button);\n        });\n    };\n\n    getButtons().forEach(button => {\n        fixClickFocus(button);\n\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            handleButtonClick({ button, fundingSource, card, paymentMethodID, isClick: true });\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            handleButtonClick({ win, button, fundingSource, card });\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogs({ style });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessTokenPromise,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask\n    }).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : { orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : ?string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = intent;\n        const expectedCurrency = currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (clientID && CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    });\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\n\nimport type { RememberFunding } from './props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : { rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nexport function setupButtonLogs({ style } : { style : ButtonStyle }) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n"],"sourceRoot":""}