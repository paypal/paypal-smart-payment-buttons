{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/storage.js","webpack://spb/./node_modules/belter/src/experiment.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/config.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/util.js","webpack://spb/./src/lib/dom.js","webpack://spb/./src/constants.js","webpack://spb/./src/api/api.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/props/createOrder.js","webpack://spb/./src/props/onApprove.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/props/onCancel.js","webpack://spb/./src/props/onShippingChange.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/props/onAuth.js","webpack://spb/./src/button/props.js","webpack://spb/./src/props/onInit.js","webpack://spb/./src/props/onClick.js","webpack://spb/./src/props/createBillingAgreement.js","webpack://spb/./src/props/createSubscription.js","webpack://spb/./src/button/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/button/orders.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/payment-flows/wallet-capture.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/menu.js","webpack://spb/./src/menu/interface.js","webpack://spb/./src/button/pay.js","webpack://spb/./src/props/getPopupBridge.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/env.js","webpack://spb/./src/payment-flows/honey.js","webpack://spb/./src/button/button.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logger.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isAndroid","test","isIos","supportsPopups","isGoogleSearchApp","isIosWebview","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","isChrome","_extends","assign","target","arguments","length","source","apply","this","isPromise","item","Promise","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","isAncestorParent","child","childParent","getParents","getTop","top","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","self","__cross_domain_utils_window_check__","objectIDs","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","slice","toLowerCase","getGlobal","global","__GLOBAL__","serializeArgs","JSON","stringify","Array","subkey","val","uid","getObjectID","memoizedFunctions","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","arrayFrom","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","extendUrl","url","originalUrl","originalHash","query","hashString","redirect","href","urlWillRedirectPage","getPerformance","performance","timing","connectEnd","navigationStart","abs","isBrowser","querySelectorAll","selector","onClick","element","addEventListener","event","keyCode","isLocalStorageEnabled","localStorage","setItem","getItem","removeItem","PopupOpenError","getStorage","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","rawStorage","parse","id","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","getBelterExperimentStorage","isEventUnique","loggedBeacons","clear","prototype","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","evt","open","setRequestHeader","ontimeout","send","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","httpTransport","extendIfDefined","ORDERS_API_URL","NATIVE_CHECKOUT_URI","NATIVE_CHECKOUT_POPUP_URI","ORDER_VALIDATION_WHITELIST","SANDBOX_ORDER_VALIDATION_WHITELIST","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","warning","immediateFlush","meta","builder","req","localPromise","logger","logPayload","timestamp","enqueue","addBuilder","builders","loop","safeInterval","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","loadScript","container","head","script","setAttribute","isEmailAddress","match","getNonce","nonce","getAttribute","callRestAPI","accessToken","requestHeaders","callSmartAPI","reqHeaders","ack","contingency","callGraphQL","variables","GRAPHQL_URI","errors","createAccessToken","clientID","targetSubject","basicAuth","grant_type","target_subject","Authorization","access_token","getFirebaseSessionToken","sessionUID","firebase","auth","sessionToken","patchOrder","orderID","facilitatorAccessToken","buyerAccessToken","partnerAttributionID","forceRestAPI","patchData","isArray","patch","SMART_API_URI","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","clientMetadataID","paymentSource","token","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","oneClickApproveOrder","instrumentType","instrumentID","payerID","oneClickPayment","userId","getSupplementalOrderInfo","createRequest","subscriptionPayload","reviseRequest","CREATE_SUBSCRIPTIONS_API_URL","loadFirebaseSDK","config","database","initializeApp","getCreateOrder","createOrder","currency","createBillingAgreement","createSubscription","actions","intent","merchantID","order","toUpperCase","purchase_units","unit","amount","currency_code","payee","payeeID","email_address","merchant_id","application_context","createOrderID","buildOrderActions","buildPaymentActions","payment","buildXCreateOrderActions","queryOrderID","search","startTime","duration","getOnApprove","onApprove","capture","authorize","getDefaultOnApprove","vault","upgradeLSAT","isLSATExperiment","paymentID","authCode","restart","supplementalData","checkoutSession","cart","getSubscriptionApi","getSubscription","activateSubscriptionApi","activateSubscription","handleProcessorError","details","some","detail","issue","getOrder","captureOrder","authorizeOrder","PAYMENTS_API_URL","getPayment","execute","payer_id","executePayment","subscription","activate","redir","buildXApproveActions","getOnCancel","onCancel","getOnShippingChange","onShippingChange","excluded","sourceKeys","buildXShippingChangeActions","getOnAuth","upgradeFacilitatorAccessToken","TYPES","getProps","xprops","env","commit","locale","platform","sessionID","buttonSessionID","sdkCorrelationID","correlationID","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","fundingSource","connect","persistRiskData","upgradeLSATExperiment","group","sample","logTreatment","logCheckpoint","throttle","throttlePercentiles","getThrottlePercentile","treatment","started","forced","isEnabled","isDisabled","getTreatment","checkpoint","logStart","logComplete","experiment","fullPayload","onInit","enabled","initPromise","enable","disable","getOnInit","merchantDomain","valid","getOnClick","getCreateBillingAgreement","thirdPartyAccessToken","createSubcriptionID","revise","reviseSubscription","buildXCreateSubscriptionActions","getCreateSubscription","onAuth","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","Menu","getConfig","firebaseConfig","cspNonce","serverCSPNonce","version","getServiceData","serverMerchantID","buyerCountry","buyerGeoCountry","fundingEligibility","wallet","sdkMeta","content","personalization","eligibility","serverRiskData","enableLoadingSpinner","button","classList","add","disableLoadingSpinner","remove","renderChildren","children","renderer","renderedChild","render","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ADD_CHILDREN","firstChild","docElement","removeChild","dom","opts","domRenderer","createTextNode","createTextElement","prop","tagName","addProps","html","ELEMENT_PROP","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","class","updateButtonClientConfig","inline","integrationArtifact","userExperienceFlow","productFlow","isValidMerchantIDs","merchantIDs","payees","merchantEmails","merchantIds","forEach","foundEmail","every","email","stringValue","foundMerchantId","merchantId","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","isPaymentEligible","init","initCheckout","serviceData","instance","cmid","card","venmoPayloadID","buyerIntent","isClick","connectEligible","isConnectEligible","approved","forceClosed","close","start","createAuthCode","exchangeAccessTokenForAuthCode","getConnectURL","scopes","connectUrl","connectURL","vaultable","isVaultAutoSetupEligible","enableVault","enableVaultSetup","onClose","renderTo","click","assertSameDomain","width","height","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","popup","tag","writeElementToWindow","openPopup","updateClientConfig","updateClientConfigPromise","cardFieldsOpen","highlightCard","opacity","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","cardFields","onCardTypeChange","closeCardFields","marginTop","renderPromise","minHeight","display","recalculateMargin","offsetTop","transitionDuration","slideUpButtons","POPUP_OPTIONS","vaultCapture","innerWidth","shippingRequired","flags","isChangeShippingAddressAllowed","validate","requireShipping","links","link","rel","handleThreeDomainSecure","handleValidateResponse","setupMenu","loadCheckout","label","payWithDifferentMethod","onSelect","payWithDifferentAccount","deleteVaultedCard","spinner","getInstrument","walletFunding","instrument","instruments","inst","initialPageUrl","parentPopupBridge","smartMenu","walletCapture","getWebCheckoutFallback","fallbackToWebCheckout","oneClick","orderApproval","newFundingSource","getNativeSocket","nativeSocket","sourceApp","sourceAppVersion","targetApp","retryDelay","socketPromise","retryPromise","driver","retry","receivedMessages","responseListeners","activeRequests","requestListeners","errorListeners","sendMessage","socket","messageUID","session_uid","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","requestUID","isOpen","request_uid","message_name","message_status","message_type","message_data","connectionPromise","onOpen","errorListener","onMessage","rawMessage","rawData","parsedData","messageSessionUID","messageType","messageData","request_id","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","isAndroidChrome","didAppSwitch","popupWin","isNativeOptedIn","renderSmartMenu","updateProps","show","hide","choices","verticalOffset","onFocus","onFocusFail","PAYMENT_FLOWS","bridge","useraction","redirect_uri","nativeUrl","native_xo","opType","PayerID","paymentId","ba_token","pageUrl","nativeCheckout","venmo","cleaned","clean","register","task","shift","cancelled","didFallback","listen","postRobot","fallbackWin","checkoutPayment","getNativeDomain","useCorrectNativeSandboxDomain","getNativePopupDomain","getNativeUrl","getNativePopupUrl","parentDomain","getWebCheckoutUrl","getSDKProps","webCheckoutUrl","forceEligible","connectNative","setNativeProps","sdkProps","sanitizedProps","instrumentNativeSDKProps","closeNative","getPropsListener","onShippingChangeListener","onApproveListener","onCancelListener","onErrorListener","setProps","detectAppSwitch","detectWebSwitch","nativeWin","validatePromise","delayPromise","detectWebSwitchListener","initDirectAppSwitch","callback","maxtime","closeListener","Infinity","check","awaitRedirectListener","redirectUrl","detectAppSwitchListener","onCompleteListener","initPopupAppSwitch","postMessage","message_source","device_id","session_id","getPaymentFlow","flow","find","setupButton","buttonCorrelationID","isCardFieldsExperimentEnabled","paymentProcessing","initiatePayment","paymentProps","tagline","buttonText","clickPromise","expectedIntent","expectedCurrency","startPromise","validateOrderPromise","amounts","total","currencyCode","dict","uniquePayees","payeesStr","xpropMerchantID","isSandbox","isWhitelisted","validateOrder","initiatePaymentFlow","menuToggle","parentElement","getSelectedFunding","removeEventListener","preventDefault","blur","onElementClick","stopPropagation","payPromise","prerenderMenu","menuPromise","choice","getBoundingClientRect","bottom","loadingTimeout","renderMenu","initiateMenuFlow","initiateMenu","setupPrerenderTask","prerenderDetails","paymentFundingSource","setupRememberTask","eligible","setupRemember","setupButtonLogsTask","referer","lang","country","setupLogger","__SMART_BUTTONS__","documentMode","isIEIntranet","domInteractive","pageRenderTime","fundingSources","walletInstruments","layout","color","shape","setupButtonLogger","setupPaymentFlowsTask","setupPaymentFlows","setupPersistRiskDataTask"],"mappings":"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AAMvC,KAAOuC,EACVA,EAAOlC,eAAeL,IAAQuC,EAAOvC,KAASoC,EAAOpC,KACrDoC,EAAOpC,GAAOuC,EAAOvC,IC/C1B,IAEMsV,GAAiB,sBAkBjBC,KAA8D,cACnD,yBADmD,SAEnD,wBAFmD,IAK9DC,KAAmE,cACxD,+BADwD,SAExD,8BAFwD,IAQnEC,GAA6B,CACtC,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,+DACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mFACA,mF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","file":"smart-payment-buttons.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent; // eslint-disable-line compat/compat\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    const userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches); // eslint-disable-line compat/compat\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator && // eslint-disable-line compat/compat\n        window.navigator.userAgent && // eslint-disable-line compat/compat\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent) // eslint-disable-line compat/compat\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    const mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    const mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            const status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    const userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nconst memoizedFunctions = [];\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : F & {| reset : () => void |} {\n    const cacheMap = new WeakMap();\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        const cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        const key : string = serializeArgs(args);\n\n        const cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    memoizedFunctions.push(memoizedFunction);\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    for (const memoizedFunction of memoizedFunctions) {\n        memoizedFunction.reset();\n    }\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            const interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : {| host? : string, path : string |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator; // eslint-disable-line compat/compat\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i); // eslint-disable-line compat/compat\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        const loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {|\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n|};\n\nconst DEFAULT_SESSION_STORAGE = 20 * 60 * 1000;\n\nexport function getStorage({ name, lifetime = DEFAULT_SESSION_STORAGE } : {| name : string, lifetime? : number |}) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            const localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                const rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            const result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                const now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, lifetime } ]);\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\ntype Payload = {\n    [string] : ?(string | boolean)\n};\n\nexport type Experiment = {|\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : Payload) => Experiment,\n    logStart : (payload? : Payload) => Experiment,\n    logComplete : (payload? : Payload) => Experiment\n|};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {|\n    name : string,\n    sample? : number,\n    logTreatment? : ({| name : string, treatment : string, payload : Payload |}) => void,\n    logCheckpoint? : ({| name : string, treatment : string, checkpoint : string, payload : Payload |}) => void\n|};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    const throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    const treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : Payload = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ JSON.stringify(payload) }`)) {\n                logTreatment({ name, treatment, payload });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }_${ JSON.stringify(payload) }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : Payload = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : Payload = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {|\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n|};\n\ntype ResponseType = {|\n    status : number,\n    headers : { [string] : string },\n    body : Object\n|};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nconst headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    const result = {};\n    for (const line of rawHeaders.trim().split('\\n')) {\n        const [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        const normalizedHeaders = {};\n\n        for (const key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (const headerBuilder of headerBuilders) {\n            const builtHeaders = headerBuilder();\n\n            for (const key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        const xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            const responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            const contentType = responseHeaders['content-type'];\n            const isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            const res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (const key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RO: ('ro' : 'ro'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    VI: ('vi' : 'vi'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {|\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n|};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : $ReadOnlyArray<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {|\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n|};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = __DEBUG__ ? LOG_LEVEL.DEBUG : LOG_LEVEL.WARN;\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Payload = { [string] : string | boolean };\ntype Transport = ({| url : string, method : string, headers : { [string] : string }, json : Object |}) => ZalgoPromise<void>;\n\ntype LoggerOptions = {|\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n|};\n\ntype ClientPayload = { [string] : ?string | ?boolean };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {|\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n|};\n\nfunction httpTransport({ url, method, headers, json } : {| url : string, method : string, headers : { [string] : string }, json : Object |}) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string | boolean }, source : { [string] : ?string | ?boolean }) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{| level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload |}> = [];\n    let tracking : Array<Payload> = [];\n\n    const payloadBuilders : Array<Builder> = [];\n    const metaBuilders : Array<Builder> = [];\n    const trackingBuilders : Array<Builder> = [];\n    const headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(logLevel)) {\n            return;\n        }\n\n        const args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            const meta = {};\n            for (const builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            const headers = {};\n            for (const builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            const req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    const flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        const logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (const builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        const trackingPayload : Payload = objFilter(payload);\n\n        for (const builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const ORDER_VALIDATION_WHITELIST = [\n    'AWU8hQWR5S8ynvUCz0T-tt2uRPzt7-wcIp_clASLr3KrXNdKcr_iPzgNsk4s3sOG2EzgOyqpeuL9Lt2Q',\n    'AW2HA2wTdlPiJYixm961rEhamyefXVV4Y5CxJnRJGT_AnXVZuWnneEFnnGpDeIUZaCbpz_kwtEjFwo8x',\n    'AU0KZbJCXg9J5OJXJxrUFMaCAkMvvrk-8khEB4vLyq76klYl5RSVGNrX4qh_aERn3Wsx5Vcn2eCPQ1fo',\n    'AUku7YwlQ9LckQ9jBEAoDTOW_l-VyzeS2ZLNS4-kWoEI0Xh5VEFEgda7KeU3Z-bRIcZ4YzkJ6kp4CIZA',\n    'ATyGfjcN1hYSg34FNM2QFpih-UgIKxiE6nC_HR4ifq2auBHxlzm7eFTToF0-GayrwDSNgwDmTYfPNvYD',\n    'ARa44QaubKRAeUZRlkhqkWUAilO7IGlS6qcHJ4RmG6aaDuCAi232yOjfDwWmGJL5rdjvhaA_oHLVo3_y',\n    'AZqSMr_O6WtkSWvp2GF526yJjSyjZsnaqvmp99w2gNJHtKfOdzpnNJiwjTd_yLjdf-wt2DUtJzFw16Bq',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AZ27S6mY7iw1toHmoVzye1XwCiOJo_uIMYJIDpUwlTsG2rxTXW8Sl3tjUEwsS0TWGIkEq7CG1zXLLvvK',\n    'Af8k4y06mmyTM4JxdmDUK0PJBR314Yz_nWddC13y5rHawFRREVmueGa0b-MMHl5_jvo6bMM1d7DnM2Uj',\n    'AaRz5Xo5rOOW8Pq0ofvoKD5fb48gaPrKknItbEc1k79KH6z3aPsS5oUfu0uWj7BMuEru5_6jvhjSyvRs',\n    'Aa5QWJGciaqznqahG4ooXiL9FNZuqEcL-vhdCMrb-jIMNAFpiG1SxW1GMcPmS5pQoxrwsOmV2KtNpk1Y',\n    'AfzuuqC32z4_opOaPcCOgB0P112SCvGoJZi-79Yj5WGNoddoDQf7gG_mbGl3tZYJB_XsZ1dHDDgzhkH7',\n    'AQ6b-BBBspp77ZytI3Hj0FKpACemsrXhu0Gds7ubWAoKxHCW1o7RnV76wCe4',\n    'AfFU1v8QcnRtUY5xRwxW6nZlwGscc0dmMfVQP9Ce3mqKRvqddGBHnx62WhKVcAMPALE9aR1kPeJfy4xz',\n    'AXjQJ2vHhgpu7DYUrE1IerCOOp9y-d8dSIMEIkc49ckjO9M04AehA8qm5jm0FIV7kO3CEtzZ8e-dp8-2',\n    'AYJqlLYWc7pJ-z3rUJBdHicjlxRg-sQUPytyCpvgPcpB4X3rKZlrmJq6pQRUZ0Pb_LCV1cvi4CLGTA9d',\n    'AQA6JMmn0j1yvIhc2mh0QP5HedKSpEEYQuZjHgmaIRVVlvzDWJU2twyT8OklWyz8NhVNlsKReUElO_xa',\n    'AT-LIFIee2HjafB1SJxyxiX8Bnpv-bAEJKNNDFduENR8a7xGvcQRb_5QxxDq_nVF8L3hkBpqnyVue4vt',\n    'AYc6HFlcGY99sz6mzMNWT10vuo6l1qwzKjlKeZ_JQuL2tkUtbKrWwNZ3pcFHZJYmFk5cXK92OodadpX2',\n    'AZ8UUzGLndt7BWxjD-NobN8gFAarZV7PNN-XfBIM7_n3oU3roq610ytrpCtL2ikSOT_HtW8-2aq0HgTc',\n    'AdC8njZRff48qO32BRskthX85OP6eGdW_2pwbySJl0WSa3MRPWGxddYiYf0ig9hkTu6ppWLp4uQFf7Wc',\n    'AVm6hkTgp2kObqwkPrO0KZIHeREs426g_yaq1IPsoSz5ij0vOGGkBcmfIAB7ddrhdzFvDiE4S7FjGG46',\n    'AdCK4t9F8PiG-Lbbpu9ot8TJmzlt6JqEjSBw0r4DuZQ-h8g6bU_RazHGajCSLfTfVtobXHH5NWq7-07H',\n    'AefZb6HGDKO-Seg-Y-T7n8JMAahIQPYbQVoQdd8JKZmF-r8wV_BT8YvY1wq_6HJ3QpiGhH1x9wTI-Qer',\n    'AZvPeGIweYjl7UjrBplKks_ABRUW12UVxZy4dw8bU7yVLvx5AxpP_kGy5VpnL5eiaqjeyY9bcIwp5UMs',\n    'Ab1VkGmr1COkjo_6COidM4aQw32eggx3FrwdBLe_49nQjZvsN6NGFeKCiMfvgl1424JCAMWbDIB84nM9',\n    'AfKPyV410xcQNtx6rx0yWBp0mmovau9eb_YyiB9uPX_lnWmXvOsdKN9HRWmEcDwcp0qzp74u_NijYth1',\n    'Ab2xNfs6Tl9v49jUupCCg8Av_KDTVb1JKovfA92DPRDqjIWDDOmir3bx3cY4qLmgPxuhXNIIYm7K2Y3g',\n    'AdmFNVRKWUWMj4UyEomTd0CW2hHQFcY9qB31B8PbWZYwzykfRS74Jw4vRC-5W1dScVuRwwFoeQAxFNoj',\n    'AcMnb-pPPgZGWeK6bIi6sixOzjzSQnLBX875cg7XCwbhG9Fc6kRUiN7_qjlYHOX2FZMDDCXYC2Go65LF',\n    'AXbYLpelIUb8i9iaFeQKXt3DlWpLyC1dc3d8WOx7fBMvPny-lHueS7DnFZnfIeOiRukpum5ejF8UdSzx',\n    'AU6945tSYM7aVoRjvIEiFE4uLYn3WWXRAt_DbqbX0BCUDVfLdL_NB85NaJYRqkrRiU41pUwwom2E_47w',\n    'AeLMaMHVVX61YKoNlLqoQ_1zX6MS3NBjvFZNBsrrOCgeZIeqoVwXWoVz681aMaXzSXkx2Q4CB2DzdxVV',\n    'AU2UgmLki6ZfaDt27a7WM5J73IVi36nQva7oZGs5onuWbGyo1dqDf9ruVn-cgfjyNWYQvUzk54wOLgTh',\n    'AaBPZpGg89TAPOa2VMaKwINvjpDh-EE7a-mZQ1vV95ZoEIz65ducH23QeIL1vPUFuuRGB2goniC9KrbB',\n    'AbarfFDHDheK7p4Z-w7JZ8rXoPBWSALu91ZJXoRX-zGz3Y6eqFSzum4OyTxn7ZJXELy_tl1ZLimrzgyn',\n    'AT4f7iaYeBKXSFR_e27h7F4z7h73L3-lMtH38jZh8KDQ5xp9NoTGpiz1oix4B69xiT1uFuBOI0r6_SLo',\n    'ATWcvHcxfe1gfQ-znE_Ua6dVvX7fMRsdoBy1MmC_ApxPcG3rGZLDFoAkOmtJzrdRDFeu0EhXIAu17vJh',\n    'AeV96uDGtI2SJMobKDHpR_IEhPD6NJG379LQHeFaCe_-GObH5rRCuP6-AWCarF2gh7dxh-si_uaWSxlu',\n    'ASgMJnHCefNb23pO1tmCqWhvwT5D-opcT8W0TW2WeZXEnDw22r7epTCrSoNjKc8O4VlDLhP4oLEYyOHV',\n    'AeGtpFEgJWl8EKAwx-jVRGZRy8fBYlZPG2cYL-kDJmKVv0o3tU3lOJNhzWMGjUdubmqsUtTcjyFzrsk2',\n    'AUQRtcEq9z5DHLxjiSz3rwKgB1z-O-Df8nzNU2aKYxQbntIDV7rFiHGQrISElMo1JJR5N8sYpzqkq8Dg',\n    'Aee7fyLlCExLFFB1Cs8eco2PsnVcNMYhj5KtFTxmmHLPGp3y2i_HyooUQtRCjKjN_445-7qjnoyR8r4w',\n    'AfxJnj-1UN_l7r46FC27ufpCzt4ymiF7ctpexNeEH8hkQwJloFB5comni5SxflMYOkWnMXWTtVRzlbfZ',\n    'ASCS3-SkSood0ZR2Ik8EtFZrI9MOKdEhptnQHypXbCk_z0wSICf6ElQ-ge5FACcGmtjKcV6h-xOWBqF2',\n    'AdxKNW6Rvn2NyGD6r9N7C13nh9lKZnOJ_KaNAl0Nlj_csc_wmJnm3MgpyHOhugPhMChinj2Rfsr9mpDv',\n    'AR5XPd0OP8aXFu_aHyBK9pP097vBH62c6afOj6sjH7KSB0CfNKZ6QIR_27rsKCZYmmCkRgjXePpTq01p',\n    'AYb7yEHXW3_n24dkjn29InoA6dCPEDiKajhbrCwbIJTQfpGuzh8a5FS4MoyXyFsiK4vhgeWxtg6zuADW',\n    'Afo1LVZtoaCSq5HI_naZpUMjB2C0_OiB6nNHlGaNe7jwBTunPXnbodmCr4ZTtpL3WT-4RkNG6DQFvX03',\n    'AR67hODdVoxlUsOUT8BoHSYiOJ15WDQg90nkqwRP_14vVrEb1a3S4_caxBc-w51TV3AcMyACzYREtXrH',\n    'AZxGGpjzsdT8yXYqFS_kp-Ai6E_7EwTJ03AoLiJj6z5TBXa6GZW5h2ZRfi5-K4Y6oLyrF8FpJpPqd5xY',\n    'AUq0DPexx9Wb84WP3jKi9r2WH9xejePjH4KAsOdRj-q4f5PfwMZ_KpVhLvsJyo3lhpzqhOJEkqFspgGN',\n    'AXOplj0iurFjzACM1RuuWcDRlVubsIQe7ry8SRAQg3LRVDyZbAmxOs2snzLSvNJhCtNNFANLf0cKguLe',\n    'AUwoRlv3iZ3jt3o3hhcft_tZ5g6tvefEpjCf9YNGeH7q8p_WraleitkKfLnWIs8HLpzalgRA5AMT0BYO',\n    'AQi-8_4bMO1BqBPldsz4FyybrZMDAeQO_uqEXfZsxgZGOrMbYl-pO7sKTnQpdsNxEgM-xa5HodTHXDQg',\n    'AajSVnIsGJdD3fKO76SmA8HxLs9flPRpdLhp-KTM34I2ZZ12WqfLZ2S3zmbzwbwJOMi5AmS96jHXppPu',\n    'Ady0oUeIgU24A60CEhog6THKv4rO0-58E1C6CXS3mfgBjonkj_fh6hYPP1_8qVzioVPhbX8JRbyeHV_1',\n    'AW7mu9kZkNQnih14Ugvi7DmBpdouGHi8yv6DQHScKfz1pvNh7miD60WrQaf_sRQFbya9pln1JEhtx58F',\n    'AejlsIlg_KjKjmLKqxJqFIAwn3ZP02emx41Z2It4IfirQ-nNgZgzWk1CU-Q1QDbYUXjWoYJZ4dq1S2pK',\n    'AVfy3rhipHfrcpAARabvSbVcG8se_5Ye4Yez65UlXA2zNQAhFLwERbc7sFooSjc1pRkQDvpWM_-6UlQI',\n    'AZNGPAzuZGI56_rR2d6Qt5Pg9p0EP0SlgqOLF1hJ-Jhyl7Fc4KLsW3WtUaQBsq7qEv-VcMfH3yRxckw_',\n    'AdEIkRwwggl9QpNGdXzXlT6dPT5UcxS5G3pzdimct2fQlfv2e6JC-ZoR2wEaqy1VRSYN5zYATl04lQPJ',\n    'AV2UhIeUzG0N23-zt7_KBQ3OhYq0ZurLSvm75NuFWl2iMtNiZr0k78AvPweLerv8DcdSENAAPy_qVHdc',\n    'AX8Pb-sAgAFp_gHsk2dQX30ABfcvMabRjPRJ97IqRt9LWWGn6bsNiU1kYqMWBkRim_ONg1XnrOq9HycV',\n    'AQkboqLaGeUqU-UcsupDWhGINLljqGPvy1pm6JMp1EQMcuz--sOwhOp20s0H4y1b_X6EYgUYmwl3_QbI',\n    'AVxk36f8VzzEEbhmhFRdeWR0s6kjHJB88V3q1VCDDWO-vUHkpHDx5a3c5KBiSwrEnodgmIDyVrySo19W',\n    'AbS9SBIomzAqKCnZgxxI922RWH4sRjcXQVkzbQoxwGh1yLU5K3NyBiIksj1qy-cgI0UTRaKEENdVA3UG',\n    'Aeof7I__CpI_sDTMc0sabPC2AtcDFSWYTA-AuSX35LgSdK_nveXR1zNGPzWb5d-EkXP8EaHFvpTXOt_W',\n    'AdFNiM95Vg_Xslrjr1PY-bUWGKHheQsGWo46dXPnSWfkGWhOpGqCH7SOivcQU1Bw968KwMiYIdOrC9C8',\n    'AVQfN-d4gHcYcLlNAV5jcn17hiXLr5-yktBxwl_oviEHekLjF_VtiWEHzpc7qs8VBooeZ-9HNkIaZC8c',\n    'AWZIhxjocZGX-AfhRrmStAUGypQjzWEQEnLV670Qui0ZdjBH2xiXlCEpnXbaHxxwV011ekhRWt6kWQzy',\n    'AYJNkqXTB-LbDWY-geBeteUhFckZhmKUXoQm1EKrHFs_jT52-Xs9HrM4yZe19i65TLy-KTPSZrbQWL4d',\n    'AaJdlGSlPSHCXuUsoizK7BX1gQGk-LXzvuTQuISXPz5aJf07UXhnNZBXHnZ6PBIGgPSLz_ezOW_JMWI5',\n    'Ads-AIlYmzcupU4h7aNwYtZCoxFhsytxkGRc449oi4KTs8JxxM32te5WnObdQ63roSR6_ap_RX0o-TyU',\n    'AezPnqbw-EqAB-3QxkcQzOTFu_BZB4p9ELEmDvBRIfNYi2MktC4OR3ls8-kfoRucnB7oQoZV_63a09RE',\n    'ATqRzjL44zV0uvmI-I8UXaA7aGN5UgXaIYvPnXot4EhMOFhL02PqzVX5vFPJ3I7Q7ezYGDluKsYJbTlb',\n    'AQb_uhCxkswoDV-msDRSEvBrENNqphJo-cGxMJ7nUa9hSArJhefMfdMvtVRN065kc4e2jp8rJ0X8yQrz',\n    'AcxzPl0cMHMyjC5D4uMaQZ0oqjNEGNItIbUgeokdAXzFs9Tr2uYJEe4l76DUh4HnX0Bz3XSYR0Pnwn3q',\n    'AbBeFZDAUYMZQ-EZMFQhx3K3_vvX2tU_45Lq6G4PrAzgP3gp6UfyaFVEg7DKo0diRDacyhcJO5Bpxij3',\n    'AR337Je4oqSvRgX7HjX2Sv7M1VsK7Lme0WBssuEwW66bkphUUWw-JjjVvHNW4ttTdikGHraEBfD3pKcZ',\n    'AXwYaDB1wXCQLJsQwaJhpckEFdZmuZMohfwEKH1vTm0Q5HJTw3t_Zqllc0unozCPPR19Ahlq08vNsPMw',\n    'Af8uKf29kbmHdbkYF7rCs4cAwupeZQZ42HBlOTv8C1cPsQDleyL-KibrX2rI_qxUfPXgS-AmUcL2EkCn',\n    'ARqhdSV3eoTacPNpD0m-xMnGuaYsbdCi8xCtAM_NKRqiZ_Kj2GcmrnpKRJOimbS4Dqg2WBlMZvM_a198',\n    'ATdvBkuCmZU0bTUYpr6UZH43vK5293QKgxGkPSYgfr5zfib2PbHNeYI_NSuhsJkiGiQqCAMLkx4lSffx',\n    'AZHX5-mWu26D4D6Ocw_8GxZTsvGtlFCm_clftgJLP0eixyZ0rTbVBu-T5RpTaw2JYXK1rzxIibE2wUcm',\n    'AUYwY3jZaHqT-hh5Ogpy1WkNunjk_AWi9pjdm21kb5GFOyJUnquvZeUx1jPHLYSwS1l_pHvWudWZUocs',\n    'AWkpAaV7rEJCfTdsnAZ11aisQ_SFD1MPCt8ZLZXRga7acQT2q3UffhOPc3ei5hoW--H3rXVTlIFnn1jM',\n    'AbQ3QKqGPFeBWir6QK2na3JAFsMp9scbSOeRi0_15AA5q6XMi4hTRuO4Tmme6jmAi3SvRY4PTPDEqY7V',\n    'ASD3LOuSg39EBl3Pd9PEZU6GMkA-yIJQhohSF4owo2fL2eelnrgRYQKYdbvtYI5O3IDp1Pw5iqEv5Hbe',\n    'AVRFLjMTInsB9StyuRZltkDbN4Bhi-QiXcIeqPO6YPU7GSOLR3i8F9f6pVX38_EkmDhIpgXM-D4GnPdO',\n    'AUoMvJA_FdhFwJEVL6Ri7YhdU2nrPQUoags0yhV22_17ZgWmfvh5Zqyyxpsba-dq-LH6w0tuIuEQJ2bp',\n    'AfCSDNtSCNV6lzSOqF3jTnR2UHPdi225JVtSowAVEcDi6KgBYBP19qnwT14_dMcALbArsbQA1s4vVGM6',\n    'AQUolB5X1HACW19AGVFANA1SuuJOArLYtyJ0zI2yvD1jVxgUhZbl4E-m4ry_emlAEsik3xm4gcvKKL_B',\n    'AfWrrGm1rpmDZGvGBxD0UssB3Ru50PGNgIcaWOpAN8mFGGkgl4Othmu8kPlunsRgR8YwPerYCdtiWUVL',\n    'ARnCYfY6j3qid5w7dQHUMtoRebesjooa-ZDvw-sgChzdIap0eGlxO5rwLQy-TwKB9FNtMvEaXjKOGatC',\n    'AazXPDqbAnyE6iEbvPw8wYi2YpjIJkRczJUF5CiSKNoQ6rEmP6mMzwAlf_KDRzTazEUukaq2feqcYYuG',\n    'AeDWFs5RFH33pB3skuP1M57jTWgMHSuKFMxJtkMddpYsR7SSEBanfqI1RN7LlRaQ_Jmjxb8-L_1dbIJW',\n    'AdfXyxI-oHYghKou93lC4LRkRB0OP3-8h0L5srBeDzUYFwJ44_Jk4Vv71CKt3BlMUlGUGseBIoRFAu0F',\n    'AaXrMQuzMiglUVTF6DWsGEXij4fOW_IQU5dZ49WvIGs-lBMiUtPW9PSVX8jQbwZZsDP10xEpAjUllgcr',\n    'AYSLmzwkSsjQMKrDgKGmAfYjO-xr06W3-WWg0DfayGHeWu7Im7UB5eetTIHUso6d-zpcE_odqb6doeBz',\n    'AaK4HlTbGd6DSR3mnUx7Xhc3DM5akcMdDQpqnawV1O2XkLZVuAAsHswM2PK8H2UBsddrcblhPgGV2PHL',\n    'Aa5ceOuSFIsr-yA7Xc3p-3ZAFogzycThssblaTOUd1JpcLOUX8LUXApTe2m_QvmjAovdYcs1YujLvRtu',\n    'AUf_Wbw9mq4zdVOg4XYC5JHrc-mGolFDwWF6ex-l7BA8lxCp7B0VKqU7BpQWlrfCxgKe5fqRL_N7Knz7',\n    'AUH7PO7l4LubjN0ogPX2GY28oACKu296xjV1a0yRGWdd3EwfBmOyWSYO1doaZd0gx-Bx7Zao1SsY23EW',\n    'AbH0SUlVzrLY0ldQG026EbqR0lVthG7UP5XpZGjoyTAUxyDNPvtyR67dcUSNLxOZSX2TLgNIRk5jX29D',\n    'AeadV3OUHInuU5wL-D5zlR-luGSVIfX-nA90teNgJQGYscnG0RvVnq5eNme7pnHtcVnRCBVl4itjlG4b',\n    'Acv9CfoOzVZ-rIwwd3xF6KK_meBjucMzn5m8LdlYHPr4sHr0u9adnH3DOlNrUA6QolpqhGEWmptO6lqi',\n    'AeLH-VryI92PffbhsBWgsnhFBftVk8zwbupdi_LwKAQFckM6OmwTGbKWOOKfUz2LQctrtvVygNvs6iXf',\n    'AQMYXqEHnLgLDn2Ke_4SefTHx4oL5pYbEmlp3g0D282gED7WCCFu4C6uMk8OqHdkTQIYmd63cr68_-Hq',\n    'AT9wpTr3uD58XIjdJkQd6OOh_m9392fPJg3Oo1mSki98E3OvDqVw2U_uBZ4YltQjo3iNrn7ZlRz4JjGS',\n    'AUqz2lilNW9t5eMx1VEwCMVSDeMHVas5zLpolzIGLDOjaJgS51Yy8fep4KKNQTUi-fj9yO7qIxSKRN23',\n    'AdtlNBDhgmQWi2xk6edqJVKklPFyDWxtyKuXuyVT-OgdnnKpAVsbKHgvqHHP',\n    'AW6_nv9voVzeF2SPx2CeIWV3AYzNFDOiPOmoGtiRwQB6t58EN4ix_utEKqDHSAQUaxhYI-AtwnoQnMUL',\n    'AXVv0WVqILDE_ALwvlqIuLMT4h_2OCQu28rZyzN6VHiB9dFlPFJpWyoZnkzUBYIbuuYwdxfNZPvNwqSJ',\n    'AfcRKeMgHWWby7ltUUzqiTBoHmO4aVrsdNpRZVBiEZt7U56nKUGySIyNSK9m2JvCQfOGfjxI0oZKAYmS',\n    'AQVhaTnL5pyyXwnn4D8pGfZIpSASJ3hvCfE04-2t-oZ5bxG0Br08c1v609avdfOd8M1jTGaAMZCu-MLa',\n    'AQnAfBfkA8BoHKE63NS_bKyGpVaxxmgRfPzgxThwY_N9fTSrSITOKSSv6OTrpGHiSrA2YbLKo_KB4qeh',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AXg0AmHuT2a0Fg8NXx0SezjfLG9UgmLK1qE-fUfbAi6fEF1mbXWAcfp0-rlzFhWS-K_aXveJ2_h95E4x',\n    'AdVBcUmJoUuavK3_TQkaUMV5S45EDAsY2G_GN9dw3MxbtdUeEu0Lio2nATu-cK5PUGJMqIUME4soaaDr',\n    'AVVPnV2oTAsBDiXdmLnZxhgnVpGlYkMlByGm_SzWg_3e85tbRhD49Ix-Ucx3l0ib9BfmZykje0uV5KzK',\n    'AfWrLXLdbApBAVcEvM7xmQwr2QhHMk6jbvAx4jDMnS4QGmkdxQ5uKDfwOV0jHyPC-0pRSisTRpB7sEby',\n    'ARkuH9nh8MlJG8zEmVHx9jKsi8xWHR-P_1vWD8--7vsqaWl2zBO3_TAipWc6f9yMHmziI_0blQqViGFG',\n    'AZgBvhDOw5FiH6rL1VPNaAQ68dmpMaAO-ZI0rg_QWC7of7SLT6JXSAagblw5',\n    'Ae9ydowlZztIMFy9HbRaMTyLDltKCy1v-8Ip6J9WkU4WUyWcW_QAzUnMPLV9cxy6czPjtN21uddn9IG4',\n    'AWWh5qDSn8fdahjjO4AJ_GmbyXjb_Qwrmk_Vtr-d6TCb6IAyPUItp6L7iyZ_KgIBxBhLLHpJF13xMhXl',\n    'AaJ6YsPUaMOVjHH67sM0pWiAxlGU5dMNmBHMDu6IxpxX4RMxTNwHShxDabIIIoG_hezmQ_bLwBl62Zz-',\n    'AavIU-CI9kUiQ7e76nQrNWl08jQdsCSOALmuWJ8cN2rpJwKNm9SLcWyJNErFLNNYvXjRRxVVnJW-4iRw',\n    'ARwAdSLROuMQJ-91zD4w_-_Pe1FkBJEgTpKNw8LZKCtoRxsq5cQaQDcOW3V8QAziiIlp_xAr0iMhL5Y6',\n    'AWpmV2CUaza_wgqCWG5df8LRAgmWyD__zhsJJHU9TOdqgZs95mvuvMRmaLPlYrRJMaVVy8Dz-Wqkmute',\n    'AaCbDDpHWz5anhIQ_Ge_RmUqTLguwXwCrn5U50KZt7xU7tU3tH411rCyBuNYCaIV_nvgOvUNmI8YU_Df',\n    'AfUEYT7nO4BwZQERn9Vym5TbHAG08ptiKa9gm8OARBYgoqiAJIjllRjeIMI4g294KAH1JdTnkzubt1fr',\n    'Abu0Rwqhorsjm3yK3OVe-Cy15saxELijgiA8yWdGveJvDgevs7Nc_P-zsHg5tCJoac4mcjTVjGuJLBzA',\n    'Ad-_JWvlIx4ED8vWip75RskfgcM1JLY3NnAKDoqDSBr9gxXVR1L5kVFZGqKHR_lIQO4gY7EFrQz7O0pj',\n    'AZh-q5bJ1_kWDREHUN390ffVG-ubxGxHB08kvHlWETqkleYtWWhGge8z5nKzfZW7aM-U3R0YJTmbfafh',\n    'AZymbWti-n22driaG2L7G7NOyQMZgKumqw05JTSIT8_MWMGMqsWdWR4TBo_e75oVkMViBe4zjO_DDmjI',\n    'AdRRy5qiC2TsP3OtbkgwRzLpU8WqdAjVf18Me1BO7yRMBHK1JVHXqlr8XIIj9qagyePiG4_Z8iZIgOmm',\n    'AXjYFXWyb4xJCErTUDiFkzL0Ulnn-bMm4fal4G-1nQXQ1ZQxp06fOuE7naKUXGkq2TZpYSiI9xXbs4eo',\n    'AcSMCRA5xVRrJ7HOPe7HFj1GicmGAUIKujZVOYnDD9_Qiz_HYSrx3RlAtVwf',\n    'AdZYKRBNf1xFvz6fcYRoTXlmoBg-acv-dakLzJTtaBn0cqNf5M8Z4OCHUBMv',\n    'AU-ACu0mLYYRgiceSGEbzYcX9yA5bhil5ICbW02h2M7cbdEwiAE6akFH8NgRuCsT6dI33gzZX9zmKr3M',\n    'Ab6M4m9Nok1o_LOQq0l1Sc1fX8aWo_Ce0Mrjm15FyXguNnWzgHOJOdWKbz384w-Ja5FsJ4IXHScGwo1E',\n    'AaGocs2Ps2V3yhN7A_lS5SdS1mF2hxmUZ8SNBCzFHf0TUpGdkmwEomPxENzxR8_tqYKcwgB_TErnHCX6',\n    'AWmkdE5Z_AhcR3GGOophAu_qDRHpOh22NJBB-0QjLFpWFo0aY_wx1UBwqmiG4OY-BFkS7L0gXY6gSmu8',\n    'AVt2-Fr2w7QVb7qxDp0gHohDqZFQKYB4MgUs4KULrN4zayXnwycugMykkE1zUjYJBsglaAWFGs_U8UEt',\n    'Ab-nG3JqVgV470TB3zmlXXMt9vZvUlOqNGVMkyu51ymtw8MESNvwkyFUbERwEU1obtLJp3g1V30v3lLQ',\n    'AdTMvLUejL5-E65uSwBZnRjNV5JlTrGMvEQEwhMLU4dhm6cJTfgzHuYhKt5r9vfKlwNyeieq8-ZqdFGW',\n    'AQX-OJLJe2aT67e4nouWcPdrl4Q4uqOMoC5jS0otp-vX7ZcYM_uQQQuFST6l7QKtC3Fg378Bh1c6qtXr',\n    'ATDAHEYwG8nsvQgqf9yTWUbQ2iBfounObrJWfoeoEWoErLoaUW_rMh0i3o6uAN6XfRvU6GUnF1gRHL-P',\n    'AURDh-fRhpncZm8Y2qxh_fj9VaUH2fTeEGvA9L3jkak1vfhISEDoWTsmYVfj2Az_4nPWaZlPwi_obgTA',\n    'AUPF8VFKX8BsjR3ON0IDB71s2tcW_RF-q-ppFwFU81LfDUCyhPChAeATXYPeGsgLIlB9TEN_bkh-_ASb',\n    'ATr5EshElZhaC4c0e2_ZwaSwKb0S4RKy39g-4al7OUYUezgOuKV-IQdyLesPj4axzgSldEzLbWAeVYc8',\n    'AfPnJMClV1R-CNXdpctubgLazXxJ5cUDPeImRKZRLGqWep1N4q22hEDtfXC3R7daG0JdtOO4vNqgKs5L',\n    'AYphQKIxbbbdGutmpobhIbo0jkFSigSIMCE-L79h71YBjzsBjP18q9RK9rgeeZ6APprQ9tWAFf2FNGRL',\n    'AZQPVKeH0usLoAuZVvn8_jOGHCT6nP7pySllud9Dh-sbIqi7kBgDt9Xs6bCxEhCpF24x1JieEDdgn29S',\n    'AUcaacy0l8SHnxKXCdYaZLHcrRPoj6KDxw78tHlZ6zaJ7ALqeIx_rXfkXZ8EDH1DgSfZIAw1r92NzFTu',\n    'AXz-FTdsaLKAup3SCFE_BBHjr4vtV26NLHt-oSvcxhqjBUjMKiNM4xH4zALKTyiu9_E3laCtgbn3_Zxl',\n    'AeDCkxuOsfL2RdE9qGK7pqNOMvjknv02TZnIBqj48N7jr9EsNuHKfvO-2Ndq62It-TtifNWdALIaly5B',\n    'AZB6Fi32uCC1QRTPi98AR-yBdDyiYBlW2iybmv3oPv2ka8OVM41OGW3N8DICRfZg5kvyjpdgizGxNpO8',\n    'AUdiNR8sRJIYiwA02_4UuSjRRUvGUFqaS9a-xJQPRBeJnbZKY4DRBPzc_MHkoHN3parC7iaUcSZoUNHs',\n    'AX9Y1FE6CmttN_PzOo1rDjjnmQrgU5gTbIy29G56vnM4imILXMW_9Q-WbFw6Lqv89Au1bTETv17YZCCm',\n    'AXw0UXVUt0zPbf8zAeuYUPH5Mk6yWbGk1GFXYrKAEveUJiC7UCmAWPacs1-ri1Q2ACUNt0fVDcxY_phQ',\n    'AUTeu3BWbHn4Z4sH_fAF89K_WdAtUIe_EnhpGlXrEEbj4MpBwbs8VCbwCGmiOzSRqt5zu37OihWxRC6I',\n    'AV4Y0B7PSyc6DW63gsLtgk12P02kXFcdMJSt8LiyUuiAFS60z22ZlbYNLOBaaegHENNTEFsWX7n6bPP8',\n    'AVEjCpwSc-e9jOY8dHKoTUckaKtPo0shiwe_T2rKtxp30K4TYGRopYjsUS6Qmkj6bILd7Nt72pbMWCXe',\n    'ATLQ9jIClPt9QFPCVGFNaODFlZWIkqGv8os6ntTK-QR1iTRbMntGtvuJNR-z06QIrsPpe5ujJrfJnw80',\n    'ATWCV-slH_K6L9tzvdm-comm1gpQqHxji7spHcfGAARQ_NuMRRYAHR2gJ36A3okABucUuImSl1YSqnv4',\n    'ATDgSNqwYRLEEOrMHB-5Tx-5GxRZB5WSbi68NtIvvGovxOAfSxNhv-gFulnJX9AvMrHDacpPNvnpUOrY',\n    'AVyrz3xlA7YsPL9yRG6WTJTJ9JA36ulnYq0A-W2a7-FQHagTd-h2XEnslSKWN9GQH__VVTjcGZWlltGq',\n    'AYrt1t_Rn_Ce-988DREp5bsPwGCoCdILPsOEb0Jap_LBWdc-E6j0AJ4jR26o-Bhu6HB9rhw_XdO4S_Kc',\n    'Abp1F3rN8bSojLO9dhYwEaPStHml-OckvsXx7D_B_gqkbCTGhKoI6UCzN5oVTAwMb8KO1KwWg5GLz4AC',\n    'AXY3oISYFxU1MqS5vG1QvFkMMwym6A-EDTT8DFJIq5ZWlq3OIoP5yX4wNKKmKKZ4yxTHCocYWoPAGNQX',\n    'ARcf0pSIWH4zw6SnO-MYJCEyU9HexIQ9sYrzUE6bRsQJrP-95zmlGyhWjp2s0ZHLoG4nF2uyQPzvVcfD',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'Ac8X-wQoJRqcR7hjhnPl_0EAoxHuj7pWE8PFtBU2xsvcL94bxepJUNj0awMrs-o0uMeH1pqxZvhOwr7Z',\n    'AQemBOgcqnwET6EUgdQZHNXRgNZ9pPFJalKsEKDL_YlfpGEUyhLBj7BRw7xWSB3iq8Q6gIxo74OSx32k',\n    'AerUB-6mTARcvaeXjg0i99oWQxLi7WrHzFo6vAGYwEahSQ3cOOxA6iXfvxfBsEOmsfo1tfaK6pKnl4Kw',\n    'AUiUO36J52hSCkhaMPLWedP4yIc8AzYxQf9IWwI2zxv_mEFOr4S6v8JwAmKTPztnRqzLneQ5g6D3OZDf',\n    'AZqMhoiURMT7qtC-gKxZorl3AjLOxAqz04Y03kRFzSBnrWL5W5FEucdVk0EHc6XSZ1DD3lV1O6Ei4T7Q',\n    'AYA1kbHZEGfgO0GQZ2AmRZc4Pt0xA_bjH_04oqwnN_eHjiaoLSR1SQ9agvNDB8og4LZEHHVK6m-r3XxT',\n    'Adm59IrYvPigXwV8lVehwwoToY62oxUEWZue81iqw7fx2ogOvrqbCv2yKAVQaMgt-YQjfpM5mavPDWRl',\n    'ASHRFCrZatJJD779KhJh4vReZxHyjkEjJqOcH51HiBdN0VCGPzGsY5qcsyKOanBuLdRcq6DGIxMkIzdE',\n    'AUC9st_MCkpnFj5grSnlCNOh1ujx2NsAjMyctoMVNZy7P5p4X2suh-XKAdfP_G8G_ttwARjVP2qVh5_U',\n    'AWD-BLYAm7ZItS5rqG2NwudODLJwEjzGPZ7mmeJMnOxYdXVrZj_JhUpgrnPoGPS5DdDS4Wc1-KjIEnkC',\n    'AZ81OGWmwmMz4z1H8LJlowtkiZMpLGDSe5L8Mkg4vjlOX8QwhzMB_H83KpHNPOLSvCJ4W_zlhDQ8JXWX',\n    'AbTZGAAj-YmmToFZbGY6oerdrhM2VHZAHhSj9ou2WRxX6deDa-kksuEJorQWte6VMT41vx-cORSYZLpU',\n    'Ad4njTiG2f0fgrygZXIGwnCB3p6BflSSVDQROEQgofSJZvAgrYFQtXejNTiRYan1AWwRH1fQF9U1WcLV',\n    'AUFWrErwbbFvjbcxeYzqEWMI5G0w_LP0B-2wm6VlyxNhcHyIdlDBMQmKI298W-EIE9Z5dNdP29EzHSY7',\n    'AYMn26-nPadhPzVAH_RPfIXaYMOGtZgPnsSs6p_ieUsM56FipfvZn6f-h-tqe1ZsIejirYnooAYnPrpz',\n    'Aa3vEKJmA0ZOgxcPLPvVLrdcIjNqOUXyvcJxJdE_UvJB22YJepjDX-uJmaP3i7jLiePb08pTMuSFU5by',\n    'AezgqjuewrZjjN-whkJhUTFLg_wP-hPWJdwa0yPh_rnsJtcAwltilMGjQEJAa5lGmFKwgMEqzHmU-i0e',\n    'AUPjnwsAZyNIPBNY1lRy_zDafMe14VrpcfeIp7zznNmd9zBPurPIP32TKV-dL1xg-dy42eZJdlk_0gDJ',\n    'AYmOiHBgeNwOszgNnOKM1p08gdtx3K7Rkq0Iyf3oqz7inUaZZJYsXzueM_ET09hdjvkfChbbMwT9n4Z8',\n    'AV16buDgQ4t1rLTlRLALiK4l2V-bBXbuexvxGnk3t_Tu2GUYG7tCB-tTPG5eD9Lz2juWTwUT_i7Cf4jz',\n    'AXRILPvYUu4SLa6wG1z4n_1DsC3_sA7_asy0HYm1rCXXnRw1v9Sbe9NsGDLNjrE_8GL-eVw_YDjlTCrA',\n    'AfKrgEQQWsMUR9wtvQmB31X0T37HEZ3g-uQmdMPt2B_cphEkyID4sYZnDGLrFe8cP6Yx-WSTqnDZ5Wgw',\n    'ATJBc7APFn7FuVkOvl2xI4b8NfggI6Us5KrHlc7It3e6AOUSqGalL1R8LNQBoxtFzppb10lPKwAbuBUd',\n    'AUUoVCSxi2WznYhlTPy6x7oxCOeuDZBFy0iCSrgHg8mj1JBDY3_dTkS7rhFQnaPRh7EG929pfUS7hjmD',\n    'AXircH2zJ2lUmvEMsZw5HWbxPEYF37ZcRAgOfkjf_wVXPJCVecRES3_gEEi8uJMnw4E53Ho2gVTb41LZ',\n    'AbOUyivVwdLJoOfhVYz9Qw0YL-rz89edlPM3S_vK041Rnz2t8hxtvmFnhIwv7CGa-mHoIl2354UvFH7g',\n    'AcsCdakTXBXS_Y6WfsGrjw4kBjzcKsyNBdA26LiwCCo-23guumU93tkTCxg9Q6XadSuCkfbn3LURD9hf',\n    'ARyG-7O26qHxhBX6Gv2-HzXu-F27Tu9KQAP8jJicb7Gpik5x-I4CmU486piV3iQ5Gu4qkYOWUbvBaUF7',\n    'AbFEddN5fdmNJA2-pqMsI_ITOs_Pcl43tzzjsru0ENbtmlW1C2bLpk0oThT1qNL8tgmPHvc4es6j_B9B',\n    'AcACdB2RGxb-23peUt2ovwfDUXBYSGbBlv2iEsMOV94YHcKqj4ATAGnWYsbddFAGWR1HtkbGo5ASw5ao',\n    'AR_TEvkkg8-EPqsZr1iMYADrr35BE-JDN5Puwugm3NF98k8tZRQW_UiFa4u7HolQHThYxd1n05Wtxs9D',\n    'ATvwK90V7SFihAVdjTQlIGsil9oQ1uSHT8h7GRM-ZOowkAQi9DCg6JAwFBpt6azdFFiriWT42jcvIjVe',\n    'ASFwlXgoOm_Rpsu5f3Nj74nTgbIT_eD27oY7vLsEZ2ICOUOtBvPBYHMZnxhEKRNKmM0tCqf0-AxWUVH3',\n    'Acn-VnbkQeJlIfc-pBgbQmyginPTAILbLKiMFrOH-LBEa62Yyc_LdEtpkd3iKtJVgtkJL59MERCBSHas',\n    'AfySg1lo0aeg43kcf25LLQhxEbSJGU3fmgldk8sVu14EERcjca4dpHy0c9PwTo-oI-y0gUK__E20ustG',\n    'ARp4zaq3RYAZaNLBnOE3xfpZWzDAO_oWczsJ7xcpxohLyAYz02hndRARptVRJIUc_lp7TwHvrl92U87J',\n    'AVZDQ7ynJEI9MCy7bZeDPGMSC6xCYUBNU4QGi2lWcH01RqoIqJIL1wE8IdKRBaMC7G3aAJXDbSKuM_PT',\n    'AWhQQuykpN_nyVKTgHZeviUEtQ6f1O9zu1Ygf_OSsyJzr1vmNxU1ouYkgMxlRHEUQKEnGJ-p6EyabmQD',\n    'AX7oINKfpN4DK0n54Qa7cg1ba3mRas8C1e49Gq6Q1WXdenjGlJ4ym1cswCLbRFz84c8ORgxFfMBeXSPB',\n    'AYrM6JV9iA-xCCU1xCMvA1DePbwK1L0Z35aaOK-li0DpX-5qhZmO-0cHx1UdrDYTThGsUZ6858QodAfD',\n    'AdybeG3hNG3xDrQ0QNDw9Rbjf2KMxqoNn5vbNYhgQowqMIlsvvz1X3jOsaTWu-1TM0NnvcSsLm1bkNXA',\n    'AWJoAvDUxeoxjN47oBS1KQCHP_lGDA2pqLXBahns6PMmMDBgHYoYmF5zZoMiOX0m_60MAux6DuqhbuhI',\n    'AR3dGJe8zToNs2fp2XT2NTQ9NVGuGeNzzMO8Z-uuncYM-wHJ0QTclojSh_dwl42G_hRm0_S3zKMgqC9E',\n    'AVJPoSO7nQcOwfC8mjDFlYZd0hB6uRPXn9bMaXC81YYV-g-MXziOdXFmk_nnfSrOGcqxh9mN75bVV2Ak',\n    'AZdKwrTwEzQ8XxeoW3-dVZwvoXEb8LJVqCoM-9fjEKMa7rO93dREWhDHFx6xWu59fsDpxXidHxFpv2s6',\n    'AfUHjf07HcSdnyIVrjKMGKrtwNcNTDi-3QEAJtkJFi-l8vWi9XbjrUbM6Hr4PbOo5leBKl2bL53dHLZi',\n    'ARPe6sWG22KZp0YKSbebgdaDblz7a7wyex_OV7_4zSY5eOdLAtz0okSKznOwkoX0mvA6W-zPPJppY96_',\n    'AXwCJppbQ9ykBy4P4NWNN22x8KsyKlfHdtMJCLeN0_IxS3YJGzMCTOjfmTimrQJ-i1bqkFUJcTP1eww7',\n    'AQL96QrjY7kmWnxRgYQtKgpnyBbd5MGyF2XinDu2vhDT4sYS4nnCE5bcoogXK15Q78zHiK7lSK9i8cLY',\n    'AYraDnKk5Rqdlm0ZPF_aYLDWlCAoBBbpROZ7hlwbassgAw3-SXHJObcFTm9Im7GfyT_YI0hgAxkZrCe-',\n    'AcG3yUDIcfKxr_uumVTtvj5bpENO8IT6eI6oKSlgVDkrf9ZshIAh1m9TObJqdOUZz3D1Qi67-dyRWY36',\n    'AQSgGxsMmajM4NvcuZUZ0fUzSHuuv7VPcUhUoDuN1lwT4VEgq89WO01CKxqK3vVjt7_c4h0VLPchKfsw',\n    'AcY3PqxKJN5tvdtds5nGpzLiatwiJznJYJoWpG4scbLnfPyG6eHeDPQ65AmoEbg7ic7JPahPBZRkjSUC',\n    'Ac6ke_AYE0zbyhhPZYMA3oaIDU0RRU4xSySelFvMVoe7aZyUk9KqC51XnTf-gkvXQ1nDBEh9zQQMFzlA',\n    'Aea-KrjL-ubqOR6RcqaHPTFWJ4QcGfsx1t-k3hDL52ZA1GIp0YoSvW_ykkRHMiEaztr2aupN0ev26eyD',\n    'ASZKgb3hE-0wkV9NCG6Z_KL7lTaoA896U21tg_zeVDcJqatd5uXKlzBTQV4t60TYdcObCvoaniK9C-pc',\n    'AcbDULRdfjY7w-DS60g0-mCXwOJQNWotOZes7mlwT2VCsXyAwdvgPnAnphtPwe8kRiol5CkNnrV7ty4h',\n    'AdKY0ce1_Cac5x9xIYMeLRXWQb08bCvEFvaOgd6FKT0EpZwxi4a0QQ9DYB8RcSda_x9hGZNNLxX5ox52',\n    'AdtmjnhumIVf512r9eVKWUSd-FB1m50_qDGaMddykHwE_fCzuDkKl7lsWk7VmDVQT348tjSvK0xWWqxW',\n    'Af4Q8vg0vQGDOS4CZCo3lRGuxa-0uCea8ThUMVbj_AG_va0-pwbERM6DwznoR66uASQJdR1iCqiAOlY-',\n    'AQ30yLnZhcxW1OaYle1tKeiYOBbwusFVu9tKAQo2B2gTZoyM6qIWP1cA9aBOwUv5v7x-Zymm3ScDc62i',\n    'AWFgO9_WbDSGn-3EoliV4Xe5tUOVjlvTxzRD--a6rnDEKWsr1DzaR01XK8DhXCu7BulgWxY-3T46GddB',\n    'AZoLIJ_07qZVfTVNFg6zrb6X1tOgOwz49qXKAdssCOowJ4o3QFwUSOAVZY7WA9t2JO462nSvIxmg8r4c',\n    'AaqFBIll_36pnXqDpUctsxLhL5mGC8J2odsn0pDQIBkidfb4St3J44ENAujonkUJWt8lePJ-7mSBb2gY',\n    'AeTaeY1w5wt3je9FFRRE1t313-vcXeS5hNnoF-uYB6FVD-ChMmhhy3EvCnozTH2TnLXNldFwz16d1b44',\n    'AT3e9Naa87eXT8mQ7OakeQCsih35N8VjJ6sLA0hP9zDcoK3fcqF0HpHa7mbfPEj2zqqJtyd8dRECKXKn',\n    'AT9JbsWaW_r6I-pzOuZ0zs3VD2CG1AyOgDUOBnMXAno9TjPZYOiegXhjMbqUmAef5783n6yRz7nMm8mr',\n    'AU1f7xobnegPXLuqQq2o-_nS331U2pUmWxUuFNlUd5QYLwUuItn9mok1Zh0T57FY9nE8YI47GR9vsZDS',\n    'ASDT55P6Jdw0oYgpftSjw12L2wcl3LKRqiO8hCnx7NLqc0SfWstmVmcoLa22R-1LVKtAcexEBP60HpMd',\n    'AVMDh4hHgdV9v5DSD2GfBRw2LCz3jF8UBDr8qG0z3pGFjWNrBh8RqH1hrzXqQZ3TdyqsPjuGAH2GvzoP',\n    'AaghtEu2Cr3W24akci5JY2StSLCb4IhD5BrCx9K2z242JwKzxnDrsZx-va1mTUu_FIxBTFEmHDZP9MgC',\n    'AaWFb3GC2C5C4Wmky3pQ1LNH_nmE3Vwkj-LpgDFPT-vWBNgg09MOLtWbNN4wu6fjASkk4DGpkcK1bbyG',\n    'Abpk6sczIxGd4uShN1NF18-Uu45acQiqIHtEhblwB7fegLhVlzI5j9qmAl6kxM_vMaIAEfFFON9Go-yJ',\n    'Ac4ulvdzyWGE2CFo5xV3nYhwkd0CrALQleV0oImj91NfzxpRc94iyPHoQzrTUTJ7WcrgSrxjc-MxbAEY',\n    'Advgqk6L03sFnkLl6UXmlkAwozU8X4RmqlisNUrsk0RFqoldvD6W-ZXVdghbzPguZXl0ocnSLn_OwK42',\n    'AfR9rDd35YCFWhtTa0VaTRhzYWN1d6bNd_4EkOFFEHRLDsyzKYFyzCuwX20MgTYejsUje3274eTVRQr8',\n    'AQh2k_kNuGS1cfbJ_PlYg28uPkvk9QHGfX4Pft7xY0c15CRBUYwiir01am3hIXcHLWqG_oS3UYan9Gfh',\n    'AXsdF0L_Fmdcza2k68VrKLskKuocgMSZkfrMwrgSuHvLeUNCPJGnIHEG4hmxbDthJ5SPvaorE2qFe7dQ',\n    'AexgYDRBEwcfrhm1u7-LmGDxEtDZtBKQb_PITb2C6_ZolyS5BaIZgfLHeBiHc_G_vElZUqc3qz3lEsPB',\n    'ARePeTtGtCKd_jt4pH_nQrjW56VjnNhfgJEYosgwtxafxaEJUjabpnd-Xxls40tcMp88eq31KBz5DWrA',\n    'AUaH1R1TbCLQM8Qi1V6pCIpkQxyFHKQMoNAE_-Blr1Vhlssr-But0VSrlwk_1d5E174GmBjB0-Ulqylj',\n    'AX_wkrO1bztO3Zk5o7xpTxd2VaQLZfCOllBu5dnWLI8IJsib7LcVV0dK9nf6byYsY5PrYlSCupx6d0uW',\n    'AYNuKyjrY4_ptFwMXpQhowCR9V6ns35FC0cElYYZwjshMkQ3wc0iQJQciXkr2KsBJiOi3SO1nBHHu8Xa',\n    'AaaXw7i_cFPcN1LHYIPDFjsn4qN2--nQgL413zW5s--ZMK5zXvtlGIvscQjT24axqeTasFjB7qXXcBI5',\n    'AaErQSStIgrMS1Wt6vyVh1dI9S38ueIYroiEEfQIG6bAaLn1YSKytF7Th4utpxo9tipKSStXUlobuB5N',\n    'AbPSFDwkxJ_Pxau-Ek8nKIMWIanP8jhAdSXX5MbFoCq_VkpAHX7DZEbfTARicVRWOVUgeUt44lu7oHF-',\n    'AbXt5XyCzxxMhuZvBVENK_djVGwGcWsDPZHOpem3s8YFDN80wCl-6kq-vf-bt9-k0FLiJIOksYceQpFZ',\n    'AcIpUPU8c1i0sDZ-FMYIsJuOEpeP2BTL-hmwcbcYijfZW9_esiJoBGeX0lGE8U-A5YbXCpOWuPMkQCDQ',\n    'AeXffmIejvxgasb8c_1t1pxfj8hzaywUILZzr-TPII6nk3KrLkdnqfiQlcNjghmpaHwtBjdRAjcJkGwX',\n    'AUXZ4u8N3OPaxj_b-RwgBRr3Efs5mqeRT1qZXWwCeXjQaQpW9GeJnfPZy6ZfUDZh0u_szXrNDjzSM5-Q',\n    'Abd-37lTccSNiHam_-H_NZtQa0tmsjxztAbnmvy_7R8kjvuVz8QvETPLfYW5Zf0dfvWHIfmaHIALs6Qf',\n    'AfIGckSuPS8-PLFn7rcis59G2tQOaKlqgRuUHPW3_ed_Y6JZdohTjjTpUVfvAxnKC0-zWuOLBWrpMCo2',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'ARGQ1kBYHQGaz6Y9_0twfc0Ityx3TUCMTucXOni6OmABeu8s9yxaCXOJRibWvKRELFp1KyYRpMJRYxzs',\n    'ATHcOc29WISmwi5VvnVKP8LN3LFVaeWIUiX0FfsNgm1u7CIFAxB7FEZv1vJPOBu3UTbvisBO3wWECYAp',\n    'AX5cTDOjB4CuFZeR7gWVEzVeI3cM6_j_5BZ99ZjKOtyH2hQl4Ptkun5gdXa27n5p8E_MSc5VTNcicOY8',\n    'ARbo7WUH4Uas8uz-UpsOpRos4hAt8h-PQXVI9c9MajzrKTyB3sGwY6L8LcRpuEDq9VGAQGRgbbEU9ReS',\n    'AWKM7WCLJ9CfunAKHctvRPmYdhwC9dGyY6EAtkSUGHVV58kxRc9clx3hPf9U0nNkWsFFzRu-Ila5Fr8A',\n    'AX5TZNFfJqB2PmFoEKCYtd6vpDzEkanw-TIh70ZZ-h3bFsyvcjlz3BUafZDA8JsYjidNw_TmlGDMwgL-',\n    'AQWgSfn9emdJnPEBBwwvB6N4F2AoXbDHKq3rwW4-ieEP3TRlWiApzCWpGdyNjymcxlXIAxuf8sScQWMv',\n    'ATrCdcXIyAX6fPCjCD6UBgIJ4sNNm3SNQzJ54cO_X8f-SI9kSAhV_Z999bFb225scgZdB0lmk78-jcwb',\n    'Aa_DG3hUsFI6iMf87VUOyRCWH28pC5ijDrFPYnG_fXUT9NccX5D5qm218rUWcXyTj65vu2FBmYxP3Zam',\n    'Aderc8flr4FvE21kxRJaxvFyURKeUi4znzTj71EbyHNiFDm7uhagNFq3ctfig5ZAcj6vobt7C4y060d7',\n    'AdtXhR3loNJ7B0hpup-jhP5Tt23VwLdtfHDbqW2vcJ6bIwrsvKajuMvTP7a48PFRzNsWJgqL4Ai14vNb',\n    'AeueZ5XoPc4cPG9v2kwlk4dIeK67CE0RyIwTzKSZlYlClcxH9P1xAtpfCpE4UQuVCXxo466IUj8ALNa2',\n    'Afc6ldERu0z1EWXp8MYi4QzHudDEAfMjL9UwCW-DYH1RTA0qSkRJWoMsu3kUp1dR4zeRAVNovSU5Gh8n',\n    'ARjjpGuuTRVYUQ3h73A2Zl6zOglzYtuWCnPC8yZTp51sA1XlKpuj5pOmQeoYkDrPIAQTQTwteJhAaqd9',\n    'ARTz2u_4Z9ZHcbwont1r7U7Y9cXBHMbkhTfOx67ONIMkwqDYr08vv4SIrYP7_wabZuYobR9A1AtS-C0e',\n    'AVhCvBBwz7WcCJNWt4ShmzeXcTs-B-ydD1hdqsV1bbT6P4TvhsFxIHKAE-GO',\n    'AVX7d1JfuB4fLeUhpG6O5JA6i6iB0sQr9IG-SAyvEN5TIo6N9otHSB4X8aaMcLOQL0R7J4XEJBQzQPIj',\n    'AWS6hhBD7yuASYqmEX180QF5ELJGDf9vW4pOwwVg3PxA16entKKfNOxhkMoE',\n    'AZKHl5I5X2-oWg30KETaXhj_5-CtJ2NftUT70No3-FD2MDm76KhanS_XM8OrPEA1JYc2RrhNrDYL5rbL',\n    'AZsPWotgvxGKy-sWOcTE2xtZbHqJ15jyXWHJDVrODGF0j5ufpB-89ILdNDq8cOFA8o3YnFvC_rlUDKOq',\n    'Adk1XwEPQMKOn-b9a0lMZ87uctEXKc7K9ZPHIfm4z8Yr3ZlWYDlAznceFFyzS0RbXfQqONuyFvZa4rto',\n    'Af96d--L5ACQRgWAJ21VbDgbLMEW0m7SnlwtzVziKtwhkeaUVSSex-ivaMqCe5yO5ACRBzOTa57RNFfO',\n    'ARBQw6GmaZaOMNkUUz78FN0hrNHflsmVAbXsSgQoHlOnXEzBjzqMpp4V9HH2LxVXK0t1cUCQtfijdHQ8',\n    'ASdxwSqu8dAfiPTYWGxXF_oB1m2f5-kiEShqzrLSrq1UzI7m718X1Bh7oA6oRRaUgiCIyW8Dcfbxyj-J',\n    'ASuksXjiG9-kzC6UT1_WQFSdcokQjFFivpw7MvzJzPLH_o7dxj5pnlCjs_u3Iu7x4xLgqTM5oJB28I_o',\n    'AYArObyAM4DSnefp0u4QEGEgPOolT0sT5KVtC-kApU4UOhnotD55PPvts7tbdBNVPYHrJ1mDDzgDrfLt',\n    'AZNBW_MBovzo-FQb3NoLC3TqhUOTZgcluCth-oYF4Ur4Hnk16bD0J7o1srJxd8RtRuDI1-Pf8mlAcAOZ',\n    'AQtA-m8ydts6vPKeNcR2V9lbnUk1pBIjDA8F7d7pnnE22OdcoVKS6v2mpuicU9ETnPtD7KSgfClOW2ez',\n    'ARiex1Obbt8VCzA3oiFddD6IM8GW_rSM-7bEQHYMEbm-Z8PKnZhnJiVZ8R2h6QnOOkRhO6qrPkacUB-6',\n    'ARme3lHreiKJ3gYg6HThgcBTRwPTJ8AZEzVORV6N_b92yDHYyf1QNZ1bI7OPdF9Wxnk6iyQ84-5ZVj6b',\n    'ASdzkkc3gZD4p6OQENcdTF4-BYbalbTCRZEuruTd1IcGuu3CjOFEAXX4KRtseAVv2_0VJhkegmfK066l',\n    'ASgUH7GYLmT5OeoCIiZxCLdf_TkJWuN5xm6XyYm4UoKy2PJ9ph2kNS-jJRHEa11UfrsH90mrHCiFYneD',\n    'AUstsy-MMWK_e92mOhtyXamPhDkjragWS2E-1N51CqQEPzLA-TmQW65ROOnE5horq0XmVGAHn3gwC9Px',\n    'AUvtyfR1BKhuGWyI6oKu-KCJ_hr1wkh-BZTWIH8N6b6CqLc09mp1u43ZAB5Gv17wP2d2kecRhWdQMNJt',\n    'AVZhYm14YbV6P_TNkde0MGGSxEtDncv7eL6xfh4NToEXB_vMMBETx6VjDX794rWvGhERKeb1xEXxD0Ze',\n    'AfnCuLnoYiXnUIU-xTedeAUqQ_d_E17FiQVeNxXsDBrgHeUlDO9Di607PQWdRIep2-2wLMNk6w05BS4_',\n    'AfVbaF5KGZuZzvs7b37iTEqatdhRly1S_uqGgAZ9H1rJixIm2Z1CNiMli4I-U5tDvF7wFR0ZGtC0sqJL',\n    'ARnXPP5gAw_eGAXH1GVKM95kLABSvGRyCny-BkHW6UWSlmFnv5zkLskgEjuNwahxA1pBI2RRGCL1U2E7',\n    'ASxq51TP92spfbizUkcxNEl7x84Ct717OJ0xgI3A2O_FeIH1F1jEdTBAKWZq5Ml2G3U0p3g57OQlZJOB',\n    'AZf3sGCx2OIfGAMTGmcHDd0tt-VXYCducWtnkOnlOOUaA9gtWni3RbxZJ9U5LpJ-jsQ5YG3xX5nudMjG',\n    'AddUoLv5JTnaAb5F2sxspDib4pni6Npi2ahl5NB0jXZMTqODYwujzQc4dGwywjbql5XBZN_-vFQNgN3X',\n    'AfMTdM4POMezgiXfKDh3HCjxr5ztnb1N8AC60fHc23GdDCFq6DuIFhgwKG4W2-PsH9Lm3DqcuBGSIO52',\n    'AT9nuYQxHQVOx-HSovm8DAAi3IWig_NlDrHibluNefWCzToCfar4G7DVp79FQLhVqqrdh9Ekk3KDcZoT',\n    'AUzzFVKF6GZQDgNZH8JEUizm9sMhd-57lsAXyU6u4aFuTxU33OiutNq58_s1io0kd7epP5W6ASgcF-nF',\n    'AVAqdF32y5UFhSWdjs7l67vcOuoQNk1KKXL5v49h14CZpW4QN7pJQDQyEXRbUBO4yylXXya9nu1LRn9Q',\n    'AYOzl27R846B-NlpnYdfBveJ78MS5-CqTCS-kS4t2cTUwRUDkb4XsAyTLbwla1FWNdN7815pLLQOl5VJ',\n    'AaLE7VZ5LC8sxudigS7Ekjfezc0MfHyzVW0n3AhZAJdfnim546ZwwY4iqK980R1ghPwh0lPoLyKddhS_',\n    'AdtSQhJ6ffDtKJUwFl_ibaLaZliNOn-7E10cAVWC0MCEE2b9ptVe3bqj_M2hSLA6DTN5hPPqowKEGHxJ',\n    'AQUSF3r4WLcs0AtHj1KxHdEEtJzQ3UdDmQ3MabfGLYcB4Chi8vgXJDL6dhxwQgtslpbgXX2A3RDMHV_z',\n    'ASBI4ZfWKMssNADQJn-i3HMjph-s_sh7TlRQ8QJSz5TuoKhYGQRtsjXAN8bpantK0Eyd8SF7zniRcMPo',\n    'ASIXJkiQIe-qp3P9iuC36a0xdjm57cP6nYnT3fgTxU8zALI2fLW9KwU6ZoP1oE9E7bzmG_dZOEZmEMja',\n    'AVb8SEdeAJbnLi-QmoaBiapiRr7FbrGZksICDQgrDtCdQfSvXtmuFH0VqlzdS4sRj6R2qmNhrjJj7IzA',\n    'AXvrPG7sDG6Zvt2o3ZnaXRK4m6Nie-KPDrChxf2_a30zFFs6eJwQ-BJgFrATt-IE9kvR5jjj757NgKSC',\n    'AafaqFH6ta0PFlvqt02vd08h_gApCvhSt07by8A1rBga83TyFty8iVRVv-BiOEWO-8AtwyOQaNBiLMES',\n    'AaqFeKtndmKfGYPQxXkV1ZErQylYG0OJ3MapCrQBfBojhG9heTdKKXXLMoMj7SW3ImZhNWVQ82zp2QCF',\n    'AcecQRTPYDrLRKbub07lSrii9oCxy_gRf4AN3DBYP1qXkT7vNq_ljT_tw2FQDTtcIfOc85h4wKtfwOzn',\n    'AcqlbM3LatHfLUfAqshlfyg33bmVs76nZl8cMQBbstVqyF2fDaiEz7qhcFZSMhA3pepiZpIiYXjW0d_F',\n    'AcvRLo7nXCDN0fkkFDP0iocM2bSQ2ZALUxfUllf-fG55OeQjgOjkDnmjunrwZiiOsfzbSNlRQnqC8VK0',\n    'Af5KN34nRKGpeuf-NXHG-VApLYlIxYO8Oaiid4CZVv6LIu7n4u-SWt04ChxQNn6jDZNH76kNRLXspEwS',\n    'AQTB_zZaQzo1yd1NYCgFFox9wV7_V_BNfW2gDhcvRWpEMypkh5RCDU8z82wwkgni0d09XYJPIO6BM_GQ',\n    'ARbuhqx-MQmTt3P2BBa3CEPakK2GupfPZuqAahytrA20seYZqlQ_bM4QHssuXkWkH0xCt0grj4QmJ6zC',\n    'ATKIVzgAqAehDQPdPR1DAQsj-_PldhwMrxXCJCicmvthg2f4lm0df0nALpg4dEZT57QO21fLmfpln0Wj',\n    'AVnVnDe3ACy2bgUFhKHBPbp_-fQwoe5qrgfcURR-UI3iOshoaGvNwUqxkx4SU6QR6eUt8fRCxR0U2ylp',\n    'AVwOriXt7qS3KYOGRhP3JAOLbSM43pfk61ZVORvZTyhmQ-mvRW-zXWMS2AWUokQ14s1UQ29jpfiIumJU',\n    'AX09zAGVFtWwrm5_JZUFfh_VKOcx953llczSMPGYsPFbFzk1QoCgeRHVnwXhR0AN718VDiJJnos2-dKm',\n    'AXadcB5XetUTL34QyQlIiRK_UtDm4cn9_ShNmMw8FhBIh6rZQxtiQ9K8oqHsk9PQXkLQtaOzgkahWRi4',\n    'AYRs82wfBGrz_kctFWYHBCnZd4Eof_ZLNzAeb-m7M0s4OHaD-go6vm7rpmH_hLOdMYc3DiJ80v5TPSgJ',\n    'AacYo2k113JWY4e066cKchwdJLmyIcnYyowIloKB6o7DHdldIhH6N-pqDr7EMshGQyHrulbVbmAYmgJc',\n    'AbJfQBbMXrRGZZSGyEqvHdRxtpr5bc5GHojFP2WWcObXlYU5zQunRwQUJ63PFMfXIv7stZDQFH1-yfJp',\n    'AcCj4SalkPbqb47qQc5yJ1weNTvmbiea0lzR-3EDvXDZIyMsHcIpdB5BElpyrf_lAqDKOQSynZradhxY',\n    'Ae6Vx3mw2UPZEf7QczT7tg0uUxLauuKtka_myxmlu6ShkZrdj4NBGHAvDYdaMYPXLnSxzfXmaeGkVN54',\n    'AQPe41YXAOtjyC5dSdPbIt0gxNU8ptIDxJyb09A1BDIEeVovW_rZs-m2TehzWYAlnv_kmWgTn5VBslpL',\n    'ASOCm7KsBwt5LUae_eeq6k1lv-ac0rcrSh3Gwk0dfEZ0_Sha3FdEDFXq0zAjXVLVBGUJGAS4KJIba165',\n    'ASVO3qMzYivRm-QVp0B4jkB4DiiFp7kAG7s8FFYrp4KS3NNl1WQlezd_XsEE_4dXaftMYdF4KMdvh7WT',\n    'ATCn6Ird1RIzRDVOLbUmGI5AUavRrK0XnnOmYhdghgFdhKMkZ6Zvr4C73_UH5xp5F1jCcBX9a4fiHbDf',\n    'ATSJJDJxr9LpuVNkxYbXGvteFXCDD1tmPMDfKJ5sefBSIguK4c6dn4WfK6oCYnvbj1sVQNtuXVDaWDi9',\n    'AUrnJiuXzmouRq2NZCcXZoDQYpP-gO4HwNiwgu7QCmlmWgx3bAY1qEI8ou343m943Ylbfmwn_5Ttye4D',\n    'AUwcswMqaswx06CvK70TO4WUtE2Ar4DRXm-_WypzdIlVNUXotXB5fhQtlc-MftdF0GOwkDCbDHQsWl9D',\n    'AXDJmCbAxM8PXTV5EFph8mlO6TzPnbcmQ5gNeWvCL6gbaX2qKKmXqfDC6EEppPSHq7wDSip6UvbT9eZA',\n    'AXGOUolOr-cZ-NRP1lo5q9oolK2j4JBSAQeqYCvnuRPN-LKHIUemaEGtyXWbrMsSt6Ur-ixbO6oRZN3C',\n    'AYD7u5dAmXH8EcBmhuWEs15anelQVxDZNhjYT2WnaZWksgB8vsnbCSmMVnyYo06IUUD9xF6LKJriPew7',\n    'Aa5GsKmJC0UkW4un8T_6lvdXsb1fUgkfVi84AesLRWAmO_3MA7503teyZ_Uzf6xUixuyUuTkpfS5LftD',\n    'AciW0Q7w0Ok2Ri_dvGTwJKsRcb5dAOHFJZfHf_kMC_PnP_7KnLj-OdwRPLxD7M25CRvXgp5nNJA3C2jH',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'ART7rYn1IyUVDyGzxwiQSruiFD5OvkD6lkfpv3aX8UdMdmtVQWIUfkiAe_wwRepxtpJzWebA1dQYQpxE',\n    'AS-9YzIwIgM7pFVJwG83_0cmtz-p6ErqV0diV8BDctjfX4mj-UUVi8hRwfb5pTuRi7GobwyUExMP5IYt',\n    'AS3XJS9qJqzSoJ80MhsYv0FYMI-Tt2HtAJawgorL9yKBpjeRMaao5YtctUMlTH2i9pZ3x0gJbP9ybBEy',\n    'ASG2hdCw4rCGvBmIjUIrZpBkDuBnuiaEryLrd8KBROyg-7FGdgcFeQ4eOVRxwIJCDZT-h2v8oqAeStxV',\n    'AU8l__XI_fM9mqndO3EV43pfH2NvPawYNdotjsAqksFa2EnXfn3Q3ngwAIi5-Dx03TKAyliifkTfKYTU',\n    'AUe6fpHCdjTKK_sxP7apE-6Qot1BV6xnDGg2iPQXJzMpbrQzbWebryYPkF5eBRxUYWRGwaEc3q3GpLbS',\n    'AWCNxJ1zPs-NqO0AS6tBiGbIbHfy12-uVfhmtibM51Jv2qXJx08RqfBfWQ9oJkUaXON16zXFUfpXEgFz',\n    'AWTCyz8bsjCppOZ4znVuzCXiq0pvGZeNWhlL-izK02ArHOlBoLVq97AtNDLhA3jQWcpuNRcab7dEB7lo',\n    'AXZQrZVm8c3MGvovD4cNKiwBjIMMKAlhbP-wWcj67N39xDe-2ZdEdAPO7nV1bAcLM4v8iNUp0N_Mcphk',\n    'AYmAf1wW0BWJMwUM_3lygY2_9wJeNok7DcguZ5VQZSWrk2DdnyMqBKKH_sh8T_DYJ10Jv1FTIzcBoRmV',\n    'AZ10uBSCpZr5Stazc2Qp4kamQ7e5j1uvYugUfyqjn3_E0mPiQn7IZbfJ_5PHVQoNRwokZMCSSxEVk5gv',\n    'AZbL__Y_-mRd5WEZYRHkxpw4PDaVGapobKAwboA1syWwSr9VdPTHos6FEWaGJvajHiJG72ZyVzNeslIO',\n    'Aajr1vTTrL58YvDThPIsdrNP4jl_d2KahfheyZFUb6bs8Kbx3WoZCn0b5u_TnLHcOiymePb7OcYbIRvn',\n    'Ab3Kury5vH4Nd2yDJ44vRvmuJhrCSj00bXcZ1L2MVrJ1XMjhQFDIgSFADUdytto901kBDIB_q-9kICcA',\n    'AbB_czT7AhCglLGQDWtB6BNcW2IIhmhHaHGH89qJWNNjJHzYxIk6z5cQN3Os8nknVBXw2bdNB_m6wSxs',\n    'AeJImnS4UyTQcDktg0Nr5RDUHEj5paDkjR35_FpWY2BANcQWwcUDTMTdcHz_6MCETc5EqLHSglfTrXha',\n    'Af-FvbZhoCMcq70C9YwduBsM2FkmNlLnwIz4O9o_4NhQdxYwlKiRa4kUgXBJafXUdfija4n-wmmISFkW',\n    'AfMBvZqDv9OoaMe8pn35-xOwufIhaHRkr-FgC64gh_ZanWKd3z3t__siBDz94SYWVAXfh1x5Nv03AfzZ',\n    'AQXnKIXPG9SXvMmfD9G7yFtN3dCJjSKE8BfKaafZlzgPxGYkpb0yZhxvUbh5EYk86C7KXxPURskN12OL',\n    'ARMyhNwHKlGvZneOKlDPtzTtMKg785buN1F8ABciuHl7HfSFYxz75e4bHhjQBzZgG7_5vjzNEGl6zMG5',\n    'ASZNICUjJUEjOf5gXhSp9d99nd8OWF1qabSswy0xD9vOTUxeqtfdlDK102NWoG3OfgZE7DAQt97q2OKN',\n    'AT-6KyRrMjWr8Ffr8yR10WOCVVxiMpM8Z2KL2J1YGkCKHdDCFu7c7dVtsajXH_hEu1gd0Qb_am8-crjF',\n    'ATZjgdCbWKKq4wIsbgt_KUuWcBzRNTuoTz_JVKiXFNVkxBCNC-CYqvH4aNr7D-7uubhUtqiVsA_Etz0X',\n    'AW3Xj48NN_K6zsH8JpAnNXlora23DOI1DhWiLFTWI3tVH6BN0PZD298BW2aizd-Z3CLISV53NynfoWkJ',\n    'AWeM9QIuoOntrqxWoZuJHErA4790NA3MpoG5MxSFvsM9U-fVys3H_KzwLnJfL7P5jkdrVThaudOylTaU',\n    'AWVZGksyYh40TiLsK3w_ertVJEbOJOdpyfjProgzy9-lbdtXQyHCh_G8-9iKG2DfHobdEtBPZKagnISS',\n    'AXpt3KjQyq_WAuuHhBOJNbgz1-hJ6ViIWsujd0uQ-50tYJDB2YkcCDOP8AzsdfPZOLWWBV67TR-ZD9wO',\n    'AYFD2Z4N3HgIqrNq78qpZRqL7JLBqaxCYQYoPqEiQC74gKn8KKFnYZ9fdzwLSC7oIGoGfVa-0KGiKKpp',\n    'AZGnlh3ha2__TizDxGMvhmxqxXAsft0QoIFjU54D_pHJyABwEF3PR69Ol2hlGQwDZZTb9TdZ33FXi9kb',\n    'AZy8eT5YydIKi92O9Y5V0RPuNM_uBIdAq_Keg_rIO7vlsNF9twjOqv2sQVoUnpiJ6qyb10l6SSeNoL1z',\n    'AaoAGjTmC0H9GdbzY_qY7-LHEpXMNeO4m4gaxnGBd_2MnRCmH7u9PwYNrvUc_MPkng9MnZjoeRfuGPhe',\n    'Aat6dgzz-AhMNM-t6f9ZLMr57DgxiehUDOsBWetFn6oSESrYdd72Q2b-SKzea3x4aHwEnbB6IpNmvhXb',\n    'Aaz-u5JdoYyYd2scU6ITuhwKJXfBDcyAS5TWhmC5Pbs0kmvef07CfLC-arEIYXLivOI2G4zexNkz2fEc',\n    'AbIdboZdEpyrKU4XclA-dkyGt0PlgaS1-Ffvr3xXvHbYSsYL1sGtus2vv_IYEIKfB5VeFW7s5TccmCqX',\n    'AbN-0XBdWV1G0FEnQqVyXUklEHjiMDUIYkyk6FLO6csgUjXHtP9neRBnFaPTYM19NiTkxZxzOa-lwqYS',\n    'AciGZEIKay92OieK_taeAIxk4gmkvZYD4V-5V_inGr5N8o4nsissrMfNKp5KF3BOWDDXE6uNmlm8poNM',\n    'AdJvUhBNhkJ6wulv88yXQrzbU4ZiMocyZbTsv-9HW0ZDNIZc9YXP-IwNvl7_',\n    'AdSP52hoO2-Uq_mBCuOBGgzOzerKx_NBWqcay8Iye3F7DZqSo2xTMsS_hc-sBxBq9ZeZnDJqEtAqU6Mo',\n    'AeibaoRpUM9JPbRGAuyNa04EZWfVHI-0EuLLNMJfpU4oA8GduQ8y20G_B1LEI_6IvASe3sCqJGxEY6Jd',\n    'AekF1vsyH-KcE0Dit28DhGv6o9KYpcTpGUrC1xmHuUG7x_HimZMMTpH3Hkiam0OXMznjo28JwwBvc2bv',\n    'AeWuuHIpOmF5j55eDYdCoW9-rOgh9qGvlcy0aQpxXq27n3a55TL0j2XnWVDCquBjr14x4Fioqp4se4Pc',\n    'Af7UiccMdL4x5RZZ0jGTYcaUnsgJS2ghv-iUYbUlXIn0Rxi1Hom2F-Clelfj9yoGczFxUoWcjX81vZew',\n    'AfCxhs8W3WGn7Rv0S92CVPHXi7TWSCnRZ1U__AQhOHuw52NjJYFSGTodM5JFjZnVo01eJj8WuDAmM-qC',\n    'AQozhXI5S4IvGDPmDJrJKcZi4c8gNDw7Gtn_cdXn78ejc4luxXJ0zCwEjWbjRuY62nfKWhc87LukhvAv',\n    'ARbZ7RQg4eBkkdQZBwVIKQxFVCuIeOrv0sRZbMKRxNZVkx_sMbklmaAAbBnwWJy9LQs5xbgh7YfAsH18',\n    'ARq9LAELs6Rd9zwF_cp6hoBHrxMA8OsBwvBYCsdifrZq-LU9P9VwPpUby7yqZIgfsrWHoJhWIuK9IPFp',\n    'ASqTSIOiYASN3KYHsxmk6uO4O_cmAjk-Shl-Wx1ixHAFGjrDnv6_P_eMCshr9LdwNL5g95ly1cHqVy4z',\n    'ASwoeikdyflPIKFAC3U34ewfFVRE5-_p6qc1TTQG9g_sHNs3RP5Sq3pE_e7V2p0VTi-nJQuIA5ApP1XH',\n    'AUA_R6qBmczCAhGF-AGP0WbqxunumqEc6FZ8eaD1fbt2jjVmZaiu2QNeKEyC6uXx_PnbXaCOGyMocjuI',\n    'AazPaZlGBPP6zyXwC7NgdRNNrfEgD0fNxGpohhfADfPDqHxDjRuO1vwqjEE4aKJrPJ9DaKkfuCD15IWE',\n    'AQyNR1vnQtxPvo1wU7wS9OXY7svT_5KlFcgqkBgmEjPgy3vaZBjgReQCV0RD3n4iBh613SJeUqEC37XO',\n    'AWum_K9KRwhlt4CGpNTHt5J-jhq4gXQdJ8jAdB3DdhsCc8SlKabUbl26C4UHsg--vKrMiCOxBb4ZixuF',\n    'AYLmn4GCg4s8ZKrrU_5fzzwz72vDDJby44c9KbE9QYx1l4zrnFTncWPDx2AGsS65Bqo29D8rCdSBNqt9',\n    'AROO3lVGvW116zkoEZ6KRQMg7iAhZ5ZeQ0jyxIYSJHHKflx04MCOdt-wPgJqRONhfHazb3cPYv244uf8',\n    'ASncnAA2XqvFN3lpms6oapYFg_dh2cne5MzD5VCk3R_aL9zQIGdi6Nkjzfc0CDZy8q1BeqOWBqnaNFsA',\n    'AQedjY9kGMi1lhC2AEl8qbYn_rTY9iS1Z99ijIH-T3RIBzkHcJ1_OEwFJkRjL1j-K3Yt9ezPuEvyjIBK',\n    'AZZBF8oL40dzcyCcLIEi50pULlY_GyAc3nr6o5Qq87ImOU1-ZC1IoYqaJeWNT-kTt99KgtZrUFK9u-Bs',\n    'AcRXfjC-a3HDICh_w7Yo9NEbLHW-TZThdotn2ztNlPSVUwh1rF_z6NS_iUOO1Ffl1cs56Lez9iAzzLuz',\n    'AWlXddGW6zfufuNdkdEX2evRGOPItXHhGJleiDgJh7u2PjAFu9Ykv1mzdSB1emAdcfBf2WySEgamKr5q',\n    'AWVPY_vj2qsiDlkk8xUifR1AGWmWPa-Kff7sc4PSNeZzSfoZqeF44xX7AyqpK9MXXNhHglzwX3okwJeD',\n    'AXYNQHZFo1_JJkOeYsh7k3ii3OcIVDyreTAuJ7ZS0-2b5p_XWqHJ4KVGygYyn1_DGDKB0TQxnisrzAWv',\n    'AYlEZzFdz7zw245KfQKnjjoaKlIIkmdOD8Xi7PRIx-oDcK5DKrWu4ex5zhNTioYVCAwgy5E5UZ8KWRKg',\n    'AY2y4DTvaD_eftECds3SuKHQG8CJfmmP9zl7BrblUCl7h1svpwFBASQBNNQwDb-7EYW0QT1hFZFQUBIl',\n    'ATJHnb_Iny4VkMc5ybUoeDS7x2CIMnFQYFTtOHfslNzYtdRJCGGrZTVM-mNdG97GU78F_UmpsKzCCIgU',\n    'AeVgr6n0UlS9_b4u45Nlkd2mpKc6VUe9wjw2oKRrsXzIXZJ4K1q1CUaXvrTgcB5j0jb-E3fEwDD6DOEd',\n    'AaVd3541KiAbjObfq8486KohVuhP6y_ZJWc0zY1ysMoOSeIx3OF5amcgw-BvxcMD0TNyayCQ9Agri_f_',\n    'AUB2EIv-ZUzTepk_K4_yf6EnL3b8vX1LG1a4DaSZANNFiQ8QqPUIKej8_thsKURH8G8nbwrsrJB13bgz',\n    'AUO4pKr0n9zirKGKfTQlOgQ8EfIDOjT24AUmKK1lGwaruTPyv3F4FbIBwzt3jqm7_m19fnu6AB5d5PNz',\n    'AcgZye2RdQr5aPKy83TuiedDJEYoUxQuEA8ot8ELuhJ9ya0U5GSXRsqw0zqrAgPbfSi3MWvaZMdm4mG2',\n    'AU1AoXXAQ_pZhAhZPKMBgbqIalttfnvDhGieEucHsAYfFePjb_Gq-g4pOW9YtUBxJuEBkt4IlW098XCe',\n    'AYWZhcjTcWKK63g5TQ5dGdV2VhnBSQ4a1ZctLLpHPGW8NVI6FEOGIlprUkW7RwJ3ZSft2Yfjuv0e_GG-',\n    'Adc6rmNeqiVf9o6lwUPHLhYwUgApqWgIcQOmiSLAKXU9lRCVs-iMgs4MOdkbvn_pRaBtOqlBG_v6nu7C',\n    'AShG7lb-2gG6EHCP3LMZxo96dGYW23_Vu1KPeK3lWG01QcjZUarqJPbM3d7LqjFJiRMcFKNXD9gubJYC',\n    'AV32VxQG3VgFK4XBV2fszwTZ1SI1GR3056xWzvXNuNf_unHdT1lIwtXp4x-0-nKngOKLhk8K5odXZRh7',\n    'AZ_5b9jS3YKFPSeZ6J6YSavRS_WXD6ENRDfX_JGIL4qExwKkN45xBmLLy28tNQsQ0HkNkVKbGPqh_gGI',\n    'AR0xZKtsgHB6nA3THJuR-ONFov1r9Hpi8mUCYYHg8YoIcd5TDQfHtbKPv-7xlMVTRmvAW2R5oZ4HPzLe',\n    'AXyN1SOeUydASWS3ad68oxw4mAozfK6cGi1X7Wp2alKKZ3ycBKxt8lndwnATvAtAN5w-_HPm4ij39G6I',\n    'AdUZm6mA2lFH0Zeca_2JqIUk0qyAuaFr-D1n8OjN8dD9aXsEaGAF7Sw8rF--Td32LdoLXEsdvnIFbBfz',\n    'AccIQkAq3PaYhno7Lb7EfDChSPYVwRVSLjdG5xPGa7ryKBFVpImRM8_jc9_kGdC4PkgtlHFv6l_ET4aB',\n    'AUP00nLYtQvAPZUR69WsZ0mZCbiy9VYXY_kT_E5ntJRulDMEFvdlc4O7NQjk05iAcwrxx5rMfRhjMo8I',\n    'AV7dY22NFKx7_DTYq9M7cxp6NTy48StOdiwdZ3zuSN-gYxx8cobEcEMeHvoM6eYcRLFQ21t5R3bYvhZj',\n    'AUKvgsLekmtbfmbTZadqyWaGa8DWOvMsiDaURUW02BxlXzHIBTBzxiUsLqEaHCrCdNJTB0wYV1zeU_7f',\n    'Ae78ZfS3n0VwwsRs72OKgr5ftSyDzt1nDuNZOVkH5S_5kFWX_dEos-JxEPCtksCcF7hTESFIOl2aqFcT',\n    'AZ0VQKlQnhFkU9Jbd96BIMPmyI_cvrRaPkWOuMoRW7UPvczAsnG-9S_mlPh4DWAZz4kd8OLbVa4w96Rs',\n    'AVuI4Yp-EWv6x9winEG-YiVcqzwbJvmArOBXXhzAQkCGP9TgMar3ubQdRmsJxREwmSFbLlzgR-Nj0CAW',\n    'AVprADxNJhFQNlRSRMfFt2jbD3tErjYUa7oe0gHfy6hoCREK_1pYEkp0_zwNwSmFMDLKATKdCOBn_Wfv',\n    'AasxOtHMRE4YYG9yuhj-b7AXliaTL0RX8A8Gxby5PKwqQarRhRWbh-52Me5-q02Y_i8_u5Chr2-FeLZL',\n    'Ae5TI7LcDvUcz2kn__X38Xzsxbxhm1vZxeyDVMxxEq4g6WlAs7WojPbvEfkKA0xMn98tumiSLvVKLDBs',\n    'AQKieExqN7l0BH2tRVHqwKqmO1OMheTGbSOFa88DntLF1X1gSBulgivXX3EtrgMta4EDSOSaefHF9XeU',\n    'AczvgJdJSXtSxPO58fyvUXsQcLdfIGerTZJ7llbZksgOb3z160wVtPoGoJlwjGDx1x4a42JMqe0C3Mdq'\n];\n\nexport const SANDBOX_ORDER_VALIDATION_WHITELIST = [\n    'AcFUr3vhIePYLOXXuZzdvFL5th99W0Uygya9lqfjN3XCx-W2dGlr6A9mqiIZAHAMng1g0_haL2LitLAl',\n    'ASmWKJfGIEy4BmvwWA3PpAX-uOdz0EYCQ89Y-oLww8LgaqqHtXEcB4dfxr88kmcp3no-efNznSFDcVjg',\n    'AY-UBQDZ53U9-lrZ-7RGWIn-CLhVJEaZI9HsWcqqApUx_CET1nlkkNow0HpLb-y0kTUuyIA3uwbME6Dd'\n];\n\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    sdkCorrelationID : string,\n    locale : LocaleType,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, sdkCorrelationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            sdkCorrelationID,\n            sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         sdkCorrelationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, experiment, type Experiment } from 'belter/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { FPTI_STATE, FPTI_TRANSITION } from '../constants';\n\nimport { getLogger } from './logger';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n\nexport function isServer() : boolean {\n    return (typeof window === 'undefined');\n}\n\nexport function isClient() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function isEmailAddress(str : string) : boolean {\n    return Boolean(str.match(/^.+@.+\\..+$/));\n}\n\nexport function createExperiment(name : string, sample : number) : Experiment {\n    const logger = getLogger();\n\n    return experiment({\n        name,\n        sample,\n\n        logTreatment({ treatment, payload }) {\n            const fullPayload = {\n                [FPTI_KEY.STATE]:           FPTI_STATE.PXP,\n                [FPTI_KEY.TRANSITION]:      FPTI_TRANSITION.PXP,\n                [FPTI_KEY.EXPERIMENT_NAME]: name,\n                [FPTI_KEY.TREATMENT_NAME]:  treatment,\n                ...payload\n            };\n\n            logger.track(fullPayload);\n            logger.flush();\n        },\n\n        logCheckpoint({ treatment, checkpoint, payload }) {\n            logger.info(`${ name }_${ treatment }_${ checkpoint }`, payload);\n            logger.flush();\n        }\n    });\n}\n","/* @flow */\n\nimport { DATA_ATTRIBUTES } from '../constants';\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const BUYER_INTENT = {\n    PAY:                                 'pay',\n    PAY_WITH_DIFFERENT_ACCOUNT:          'pay_with_different_account',\n    PAY_WITH_DIFFERENT_FUNDING_SHIPPING: 'pay_with_different_funding_shipping'\n};\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:   'x-paypal-internal-euat',\n    CSRF_TOKEN:     'x-csrf-jwt',\n    SOURCE:         'x-source',\n    REQUESTED_BY:   'x-requested-by',\n    CLIENT_CONTEXT: 'paypal-client-context',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    INSTRUMENT_ID:     'data-instrument-id',\n    INSTRUMENT_TYPE:   'data-instrument-type',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce',\n    RENDER_VERSION:    'data-render-version',\n    CLIENT_VERSION:    'data-client-version'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    WALLET_SESSION_ID: ('wallet_session_id' : 'wallet_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button'),\n    WALLET:   ('smart_wallet' : 'smart_wallet'),\n    PXP:      ('PXP_CHECK' : 'PXP_CHECK')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n    PXP:                      ('process_pxp_check' : 'process_pxp_check'),\n\n    WALLET_LOAD:              ('process_wallet_load' : 'process_wallet_load'),\n\n    MENU_CLICK:               ('process_menu_click' : 'process_menu_click'),\n    CLICK_CHOOSE_FUNDING:     ('process_click_pay_with_different_payment_method' : 'process_click_pay_with_different_payment_method'),\n    CLICK_CHOOSE_ACCOUNT:     ('process_click_pay_with_different_account' : 'process_click_pay_with_different_account'),\n    CLICK_UNLINK_ACCOUNT:     ('process_click_unlink_account' : 'process_click_unlink_account'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    CONNECT_REDIRECT:         ('process_connect_redirect' : 'process_connect_redirect'),\n\n    NATIVE_DETECT_APP_SWITCH:  ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH:  ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:     ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:              ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_SET_PROPS_ATTEMPT:  ('process_set_props_attempt' : 'process_set_props_attempt'),\n    NATIVE_ATTEMPT_APP_SWITCH: ('app_switch_attempted' : 'app_switch_attempted'),\n    NATIVE_POPUP_CLOSED:       ('process_popup_closed' : 'process_popup_closed'),\n\n    HONEY_IDENTIFY:           ('honey_identify')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_CUSTOM_KEY = {\n    HONEY_DEVICE_ID:       ('honey_device_id' : 'honey_device_id'),\n    HONEY_SESSION_ID:      ('honey_session_id' : 'honey_session_id'),\n    INTEGRATION_ISSUE:     ('integration_issue' : 'integration_issue'),\n    INTEGRATION_WHITELIST: ('whitelist' : 'whitelist')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled'),\n    BUTTON_CORRELATION_ID:  ('button_correlation_id' : 'button_correlation_id')\n};\n\nexport const FTPI_WALLET_KEY = {\n    WALLET_SESSION_UID: ('wallet_session_id' : 'wallet_session_id'),\n    WALLET_VERSION:     ('wallet_version' : 'wallet_version')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n\nexport const UPGRADE_LSAT_RAMP = {\n    EXP_NAME: 'UPGRADE_LSAT_EXPERIMENT',\n    RAMP:      1\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object,\n    headers? : { [string] : string }\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', headers: reqHeaders = {}, json } : APIRequest) : ZalgoPromise<Object> {\n\n    reqHeaders[HEADERS.REQUESTED_BY] = SMART_PAYMENT_BUTTONS;\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ name, query, variables = {}, headers = {} } : {| name : string, query : string, variables? : { [string] : mixed }, headers? : { [string] : string } |}) : ZalgoPromise<T> {\n    return request({\n        url:     `${ GRAPHQL_URI }?${ name }`,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { ConnectOptions } from '../types';\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\ntype GenerateAccessTokenOptions = {|\n    targetSubject? : string\n|};\n\nexport function createAccessToken(clientID : ?string, { targetSubject } : GenerateAccessTokenOptions = {}) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID || '' }:`);\n        const data : Object = {\n            grant_type: `client_credentials`\n        };\n\n        if (targetSubject) {\n            data.target_subject = targetSubject;\n        }\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID || '' }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID, targetSubject ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        name:  'GetFireBaseSessionToken',\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : {| buyerAccessToken : string, orderID : string |}) : ZalgoPromise<void> {\n    return callGraphQL({\n        name:    'UpgradeFacilitatorAccessToken',\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]:   buyerAccessToken,\n            [ HEADERS.CLIENT_CONTEXT ]: orderID\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n\nexport function exchangeAccessTokenForAuthCode(buyerAccessToken : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        name:  'ExchangeAuthCode',\n        query: `\n            query ExchangeAuthCode(\n                $buyerAccessToken: String!\n            ) {\n                auth(\n                    accessToken: $buyerAccessToken\n                ) {\n                    authCode\n                }\n            }\n        `,\n        variables: { buyerAccessToken }\n    }).then(({ auth }) => {\n        return auth.authCode;\n    });\n}\n\ntype ConnectURLOptions = {|\n    clientID : string,\n    orderID : string,\n    payerID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    connect : ConnectOptions\n|};\n\nexport function getConnectURL({ clientID, orderID, payerID, fundingSource, connect } : ConnectURLOptions) : ZalgoPromise<string> {\n    const { scopes } = connect;\n\n    return callGraphQL({\n        name:  'GetConnectURL',\n        query: `\n            query GetConnectURL(\n                $clientID: String!\n                $orderID: String!\n                $scopes: [String]!\n                $fundingSource: String\n                $payerID: String\n            ) {\n                auth(\n                    clientId: $clientID\n                ) {\n                    connectUrl(\n                        token: $orderID\n                        scopes: $scopes\n                        fundingSource: $fundingSource\n                        payerId: $payerID\n                    ) {\n                        href\n                    }\n                }\n            }\n        `,\n        variables: { clientID, orderID, payerID, scopes, fundingSource }\n    }).then(({ auth }) => {\n        return auth.connectUrl.href;\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING, WALLET_INSTRUMENT, INTENT } from '@paypal/sdk-constants/src';\nimport { request, noop, memoize } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{|\n            amount : {|\n                currency_code : string,\n                value : string\n            |},\n            payee? : {|\n                merchant_id? : string\n            |}\n        |}>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`,\n            headers:     {\n                [HEADERS.CLIENT_CONTEXT]:         orderID\n            }\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`,\n            headers:     {\n                [HEADERS.CLIENT_CONTEXT]: orderID\n            }\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`,\n            headers:     {\n                [HEADERS.CLIENT_CONTEXT]: orderID\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData },\n            headers:     {\n                [HEADERS.CLIENT_CONTEXT]: orderID\n            }\n        });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    clientMetadataID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, clientMetadataID } : ValidatePaymentMethodOptions) : ZalgoPromise<{| status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } |}> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     clientMetadataID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : {| orderID : string, clientAccessToken : string |}) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        name:  'EnableVault',\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]:   clientAccessToken,\n            [ HEADERS.CLIENT_CONTEXT ]: orderID\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : {| paymentMethodID : string, clientAccessToken : string |}) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        name:  'DeleteVault',\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        name:  'UpdateClientConfig',\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow },\n        headers:   {\n            [HEADERS.CLIENT_CONTEXT]: orderID\n        }\n    }).then(noop);\n}\n\ntype ApproveOrderOptions = {|\n    orderID : string,\n    planID : string,\n    buyerAccessToken : string\n|};\n\ntype ApproveData = {|\n    payerID : string\n|};\n\nexport function approveOrder({ orderID, planID, buyerAccessToken } : ApproveOrderOptions) : ZalgoPromise<ApproveData> {\n    return callGraphQL({\n        name:  'ApproveOrder',\n        query: `\n            mutation ApproveOrder(\n                $orderID : String!\n                $planID : String!\n            ) {\n                approvePayment(\n                    token: $orderID\n                    selectedPlanId: $planID\n                ) {\n                    buyer {\n                        userId\n                    }\n                }\n            }\n        `,\n        variables: { orderID, planID },\n        headers:   {\n            [ HEADERS.ACCESS_TOKEN ]:   buyerAccessToken,\n            [ HEADERS.CLIENT_CONTEXT ]: orderID\n        }\n    }).then(({ approvePayment }) => {\n        return {\n            payerID: approvePayment.buyer.userId\n        };\n    });\n}\n\ntype OneClickApproveOrderOptions = {|\n    orderID : string,\n    instrumentType : $Values<typeof WALLET_INSTRUMENT>,\n    instrumentID : string,\n    buyerAccessToken : string,\n    clientMetadataID : ?string\n|};\n\nexport function oneClickApproveOrder({ orderID, instrumentType, instrumentID, buyerAccessToken, clientMetadataID } : OneClickApproveOrderOptions) : ZalgoPromise<ApproveData> {\n    return callGraphQL({\n        name:  'OneClickApproveOrder',\n        query: `\n            mutation OneClickApproveOrder(\n                $orderID : String!\n                $instrumentType : String!\n                $instrumentID : String!\n            ) {\n                oneClickPayment(\n                    token: $orderID\n                    selectedInstrumentType : $instrumentType\n                    selectedInstrumentId : $instrumentID\n                ) {\n                    userId\n                }\n            }\n        `,\n        variables: { orderID, instrumentType, instrumentID },\n        headers:   {\n            [HEADERS.ACCESS_TOKEN]:       buyerAccessToken,\n            [HEADERS.CLIENT_CONTEXT]:     orderID,\n            [HEADERS.CLIENT_METADATA_ID]: clientMetadataID || orderID\n        }\n    }).then(({ oneClickPayment }) => {\n        return {\n            payerID: oneClickPayment.userId\n        };\n    });\n}\n\ntype SupplementalOrderInfo = {|\n    checkoutSession : {|\n        cart : {|\n            intent : $Values<typeof INTENT>,\n            paymentId? : ?string,\n            billingToken? : ?string,\n            amounts? : {|\n                total : {|\n                    currencyCode : string\n                |}\n            |}\n        |},\n        buyer? : {|\n            userId? : string\n        |},\n        flags : {|\n            isChangeShippingAddressAllowed? : boolean\n        |},\n        payees? : $ReadOnlyArray<{|\n            merchantId? : string,\n            email? : {|\n                stringValue? : string\n            |}\n        |}>\n    |}\n|};\n\nexport const getSupplementalOrderInfo = memoize((orderID : string) : ZalgoPromise<SupplementalOrderInfo> => {\n    return callGraphQL({\n        name:  'GetCheckoutDetails',\n        query: `\n            query GetCheckoutDetails($orderID: String!) {\n                checkoutSession(token: $orderID) {\n                    cart {\n                        intent\n                        paymentId\n                        billingToken\n                        amounts {\n                            total {\n                                currencyCode\n                            }\n                        }\n                    }\n                    flags {\n                        isChangeShippingAddressAllowed\n                    }\n                    payees {\n                        merchantId\n                        email {\n                            stringValue\n                        }\n                    }\n                }\n            }\n        `,\n        variables: { orderID },\n        headers:   {\n            [HEADERS.CLIENT_CONTEXT]: orderID\n        }\n    });\n});\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\nimport { createAccessToken } from './auth';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {|\n        currency_code : string,\n        value : string\n    |},\n    auto_renewal? : boolean,\n    application_context? : {|\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    |}\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubscriptionOptions = {|\n    clientID : ?string,\n    merchantID? : $ReadOnlyArray<string>,\n    partnerAttributionID? : ?string\n|};\n\n\n// Create Subscription Request method\nfunction createRequest(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, partnerAttributionID? : ?string) : ZalgoPromise<string> {\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID || ''\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID, merchantID, clientID } : SubscriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    if (merchantID && merchantID[0]) {\n        getLogger().info(`rest_api_subscriptions_recreate_access_token`);\n        return createAccessToken(clientID, { targetSubject: merchantID[0] }).then((thirdPartyAccessToken) : ZalgoPromise<string> => {\n            return createRequest(thirdPartyAccessToken, subscriptionPayload, partnerAttributionID);\n        });\n    }\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n    return createRequest(accessToken, subscriptionPayload, partnerAttributionID);\n}\n\n// Revise Subscription API request\nfunction reviseRequest(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, partnerAttributionID? : ?string) : ZalgoPromise<string> {\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID || ''\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID, merchantID, clientID } : SubscriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    if (merchantID && merchantID[0]) {\n        getLogger().info(`rest_api_subscriptions_recreate_access_token`);\n        return createAccessToken(clientID, { targetSubject: merchantID[0] }).then((thirdPartyAccessToken) : ZalgoPromise<string> => {\n            return reviseRequest(thirdPartyAccessToken, subscriptionID, subscriptionPayload, partnerAttributionID);\n        });\n    }\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n    return reviseRequest(accessToken, subscriptionID, subscriptionPayload, partnerAttributionID);\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({| data : T |}) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => {|\n        cancel : () => void\n    |},\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    onError : ((mixed) => void) => void,\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    let requestListeners = {};\n    let errorListeners = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            session_uid:        sessionUID,\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ messageName, requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID] || {};\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener for ${ messageName } with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        let {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        requestUID = requestUID || parsedData.request_id;\n\n        if (messageUID && receivedMessages[messageUID]) {\n            return;\n        }\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ messageName, requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n\n                    for (const errorListener of errorListeners) {\n                        errorListener(err);\n                    }\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n\n        return {\n            cancel: () => {\n                delete requestListeners[name];\n            }\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        requestListeners = {};\n        errorListeners = [];\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    const onError = (handler) => {\n        errorListeners.push(handler);\n    };\n        \n    return { on, send, onError, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\ntype FirebaseSDK = {|\n    initializeApp : (FirebaseConfig) => void,\n    auth : () => {|\n        signInWithCustomToken : (string) => ZalgoPromise<void>\n    |},\n    database : {|\n        INTERNAL : {|\n            forceWebSockets : () => void\n        |},\n        () : {|\n            ref : (string) => {|\n                // eslint-disable-next-line no-undef\n                set : <T>(T) => void,\n                // eslint-disable-next-line no-undef\n                on : <T>('value', (T) => void, (Error) => void) => void\n            |},\n            goOnline : () => void,\n            goOffline : () => void\n        |}\n    |}\n|};\n            \nexport const loadFirebaseSDK = memoize((config : FirebaseConfig) : ZalgoPromise<FirebaseSDK> => {\n    return ZalgoPromise.try(() => {\n        if (!window.firebase || !window.firebase.auth || !window.firebase.database) {\n            return loadScript(FIREBASE_SCRIPTS.APP).then(() => {\n                return ZalgoPromise.all([\n                    loadScript(FIREBASE_SCRIPTS.AUTH),\n                    loadScript(FIREBASE_SCRIPTS.DATABASE)\n                ]);\n            });\n        }\n    }).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.hash({\n            firebase:     loadFirebaseSDK(config),\n            sessionToken: getFirebaseSessionToken(sessionUID)\n        }).then(({ firebase, sessionToken }) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                }, err => {\n                    error(err);\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        databasePromise.catch(noop);\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, getQueryParam } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { getLogger, isEmailAddress } from '../lib';\nimport { ENABLE_PAYMENT_API } from '../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessToken : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (merchantID && merchantID.length === 1 && merchantID[0]) {\n                const payeeID = merchantID[0];\n\n                if (isEmailAddress(payeeID)) {\n                    payee = {\n                        ...payee,\n                        email_address: payeeID\n                    };\n                } else {\n                    payee = {\n                        ...payee,\n                        merchant_id: payeeID\n                    };\n                }\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, forceRestAPI: false });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n            if (merchantID && merchantID.length === 1 && merchantID[0]) {\n                const payeeID = merchantID[0];\n\n                if (isEmailAddress(payeeID)) {\n                    payee = {\n                        ...payee,\n                        email_address: payeeID\n                    };\n                } else {\n                    payee = {\n                        ...payee,\n                        merchant_id: payeeID\n                    };\n                }\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\ntype CreateOrderXProps = {|\n    createOrder : ?XCreateOrder,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function getCreateOrder({ createOrder, intent, currency, merchantID, partnerAttributionID } : CreateOrderXProps, { facilitatorAccessToken, createBillingAgreement, createSubscription } : {| facilitatorAccessToken : string, createBillingAgreement? : ?CreateBillingAgreement, createSubscription? : ?CreateSubscription |}) : CreateOrder {\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const queryOrderID = getQueryParam('orderID');\n        if (queryOrderID) {\n            return ZalgoPromise.resolve(queryOrderID);\n        }\n\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: currency,\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.TOKEN]:              orderID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n/* eslint max-nested-callbacks: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment, getSupplementalOrderInfo } from '../api';\nimport { ORDER_API_ERROR, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { ENABLE_PAYMENT_API } from '../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XOnError } from './onError';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID? : ?string,\n    billingToken? : ?string,\n    authCode? : ?string,\n    facilitatorAccessToken : string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {|\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    |},\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : ?string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : ?string,\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : OrderActions {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<PaymentResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n    });\n\n    const execute = memoize(() => {\n        if (!payerID) {\n            throw new Error(`payerID required for payment execute`);\n        }\n\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(execute.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : XOnApproveActionsType {\n\n    const getSubscriptionApi = memoize(() => {\n        if (!subscriptionID) {\n            throw new Error(`No subscription ID present`);\n        }\n\n        return getSubscription(subscriptionID, { buyerAccessToken });\n    });\n\n    const activateSubscriptionApi = memoize(() => {\n        if (!subscriptionID) {\n            throw new Error(`No subscription ID present`);\n        }\n\n        return activateSubscription(subscriptionID, { buyerAccessToken });\n    });\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID? : ?string,\n    billingToken? : ?string,\n    subscriptionID? : ?string,\n    buyerAccessToken? : ?string,\n    authCode? : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nfunction getDefaultOnApprove(intent : $Values<typeof INTENT>) : XOnApprove {\n    return (data, actions) => {\n        if (intent === INTENT.CAPTURE) {\n            return actions.order.capture().then(noop);\n        } else if (intent === INTENT.AUTHORIZE) {\n            return actions.order.authorize().then(noop);\n        } else {\n            throw new Error(`Unsupported intent for auto-capture: ${ intent }`);\n        }\n    };\n}\n\ntype OnApproveXProps = {|\n    intent : $Values<typeof INTENT>,\n    onApprove : ?XOnApprove,\n    partnerAttributionID : ?string,\n    onError : XOnError,\n    upgradeLSAT : boolean,\n    clientAccessToken : ?string,\n    vault : boolean,\n    isLSATExperiment : boolean\n|};\n\nexport function getOnApprove({ intent, onApprove = getDefaultOnApprove(intent), partnerAttributionID, onError, clientAccessToken, vault, upgradeLSAT = false, isLSATExperiment = false } : OnApproveXProps, { facilitatorAccessToken, createOrder } : {| facilitatorAccessToken : string, createOrder : CreateOrder |}) : OnApprove {\n    if (!onApprove) {\n        throw new Error(`Expected onApprove`);\n    }\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, authCode, forceRestAPI = (upgradeLSAT || isLSATExperiment) } : OnApproveData, { restart } : OnApproveActions) => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            getLogger()\n                .info('button_approve')\n                .track({\n                    [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_APPROVE,\n                    [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                    [FPTI_KEY.TOKEN]:        orderID,\n                    [FPTI_KEY.CONTEXT_ID]:   orderID\n                }).flush();\n\n            if (!billingToken && !subscriptionID && !clientAccessToken && !vault) {\n                if (!payerID) {\n                    getLogger().error('onapprove_payerid_not_present', { orderID }).flush();\n                    // throw new Error(`payerID not present in onApprove call`);\n                }\n            }\n\n            return getSupplementalOrderInfo(orderID).then(supplementalData => {\n                intent = intent || (supplementalData && supplementalData.checkoutSession && supplementalData.checkoutSession.cart && supplementalData.checkoutSession.cart.intent);\n                billingToken = billingToken || (supplementalData && supplementalData.checkoutSession && supplementalData.checkoutSession.cart && supplementalData.checkoutSession.cart.billingToken);\n\n                const data = { orderID, payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken, authCode };\n                const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n                return onApprove(data, actions).catch(err => {\n                    return ZalgoPromise.try(() => {\n                        return onError(err);\n                    }).then(() => {\n                        throw err;\n                    });\n                });\n            });\n        });\n    });\n}\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AED: ('AED' : 'AED'),\n    ALL: ('ALL' : 'ALL'),\n    ANG: ('ANG' : 'ANG'),\n    AOA: ('AOA' : 'AOA'),\n    AUD: ('AUD' : 'AUD'),\n    AWG: ('AWG' : 'AWG'),\n    BAM: ('BAM' : 'BAM'),\n    BBD: ('BBD' : 'BBD'),\n    BGN: ('BGN' : 'BGN'),\n    BIF: ('BIF' : 'BIF'),\n    BMD: ('BMD' : 'BMD'),\n    BND: ('BND' : 'BND'),\n    BOB: ('BOB' : 'BOB'),\n    BRL: ('BRL' : 'BRL'),\n    BSD: ('BSD' : 'BSD'),\n    BTN: ('BTN' : 'BTN'),\n    CAD: ('CAD' : 'CAD'),\n    CDF: ('CDF' : 'CDF'),\n    CHF: ('CHF' : 'CHF'),\n    CLP: ('CLP' : 'CLP'),\n    COP: ('COP' : 'COP'),\n    CRC: ('CRC' : 'CRC'),\n    CVE: ('CVE' : 'CVE'),\n    CZK: ('CZK' : 'CZK'),\n    DJF: ('DJF' : 'DJF'),\n    DKK: ('DKK' : 'DKK'),\n    DOP: ('DOP' : 'DOP'),\n    DZD: ('DZD' : 'DZD'),\n    EGP: ('EGP' : 'EGP'),\n    ETB: ('ETB' : 'ETB'),\n    EUR: ('EUR' : 'EUR'),\n    FJD: ('FJD' : 'FJD'),\n    FKP: ('FKP' : 'FKP'),\n    GBP: ('GBP' : 'GBP'),\n    GIP: ('GIP' : 'GIP'),\n    GMD: ('GMD' : 'GMD'),\n    GNF: ('GNF' : 'GNF'),\n    GTQ: ('GTQ' : 'GTQ'),\n    GYD: ('GYD' : 'GYD'),\n    HKD: ('HKD' : 'HKD'),\n    HNL: ('HNL' : 'HNL'),\n    HRK: ('HRK' : 'HRK'),\n    HUF: ('HUF' : 'HUF'),\n    IDR: ('IDR' : 'IDR'),\n    ILS: ('ILS' : 'ILS'),\n    INR: ('INR' : 'INR'),\n    ISK: ('ISK' : 'ISK'),\n    JMD: ('JMD' : 'JMD'),\n    JPY: ('JPY' : 'JPY'),\n    KES: ('KES' : 'KES'),\n    KMF: ('KMF' : 'KMF'),\n    KRW: ('KRW' : 'KRW'),\n    KYD: ('KYD' : 'KYD'),\n    LAK: ('LAK' : 'LAK'),\n    LKR: ('LKR' : 'LKR'),\n    MDL: ('MDL' : 'MDL'),\n    MGA: ('MGA' : 'MGA'),\n    MKD: ('MKD' : 'MKD'),\n    MNT: ('MNT' : 'MNT'),\n    MRO: ('MRO' : 'MRO'),\n    MUR: ('MUR' : 'MUR'),\n    MVR: ('MVR' : 'MVR'),\n    MXN: ('MXN' : 'MXN'),\n    MYR: ('MYR' : 'MYR'),\n    NAD: ('NAD' : 'NAD'),\n    NIO: ('NIO' : 'NIO'),\n    NOK: ('NOK' : 'NOK'),\n    NPR: ('NPR' : 'NPR'),\n    NZD: ('NZD' : 'NZD'),\n    PEN: ('PEN' : 'PEN'),\n    PGK: ('PGK' : 'PGK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    PYG: ('PYG' : 'PYG'),\n    QAR: ('QAR' : 'QAR'),\n    RON: ('RON' : 'RON'),\n    RSD: ('RSD' : 'RSD'),\n    RUB: ('RUB' : 'RUB'),\n    SAR: ('SAR' : 'SAR'),\n    SBD: ('SBD' : 'SBD'),\n    SCR: ('SCR' : 'SCR'),\n    SEK: ('SEK' : 'SEK'),\n    SGD: ('SGD' : 'SGD'),\n    SHP: ('SHP' : 'SHP'),\n    SLL: ('SLL' : 'SLL'),\n    SOS: ('SOS' : 'SOS'),\n    SRD: ('SRD' : 'SRD'),\n    SZL: ('SZL' : 'SZL'),\n    THB: ('THB' : 'THB'),\n    TJS: ('TJS' : 'TJS'),\n    TOP: ('TOP' : 'TOP'),\n    TTD: ('TTD' : 'TTD'),\n    TWD: ('TWD' : 'TWD'),\n    TZS: ('TZS' : 'TZS'),\n    USD: ('USD' : 'USD'),\n    UYU: ('UYU' : 'UYU'),\n    VND: ('VND' : 'VND'),\n    VUV: ('VUV' : 'VUV'),\n    WST: ('WST' : 'WST'),\n    XAF: ('XAF' : 'XAF'),\n    XCD: ('XCD' : 'XCD'),\n    YER: ('YER' : 'YER')\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        },\n        data: {\n            payer_id: payerID\n        }\n    });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `patch`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        data:        patchData,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XOnError } from './onError';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : {| orderID : string |}) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\ntype OnCancelXProps = {|\n    onCancel : XOnCancel,\n    onError : XOnError\n|};\n\nexport function getOnCancel({ onCancel = promiseNoop, onError } : OnCancelXProps, { createOrder } : {| createOrder : CreateOrder |}) : OnCancel {\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                    [FPTI_KEY.TOKEN]:        orderID,\n                    [FPTI_KEY.CONTEXT_ID]:   orderID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../api';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { getLogger } from '../lib';\n\nimport type { CreateOrder } from './createOrder';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {|\n        patch : () => ZalgoPromise<OrderResponse>\n    |}\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : {| orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string |}) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\ntype OnShippingChangeXProps = {|\n    onShippingChange : ?XOnShippingChange,\n    partnerAttributionID : ?string\n|};\n\nexport function getOnShippingChange({ onShippingChange, partnerAttributionID } : OnShippingChangeXProps, { facilitatorAccessToken, createOrder } : {| facilitatorAccessToken : string, createOrder : CreateOrder |}) : ?OnShippingChange {\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                        [FPTI_KEY.TOKEN]:        orderID,\n                        [FPTI_KEY.CONTEXT_ID]:   orderID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { stringifyError } from 'belter/src';\n\nimport { upgradeFacilitatorAccessToken } from '../api';\nimport { getLogger } from '../lib';\n\nimport type { CreateOrder } from './createOrder';\n\nexport type XOnAuthDataType = {|\n    accessToken : ?string\n|};\n\nexport type OnAuth = (params : XOnAuthDataType) => ZalgoPromise<string | void>;\n\nexport function getOnAuth({ facilitatorAccessToken, createOrder, isLSATExperiment, upgradeLSAT } : {| facilitatorAccessToken : string, createOrder : CreateOrder, isLSATExperiment : boolean, upgradeLSAT : boolean |}) : OnAuth {\n\n    return ({ accessToken } : XOnAuthDataType) => {\n        getLogger().info(`spb_onauth_access_token_${ accessToken ? 'present' : 'not_present' }`);\n\n        return ZalgoPromise.try(() => {\n            if (accessToken) {\n                if (isLSATExperiment || upgradeLSAT) {\n                    return createOrder()\n                        .then(orderID => upgradeFacilitatorAccessToken(facilitatorAccessToken, { buyerAccessToken: accessToken, orderID }))\n                        .then(() => {\n                            getLogger().info('upgrade_lsat_success');\n\n                            return accessToken;\n                        })\n                        .catch(err => {\n                            getLogger().warn('upgrade_lsat_failure', { error: stringifyError(err) });\n\n                            return accessToken;\n                        });\n                }\n                return accessToken;\n            }\n        });\n    };\n}\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY, type FundingEligibilityType } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport {  UPGRADE_LSAT_RAMP } from '../constants';\nimport type { ContentType, LocaleType, ProxyWindow, Wallet, CheckoutFlowType, CardFieldsFlowType,\n    ThreeDomainSecureFlowType, PersonalizationType, MenuFlowType, ConnectOptions } from '../types';\nimport type { CreateOrder, XCreateOrder, CreateBillingAgreement, XCreateBillingAgreement, OnInit, XOnInit,\n    OnApprove, XOnApprove, OnCancel, XOnCancel, OnClick, XOnClick, OnShippingChange, XOnShippingChange, XOnError, OnError,\n    XGetPopupBridge, GetPopupBridge, XCreateSubscription, RememberFunding, GetPageURL, OnAuth } from '../props';\nimport { type FirebaseConfig } from '../api';\nimport { getNonce, createExperiment } from '../lib';\nimport { getOnInit } from '../props/onInit';\nimport { getCreateOrder } from '../props/createOrder';\nimport { getOnApprove } from '../props/onApprove';\nimport { getOnCancel } from '../props/onCancel';\nimport { getOnShippingChange } from '../props/onShippingChange';\nimport { getOnClick } from '../props/onClick';\nimport { getCreateBillingAgreement } from '../props/createBillingAgreement';\nimport { getCreateSubscription } from '../props/createSubscription';\nimport { getOnAuth } from '../props/onAuth';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type ServerRiskData = {||};\n\nexport type ButtonXProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    correlationID : string,\n    sdkCorrelationID? : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n    persistRiskData : ?(ServerRiskData) => ZalgoPromise<void>,\n    clientMetadataID : ?string,\n    fundingSource : ?$Values<typeof FUNDING>,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    upgradeLSAT? : boolean,\n    connect? : ConnectOptions,\n\n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type ButtonProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    clientMetadataID : ?string,\n    sdkCorrelationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n    persistRiskData : ?(ServerRiskData) => ZalgoPromise<void>,\n    fundingSource : ?$Values<typeof FUNDING>,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    connect : ?ConnectOptions,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange,\n    onAuth : OnAuth\n|};\n\nexport function getProps({ facilitatorAccessToken } : {| facilitatorAccessToken : string |}) : ButtonProps {\n\n    const xprops : ButtonXProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        clientMetadataID,\n        correlationID,\n        sdkCorrelationID = correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        fundingSource,\n        currency,\n        connect,\n        intent,\n        merchantID,\n        persistRiskData,\n        upgradeLSAT = false\n    } = xprops;\n\n    const upgradeLSATExperiment = createExperiment(UPGRADE_LSAT_RAMP.EXP_NAME, UPGRADE_LSAT_RAMP.RAMP);\n\n    const onInit = getOnInit({ onInit: xprops.onInit });\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick({ onClick: xprops.onClick });\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement({ createBillingAgreement: xprops.createBillingAgreement });\n    const createSubscription = getCreateSubscription({ createSubscription: xprops.createSubscription, partnerAttributionID, merchantID, clientID }, { facilitatorAccessToken });\n\n    const createOrder = getCreateOrder({ createOrder: xprops.createOrder, currency, intent, merchantID, partnerAttributionID }, { facilitatorAccessToken, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove({ onApprove: xprops.onApprove, intent, onError, partnerAttributionID, upgradeLSAT, clientAccessToken, vault, isLSATExperiment: upgradeLSATExperiment.isEnabled() }, { facilitatorAccessToken, createOrder });\n    const onCancel = getOnCancel({ onCancel: xprops.onCancel, onError }, { createOrder });\n    const onShippingChange = getOnShippingChange({ onShippingChange: xprops.onShippingChange, partnerAttributionID }, { facilitatorAccessToken, createOrder });\n    const onAuth = getOnAuth({ facilitatorAccessToken, createOrder, isLSATExperiment: upgradeLSATExperiment.isEnabled(), upgradeLSAT });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        clientMetadataID,\n        sdkCorrelationID,\n        merchantDomain,\n        platform,\n        currency,\n        intent,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n        persistRiskData,\n        connect,\n        fundingSource,\n\n        enableThreeDomainSecure,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange,\n\n        onAuth\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    Menu : MenuFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure, Menu } = paypal;\n    return { Checkout, CardFields, ThreeDomainSecure, Menu };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : {| serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig |}) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const { version } = paypal;\n\n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    wallet : ?Wallet,\n    personalization : PersonalizationType,\n    facilitatorAccessToken : string,\n    sdkMeta : string,\n    buyerAccessToken : ?string,\n    content : ContentType,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [ $Values<typeof FUNDING> ] : ?boolean\n        }\n    |},\n    serverRiskData : ? ServerRiskData\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    wallet : ?Wallet,\n    buyerAccessToken : ?string,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    sdkMeta : string,\n    content : ContentType,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |},\n    serverRiskData : ?ServerRiskData\n|};\n\nexport function getServiceData({ facilitatorAccessToken, serverRiskData, sdkMeta, content, buyerGeoCountry, fundingEligibility, wallet, buyerAccessToken, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        wallet,\n        sdkMeta,\n        content,\n        buyerAccessToken,\n        personalization,\n        facilitatorAccessToken,\n        eligibility,\n        serverRiskData\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type XOnInitDataType = {|\n    correlationID : string\n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInitDataType = {|\n    correlationID : string\n|};\n\nexport type OnInit = (OnInitDataType) => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit({ onInit } : {| onInit : ?XOnInit |}) : OnInit {\n    return (data) => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(data, buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : {| fundingSource : $Values<typeof FUNDING> |}) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick({ onClick } : {| onClick : ?XOnClick |}) : OnClick | void {\n    if (!onClick) {\n        return;\n    }\n\n    return memoize(({ fundingSource } : {| fundingSource : $Values<typeof FUNDING> |}) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement({ createBillingAgreement } : {| createBillingAgreement : ?XCreateBillingAgreement |}) : ?CreateBillingAgreement {\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createAccessToken, createSubscription as createSubcriptionID, reviseSubscription } from '../api';\nimport { getLogger } from '../lib';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {|\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    |}\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID, merchantID, clientID } : {| facilitatorAccessToken : string, partnerAttributionID? : ?string, merchantID? : $ReadOnlyArray<string>, clientID : ?string |}) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createSubcriptionID(facilitatorAccessToken, data, { partnerAttributionID, merchantID, clientID });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return reviseSubscription(facilitatorAccessToken, subscriptionID, data, { partnerAttributionID, merchantID, clientID });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\ntype CreateSubscriptionXProps = {|\n    createSubscription : ?XCreateSubscription,\n    partnerAttributionID? : ?string,\n    merchantID? : $ReadOnlyArray<string>,\n    clientID : ?string\n|};\n\nexport function getCreateSubscription({ createSubscription, partnerAttributionID, merchantID, clientID } : CreateSubscriptionXProps, { facilitatorAccessToken } : {| facilitatorAccessToken : string |}) : ?CreateSubscription {\n    if (createSubscription) {\n        // Recreate the accessToken if merchantId is passed.\n        if (merchantID && merchantID[0]) {\n            getLogger().info(`src_props_subscriptions_recreate_access_token_cache`);\n            createAccessToken(clientID, { targetSubject: merchantID[0] });\n        }\n        return () => {\n            return createSubscription(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID, merchantID, clientID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { FUNDING, CARD, WALLET_INSTRUMENT } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : {| fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string, instrumentID : ?string, instrumentType : ?$Values<typeof WALLET_INSTRUMENT> |} {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const instrumentID = button.getAttribute(DATA_ATTRIBUTES.INSTRUMENT_ID);\n    const instrumentType = button.getAttribute(DATA_ATTRIBUTES.INSTRUMENT_TYPE);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID, instrumentID, instrumentType };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\ntype Primitive = string | boolean | number;\ntype NullablePrimitive = Primitive | null | void;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | Primitive | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | NullablePrimitive;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | NullablePrimitive>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string' || typeof child === 'number') {\n            result.push(new TextNode(`${ child }`));\n        } else if (typeof child === 'boolean') {\n            continue;\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\ntype DomOptions = {|\n    doc? : Document\n|};\n\nconst getDefaultDomOptions = () : DomOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function dom(opts? : DomOptions = getDefaultDomOptions()) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : {| nonce : ?string |}, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING, CURRENCY, ENV, FPTI_KEY, SDK_SETTINGS } from '@paypal/sdk-constants/src';\nimport { stringifyError, stringifyErrorMessage } from 'belter/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW, FPTI_CONTEXT_TYPE, FTPI_CUSTOM_KEY } from '../constants';\nimport { updateClientConfig, getSupplementalOrderInfo } from '../api';\nimport { getLogger, isEmailAddress } from '../lib';\nimport { ORDER_VALIDATION_WHITELIST, SANDBOX_ORDER_VALIDATION_WHITELIST } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : {| orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void |}) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\ntype ValidateOptions = {|\n    env : $Values<typeof ENV>,\n    clientID : ?string,\n    merchantID : $ReadOnlyArray<string>,\n    expectedIntent : $Values<typeof INTENT>,\n    expectedCurrency : $Values<typeof CURRENCY>\n|};\n\ntype Payee = {|\n    merchantId? : string,\n    email? : {|\n        stringValue? : string\n    |}\n|};\n\n// check whether each merchantIdsOrEmails is in payees and each payee is in merchantIds\n// merchantIdsOrEmails is an arry of mixed merchant id and emails\n// payees is an array of payee object {merchant_id, email}\nfunction isValidMerchantIDs(merchantIDs : $ReadOnlyArray<string>, payees : $ReadOnlyArray<Payee>) : boolean {\n    if (merchantIDs.length !== payees.length) {\n        return false;\n    }\n\n    // split merchantIds into 2 arrays, one for emails and one for merchant ids\n    const merchantEmails = [];\n    const merchantIds = [];\n\n    merchantIDs.forEach(id => {\n        if (isEmailAddress(id)) {\n            merchantEmails.push(id.toLowerCase());\n        } else {\n            merchantIds.push(id);\n        }\n    });\n\n    const foundEmail = merchantEmails.every(email => {\n        return payees.some(payee => {\n            return email === (payee.email && payee.email.stringValue && payee.email.stringValue.toLowerCase());\n        });\n    });\n\n    const foundMerchantId = merchantIds.every(id => {\n        return payees.some(payee => {\n            return (id === payee.merchantId);\n        });\n    });\n\n    // if the id or email is not in payees\n    if (!foundEmail || !foundMerchantId) {\n        return false;\n    }\n\n    // now check payees\n    // each payer should either has merchant_id in merchantIds or has email in merchantEmails\n    const foundPayee = payees.every(payee => {\n        return (merchantIds.indexOf(payee.merchantId) > -1 || merchantEmails.indexOf(payee.email && payee.email.stringValue && payee.email.stringValue.toLowerCase()) > -1);\n    });\n    return foundPayee;\n}\n\nexport function validateOrder(orderID : string, { env, clientID, merchantID, expectedCurrency, expectedIntent } : ValidateOptions) : ZalgoPromise<void> {\n    // eslint-disable-next-line complexity\n    return getSupplementalOrderInfo(orderID).then(order => {\n        const cart = order.checkoutSession.cart;\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n        }\n\n        if (!merchantID || merchantID.length === 0) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        const payees = order.checkoutSession.payees;\n\n        if (!payees) {\n            return getLogger().warn(`supplemental_order_missing_payees`).flush();\n        }\n\n        if (!payees.length) {\n            return getLogger().warn(`supplemental_order_payees_empty`).flush();\n        }\n\n        // find and remove duplicated payees\n        const dict = {};\n        const uniquePayees = [];\n\n        for (const payee of payees) {\n            if (!payee.merchantId && (!payee.email || !payee.email.stringValue)) {\n                return getLogger().warn(`supplemental_order_payees_missing_value`, { payees: JSON.stringify(payees) }).flush();\n            }\n\n            if (payee.merchantId) {\n                if (!dict[payee.merchantId]) {\n                    dict[payee.merchantId] = 1;\n                    uniquePayees.push(payee);\n                }\n            } else if (payee.email && payee.email.stringValue) {\n                if (!dict[payee.email.stringValue]) {\n                    dict[payee.email.stringValue] = 1;\n                    uniquePayees.push(payee);\n                }\n            }\n        }\n\n        const payeesStr = uniquePayees.map(payee => {\n            if (payee.merchantId) {\n                return payee.merchantId;\n            }\n\n            if (payee.email && payee.email.stringValue) {\n                return payee.email.stringValue;\n            }\n\n            throw new Error(`Invalid payee state: ${ JSON.stringify(uniquePayees) }`);\n        }).join(',');\n\n        const xpropMerchantID = window.xprops.merchantID;\n\n        if (xpropMerchantID && xpropMerchantID.length) {\n            \n            // Validate merchant-id value(s) passed explicitly to SDK\n            if (!isValidMerchantIDs(xpropMerchantID, uniquePayees)) {\n                getLogger().warn(`explicit_payee_transaction_mismatch`, { payees: JSON.stringify(uniquePayees), merchantID: JSON.stringify(merchantID) }).flush();\n\n                if (uniquePayees.length === 1) {\n                    throw new Error(`Payee(s) passed in transaction does not match expected merchant id. Please ensure you are passing ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ payeesStr } or ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ (uniquePayees[0] && uniquePayees[0].email && uniquePayees[0].email.stringValue) ? uniquePayees[0].email.stringValue : 'payee@merchant.com' } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n                } else {\n                    throw new Error(`Payee(s) passed in transaction does not match expected merchant id. Please ensure you are passing ${ SDK_QUERY_KEYS.MERCHANT_ID }=* to the sdk url and ${ SDK_SETTINGS.MERCHANT_ID }=\"${ payeesStr }\" in the sdk script tag. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n                }\n            }\n        } else {\n\n            // Validate merchant-id value derived from client id\n            if (!isValidMerchantIDs(merchantID, uniquePayees)) {\n                getLogger().warn(`derived_payee_transaction_mismatch`, { payees: JSON.stringify(uniquePayees), merchantID: JSON.stringify(merchantID) }).flush();\n\n                if (uniquePayees.length === 1) {\n                    if (env === ENV.SANDBOX) {\n                        getLogger().warn(`derived_payee_transaction_mismatch_sandbox`, { payees: JSON.stringify(payees), merchantID: JSON.stringify(merchantID) }).flush();\n                    }\n\n                    // eslint-disable-next-line no-console\n                    console.warn(`Payee(s) passed in transaction does not match expected merchant id. Please ensure you are passing ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ payeesStr } or ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ (uniquePayees[0] && uniquePayees[0].email && uniquePayees[0].email.stringValue) ? uniquePayees[0].email.stringValue : 'payee@merchant.com' } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n                } else {\n                    throw new Error(`Payee(s) passed in transaction does not match expected merchant id. Please ensure you are passing ${ SDK_QUERY_KEYS.MERCHANT_ID }=* to the sdk url and ${ SDK_SETTINGS.MERCHANT_ID }=\"${ payeesStr }\" in the sdk script tag. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n                }\n            }\n        }\n\n    }).catch(err => {\n        const isSandbox = (env === ENV.SANDBOX);\n        const isWhitelisted = isSandbox\n            ? (clientID && SANDBOX_ORDER_VALIDATION_WHITELIST.indexOf(clientID) !== -1)\n            : (clientID && ORDER_VALIDATION_WHITELIST.indexOf(clientID) !== -1);\n\n        getLogger()\n            .warn(`${ isSandbox ? 'sandbox_' : '' }order_validation_error${ isWhitelisted ? '_whitelist' : '' }`, { err: stringifyError(err) })\n            .warn(`${ isSandbox ? 'sandbox_' : '' }order_validation_error${ isWhitelisted ? '_whitelist' : '' }_${ clientID || 'unknown' }`, { err: stringifyError(err) })\n            .track({\n                [ FPTI_KEY.TRANSITION ]:                  'process_order_validate',\n                [ FPTI_KEY.CONTEXT_TYPE ]:                FPTI_CONTEXT_TYPE.ORDER_ID,\n                [ FPTI_KEY.TOKEN ]:                       orderID,\n                [ FPTI_KEY.CONTEXT_ID ]:                  orderID,\n                [ FTPI_CUSTOM_KEY.INTEGRATION_ISSUE ]:    stringifyErrorMessage(err),\n                [FTPI_CUSTOM_KEY.INTEGRATION_WHITELIST ]: isWhitelisted ? 'true' : 'false'\n            })\n            .flush();\n\n\n        if (!isWhitelisted) {\n            // eslint-disable-next-line no-console\n            console.error(stringifyError(err));\n            throw err;\n        } else {\n            // eslint-disable-next-line no-console\n            console.warn(stringifyError(err));\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups, stringifyError, extendUrl } from 'belter/src';\nimport { FUNDING, FPTI_KEY, type FundingEligibilityType } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { ProxyWindow, ConnectOptions } from '../types';\nimport { type CreateBillingAgreement, type CreateSubscription } from '../props';\nimport { enableVault, exchangeAccessTokenForAuthCode, getConnectURL } from '../api';\nimport { CONTEXT, TARGET_ELEMENT, BUYER_INTENT, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { openPopup } from '../ui';\nimport { updateButtonClientConfig } from '../button/orders';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, InitOptions } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : SetupOptions) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\nfunction isCheckoutPaymentEligible() : boolean {\n    return true;\n}\n\ntype ConnectEligibleOptions = {|\n    connect : ?ConnectOptions,\n    vault : boolean,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>\n|};\n\n\nfunction isConnectEligible({ connect, vault, fundingSource, createBillingAgreement, createSubscription } : ConnectEligibleOptions) : boolean {\n    if (!connect) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.PAYPAL && fundingSource !== FUNDING.CREDIT) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable) {\n        // In future, make this an optional checkbox during checkout flow\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n\n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : {| win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean |}) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : InitOptions) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { sessionID, buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick,\n        clientID, connect, clientMetadataID: cmid, onAuth } = props;\n    let { button, win, fundingSource, card, isClick, buyerAccessToken = serviceData.buyerAccessToken,\n        venmoPayloadID, buyerIntent } = payment;\n    const { fundingEligibility, buyerCountry, sdkMeta } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n    const connectEligible = isConnectEligible({ connect, createBillingAgreement, createSubscription, vault, fundingSource });\n\n    let approved = false;\n    let forceClosed = false;\n\n    const init = () => {\n        return Checkout({\n            window: win,\n            sessionID,\n            buttonSessionID,\n            clientAccessToken,\n            venmoPayloadID,\n\n            createAuthCode: () => {\n                return ZalgoPromise.try(() => {\n                    if (buyerAccessToken && (buyerIntent === BUYER_INTENT.PAY || buyerIntent === BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING)) {\n                        return exchangeAccessTokenForAuthCode(buyerAccessToken).catch(err => {\n                            getLogger().warn('exchange_access_token_auth_code_error', { err: stringifyError(err) });\n                        });\n                    }\n                });\n            },\n\n            getConnectURL: (connect && connectEligible) ? ({ payerID }) => {\n                if (!clientID) {\n                    throw new Error(`Expected clientID`);\n                }\n\n                return createOrder().then(orderID => {\n                    return getConnectURL({ orderID, payerID, clientID, fundingSource, connect }).then(connectURL => {\n                        getLogger()\n                            .info('connect_redirect', { connectURL })\n                            .track({\n                                [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CONNECT_REDIRECT,\n                                [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                                [FPTI_KEY.TOKEN]:        orderID,\n                                [FPTI_KEY.CONTEXT_ID]:   orderID\n                            }).flush();\n\n                        return extendUrl(connectURL, {\n                            query: {\n                                sdkMeta\n                            }\n                        });\n                    }).catch(err => {\n                        getLogger().error('connect_redirect_error', { err: stringifyError(err) });\n                        throw err;\n                    });\n                });\n            } : null,\n\n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return ZalgoPromise.try(() => {\n                        if (buyerIntent === BUYER_INTENT.PAY) {\n                            return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription });\n                        }\n                    }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n\n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID, authCode }) => {\n                approved = true;\n                getLogger().info(`spb_onapprove_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    const restart = memoize(() : ZalgoPromise<void> =>\n                        initCheckout({ props, components, serviceData, config, payment: { button, fundingSource, card, buyerIntent, isClick: false } })\n                            .start().finally(unresolvedPromise));\n\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, authCode }, { restart }).catch(noop);\n                });\n            },\n\n            onAuth: ({ accessToken }) => {\n\n                const access_token = accessToken ? accessToken : buyerAccessToken;\n\n                return onAuth({ accessToken: access_token }).then(token => {\n                    buyerAccessToken = token;\n                });\n            },\n\n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n\n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n\n            onClose: () => {\n                checkoutOpen = false;\n                if (!forceClosed && !approved) {\n                    return onCancel();\n                }\n            },\n\n            onError,\n\n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce,\n            clientMetadataID: cmid\n        });\n    };\n\n    let instance;\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                forceClosed = true;\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context).catch(err => {\n            if (checkoutOpen) {\n                throw err;\n            }\n        });\n    });\n\n    const click = () => {\n        if (supportsPopups()) {\n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n        }\n\n        if (!onClick) {\n            start();\n            return;\n        }\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (win && !valid) {\n                win.close();\n            }\n        });\n    };\n\n    return { click, start, close };\n}\n\nfunction updateCheckoutClientConfig({ orderID, payment }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { buyerIntent, fundingSource } = payment;\n        const updateClientConfigPromise = updateButtonClientConfig({ fundingSource, orderID, inline: false });\n\n        // Block\n        if (buyerIntent === BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING) {\n            return updateClientConfigPromise;\n        }\n    });\n}\n\nexport const checkout : PaymentFlow = {\n    name:               'checkout',\n    setup:              setupCheckout,\n    isEligible:         isCheckoutEligible,\n    isPaymentEligible:  isCheckoutPaymentEligible,\n    init:               initCheckout,\n    updateClientConfig: updateCheckoutClientConfig\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    PAYLATER:       ('paylater' : 'paylater'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay'),\n    MERCADOPAGO:    ('mercadopago' : 'mercadopago')\n};\n\nexport const FUNDING_BRAND_LABEL = {\n    PAYPAL:         ('PayPal' : 'PayPal'),\n    CREDIT:         ('PayPal Credit' : 'PayPal Credit')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n\nexport const WALLET_INSTRUMENT = {\n    BALANCE: ('balance' : 'balance'),\n    CARD:    ('card' : 'card'),\n    BANK:    ('bank' : 'bank'),\n    CREDIT:  ('credit' : 'credit')\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../lib';\n\nexport function openPopup({ width, height } : {| width : number, height : number |}) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce, noop } from 'belter/src';\n\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, serviceData } : IsEligibleOptions) : boolean {\n    const { vault, onShippingChange } = props;\n    const { eligibility } = serviceData;\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction isCardFieldsPaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win, fundingSource } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource && fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : ?$Values<typeof CARD>) {\n    if (!card) {\n        return;\n    }\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : {| buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement |} => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, sessionID, buttonSessionID, onAuth } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart }).catch(noop);\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            const access_token = accessToken ? accessToken : buyerAccessToken;\n\n            return onAuth({ accessToken: access_token }).then(token => {\n                buyerAccessToken = token;\n            });\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        sessionID,\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields().then(() => {\n            cardFieldsOpen = false;\n        });\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    name:              'card_fields',\n    setup:             setupCardFields,\n    isEligible:        isCardFieldsEligible,\n    isPaymentEligible: isCardFieldsPaymentEligible,\n    init:              initCardFields,\n    inline:            true\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { destroyElement } from 'belter/src';\n\nimport type { ThreeDomainSecureFlowType, MenuChoices } from '../types';\nimport type { CreateOrder } from '../props';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse, getSupplementalOrderInfo, deleteVault } from '../api';\nimport { TARGET_ELEMENT, BUYER_INTENT, FPTI_TRANSITION } from '../constants';\nimport { getLogger } from '../lib';\nimport { updateButtonClientConfig } from '../button/orders';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions, MenuOptions, Payment } from './types';\nimport { checkout, CHECKOUT_POPUP_DIMENSIONS } from './checkout';\n\nconst VAULT_MIN_WIDTH = 250;\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props } : IsEligibleOptions) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isVaultCapturePaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win, paymentMethodID, fundingSource } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (window.innerWidth < VAULT_MIN_WIDTH && fundingSource === FUNDING.PAYPAL) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken, clientMetadataID: cmid,\n        enableThreeDomainSecure, sessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { fundingSource, paymentMethodID } = payment;\n\n    const clientMetadataID = cmid || sessionID;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const fallbackToWebCheckout = () => {\n        getLogger().info('web_checkout_fallback').flush();\n        return checkout.init({ props, components, serviceData, payment: { ...payment, isClick: false, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING }, config }).start();\n    };\n\n    const shippingRequired = (orderID) => {\n        return getSupplementalOrderInfo(orderID).then(order => {\n            const { flags: { isChangeShippingAddressAllowed } } = order.checkoutSession;\n\n            if (isChangeShippingAddressAllowed) {\n                return true;\n            }\n\n            return false;\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return ZalgoPromise.hash({\n                validate:        validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, clientMetadataID, partnerAttributionID }),\n                requireShipping: shippingRequired(orderID)\n            });\n        }).then(({ validate, requireShipping }) => {\n            if (requireShipping) {\n                if (fundingSource !== FUNDING.PAYPAL) {\n                    throw new Error(`Shipping address requested for ${ fundingSource } payment`);\n                }\n\n                return fallbackToWebCheckout();\n            }\n\n            const { status, body } = validate;\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent }).then(() => {\n                return onApprove({}, { restart });\n            });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nconst POPUP_OPTIONS = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\nfunction setupVaultMenu({ props, payment, serviceData, components, config } : MenuOptions) : MenuChoices {\n    const { clientAccessToken, createOrder, enableThreeDomainSecure, partnerAttributionID, sessionID, clientMetadataID } = props;\n    const { fundingSource, paymentMethodID, button } = payment;\n    const { content } = serviceData;\n\n    if (!clientAccessToken || !paymentMethodID) {\n        throw new Error(`Client access token and payment method id required`);\n    }\n\n    const updateClientConfig = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return updateButtonClientConfig({ fundingSource, orderID, inline: false });\n        });\n    };\n\n    const validate = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, clientMetadataID: clientMetadataID || sessionID });\n        });\n    };\n\n    const loadCheckout = ({ payment: checkoutPayment } : {| payment : Payment |}) => {\n        return checkout.init({\n            props, components, serviceData, config, payment: checkoutPayment\n        }).start();\n    };\n\n    const CHOOSE_FUNDING_SHIPPING = {\n        label:    content.payWithDifferentMethod,\n        popup:    POPUP_OPTIONS,\n        onSelect: ({ win }) => {\n\n            getLogger().info('click_choose_funding').track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CLICK_CHOOSE_FUNDING\n            }).flush();\n            \n            return ZalgoPromise.try(() => {\n                return updateClientConfig();\n            }).then(() => {\n                return validate();\n            }).then(() => {\n                return loadCheckout({ payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING } });\n            });\n        }\n    };\n\n    const CHOOSE_ACCOUNT = {\n        label:    content.payWithDifferentAccount,\n        popup:    POPUP_OPTIONS,\n        onSelect: ({ win }) => {\n\n            getLogger().info('click_choose_account').track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CLICK_CHOOSE_ACCOUNT\n            }).flush();\n\n            return ZalgoPromise.try(() => {\n                return updateClientConfig();\n            }).then(() => {\n                return loadCheckout({ payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_ACCOUNT } });\n            });\n        }\n    };\n\n    const DELETE_CARD = {\n        label:    content.deleteVaultedCard,\n        spinner:  true,\n        onSelect: () => {\n\n            getLogger().info('click_unlink_account').track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CLICK_UNLINK_ACCOUNT\n            }).flush();\n\n            return deleteVault({ paymentMethodID, clientAccessToken }).then(() => {\n                destroyElement(button);\n            });\n        }\n    };\n\n    if (fundingSource === FUNDING.PAYPAL) {\n        return [\n            CHOOSE_FUNDING_SHIPPING,\n            CHOOSE_ACCOUNT\n        ];\n    }\n\n    if (fundingSource === FUNDING.CARD) {\n        return [\n            DELETE_CARD\n        ];\n    }\n\n    throw new Error(`Can not render menu for ${ fundingSource }`);\n}\n\nfunction updateVaultClientConfig({ orderID, payment }) : ZalgoPromise<void> {\n    const { fundingSource } = payment;\n    return updateButtonClientConfig({ fundingSource, orderID, inline: true });\n}\n\nexport const vaultCapture : PaymentFlow = {\n    name:               'vault_capture',\n    setup:              setupVaultCapture,\n    isEligible:         isVaultCaptureEligible,\n    isPaymentEligible:  isVaultCapturePaymentEligible,\n    init:               initVaultCapture,\n    setupMenu:          setupVaultMenu,\n    updateClientConfig: updateVaultClientConfig,\n    spinner:            true,\n    inline:             true\n};\n\n\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { stringifyError } from 'belter/src';\nimport { FUNDING, WALLET_INSTRUMENT, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport type { MenuChoices, Wallet, WalletInstrument } from '../types';\nimport { getSupplementalOrderInfo, oneClickApproveOrder } from '../api';\nimport { BUYER_INTENT, FPTI_TRANSITION } from '../constants';\nimport { getLogger } from '../lib';\nimport { updateButtonClientConfig } from '../button/orders';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions, MenuOptions, Payment } from './types';\nimport { checkout, CHECKOUT_POPUP_DIMENSIONS } from './checkout';\n\nconst WALLET_MIN_WIDTH = 250;\n\nfunction setupWalletCapture() {\n    // pass\n}\n\nfunction isWalletCaptureEligible({ props, serviceData } : IsEligibleOptions) : boolean {\n    const { buyerAccessToken, wallet } = serviceData;\n    const { onShippingChange } = props;\n\n    if (!wallet) {\n        return false;\n    }\n\n    if (!buyerAccessToken) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction getInstrument(wallet : Wallet, fundingSource : $Values<typeof FUNDING>, instrumentID : string) : ?WalletInstrument {\n\n    // $FlowFixMe\n    const walletFunding = wallet[fundingSource];\n\n    if (!walletFunding) {\n        return;\n    }\n\n    let instrument;\n    for (const inst of walletFunding.instruments) {\n        if (inst.instrumentID === instrumentID) {\n            instrument = inst;\n        }\n    }\n\n    if (!instrument) {\n        return;\n    }\n\n    if (!instrument.type) {\n        return;\n    }\n\n    return instrument;\n}\n\nfunction isWalletCapturePaymentEligible({ serviceData, payment } : IsPaymentEligibleOptions) : boolean {\n    const { wallet } = serviceData;\n    const { win, fundingSource, instrumentID } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!wallet) {\n        return false;\n    }\n\n    if (!instrumentID) {\n        return false;\n    }\n\n    const instrument = getInstrument(wallet, fundingSource, instrumentID);\n\n    if (!instrument) {\n        return false;\n    }\n\n    if (window.innerWidth < WALLET_MIN_WIDTH) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initWalletCapture({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientMetadataID } = props;\n    const { fundingSource, instrumentID } = payment;\n    const { buyerAccessToken, wallet } = serviceData;\n\n    if (!instrumentID) {\n        throw new Error(`Instrument id required for wallet capture`);\n    }\n\n    if (!buyerAccessToken) {\n        throw new Error(`Buyer access token required for wallet capture`);\n    }\n\n    // $FlowFixMe\n    const walletFunding = wallet[fundingSource];\n\n    if (!walletFunding) {\n        throw new Error(`Expected wallet to be present`);\n    }\n\n    let instrument;\n    for (const inst of walletFunding.instruments) {\n        if (inst.instrumentID === instrumentID) {\n            instrument = inst;\n        }\n    }\n\n    if (!instrument) {\n        throw new Error(`Expected instrument to be present`);\n    }\n\n    const { type: instrumentType } = instrument;\n\n    if (!instrumentType) {\n        throw new Error(`Expected instrument type`);\n    }\n\n    const getWebCheckoutFallback = () => {\n        return checkout.init({\n            props, components, serviceData, payment: {\n                ...payment,\n                isClick:       false,\n                buyerIntent:   BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING,\n                fundingSource: (instrument && instrument.type === WALLET_INSTRUMENT.CREDIT) ? FUNDING.CREDIT : fundingSource\n            }, config\n        });\n    };\n\n    const fallbackToWebCheckout = () => {\n        getLogger().info('web_checkout_fallback').flush();\n        return getWebCheckoutFallback().start();\n    };\n\n    if (!instrument.oneClick) {\n        return getWebCheckoutFallback();\n    }\n\n    const restart = () => {\n        return fallbackToWebCheckout();\n    };\n\n    const shippingRequired = (orderID) => {\n        return getSupplementalOrderInfo(orderID).then(order => {\n            const { flags: { isChangeShippingAddressAllowed } } = order.checkoutSession;\n\n            if (isChangeShippingAddressAllowed) {\n                return true;\n            }\n\n            return false;\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return ZalgoPromise.hash({\n                requireShipping: shippingRequired(orderID),\n                orderApproval:   oneClickApproveOrder({ orderID, instrumentType, buyerAccessToken, instrumentID, clientMetadataID })\n            }).then(({ requireShipping, orderApproval }) => {\n                if (requireShipping) {\n                    return fallbackToWebCheckout();\n                }\n\n                const { payerID } = orderApproval;\n                return onApprove({ payerID }, { restart });\n                \n            }).catch(err => {\n                getLogger().warn('approve_order_error', { err: stringifyError(err) }).flush();\n                return fallbackToWebCheckout();\n            });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nconst POPUP_OPTIONS = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\nfunction setupWalletMenu({ props, payment, serviceData, components, config } : MenuOptions) : MenuChoices {\n    const { createOrder } = props;\n    const { fundingSource, instrumentID } = payment;\n    const { wallet, content, buyerAccessToken } = serviceData;\n\n    if (!buyerAccessToken) {\n        throw new Error(`Can not render wallet menu without buyer access token`);\n    }\n\n    if (!wallet) {\n        throw new Error(`Can not render wallet menu without wallet`);\n    }\n\n    if (!instrumentID) {\n        throw new Error(`Can not render wallet menu without instrumentID`);\n    }\n\n    const instrument = getInstrument(wallet, fundingSource, instrumentID);\n\n    if (!instrument) {\n        throw new Error(`Can not render wallet menu without instrument`);\n    }\n\n    const updateClientConfig = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return updateButtonClientConfig({ fundingSource, orderID, inline: false });\n        });\n    };\n\n    const loadCheckout = ({ payment: checkoutPayment } : {| payment : Payment |}) => {\n        return checkout.init({\n            props, components, serviceData, config, payment: checkoutPayment\n        }).start();\n    };\n\n    const newFundingSource = (instrument.type === WALLET_INSTRUMENT.CREDIT)\n        ? FUNDING.CREDIT\n        : fundingSource;\n\n    const CHOOSE_FUNDING_SHIPPING = {\n        label:    content.payWithDifferentMethod,\n        popup:    POPUP_OPTIONS,\n        onSelect: ({ win }) => {\n\n            getLogger().info('click_choose_funding').track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CLICK_CHOOSE_FUNDING\n            }).flush();\n\n            return ZalgoPromise.try(() => {\n                return updateClientConfig();\n            }).then(() => {\n                return loadCheckout({\n                    payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING, fundingSource: newFundingSource }\n                });\n            });\n        }\n    };\n\n    const CHOOSE_ACCOUNT = {\n        label:    content.payWithDifferentAccount,\n        popup:    POPUP_OPTIONS,\n        onSelect: ({ win }) => {\n\n            getLogger().info('click_choose_account').track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CLICK_CHOOSE_ACCOUNT\n            }).flush();\n\n            return loadCheckout({\n                payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_ACCOUNT, fundingSource: newFundingSource }\n            });\n        }\n    };\n\n    if (fundingSource === FUNDING.PAYPAL || fundingSource === FUNDING.CREDIT) {\n        return [\n            CHOOSE_FUNDING_SHIPPING,\n            CHOOSE_ACCOUNT\n        ];\n    }\n    \n    throw new Error(`Can not render menu for ${ fundingSource }`);\n}\n\nfunction updateWalletClientConfig({ orderID, payment }) : ZalgoPromise<void> {\n    const { fundingSource } = payment;\n    return updateButtonClientConfig({ fundingSource, orderID, inline: true });\n}\n\nexport const walletCapture : PaymentFlow = {\n    name:               'wallet_capture',\n    setup:              setupWalletCapture,\n    isEligible:         isWalletCaptureEligible,\n    isPaymentEligible:  isWalletCapturePaymentEligible,\n    init:               initWalletCapture,\n    setupMenu:          setupWalletMenu,\n    updateClientConfig: updateWalletClientConfig,\n    spinner:            true,\n    inline:             true\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, memoize, stringifyError, isIos, isAndroid,\n    isSafari, isChrome, stringifyErrorMessage, cleanup, once, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { type CrossDomainWindowType, isWindowClosed, onCloseWindow, getDomain } from 'cross-domain-utils/src';\n\nimport type { ButtonProps } from '../button/props';\nimport { NATIVE_CHECKOUT_URI, WEB_CHECKOUT_URI, NATIVE_CHECKOUT_POPUP_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { getLogger, promiseOne, promiseNoop, unresolvedPromise } from '../lib';\nimport { USER_ACTION, FPTI_TRANSITION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout';\n\nconst POST_MESSAGE = {\n    AWAIT_REDIRECT:    'awaitRedirect',\n    DETECT_APP_SWITCH: 'detectAppSwitch',\n    DETECT_WEB_SWITCH: 'detectWebSwitch',\n    ON_COMPLETE:       'onComplete'\n};\n\nconst SOCKET_MESSAGE = {\n    SET_PROPS:          'setProps',\n    GET_PROPS:          'getProps',\n    CLOSE:              'close',\n    ON_SHIPPING_CHANGE: 'onShippingChange',\n    ON_APPROVE:         'onApprove',\n    ON_CANCEL:          'onCancel',\n    ON_ERROR:           'onError'\n};\n\nconst NATIVE_DOMAIN = 'https://www.paypal.com';\nconst NATIVE_DOMAIN_SANDBOX = 'https://www.paypal.com';\n\n// Popup domain needs to be different than native domain for app switch to work on iOS\nconst NATIVE_POPUP_DOMAIN = 'https://history.paypal.com';\nconst NATIVE_POPUP_DOMAIN_SANDBOX = 'https://www.sandbox.paypal.com';\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\ntype NativeConnection = {|\n    setProps : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    const nativeSocket = firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n\n    nativeSocket.onError(err => {\n        getLogger().error('native_socket_error', { err: stringifyError(err) });\n    });\n\n    return nativeSocket;\n});\n\nfunction isIOSSafari() : boolean {\n    return isIos() && isSafari();\n}\n\nfunction isAndroidChrome() : boolean {\n    return isAndroid() && isChrome();\n}\n\nfunction useDirectAppSwitch() : boolean {\n    return isAndroidChrome();\n}\n\nfunction didAppSwitch(popupWin : ?CrossDomainWindowType) : boolean {\n    return !popupWin || isWindowClosed(popupWin);\n}\n\nfunction isNativeOptedIn({ props } : {| props : ButtonProps |}) : boolean {\n    const { enableNativeCheckout } = props;\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n\n    try {\n        if (window.localStorage.getItem('__native_checkout__')) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nlet initialPageUrl;\n\nfunction isNativeEligible({ props, config, serviceData } : IsEligibleOptions) : boolean {\n\n    const { platform, onShippingChange, createBillingAgreement, createSubscription, env } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange && !isNativeOptedIn({ props })) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (!isIOSSafari() && !isAndroidChrome()) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (env === ENV.LOCAL || env === ENV.STAGE) {\n        return false;\n    }\n\n    if (eligibility.nativeCheckout.paypal || eligibility.nativeCheckout.venmo) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isNativePaymentEligible({ payment, props, serviceData } : IsPaymentEligibleOptions) : boolean {\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (!initialPageUrl) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout[fundingSource]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupNative({ props } : SetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPageUrl } = props;\n\n        return getPageUrl().then(pageUrl => {\n            initialPageUrl = pageUrl;\n        });\n    });\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    webCheckoutUrl : string,\n    stageHost : ?string,\n    apiStageHost : ?string,\n    forceEligible : boolean\n|};\n\nfunction instrumentNativeSDKProps(props : NativeSDKProps) {\n    const sanitizedProps = {\n        ...props,\n        facilitatorAccessToken: props.facilitatorAccessToken ? '********************' : ''\n    };\n\n    getLogger().info('native_setprops_request', sanitizedProps).track({\n        [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_SET_PROPS_ATTEMPT\n    }).flush();\n}\n\nfunction initNative({ props, components, config, payment, serviceData } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit,\n        buttonSessionID, env, stageHost, apiStageHost, onClick, onShippingChange } = props;\n    const { facilitatorAccessToken, sdkMeta } = serviceData;\n    const { fundingSource } = payment;\n    const { version, firebase: firebaseConfig } = config;\n\n    if (!firebaseConfig) {\n        throw new Error(`Can not run native flow without firebase config`);\n    }\n\n    const clean = cleanup();\n    let approved = false;\n    let cancelled = false;\n    let didFallback = false;\n\n    const close = memoize(() => {\n        return clean.all();\n    });\n\n    const listen = (popupWin, domain, event, handler) =>\n        paypal.postRobot.once(event, { window: popupWin, domain }, handler);\n\n    const fallbackToWebCheckout = (fallbackWin? : ?CrossDomainWindowType) => {\n        didFallback = true;\n        const checkoutPayment = { ...payment, win: fallbackWin, isClick: false };\n        const instance = checkout.init({ props, components, payment: checkoutPayment, config, serviceData });\n        clean.register(() => instance.close());\n        return instance.start();\n    };\n\n    const getNativeDomain = memoize(() : string => {\n        if (env === ENV.SANDBOX && window.xprops && window.xprops.useCorrectNativeSandboxDomain) {\n            return 'https://www.sandbox.paypal.com';\n        }\n\n        return (env === ENV.SANDBOX)\n            ? NATIVE_DOMAIN_SANDBOX\n            : NATIVE_DOMAIN;\n    });\n\n    const getNativePopupDomain = memoize(() : string => {\n        if (env === ENV.SANDBOX && window.xprops && window.xprops.useCorrectNativeSandboxDomain) {\n            return 'https://history.paypal.com';\n        }\n\n        return (env === ENV.SANDBOX)\n            ? NATIVE_POPUP_DOMAIN_SANDBOX\n            : NATIVE_POPUP_DOMAIN;\n    });\n\n    const getNativeUrl = memoize(({ pageUrl = initialPageUrl, sessionUID } = {}) : string => {\n        return extendUrl(`${ getNativeDomain() }${ NATIVE_CHECKOUT_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, pageUrl }\n        });\n    });\n\n    const getNativePopupUrl = memoize(({ sessionUID }) : string => {\n        const parentDomain = getDomain();\n        return extendUrl(`${ getNativePopupDomain() }${ NATIVE_CHECKOUT_POPUP_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, parentDomain }\n        });\n    });\n\n    const getWebCheckoutUrl = memoize(({ orderID }) : string => {\n        return extendUrl(`${ getNativeDomain() }${ WEB_CHECKOUT_URI }`, {\n            query: {\n                fundingSource,\n                facilitatorAccessToken,\n                token:         orderID,\n                useraction:    commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                native_xo:     '1'\n            }\n        });\n    });\n\n    const getSDKProps = memoize(() : ZalgoPromise<NativeSDKProps> => {\n        return createOrder().then(orderID => {\n            const userAgent = getUserAgent();\n            const webCheckoutUrl = getWebCheckoutUrl({ orderID });\n            const forceEligible = isNativeOptedIn({ props });\n            const pageUrl = '';\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit, webCheckoutUrl,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost, forceEligible\n            };\n        });\n    });\n\n    const connectNative = memoize(({ sessionUID } : {| sessionUID : string |}) : NativeConnection => {\n        const socket = getNativeSocket({\n            sessionUID, firebaseConfig, version\n        });\n\n        const setNativeProps = memoize(() => {\n            return getSDKProps().then(sdkProps => {\n                getLogger().info(`native_message_setprops`).flush();\n                instrumentNativeSDKProps(sdkProps);\n                return socket.send(SOCKET_MESSAGE.SET_PROPS, sdkProps);\n            }).then(() => {\n                getLogger().info(`native_response_setprops`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_APP_SWITCH_ACK\n                }).flush();\n            });\n        });\n\n        const closeNative = memoize(() => {\n            getLogger().info(`native_message_close`).flush();\n            return socket.send(SOCKET_MESSAGE.CLOSE).then(() => {\n                getLogger().info(`native_response_close`).flush();\n                return close();\n            });\n        });\n\n        const getPropsListener = socket.on(SOCKET_MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            getLogger().info(`native_message_getprops`).flush();\n            return getSDKProps();\n        });\n\n        const onShippingChangeListener = socket.on(SOCKET_MESSAGE.ON_SHIPPING_CHANGE, ({ data }) => {\n            getLogger().info(`native_message_onshippingchange`).flush();\n            if (onShippingChange) {\n                let resolved = true;\n                const actions = {\n                    resolve: () => {\n                        return ZalgoPromise.try(() => {\n                            resolved = true;\n                        });\n                    },\n                    reject: () => {\n                        return ZalgoPromise.try(() => {\n                            resolved = false;\n                        });\n                    }\n                };\n                return onShippingChange(data, actions).then(() => {\n                    return {\n                        resolved\n                    };\n                });\n            }\n        });\n\n        const onApproveListener = socket.on(SOCKET_MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            approved = true;\n            getLogger().info(`native_message_onapprove`)\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_POPUP_CLOSED\n                })\n                .flush();\n\n            const data = { payerID, paymentID, billingToken, forceRestAPI: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return ZalgoPromise.all([\n                onApprove(data, actions),\n                close()\n            ]).then(noop);\n        });\n\n        const onCancelListener = socket.on(SOCKET_MESSAGE.ON_CANCEL, () => {\n            cancelled = true;\n            getLogger().info(`native_message_oncancel`).flush();\n            return ZalgoPromise.all([\n                onCancel(),\n                close()\n            ]).then(noop);\n        });\n\n        const onErrorListener = socket.on(SOCKET_MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            getLogger().info(`native_message_onerror`, { err: message }).flush();\n            return ZalgoPromise.all([\n                onError(new Error(message)),\n                close()\n            ]).then(noop);\n        });\n\n        clean.register(getPropsListener.cancel);\n        clean.register(onShippingChangeListener.cancel);\n        clean.register(onApproveListener.cancel);\n        clean.register(onCancelListener.cancel);\n        clean.register(onErrorListener.cancel);\n\n        socket.reconnect();\n\n        return {\n            setProps: setNativeProps,\n            close:    closeNative\n        };\n    });\n\n    const detectAppSwitch = once(({ sessionUID } : {| sessionUID : string |}) => {\n        getLogger().info(`native_detect_app_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n        }).flush();\n\n        return connectNative({ sessionUID }).setProps();\n    });\n\n    const detectWebSwitch = once((fallbackWin : ?CrossDomainWindowType) => {\n        getLogger().info(`native_detect_web_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n        }).flush();\n\n        return fallbackToWebCheckout(fallbackWin);\n    });\n\n    const validate = memoize(() => {\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        });\n    });\n\n    const popup = memoize((url : string) => {\n        const win = window.open(url);\n        clean.register(() => {\n            if (win && !isWindowClosed(win)) {\n                win.close();\n            }\n        });\n\n        return win;\n    });\n\n    const initDirectAppSwitch = ({ sessionUID } : {| sessionUID : string |}) => {\n        const nativeUrl = getNativeUrl({ sessionUID });\n\n        getLogger().info(`native_attempt_appswitch_url_direct`, { url: nativeUrl })\n            .track({\n                [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ATTEMPT_APP_SWITCH\n            }).flush();\n\n        const nativeWin = popup(nativeUrl);\n        const validatePromise = validate();\n        const delayPromise = ZalgoPromise.delay(500);\n\n        const detectWebSwitchListener = listen(nativeWin, getNativeDomain(), POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(nativeWin).then(unresolvedPromise);\n        });\n\n        clean.register(detectWebSwitchListener.cancel);\n\n        return validatePromise.then(valid => {\n            if (!valid) {\n                return delayPromise.then(() => {\n                    if (didAppSwitch(nativeWin)) {\n                        return connectNative({ sessionUID }).close();\n                    }\n                }).then(() => {\n                    return close();\n                });\n            }\n\n            return createOrder().then(() => {\n                if (didAppSwitch(nativeWin)) {\n                    return detectAppSwitch({ sessionUID });\n                } else if (nativeWin) {\n                    return detectWebSwitch(nativeWin);\n                } else {\n                    throw new Error(`No window found`);\n                }\n            }).catch(err => {\n                return connectNative({ sessionUID }).close().then(() => {\n                    throw err;\n                });\n            });\n        });\n    };\n\n    const initPopupAppSwitch = ({ sessionUID } : {| sessionUID : string |}) => {\n        const popupWin = popup(getNativePopupUrl({ sessionUID }));\n\n        const closeListener = onCloseWindow(popupWin, () => {\n            return ZalgoPromise.delay(1000).then(() => {\n                if (!approved && !cancelled && !didFallback) {\n                    return ZalgoPromise.all([\n                        onCancel(),\n                        close()\n                    ]);\n                }\n            }).then(noop);\n        }, 500);\n\n        clean.register(() => {\n            closeListener.cancel();\n        });\n\n        const validatePromise = validate();\n\n        const awaitRedirectListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.AWAIT_REDIRECT, ({ data: { pageUrl } }) => {\n            getLogger().info(`native_post_message_await_redirect`).flush();\n            return validatePromise.then(valid => {\n                if (!valid) {\n                    return close().then(() => {\n                        throw new Error(`Validation failed`);\n                    });\n                }\n\n                return createOrder().then(() => {\n                    const nativeUrl = getNativeUrl({ sessionUID, pageUrl });\n\n                    getLogger().info(`native_attempt_appswitch_url_popup`, { url: nativeUrl })\n                        .track({\n                            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ATTEMPT_APP_SWITCH\n                        }).flush();\n\n                    return { redirectUrl: nativeUrl };\n                });\n            });\n        });\n\n        const detectAppSwitchListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.DETECT_APP_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_app_switch`).flush();\n            return detectAppSwitch({ sessionUID });\n        });\n\n        const onCompleteListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.ON_COMPLETE, () => {\n            getLogger().info(`native_post_message_on_complete`).flush();\n            popupWin.close();\n        });\n\n        const detectWebSwitchListener = listen(popupWin, getNativeDomain(), POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(popupWin);\n        });\n\n        clean.register(awaitRedirectListener.cancel);\n        clean.register(detectAppSwitchListener.cancel);\n        clean.register(onCompleteListener.cancel);\n        clean.register(detectWebSwitchListener.cancel);\n\n        return awaitRedirectListener.then(() => {\n            return promiseOne([\n                detectAppSwitchListener,\n                detectWebSwitchListener\n            ]);\n        });\n    };\n\n    const click = () => {\n        return ZalgoPromise.try(() => {\n            const sessionUID = uniqueID();\n            return useDirectAppSwitch() ? initDirectAppSwitch({ sessionUID }) : initPopupAppSwitch({ sessionUID });\n        }).catch(err => {\n            return close().then(() => {\n                getLogger().error(`native_error`, { err: stringifyError(err) }).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ERROR,\n                    [FPTI_KEY.ERROR_CODE]: 'native_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                }).flush();\n\n                throw err;\n            });\n        });\n    };\n\n    const start = promiseNoop;\n\n    return {\n        click,\n        start,\n        close\n    };\n}\n\nexport const native : PaymentFlow = {\n    name:              'native',\n    setup:             setupNative,\n    isEligible:        isNativeEligible,\n    isPaymentEligible: isNativePaymentEligible,\n    init:              initNative,\n    spinner:           true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { WEB_CHECKOUT_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : SetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props } : IsEligibleOptions) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isPopupBridgePaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl,\n                    native_xo:    '1'\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                if (!payerID && !billingToken) {\n                    throw new Error(`Expected payerID to be passed`);\n                }\n\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    name:              'popup_bridge',\n    setup:             setupPopupBridge,\n    isEligible:        isPopupBridgeEligible,\n    isPaymentEligible: isPopupBridgePaymentEligible,\n    init:              initPopupBridge,\n    spinner:           true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { MenuChoices } from '../types';\nimport type { Payment } from '../payment-flows';\nimport { renderSmartMenu } from '../menu/interface';\n\nimport type { ButtonProps, Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\n\ntype ButtonDropdownProps = {|\n    payment : Payment,\n    props : ButtonProps,\n    components : Components,\n    choices : MenuChoices\n|};\n\nlet smartMenu;\n\nexport function prerenderMenu({ props, components } : {| props : ButtonProps, components : Components |}) {\n    const { clientID } = props;\n    const { Menu } = components;\n\n    if (!clientID) {\n        return;\n    }\n    \n    smartMenu = smartMenu || renderSmartMenu({ clientID, Menu });\n}\n\nexport function renderMenu({ props, payment, components, choices } : ButtonDropdownProps) : ZalgoPromise<void> {\n    const { clientID } = props;\n    const { button, menuToggle } = payment;\n    const { Menu } = components;\n\n    if (!clientID) {\n        throw new Error(`Can not render menu without client id`);\n    }\n\n    smartMenu = smartMenu || renderSmartMenu({ clientID, Menu });\n\n    const verticalOffset = button.getBoundingClientRect().bottom;\n    const loadingTimeout = setTimeout(() => enableLoadingSpinner(button), 50);\n\n    const onFocusFail = () => {\n        if (menuToggle) {\n            const blur = () => {\n                menuToggle.removeEventListener('blur', blur);\n                if (smartMenu) {\n                    smartMenu.hide();\n                }\n            };\n    \n            menuToggle.addEventListener('blur', blur);\n        }\n    };\n\n    return smartMenu.display({\n        clientID,\n        choices,\n        verticalOffset,\n        onFocusFail\n    }).then(() => {\n        disableLoadingSpinner(button);\n    }).finally(() => {\n        clearTimeout(loadingTimeout);\n    });\n}\n\nexport function clearSmartMenu() {\n    smartMenu = null;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { MenuFlowType, MenuFlowProps } from '../types';\n\ntype SmartMenuProps = {|\n    clientID : string,\n    Menu : MenuFlowType,\n    onFocus? : () => void,\n    onFocusFail? : () => void\n|};\n\ntype SmartMenu = {|\n    display : (MenuFlowProps) => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nexport function renderSmartMenu({ clientID, Menu } : SmartMenuProps) : SmartMenu {\n    const { renderTo, updateProps, show, hide } = Menu({ clientID });\n\n    const render = memoize(() => {\n        return renderTo(window.xprops.getParent(), '#smart-menu');\n    });\n\n    const display = ({ choices, verticalOffset, onFocus, onFocusFail }) => {\n        return render().then(() => {\n            return updateProps({\n                clientID,\n                verticalOffset,\n                choices,\n                onFocus,\n                onFocusFail\n            });\n        }).then(() => {\n            return show();\n        });\n    };\n\n    hide();\n    render();\n\n    return { display, hide };\n}\n","/* @flow */\n\nimport { noop, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { checkout, cardFields, native, honey, vaultCapture, walletCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\nimport { sendBeacon, getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION } from '../constants';\n\nimport { type ButtonProps, type Config, type ServiceData, type Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\nimport { renderMenu } from './menu';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    vaultCapture,\n    walletCapture,\n    cardFields,\n    popupBridge,\n    native,\n    checkout,\n    honey\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : {| props : ButtonProps, config : Config, serviceData : ServiceData, components : Components |}) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.isEligible({ props, config, serviceData })\n            ? flow.setup({ props, config, serviceData, components })\n            : null;\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, serviceData } : {| props : ButtonProps, payment : Payment, config : Config, components : Components, serviceData : ServiceData |}) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, config, serviceData }) && flow.isPaymentEligible({ props, payment, config, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n\nconst sendPersonalizationBeacons = (personalization) => {\n    if (personalization && personalization.tagline && personalization.tagline.tracking) {\n        sendBeacon(personalization.tagline.tracking.click);\n    }\n    if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n        sendBeacon(personalization.buttonText.tracking.click);\n    }\n};\n\ntype InitiatePaymentOptions = {|\n    payment : Payment,\n    props : ButtonProps,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiatePaymentFlow({ payment, serviceData, config, components, props } : InitiatePaymentOptions) : ZalgoPromise<void> {\n    const { button, fundingSource, instrumentType } = payment;\n\n    return ZalgoPromise.try(() => {\n        const { personalization, merchantID } = serviceData;\n        const { clientID, onClick, createOrder, env } = props;\n\n        sendPersonalizationBeacons(personalization);\n\n        const { name, init, inline, spinner, updateClientConfig } = getPaymentFlow({ props, payment, config, components, serviceData });\n        const { click = promiseNoop, start, close } = init({ props, config, serviceData, components, payment });\n\n        const clickPromise = ZalgoPromise.try(click);\n        clickPromise.catch(noop);\n\n        getLogger()\n            .info(`button_click`)\n            .info(`button_click_pay_flow_${ name }`)\n            .info(`button_click_fundingsource_${ fundingSource }`)\n            .info(`button_click_instrument_${ instrumentType || 'default' }`)\n            .track({\n                [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_CLICK,\n                [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n                [FPTI_KEY.CHOSEN_FI_TYPE]: instrumentType,\n                [FPTI_KEY.PAYMENT_FLOW]:   name\n            }).flush();\n\n        return ZalgoPromise.hash({\n            valid: onClick ? onClick({ fundingSource }) : true\n        }).then(({ valid }) => {\n            if (!valid) {\n                return;\n            }\n\n            if (spinner) {\n                enableLoadingSpinner(button);\n            }\n\n            const updateClientConfigPromise = createOrder()\n                .then(orderID => {\n                    if (updateClientConfig) {\n                        return updateClientConfig({ orderID, payment });\n                    }\n\n                    // Do not block by default\n                    updateButtonClientConfig({ orderID, fundingSource, inline });\n                }).catch(err => getLogger().error('update_client_config_error', { err: stringifyError(err) }));\n\n            const {\n                intent:   expectedIntent,\n                currency: expectedCurrency\n            } = props;\n\n            const startPromise = ZalgoPromise.try(() => {\n                return updateClientConfigPromise;\n            }).then(() => {\n                return start();\n            });\n\n            const validateOrderPromise = createOrder().then(orderID => {\n                return validateOrder(orderID, { env, clientID, merchantID, expectedCurrency, expectedIntent });\n            });\n\n            return ZalgoPromise.all([\n                clickPromise,\n                startPromise,\n                validateOrderPromise\n            ]).catch(err => {\n                return ZalgoPromise.try(close).then(() => {\n                    throw err;\n                });\n            }).then(noop);\n        });\n\n    }).finally(() => {\n        disableLoadingSpinner(button);\n    });\n}\n\ntype InitiateMenuOptions = {|\n    payment : Payment,\n    props : ButtonProps,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiateMenuFlow({ payment, serviceData, config, components, props } : InitiateMenuOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { fundingSource, button } = payment;\n\n        const { name, setupMenu } = getPaymentFlow({ props, payment, config, components, serviceData });\n\n        if (!setupMenu) {\n            throw new Error(`${ name } does not support menu`);\n        }\n\n        getLogger().info(`menu_click`).info(`pay_flow_${ name }`).track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.MENU_CLICK,\n            [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n            [FPTI_KEY.PAYMENT_FLOW]:   name\n        }).flush();\n\n        const choices = setupMenu({ props, payment, serviceData, components, config }).map(choice => {\n            return {\n                ...choice,\n                onSelect: (...args) => {\n                    if (choice.spinner) {\n                        enableLoadingSpinner(button);\n                    }\n\n                    return ZalgoPromise.try(() => {\n                        return choice.onSelect(...args);\n                    }).then(() => {\n                        if (choice.spinner) {\n                            disableLoadingSpinner(button);\n                        }\n                    });\n                }\n            };\n        });\n\n        return renderMenu({ props, payment, components, choices });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : ?string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nexport const ENV = {\n    LOCAL:      ('local' : 'local'),\n    STAGE:      ('stage' : 'stage'),\n    SANDBOX:    ('sandbox' : 'sandbox'),\n    PRODUCTION: ('production' : 'production'),\n    TEST:       ('test' : 'test')\n};\n","/* @flow */\n\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { stringifyError } from 'belter/src';\n\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FTPI_CUSTOM_KEY } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance } from './types';\n\nconst MESSAGE_SOURCE = {\n    SMART_BUTTON:    'smart_payment_buttons',\n    HONEY_EXTENSION: 'honey_extension'\n};\n\nconst MESSAGE_NAME = {\n    IDENTIFY_EXTENSION: 'identify_extension'\n};\n\nfunction setupHoney() {\n    try {\n        window.top.postMessage(JSON.stringify({\n            message_source: MESSAGE_SOURCE.SMART_BUTTON,\n            message_name:   MESSAGE_NAME.IDENTIFY_EXTENSION\n        }), '*');\n    } catch (err) {\n        getLogger().warn('honey_postmessage_failed', { err: stringifyError(err) });\n    }\n\n    window.addEventListener('message', ({ data }) => {\n        try {\n            data = JSON.parse(data);\n        } catch (err) {\n            return;\n        }\n\n        if (!data) {\n            return;\n        }\n\n        const {\n            message_source,\n            message_name,\n            message_data\n        } = data;\n\n        if (message_source !== MESSAGE_SOURCE.HONEY_EXTENSION) {\n            return;\n        }\n\n        if (message_name === MESSAGE_NAME.IDENTIFY_EXTENSION) {\n            const { device_id, session_id } = message_data;\n\n            getLogger().addTrackingBuilder(() => {\n                return {\n                    [ FTPI_CUSTOM_KEY.HONEY_DEVICE_ID ]:  device_id,\n                    [ FTPI_CUSTOM_KEY.HONEY_SESSION_ID ]: session_id\n                };\n            });\n\n            getLogger().info('identify_honey').track({\n                [ FPTI_KEY.TRANSITION ]: FPTI_TRANSITION.HONEY_IDENTIFY\n            }).flush();\n        }\n    });\n}\n\nfunction isHoneyEligible() : boolean {\n    return true;\n}\n\nfunction isHoneyPaymentEligible() : boolean {\n    return false;\n}\n\nfunction initHoney() : PaymentFlowInstance {\n    throw new Error(`Not Implemented`);\n}\n\nexport const honey : PaymentFlow = {\n    name:              'honey',\n    setup:             setupHoney,\n    isEligible:        isHoneyEligible,\n    isPaymentEligible: isHoneyPaymentEligible,\n    init:              initHoney,\n    inline:            true\n};\n","/* @flow */\n\nimport { onClick as onElementClick, noop, stringifyErrorMessage, stringifyError, preventClickFocus } from 'belter/src';\nimport { COUNTRY, FPTI_KEY, FUNDING, type FundingEligibilityType } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { PersonalizationType, ContentType, Wallet } from '../types';\nimport { getLogger } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES, BUYER_INTENT } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData, type ServerRiskData, type ButtonProps } from './props';\nimport { getSelectedFunding, getButtons } from './dom';\nimport { setupButtonLogger } from './logger';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, initiatePaymentFlow, initiateMenuFlow } from './pay';\nimport { prerenderMenu, clearSmartMenu } from './menu';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken : string,\n    content : ContentType,\n    sdkMeta : string,\n    wallet : ?Wallet,\n    buyerAccessToken : ?string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |},\n    serverRiskData : ?ServerRiskData,\n    correlationID? : string\n|};\n\ntry {\n    if (!window.paypal) {\n        const script = Array.prototype.slice.call(document.querySelectorAll('script')).find(el => el.getAttribute('data-namespace'));\n\n        if (script) {\n            window.paypal = window[script.getAttribute('data-namespace')];\n        }\n    }\n} catch (err) {\n    // pass\n}\n\nexport function setupButton(opts : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const { facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, sdkMeta, buyerAccessToken, wallet, serverRiskData,\n        cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig, content, correlationID: buttonCorrelationID = '' } = opts;\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({\n        eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization,\n        isCardFieldsExperimentEnabled, sdkMeta, buyerAccessToken, wallet, content, serverRiskData });\n    const { merchantID } = serviceData;\n\n    const props = getProps({ facilitatorAccessToken });\n    const { env, sessionID, partnerAttributionID, commit, sdkCorrelationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style, persistRiskData, fundingSource } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n\n    const { initPromise, isEnabled } = onInit({ correlationID: buttonCorrelationID });\n\n    let paymentProcessing = false;\n\n    function initiatePayment({ payment, props: paymentProps } : {| props : ButtonProps, payment : Payment |}) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            const { win, fundingSource: paymentFundingSource } = payment;\n            const { onClick } = paymentProps;\n\n            if (onClick) {\n                onClick({ fundingSource: paymentFundingSource });\n            }\n\n            if (isEnabled()) {\n                paymentProcessing = true;\n\n                return initiatePaymentFlow({ payment, config, serviceData, components, props: paymentProps }).finally(() => {\n                    paymentProcessing = false;\n                });\n            } else  {\n                if (win) {\n                    win.close();\n                }\n            }\n        }).catch(err => {\n            \n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    function initiateMenu({ payment } : {| payment : Payment |}) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            if (isEnabled()) {\n                return initiateMenuFlow({ payment, config, serviceData, components, props });\n            }\n        }).catch(err => {\n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    clearSmartMenu();\n    \n    getButtons().forEach(button => {\n        const menuToggle = button.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`) || (button.parentElement && button.parentElement.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`));\n        const { fundingSource: paymentFundingSource, card, paymentMethodID, instrumentID, instrumentType } = getSelectedFunding(button);\n\n        const payment = { button, menuToggle, fundingSource: paymentFundingSource, card, paymentMethodID, instrumentID, instrumentType, isClick: true, buyerIntent: BUYER_INTENT.PAY };\n\n        preventClickFocus(button);\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const paymentProps = getProps({ facilitatorAccessToken });\n            const payPromise = initiatePayment({ payment, props: paymentProps });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n\n        if (menuToggle) {\n            prerenderMenu({ props, components });\n\n            onElementClick(menuToggle, (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const menuPromise = initiateMenu({ payment });\n\n                // $FlowFixMe\n                button.menuPromise = menuPromise;\n            });\n        }\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource: paymentFundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ paymentFundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            const paymentProps = getProps({ facilitatorAccessToken });\n            const payment = { win, button, fundingSource: paymentFundingSource, card, buyerIntent: BUYER_INTENT.PAY };\n            const payPromise = initiatePayment({ payment, props: paymentProps });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogger({\n        style, env, version, sessionID, clientID, partnerAttributionID, commit, sdkCorrelationID,\n        buttonCorrelationID, locale, merchantID, buttonSessionID, merchantDomain, fundingSource });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n    const setupPersistRiskDataTask = (persistRiskData && serverRiskData) ? persistRiskData(serverRiskData) : null;\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessToken,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask, setupPersistRiskDataTask\n    }).then(noop);\n}\n","/* @flow */\n\nimport { FUNDING, type FundingEligibilityType } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { RememberFunding } from '../props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : {| rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FPTI_KEY, ENV, FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType } from '../types';\nimport { getLogger, setupLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY, FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nfunction getTemplateVersion() : string {\n    const templateVersion = document.body && document.body.getAttribute(`${ DATA_ATTRIBUTES.RENDER_VERSION }`);\n    return (templateVersion || 'unknown').replace(/[^a-zA-Z0-9]+/g, '_');\n}\n\nfunction getClientVersion() : string {\n    const clientVersion = document.body && document.body.getAttribute(`${ DATA_ATTRIBUTES.CLIENT_VERSION }`);\n    return (clientVersion || 'unknown').replace(/[^a-zA-Z0-9]+/g, '_');\n}\n\ntype ButtonLoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    sdkCorrelationID : string,\n    buttonCorrelationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string,\n    style : ButtonStyle,\n    fundingSource : ?$Values<typeof FUNDING>\n|};\n\nexport function setupButtonLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, sdkCorrelationID, buttonCorrelationID, locale, merchantID, merchantDomain, version, style, fundingSource } : ButtonLoggerOptions) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, sdkCorrelationID, locale, merchantID, merchantDomain, version });\n\n    logger.addPayloadBuilder(() => {\n        return {\n            buttonSessionID,\n            buttonCorrelationID\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        return {\n            [FPTI_KEY.STATE]:                        FPTI_STATE.BUTTON,\n            [FPTI_KEY.CONTEXT_TYPE]:                 FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:                   buttonSessionID,\n            [FPTI_KEY.STATE]:                        FPTI_STATE.BUTTON,\n            [FPTI_KEY.BUTTON_SESSION_UID]:           buttonSessionID,\n            [FPTI_KEY.BUTTON_VERSION]:               __SMART_BUTTONS__.__MINOR_VERSION__,\n            [FTPI_BUTTON_KEY.BUTTON_CORRELATION_ID]: buttonCorrelationID\n        };\n    });\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        });\n\n        const walletInstruments = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.INSTRUMENT_TYPE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.INSTRUMENT_TYPE);\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render`);\n        logger.info(`button_render_template_version_${ getTemplateVersion() }`);\n        logger.info(`button_render_client_version_${ getClientVersion() }`);\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n        logger.info(`button_render_funding_count_${ fundingSources.length }`);\n        logger.info(`button_render_wallet_instrument_count_${ walletInstruments.length }`);\n\n        for (const walletInstrument of walletInstruments) {\n            logger.info(`button_render_wallet_instrument_${ walletInstrument }`);\n        }\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FI_LIST]:                       walletInstruments.join(':'),\n            [FPTI_KEY.SELECTED_FI]:                   fundingSource,\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    PAGE_TYPE:              ('pp_placement' : 'pp_placement'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration'),\n    SDK_INTEGRATION_SOURCE: ('sdk_integration_source' : 'sdk_integration_source'),\n    PAYMENT_FLOW:           ('payment_flow' : 'payment_flow'),\n    BUTTON_VERSION:         ('button_version' : 'button_version'),\n    FI_LIST:                ('fi_list' : 'fi_list'),\n    CHOSEN_FI_TYPE:         ('chosen_fi_type' : 'chosen_fi_type'),\n    SELECTED_FI:            ('merchant_selected_funding_source' : 'merchant_selected_funding_source')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n"],"sourceRoot":""}