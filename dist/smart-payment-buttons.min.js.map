{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/config.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/constants.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/api/api.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/props/props.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./src/button/props/onError.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/rememberFunding.js","webpack://spb/./src/button/props/getPageUrl.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/button/pay.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./src/button/menu.js","webpack://spb/./src/button/button.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/menu/interface.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js","webpack://spb/./src/button/props/types.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isAndroid","test","isIos","supportsPopups","isGoogleSearchApp","isIosWebview","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","isChrome","_extends","assign","target","arguments","length","source","apply","this","isPromise","item","Promise","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","isAncestorParent","child","childParent","getParents","getTop","top","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","self","__cross_domain_utils_window_check__","objectIDs","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","uniqueID","chars","replace","charAt","floor","str","btoa","encodeURIComponent","p1","String","fromCharCode","parseInt","Buffer","from","base64encode","Date","toISOString","slice","toLowerCase","serializeArgs","JSON","stringify","Array","subkey","val","uid","getObjectID","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","identity","arrayFrom","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","extendUrl","url","originalUrl","originalHash","query","hashString","redirect","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","isBrowser","querySelectorAll","selector","onClick","element","addEventListener","event","keyCode","PopupOpenError","destroyElement","removeChild","prototype","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","ontimeout","send","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","loadScript","container","head","script","setAttribute","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","httpTransport","extendIfDefined","ORDERS_API_URL","NATIVE_CHECKOUT_URI","NATIVE_CHECKOUT_POPUP_URI","CLIENT_ID_PAYEE_NO_MATCH","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","warning","immediateFlush","meta","builder","req","localPromise","logger","logPayload","timestamp","enqueue","addBuilder","builders","loop","safeInterval","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","enableLoadingSpinner","button","classList","add","disableLoadingSpinner","remove","getNonce","nonce","getAttribute","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","xprops","onInit","enabled","initPromise","isEnabled","callRestAPI","accessToken","requestHeaders","callSmartAPI","reqHeaders","ack","contingency","callGraphQL","variables","errors","GRAPHQL_URI","getFirebaseSessionToken","sessionUID","firebase","auth","sessionToken","patchOrder","orderID","facilitatorAccessToken","buyerAccessToken","partnerAttributionID","forceRestAPI","patchData","isArray","patch","SMART_API_URI","getPayee","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","buttonSessionID","paymentSource","token","id","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","loadFirebaseSDK","config","initializeApp","buildXCreateOrderData","buildOrderActions","intent","currency","merchantID","order","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","createOrderID","buildPaymentActions","payment","expectedIntent","transactions","transaction","redirect_urls","return_url","cancel_url","payer","payment_method","paymentID","createPayment","links","rel","match","createPaymentToken","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createSubscription","createOrder","actions","startTime","duration","getOnApprove","onApprove","capture","authorize","getDefaultOnApprove","upgradeLSAT","payerID","restart","upgradeFacilitatorAccessToken","getSubscriptionApi","getSubscription","activateSubscriptionApi","activateSubscription","handleProcessorError","details","some","detail","issue","getOrder","captureOrder","authorizeOrder","PAYMENTS_API_URL","getPayment","execute","payer_id","executePayment","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","excluded","sourceKeys","CLICK_VALID","VALID","INVALID","buildXOnClickData","fundingSource","buildXOnClickActions","getOnClick","valid","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","subscriptionPayload","revise","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","getCreateSubscription","createSubscriptionFunc","getProps","env","vault","commit","locale","platform","sessionID","clientID","correlationID","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","merchantDomain","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","getConfig","firebaseConfig","cspNonce","serverCSPNonce","version","getServiceData","serverMerchantID","buyerCountry","buyerGeoCountry","fundingEligibility","sdkMeta","personalization","eligibility","getOnError","POPUP_BRIDGE_OPTYPE","PAYMENT","CANCEL","getRememberFunding","getGetPageUrl","renderChildren","children","renderer","renderedChild","render","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ADD_CHILDREN","firstChild","docElement","dom","opts","domRenderer","createTextNode","createTextElement","prop","tagName","addProps","html","ELEMENT_PROP","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","content","class","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","isPaymentEligible","init","initCheckout","serviceData","instance","card","venmoPayloadID","isClick","approved","start","onClose","close","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","onAuth","renderTo","click","assertSameDomain","width","height","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","popup","tag","writeElementToWindow","openPopup","cardFieldsOpen","highlightCard","forEach","opacity","nativeSocket","initialPageUrl","parentPopupBridge","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","cardFields","onCardTypeChange","closeCardFields","marginTop","renderPromise","minHeight","display","recalculateMargin","offsetTop","transitionDuration","slideUpButtons","inline","vaultCapture","link","handleThreeDomainSecure","handleValidateResponse","spinner","getNativeSocket","sourceApp","sourceAppVersion","targetApp","retryDelay","socketPromise","retryPromise","driver","retry","receivedMessages","responseListeners","activeRequests","requestListeners","errorListeners","sendMessage","socket","messageUID","session_uid","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","requestUID","isOpen","request_uid","message_name","message_status","message_type","message_data","connectionPromise","onOpen","errorListener","onMessage","rawMessage","rawData","parsedData","messageSessionUID","messageType","messageData","request_id","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","database","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","isAndroidChrome","didAppSwitch","popupWin","isNativeOptedIn","localStorage","getItem","PAYMENT_FLOWS","bridge","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","pageUrl","nativeCheckout","venmo","cleaned","clean","register","task","pop","listen","postRobot","fallbackToWebCheckout","fallbackWin","checkoutPayment","getNativeUrl","getNativePopupUrl","getWebCheckoutUrl","native_xo","getSDKProps","webCheckoutUrl","forceEligible","connectNative","setNativeProps","sdkProps","closeNative","getPropsListener","onApproveListener","onCancelListener","onErrorListener","setProps","detectAppSwitch","detectWebSwitch","validate","nativeWin","validatePromise","delayPromise","detectWebSwitchListener","awaitRedirectListener","redirectUrl","detectAppSwitchListener","initPopupAppSwitch","smartMenu","setupButton","isCardFieldsExperimentEnabled","referer","lang","country","__SMART_BUTTONS__","setupLogger","paymentProcessing","initiatePayment","decorateCreateOrder","tagline","buttonText","sendPersonalizationBeacons","flow","getPaymentFlow","clickPromise","integrationArtifact","userExperienceFlow","productFlow","cart","checkoutSession","amounts","total","currencyCode","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","validateOrder","initiatePaymentFlow","getSelectedFunding","preventDefault","blur","menuToggle","buttonParent","parentElement","Menu","updateProps","show","hide","choices","verticalOffset","onChoose","renderSmartMenu","onElementClick","stopPropagation","label","useDifferentAccount","deleteVaultedCard","getBoundingClientRect","bottom","loadingTimeout","payInstantlyHeader","renderButtonDropdown","payPromise","setupPrerenderTask","prerenderDetails","setupRememberTask","eligible","setupRemember","setupButtonLogsTask","documentMode","isIEIntranet","domInteractive","pageRenderTime","fundingSources","layout","color","shape","innerWidth","setupButtonLogs","setupPaymentFlowsTask","setupPaymentFlows"],"mappings":"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","file":"smart-payment-buttons.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = __DEBUG__ ? LOG_LEVEL.DEBUG : LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Payload = { [string] : string };\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {|\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n|};\n\ntype ClientPayload = { [string] : ?string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {|\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n|};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    const payloadBuilders : Array<Builder> = [];\n    const metaBuilders : Array<Builder> = [];\n    const trackingBuilders : Array<Builder> = [];\n    const headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(logLevel)) {\n            return;\n        }\n\n        const args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            const meta = {};\n            for (const builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            const headers = {};\n            for (const builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            const req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    const flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        const logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (const builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        const trackingPayload : Payload = objFilter(payload);\n\n        for (const builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            buttonSessionID,\n            sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.BUTTON_SESSION_UID]:     buttonSessionID,\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID,\n            [FPTI_KEY.BUTTON_VERSION]:         __SMART_BUTTONS__.__MINOR_VERSION__\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : { buyerAccessToken : string, orderID : string }) : ZalgoPromise<void> {\n    return callGraphQL({\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : { paymentMethodID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({ data : T }) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => {|\n        cancel : () => void\n    |},\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    onError : ((mixed) => void) => void,\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    let requestListeners = {};\n    let errorListeners = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            session_uid:        sessionUID,\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ messageName, requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID] || {};\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener for ${ messageName } with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        let {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        requestUID = requestUID || parsedData.request_id;\n\n        if (messageUID && receivedMessages[messageUID]) {\n            return;\n        }\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ messageName, requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n\n                    for (const errorListener of errorListeners) {\n                        errorListener(err);\n                    }\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n\n        return {\n            cancel: () => {\n                delete requestListeners[name];\n            }\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        requestListeners = {};\n        errorListeners = [];\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    const onError = (handler) => {\n        errorListeners.push(handler);\n    };\n        \n    return { on, send, onError, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\nexport const loadFirebaseSDK = memoize((config) => {\n    return loadScript(FIREBASE_SCRIPTS.APP).then(() => {\n        return ZalgoPromise.all([\n            loadScript(FIREBASE_SCRIPTS.AUTH),\n            loadScript(FIREBASE_SCRIPTS.DATABASE)\n        ]);\n    }).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.all([\n            loadFirebaseSDK(config),\n            getFirebaseSessionToken(sessionUID)\n        ]).then(([ firebase, sessionToken ]) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                }, err => {\n                    error(err);\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        databasePromise.catch(noop);\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessToken : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, forceRestAPI: false });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n\n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n\n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n\n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\nexport function getCreateOrder(xprops : XProps, { facilitatorAccessToken, createBillingAgreement, createSubscription } : { facilitatorAccessToken : string, createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, buttonSessionID, intent, currency, merchantID, partnerAttributionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: currency,\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.TOKEN]:              orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        },\n        data: {\n            payer_id: payerID\n        }\n    });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `patch`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        data:        patchData,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment, upgradeFacilitatorAccessToken } from '../../api';\nimport { ORDER_API_ERROR, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string,\n    facilitatorAccessToken : string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : string,\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : OrderActions {\n    \n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n    \n    const get = memoize(() => {\n        return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n    });\n\n    const execute = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(execute.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : XOnApproveActionsType {\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID, { buyerAccessToken }));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID, { buyerAccessToken }));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string,\n    buyerAccessToken? : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nfunction getDefaultOnApprove(intent : $Values<typeof INTENT>) : XOnApprove {\n    return (data, actions) => {\n        if (intent === INTENT.CAPTURE) {\n            return actions.order.capture().then(noop);\n        } else if (intent === INTENT.AUTHORIZE) {\n            return actions.order.authorize().then(noop);\n        } else {\n            throw new Error(`Unsupported intent for auto-capture: ${ intent }`);\n        }\n    };\n}\n\nexport function getOnApprove(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : OnApprove {\n    const { intent, onApprove = getDefaultOnApprove(intent), partnerAttributionID, onError, upgradeLSAT = false } = xprops;\n\n    if (!onApprove) {\n        throw new Error(`Expected onApprove`);\n    }\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, forceRestAPI = upgradeLSAT }, { restart }) => {\n        return ZalgoPromise.try(() => {\n            if (upgradeLSAT) {\n                return createOrder().then(orderID => upgradeFacilitatorAccessToken(facilitatorAccessToken, { buyerAccessToken, orderID }));\n            }\n        }).then(() => {\n            return createOrder();\n        }).then(orderID => {\n\n            getLogger()\n                .info('button_approve')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_APPROVE,\n                    [FPTI_KEY.TOKEN]:      orderID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken };\n            const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n            return onApprove(data, actions).catch(err => {\n                return ZalgoPromise.try(() => {\n                    return onError(err);\n                }).then(() => {\n                    throw err;\n                });\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.TOKEN]:      orderID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : { orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, partnerAttributionID } = xprops;\n\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.TOKEN]:      orderID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick | void {\n    const { onClick } = xprops;\n\n    if (!onClick) {\n        return;\n    }\n\n    return memoize(({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID } : { facilitatorAccessToken : string, partnerAttributionID : ?string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createSubscription(facilitatorAccessToken, data, { partnerAttributionID });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return reviseSubscription(facilitatorAccessToken, subscriptionID, data, { partnerAttributionID });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps, { facilitatorAccessToken } : { facilitatorAccessToken : string }) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc, partnerAttributionID } = xprops;\n    if (createSubscriptionFunc) {\n        return () => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { COUNTRY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { FundingEligibilityType, CheckoutFlowType, CardFieldsFlowType, ThreeDomainSecureFlowType, PersonalizationType } from '../../types';\nimport { type FirebaseConfig } from '../../api';\nimport { getNonce } from '../dom';\n\nimport type { XProps, Props } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getProps({ facilitatorAccessToken } : { facilitatorAccessToken : string }) : Props {\n\n    const xprops : XProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        currency\n    } = xprops;\n\n    const onInit = getOnInit(xprops);\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick(xprops);\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops, { facilitatorAccessToken });\n    \n    const createOrder = getCreateOrder(xprops, { facilitatorAccessToken, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { facilitatorAccessToken, createOrder });\n    const onCancel = getOnCancel(xprops, { facilitatorAccessToken, createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { facilitatorAccessToken, createOrder });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n        currency,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure } = paypal;\n    return { Checkout, CardFields, ThreeDomainSecure };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : { serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig }) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const { version } = paypal;\n    \n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    facilitatorAccessToken : string,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [ $Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function getServiceData({ facilitatorAccessToken, sdkMeta, buyerGeoCountry, fundingEligibility, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        sdkMeta,\n        personalization,\n        facilitatorAccessToken,\n        eligibility\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnError = (mixed) => ZalgoPromise<void>;\nexport type OnError = XOnError;\n\nexport function getOnError(xprops : XProps) : OnError {\n    const { onError } = xprops;\n    return onError;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { XProps } from './types';\n\nexport type RememberFunding = ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>;\n\nexport function getRememberFunding(xprops : XProps) : RememberFunding {\n    const { remember } = xprops;\n    return remember;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type GetPageURL = () => ZalgoPromise<string>;\n\nexport function getGetPageUrl(xprops : XProps) : GetPageURL {\n    const { getPageUrl } = xprops;\n    return getPageUrl;\n}\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport type { Props, Components, ServiceData, Config, CreateBillingAgreement, CreateSubscription } from '../button/props';\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { openPopup } from '../ui';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : { components : Components }) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\nfunction isCheckoutPaymentEligible() : boolean {\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : { win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean }) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : { props : Props, components : Components, serviceData : ServiceData, payment : Payment, config : Config }) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { sessionID, buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick } = props;\n    let { button, win, fundingSource, card, isClick, buyerAccessToken, venmoPayloadID } = payment;\n    const { fundingEligibility, buyerCountry } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ props, components, serviceData, config, payment: { button, win, fundingSource, card, isClick: false } })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        if (!approved) {\n            return onCancel();\n        }\n    };\n    \n    const init = () => {\n        return Checkout({\n            window: win,\n            sessionID,\n            buttonSessionID,\n            clientAccessToken,\n            buyerAccessToken,\n            venmoPayloadID,\n    \n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n    \n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n                approved = true;\n                getLogger().info(`spb_onapprove_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n    \n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken }, { restart }).catch(noop);\n                });\n            },\n    \n            onAuth: ({ accessToken }) => {\n                getLogger().info(`spb_onauth_access_token_${ (accessToken || buyerAccessToken)  ? 'present' : 'not_present' }`);\n                if (accessToken) {\n                    buyerAccessToken = accessToken;\n                }\n            },\n    \n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n    \n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n    \n            onError,\n            onClose,\n    \n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce\n        });\n    };\n\n    let instance;\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n    });\n\n    const click = () => {\n        if (!onClick) {\n            start();\n            return;\n        }\n\n        if (supportsPopups()) {\n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n        }\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (win && !valid) {\n                win.close();\n            }\n        });\n    };\n\n    return { click, start, close };\n}\n\nexport const checkout : PaymentFlow = {\n    name:              'checkout',\n    setup:             setupCheckout,\n    isEligible:        isCheckoutEligible,\n    isPaymentEligible: isCheckoutPaymentEligible,\n    init:              initCheckout\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../button/dom';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce, noop } from 'belter/src';\n\nimport type { Props, Config, ServiceData, Components } from '../button/props';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { Payment, PaymentFlow, PaymentFlowInstance } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, serviceData } : { props : Props, serviceData : ServiceData }) : boolean {\n    const { vault, onShippingChange, enableStandardCardFields } = props;\n    const { eligibility } = serviceData;\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields) {\n        return true;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction isCardFieldsPaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, fundingSource } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource && fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : ?$Values<typeof CARD>) {\n    if (!card) {\n        return;\n    }\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : { props : Props, config : Config, components : Components, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, sessionID, buttonSessionID } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart }).catch(noop);\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        sessionID,\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    name:              'card_fields',\n    setup:             setupCardFields,\n    isEligible:        isCardFieldsEligible,\n    isPaymentEligible: isCardFieldsPaymentEligible,\n    init:              initCardFields,\n    inline:            true\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, memoize, stringifyError, isIos, isAndroid,\n    isSafari, isChrome, stringifyErrorMessage, cleanup, once, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { type CrossDomainWindowType, getDomain, isWindowClosed } from 'cross-domain-utils/src';\n\nimport type { Props, Components, Config, ServiceData } from '../button/props';\nimport { NATIVE_CHECKOUT_URI, WEB_CHECKOUT_URI, NATIVE_CHECKOUT_POPUP_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { getLogger, promiseOne } from '../lib';\nimport { USER_ACTION, FPTI_TRANSITION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout';\n\nconst POST_MESSAGE = {\n    AWAIT_REDIRECT:    'awaitRedirect',\n    DETECT_APP_SWITCH: 'detectAppSwitch',\n    DETECT_WEB_SWITCH: 'detectWebSwitch'\n};\n\nconst SOCKET_MESSAGE = {\n    SET_PROPS:  'setProps',\n    GET_PROPS:  'getProps',\n    CLOSE:      'close',\n    ON_APPROVE: 'onApprove',\n    ON_CANCEL:  'onCancel',\n    ON_ERROR:   'onError'\n};\n\nconst NATIVE_DOMAIN = 'https://www.paypal.com';\nconst NATIVE_POPUP_DOMAIN = 'https://ic.paypal.com';\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\ntype NativeConnection = {|\n    setProps : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    return firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n});\n\nfunction isIOSSafari() : boolean {\n    return isIos() && isSafari();\n}\n\nfunction isAndroidChrome() : boolean {\n    return isAndroid() && isChrome();\n}\n\nfunction useDirectAppSwitch() : boolean {\n    return isAndroidChrome();\n}\n\nfunction didAppSwitch(popupWin : ?CrossDomainWindowType) : boolean {\n    return !popupWin || isWindowClosed(popupWin);\n}\n\nfunction isNativeOptedIn({ props } : { props : Props }) : boolean {\n    const { enableNativeCheckout } = props;\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n\n    try {\n        if (window.localStorage.getItem('__native_checkout__')) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nlet sessionUID;\nlet nativeSocket;\nlet initialPageUrl;\n\nfunction isNativeEligible({ props, config, serviceData } : { props : Props, config : Config, serviceData : ServiceData }) : boolean {\n    \n    const { platform, onShippingChange, createBillingAgreement, createSubscription } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (!isIOSSafari() && !isAndroidChrome()) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout.paypal || eligibility.nativeCheckout.venmo) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isNativePaymentEligible({ payment, props, serviceData } : { payment : Payment, props : Props, serviceData : ServiceData }) : boolean {\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (!nativeSocket) {\n        return false;\n    }\n\n    if (!initialPageUrl) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout[fundingSource]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupNative({ config, props } : { config : Config, props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { version, firebase: firebaseConfig } = config;\n        const { getPageUrl } = props;\n\n        sessionUID = uniqueID();\n        nativeSocket = getNativeSocket({\n            sessionUID, firebaseConfig, version\n        });\n\n        nativeSocket.onError(err => {\n            nativeSocket = null;\n            getLogger().error('native_socket_error', { err: stringifyError(err) });\n        });\n\n        return getPageUrl().then(pageUrl => {\n            initialPageUrl = pageUrl;\n        });\n    });\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    webCheckoutUrl : string,\n    stageHost : ?string,\n    apiStageHost : ?string,\n    forceEligible : boolean\n|};\n\nfunction initNative({ props, components, config, payment, serviceData } : { props : Props, components : Components, config : Config, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, getPageUrl,\n        buttonSessionID, env, stageHost, apiStageHost, onClick } = props;\n    const { facilitatorAccessToken, sdkMeta } = serviceData;\n    const { fundingSource } = payment;\n\n    const clean = cleanup();\n\n    const close = memoize(() => {\n        return clean.all();\n    });\n\n    const listen = (popupWin, domain, event, handler) =>\n        paypal.postRobot.once(event, { window: popupWin, domain }, handler);\n\n    const fallbackToWebCheckout = (fallbackWin? : ?CrossDomainWindowType) => {\n        const checkoutPayment = { ...payment, win: fallbackWin, isClick: false };\n        const instance = checkout.init({ props, components, payment: checkoutPayment, config, serviceData });\n        clean.register(() => instance.close());\n        return instance.start();\n    };\n\n    const getNativeUrl = memoize(({ pageUrl = initialPageUrl } = {}) : string => {\n        return extendUrl(`${ NATIVE_DOMAIN }${ NATIVE_CHECKOUT_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, pageUrl }\n        });\n    });\n\n    const getNativePopupUrl = memoize(() : string => {\n        return extendUrl(`${ NATIVE_POPUP_DOMAIN }${ NATIVE_CHECKOUT_POPUP_URI[fundingSource] }`, {\n            query: { sdkMeta }\n        });\n    });\n\n    const getWebCheckoutUrl = memoize(({ orderID }) : string => {\n        return extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n            query: {\n                fundingSource,\n                facilitatorAccessToken,\n                token:         orderID,\n                useraction:    commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                native_xo:     '1'\n            }\n        });\n    });\n\n    const getSDKProps = memoize(() : ZalgoPromise<NativeSDKProps> => {\n        return ZalgoPromise.hash({\n            orderID: createOrder(),\n            pageUrl: getPageUrl()\n        }).then(({ orderID, pageUrl }) => {\n            const userAgent = getUserAgent();\n            const webCheckoutUrl = getWebCheckoutUrl({ orderID });\n            const forceEligible = isNativeOptedIn({ props });\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit, webCheckoutUrl,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost, forceEligible\n            };\n        });\n    });\n\n    const connectNative = memoize(() : NativeConnection => {\n        const socket = nativeSocket;\n\n        if (!socket) {\n            throw new Error(`Native socket connection not established`);\n        }\n\n        const setNativeProps = memoize(() => {\n            return getSDKProps().then(sdkProps => {\n                getLogger().info(`native_message_setprops`).flush();\n                return socket.send(SOCKET_MESSAGE.SET_PROPS, sdkProps);\n            }).then(() => {\n                getLogger().info(`native_response_setprops`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_APP_SWITCH_ACK\n                }).flush();\n            });\n        });\n\n        const closeNative = memoize(() => {\n            getLogger().info(`native_message_close`).flush();\n            return socket.send(SOCKET_MESSAGE.CLOSE).then(() => {\n                getLogger().info(`native_response_close`).flush();\n                return close();\n            });\n        });\n\n        const getPropsListener = socket.on(SOCKET_MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            getLogger().info(`native_message_getprops`).flush();\n            return getSDKProps();\n        });\n\n        const onApproveListener = socket.on(SOCKET_MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            getLogger().info(`native_message_onapprove`).flush();\n            const data = { payerID, paymentID, billingToken, forceRestAPI: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return ZalgoPromise.all([\n                onApprove(data, actions),\n                close()\n            ]).then(noop);\n        });\n\n        const onCancelListener = socket.on(SOCKET_MESSAGE.ON_CANCEL, () => {\n            getLogger().info(`native_message_oncancel`).flush();\n            return ZalgoPromise.all([\n                onCancel(),\n                close()\n            ]).then(noop);\n        });\n\n        const onErrorListener = socket.on(SOCKET_MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            getLogger().info(`native_message_onerror`, { err: message }).flush();\n            return ZalgoPromise.all([\n                onError(new Error(message)),\n                close()\n            ]).then(noop);\n        });\n\n        clean.register(getPropsListener.cancel);\n        clean.register(onApproveListener.cancel);\n        clean.register(onCancelListener.cancel);\n        clean.register(onErrorListener.cancel);\n\n        socket.reconnect();\n        \n        return {\n            setProps: setNativeProps,\n            close:    closeNative\n        };\n    });\n\n    const detectAppSwitch = once(() => {\n        getLogger().info(`native_detect_app_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n        }).flush();\n\n        return connectNative().setProps();\n    });\n\n    const detectWebSwitch = once((fallbackWin : ?CrossDomainWindowType) => {\n        getLogger().info(`native_detect_web_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n        }).flush();\n\n        return fallbackToWebCheckout(fallbackWin);\n    });\n\n    const validate = memoize(() => {\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        });\n    });\n\n    const popup = memoize((url : string) => {\n        const win = window.open(url);\n\n        clean.register(() => {\n            if (win && !isWindowClosed(win)) {\n                win.close();\n            }\n        });\n\n        return win;\n    });\n\n    const initDirectAppSwitch = () => {\n        const nativeWin = popup(getNativeUrl());\n        const validatePromise = validate();\n        const delayPromise = ZalgoPromise.delay(500);\n\n        const detectWebSwitchListener = listen(nativeWin, NATIVE_DOMAIN, POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(nativeWin);\n        });\n\n        clean.register(detectWebSwitchListener.cancel);\n\n        return validatePromise.then(valid => {\n            if (!valid) {\n                return delayPromise.then(() => {\n                    if (didAppSwitch(nativeWin)) {\n                        return connectNative().close();\n                    }\n                }).then(() => {\n                    return close();\n                });\n            }\n\n            return createOrder().then(() => {\n                if (didAppSwitch(nativeWin)) {\n                    return detectAppSwitch();\n                } else if (nativeWin) {\n                    return detectWebSwitch(nativeWin);\n                } else {\n                    throw new Error(`No window found`);\n                }\n            }).catch(err => {\n                return connectNative().close().then(() => {\n                    throw err;\n                });\n            });\n        });\n    };\n\n    const initPopupAppSwitch = () => {\n        const popupWin = popup(getNativePopupUrl());\n        const validatePromise = validate();\n\n        const awaitRedirectListener = listen(popupWin, NATIVE_POPUP_DOMAIN, POST_MESSAGE.AWAIT_REDIRECT, ({ data: { pageUrl } }) => {\n            getLogger().info(`native_post_message_await_redirect`).flush();\n            return validatePromise.then(valid => {\n                if (!valid) {\n                    return close().then(() => {\n                        throw new Error(`Validation failed`);\n                    });\n                }\n\n                return createOrder().then(() => {\n                    return { redirectUrl: getNativeUrl({ pageUrl }) };\n                });\n            });\n        });\n\n        const detectAppSwitchListener = listen(popupWin, NATIVE_POPUP_DOMAIN, POST_MESSAGE.DETECT_APP_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_app_switch`).flush();\n            return detectAppSwitch();\n        });\n\n        const detectWebSwitchListener = listen(popupWin, NATIVE_DOMAIN, POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(popupWin);\n        });\n\n        clean.register(awaitRedirectListener.cancel);\n        clean.register(detectAppSwitchListener.cancel);\n        clean.register(detectWebSwitchListener.cancel);\n\n        return awaitRedirectListener.then(() => {\n            return promiseOne([\n                detectAppSwitchListener,\n                detectWebSwitchListener\n            ]);\n        });\n    };\n\n    const click = () => {\n        return ZalgoPromise.try(() => {\n            return useDirectAppSwitch() ? initDirectAppSwitch() : initPopupAppSwitch();\n        }).catch(err => {\n            return close().then(() => {\n                getLogger().error(`native_error`, { err: stringifyError(err) }).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ERROR,\n                    [FPTI_KEY.ERROR_CODE]: 'native_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                }).flush();\n\n                throw err;\n            });\n        });\n    };\n\n    const start = memoize(() => {\n        // pass\n    });\n\n    return {\n        click,\n        start,\n        close\n    };\n}\n\nexport const native : PaymentFlow = {\n    name:              'native',\n    setup:             setupNative,\n    isEligible:        isNativeEligible,\n    isPaymentEligible: isNativePaymentEligible,\n    init:              initNative,\n    spinner:           true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { WEB_CHECKOUT_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE, type Props } from '../button/props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : { props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isPopupBridgePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : { props : Props, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    name:              'popup_bridge',\n    setup:             setupPopupBridge,\n    isEligible:        isPopupBridgeEligible,\n    isPaymentEligible: isPopupBridgePaymentEligible,\n    init:              initPopupBridge,\n    spinner:           true\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ThreeDomainSecureFlowType } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, Props, Components } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isVaultCapturePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, paymentMethodID } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment } : { props : Props, components : Components, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken,\n        enableThreeDomainSecure, buttonSessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { paymentMethodID } = payment;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const vaultCapture : PaymentFlow = {\n    name:              'vault_capture',\n    setup:             setupVaultCapture,\n    isEligible:        isVaultCaptureEligible,\n    isPaymentEligible: isVaultCapturePaymentEligible,\n    init:              initVaultCapture,\n    spinner:           true,\n    inline:            true\n};\n","/* @flow */\n\nimport { noop, identity, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { checkout, cardFields, native, vaultCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\nimport { sendBeacon, getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION } from '../constants';\n\nimport { type Props, type Config, type ServiceData, type Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    vaultCapture,\n    cardFields,\n    popupBridge,\n    native,\n    checkout\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : { props : Props, config : Config, serviceData : ServiceData, components : Components }) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.isEligible({ props, config, serviceData, components })\n            ? flow.setup({ props, config, serviceData, components })\n            : null;\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, components, serviceData } : { props : Props, payment : Payment, config : Config, components : Components, serviceData : ServiceData }) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, config, components, serviceData }) && flow.isPaymentEligible({ props, payment, config, components, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n\nconst sendPersonalizationBeacons = (personalization) => {\n    if (personalization && personalization.tagline && personalization.tagline.tracking) {\n        sendBeacon(personalization.tagline.tracking.click);\n    }\n    if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n        sendBeacon(personalization.buttonText.tracking.click);\n    }\n};\n\ntype InitiatePaymentType = {|\n    payment : Payment,\n    props : Props,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiatePaymentFlow({ payment, serviceData, config, components, props } : InitiatePaymentType) : ZalgoPromise<void> {\n    const { button, fundingSource, decorateCreateOrder = identity } = payment;\n\n    return ZalgoPromise.try(() => {\n        const { personalization, merchantID } = serviceData;\n        let { clientID, onClick, createOrder } = props;\n\n        createOrder = decorateCreateOrder(createOrder);\n\n        sendPersonalizationBeacons(personalization);\n\n        const { name, init, inline, spinner } = getPaymentFlow({ props, payment, config, components, serviceData });\n        const { click = promiseNoop, start, close } = init({ props, config, serviceData, components, payment });\n\n        const clickPromise = ZalgoPromise.try(click);\n        clickPromise.catch(noop);\n\n        getLogger().info(`button_click`).info(`pay_flow_${ name }`).track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n            [FPTI_KEY.PAYMENT_FLOW]:   name\n        }).flush();\n\n        return ZalgoPromise.hash({\n            valid: onClick ? onClick({ fundingSource }) : true\n        }).then(({ valid }) => {\n            if (!valid) {\n                return;\n            }\n\n            if (spinner) {\n                enableLoadingSpinner(button);\n            }\n\n            createOrder()\n                .then(orderID => updateButtonClientConfig({ orderID, fundingSource, inline }))\n                .catch(err => getLogger().error('update_client_config_error', { err: stringifyError(err) }));\n\n            return ZalgoPromise.try(start)\n                .then(() => createOrder())\n                .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                .then(() => clickPromise)\n                .catch(err => {\n                    return ZalgoPromise.all([\n                        close(),\n                        ZalgoPromise.reject(err)\n                    ]);\n                }).then(noop);\n        });\n\n    }).finally(() => {\n        disableLoadingSpinner(button);\n    });\n}\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nimport { onClick as onElementClick, destroyElement, memoize } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ContentType } from '../types';\nimport { renderSmartMenu } from '../menu/interface';\nimport { CHECKOUT_POPUP_DIMENSIONS, type Payment } from '../payment-flows';\nimport { deleteVault, validatePaymentMethod } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\n\nimport { type Props } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\n\nconst MENU_CHOICE = {\n    DELETE_VAULT:            'DELETE_VAULT',\n    SELECT_FUNDING_SHIPPING: 'SELECT_FUNDING_SHIPPING',\n    CHANGE_ACCOUNT:          'CHANGE_ACCOUNT'\n};\n\nconst popup = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\ntype ButtonDropdownProps = {|\n    payment : Payment,\n    props : Props,\n    content : ContentType,\n    initiatePayment : ({ payment : Payment }) => ZalgoPromise<void>\n|};\n\nlet smartMenu;\n\nexport function renderButtonDropdown({ props, payment, content, initiatePayment } : ButtonDropdownProps) {\n    const { clientID, clientAccessToken, enableThreeDomainSecure, buttonSessionID, partnerAttributionID } = props;\n    const { button, fundingSource, paymentMethodID } = payment;\n    const menuToggle = button.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`);\n\n    const buttonParent = button.parentElement;\n\n    if (clientID && buttonParent && menuToggle && paymentMethodID && clientAccessToken) {\n        smartMenu = smartMenu || renderSmartMenu({ clientID });\n\n        onElementClick(menuToggle, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const PAYPAL_CHOICES = [\n                /*\n                {\n                    id:    MENU_CHOICE.SELECT_FUNDING_SHIPPING,\n                    label: content.chooseCardOrShipping,\n                    popup\n                },\n                */\n                {\n                    id:    MENU_CHOICE.CHANGE_ACCOUNT,\n                    label: content.useDifferentAccount,\n                    popup\n                } /* ,\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedAccount\n                }\n                */\n            ];\n\n            const CARD_CHOICES = [\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedCard\n                }\n            ];\n\n            const choices = (fundingSource === FUNDING.PAYPAL)\n                ? PAYPAL_CHOICES\n                : CARD_CHOICES;\n\n            const verticalOffset = button.getBoundingClientRect().bottom;\n            const loadingTimeout = setTimeout(() => enableLoadingSpinner(button), 50);\n\n            smartMenu.display({\n                choices,\n                verticalOffset,\n                onChoose: ({ id, win }) => {\n                    if (id === MENU_CHOICE.CHANGE_ACCOUNT) {\n                        return initiatePayment({ payment: { ...payment, win } });\n\n                    } else if (id === MENU_CHOICE.DELETE_VAULT) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not delete vault without client access token and payment method id`);\n                        }\n\n                        enableLoadingSpinner(button);\n                        return deleteVault({ paymentMethodID, clientAccessToken }).then(() => {\n                            disableLoadingSpinner(button);\n                            destroyElement(button);\n\n                            if (buttonParent.querySelectorAll(`[${ DATA_ATTRIBUTES.PAYMENT_METHOD_ID }]`).length === 0) {\n                                const payInstantlyHeader = buttonParent.querySelector('.paypal-vault-header');\n                                if (payInstantlyHeader) {\n                                    destroyElement(payInstantlyHeader);\n                                }\n                            }\n                        });\n\n                    } else if (id === MENU_CHOICE.SELECT_FUNDING_SHIPPING) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not change funding or shipping without client access token and payment method id`);\n                        }\n\n                        const decorateCreateOrder = (createOrder) => {\n                            return memoize(() => {\n                                return createOrder().then(orderID => {\n                                    return validatePaymentMethod({\n                                        clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID\n                                    }).then(({ status }) => {\n                                        if (status !== 200) {\n                                            throw new Error(`Validate payment failed with status: ${ status }`);\n                                        }\n\n                                        return orderID;\n                                    });\n                                });\n                            });\n                        };\n\n                        return initiatePayment({ payment: { ...payment, win, decorateCreateOrder } });\n                    }\n                }\n            }).then(() => {\n                clearTimeout(loadingTimeout);\n                disableLoadingSpinner(button);\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop, stringifyErrorMessage, stringifyError } from 'belter/src';\nimport { COUNTRY, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, PersonalizationType, ContentType } from '../types';\nimport { setupLogger, fixClickFocus, getLogger } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData } from './props';\nimport { getSelectedFunding, getButtons } from './dom';\nimport { setupButtonLogs } from './logs';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, initiatePaymentFlow } from './pay';\nimport { renderButtonDropdown } from './menu';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken : string,\n    content : ContentType,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function setupButton(opts : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const { facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, content, sdkMeta,\n        cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig } = opts;\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({ eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization, isCardFieldsExperimentEnabled, sdkMeta });\n    const { merchantID } = serviceData;\n\n    let props = getProps({ facilitatorAccessToken });\n    const { env, sessionID, partnerAttributionID, commit, correlationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n    \n    setupLogger({ env, version, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    const { initPromise, isEnabled } = onInit();\n\n    let paymentProcessing = false;\n\n    function initiatePayment({ payment } : { payment : Payment }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            props = getProps({ facilitatorAccessToken });\n\n            const { win, fundingSource } = payment;\n            const { onClick } = props;\n\n            if (onClick) {\n                onClick({ fundingSource });\n            }\n\n            if (isEnabled()) {\n                paymentProcessing = true;\n\n                return initiatePaymentFlow({ payment, config, serviceData, components, props }).finally(() => {\n                    paymentProcessing = false;\n                });\n            } else  {\n                if (win) {\n                    win.close();\n                }\n            }\n        }).catch(err => {\n            \n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n        const payment = { button, fundingSource, card, paymentMethodID, isClick: true };\n        \n        fixClickFocus(button);\n        renderButtonDropdown({ props, payment, content, initiatePayment });\n        \n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            \n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            const payment = { win, button, fundingSource, card };\n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogs({ style });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessToken,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask\n    }).then(noop);\n}\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration'),\n    SDK_INTEGRATION_SOURCE: ('sdk_integration_source' : 'sdk_integration_source'),\n    PAYMENT_FLOW:           ('payment_flow' : 'payment_flow'),\n    BUTTON_VERSION:         ('button_version' : 'button_version')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : { orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : ?string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = intent;\n        const expectedCurrency = currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (clientID && CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { ProxyWindow } from '../types';\n\ntype SmartMenuProps = {|\n    clientID : string\n|};\n\ntype SmartMenu = {|\n    display : ({\n        verticalOffset : number,\n        choices : $ReadOnlyArray<{|\n            id : string,\n        label : string,\n        popup? : {\n            width : number,\n            height : number\n        }\n            |}>,\n        onChoose : ({|\n            id : string,\n            win : ?ProxyWindow\n                |}) => void\n    }) => ZalgoPromise<void>\n|};\n\nexport function renderSmartMenu({ clientID } : SmartMenuProps) : SmartMenu {\n\n    const { Menu } = paypal;\n\n    if (!Menu) {\n        throw new Error(`Menu component not found`);\n    }\n\n    const { renderTo, updateProps, show, hide } = Menu({ clientID });\n\n    const render = memoize(() => {\n        return renderTo(window.xprops.getParent(), '#smart-menu');\n    });\n\n    const display = ({ choices, verticalOffset, onChoose }) => {\n        return render().then(() => {\n            return updateProps({\n                verticalOffset,\n                choices,\n                onChoose: ({ id, win }) => {\n                    hide();\n                    return onChoose({ id, win });\n                }\n            });\n        }).then(() => {\n            return show();\n        });\n    };\n\n    hide();\n    render();\n\n    return { display };\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\n\nimport type { RememberFunding } from './props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : { rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nexport function setupButtonLogs({ style } : { style : ButtonStyle }) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\nimport type { RememberFunding } from './rememberFunding';\nimport type { GetPageURL } from './getPageUrl';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    upgradeLSAT? : boolean,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type Props = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    enableStandardCardFields : ?boolean,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange\n|};\n"],"sourceRoot":""}