{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/socket.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/config.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/index.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/button/props/rememberFunding.js","webpack://spb/./src/button/props/getPageUrl.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/button/button.js","webpack://spb/./src/payment-flows/vault.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","MERCHANT_EMAIL_HASH","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","MERCHANT_DOMAIN","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","SDK_CACHE","SDK_LOAD_TIME","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","PLATFORM","DESKTOP","MOBILE","FUNDING","PAYPAL","VENMO","ITAU","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","VERKKOPANKKI","PAYU","ZIMPLER","WECHATPAY","SMART_BUTTONS","SMART_PAYMENT_BUTTONS","HEADERS","AUTHORIZATION","ACCESS_TOKEN","CSRF_TOKEN","SOURCE","REQUESTED_BY","CLIENT_METADATA_ID","PAYPAL_DEBUG_ID","DATA_ATTRIBUTES","FUNDING_SOURCE","PAYMENT_METHOD_ID","CLASS","LOADING","CLICKED","ORDER_API_ERROR","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","CONTEXT","IFRAME","POPUP","TARGET_ELEMENT","BODY","INTEGRATION_ARTIFACT","PAYPAL_JS_SDK","USER_EXPERIENCE_FLOW","INCONTEXT","INLINE","DOM_EVENT","MOUSEDOWN","HOVER","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","BUTTON_SESSION_ID","ORDER_ID","FPTI_STATE","BUTTON","FPTI_TRANSITION","BUTTON_LOAD","BUTTON_CLICK","CREATE_ORDER","RECEIVE_ORDER","CHECKOUT_SHIPPING_CHANGE","CHECKOUT_AUTHORIZE","CHECKOUT_CANCEL","FPTI_BUTTON_TYPE","FTPI_BUTTON_KEY","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","BUTTON_TAGLINE_ENABLED","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","this","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","getUserAgent","navigator","mockUserAgent","userAgent","isOperaMini","ua","isIEIntranet","document","documentMode","status","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","objectIDs","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","slice","toLowerCase","serializeArgs","JSON","stringify","Array","subkey","val","obj","uid","getObjectID","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","arguments","reset","displayName","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","promiseDebounce","localPromise","safeInterval","loop","debounce","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","extendUrl","url","originalUrl","originalHash","query","hashString","redirect","win","location","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","addEventListener","event","keyCode","prototype","CONTENT_TYPE","ACCEPT","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","ontimeout","send","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","fixClickFocus","el","classList","add","contains","preventDefault","blur","remove","redirectTop","top","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","target","source","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","buttonSessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","merchantDomain","referer","host","lang","country","paypal","version","MESSAGE_TYPE","REQUEST","RESPONSE","RESPONSE_STATUS","SUCCESS","messageSocket","sessionUID","driver","sourceApp","sourceAppVersion","targetApp","socketPromise","receivedMessages","requestListeners","responseListeners","onOpen","onMessage","rawData","parsedData","messageSessionUID","session_uid","requestUID","request_uid","messageUID","message_uid","messageName","message_name","messageType","message_type","messageData","message_data","messageTargetApp","target_app","sendResponse","responseStatus","responseData","responseMessageUID","response","message_status","source_app","source_app_version","socket","requestListener","responseListener","onClose","on","webSocket","WebSocket","onmessage","onerror","onopen","onclose","httpSocket","onMessageHandlers","onErrorHandlers","onOpenHandlers","isOpen","errDelay","fullURL","poll","messages","isArray","AUTH_API_URL","ORDERS_API_URL","CREATE_SUBSCRIPTIONS_API_URL","VALIDATE_PAYMENT_METHOD_API","SMART_API_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","PAYMENT","SUBSCRIPTION","GRAPHQL_URI","EXPERIENCE_URI","NATIVE_WEBSOCKET_URL","HTTP_SOCKET_URL","CLIENT_ID_PAYEE_NO_MATCH","createAccessToken","basicAuth","Authorization","grant_type","access_token","createOrderID","order","facilitatorAccessToken","callRestAPI","accessToken","orderID","id","getOrder","buyerAccessToken","callSmartAPI","captureOrder","authorizeOrder","patchOrder","patchData","patch","getPayee","VALIDATE_CONTINGENCIES","THREE_DOMAIN_SECURE","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","paymentSource","token","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","enableVault","callGraphQL","variables","updateClientConfig","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createSubscription","subscriptionPayload","reviseSubscription","activateSubscription","getSubscription","_extends","assign","requestHeaders","reqHeaders","ack","contingency","errors","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","getTop","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","allowMock","closed","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","__cross_domain_utils_window_check__","getButtons","getSelectedFunding","button","getAttribute","card","enableLoadingSpinner","disableLoadingSpinner","getNonce","nonce","POPUP_BRIDGE_OPTYPE","CANCEL","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","xprops","onInit","enabled","initPromise","isEnabled","buildXCreateOrderData","buildCreateOrder","intent","currency","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createOrder","actions","getOnApprove","onApprove","payerID","paymentID","restart","handleProcessorError","details","some","detail","issue","capture","authorize","getSubscriptionApi","activateSubscriptionApi","subscription","activate","match","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnClickData","buildXOnClickActions","getOnClick","valid","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","revise","getCreateSubscription","createSubscriptionFunc","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","excluded","sourceKeys","getGlobalProps","cspNonce","vault","platform","getParentDomain","buyerCountry","buyerGeoCountry","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","getButtonCallbackProps","checkoutOpen","canRenderTop","initCheckout","fundingEligibility","validationPromise","approved","start","facilitatorAccessTokenPromise","Checkout","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","closeCheckout","onAuth","close","triggerError","renderPromise","renderTo","getRenderWindow","cardFieldsOpen","highlightCard","forEach","opacity","popupBridge","nativeWebSocket","nativeHttpSocket","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","slideUpButtons","minHeight","display","recalculateMargin","marginTop","offsetTop","transitionDuration","slideDownButtons","SOURCE_APP","SOURCE_APP_VERSION","TARGET_APP","MESSAGE","DETECT_APP","GET_PROPS","ON_APPROVE","ON_CANCEL","ON_ERROR","isNativeCheckoutInstalled","useNativeWebSocket","getNativeSocket","socketParams","setupButton","serverCSPNonce","personalization","isCardFieldsExperimentEnabled","buttonProcessing","pay","isCardFields","isCardFieldsEligible","isVaultCapture","isVaultCaptureEligible","isPopupBridge","isPopupBridgeEligible","isNative","isNativeEligible","isCheckout","links","link","rel","instance","ThreeDomainSecure","handleThreeDomainSecure","handleValidateResponse","initVault","CardFields","onCardTypeChange","render","closeCardFields","initCardFields","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","initPopupBridge","orderPromise","pageUrlPromise","pageUrl","initNative","updateButtonClientConfig","cart","checkoutSession","amounts","total","currencyCode","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","validateOrder","onElementClick","stopPropagation","payPromise","tagline","click","setupPrerenderTask","prerenderDetails","setupRememberTask","venmo","eligible","setupRemember","setupButtonLogsTask","pageRenderTime","fundingSources","layout","color","shape","label","innerWidth","setupButtonLogs","setupCheckoutFlow","tasks","canRenderTo","setupCheckout","setupPopupBridgeFlow","bridge","setupPopupBridge","setupNativeFlow","setupNative"],"mappings":"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","file":"smart-payment-buttons.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    NAMESPACE:              ('data-namespace' : 'data-namespace'),\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce'),\n    ENABLE_3DS:             ('data-enable-3ds' : 'data-enable-3ds')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:           ('client-id' : 'client-id'),\n    MERCHANT_ID:         ('merchant-id' : 'merchant-id'),\n    MERCHANT_EMAIL_HASH: ('merchant-email-hash' : 'merchant-email-hash'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n\nexport const PROTOCOL = {\n    HTTP:  ('http' : 'http'),\n    HTTPS: ('https' : 'https')\n};\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_AUTHORIZE:       ('process_checkout_authorize' : 'process_checkout_authorize'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            window.paypal.version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, uniqueID, once } from 'belter/src';\n\nimport { sleep } from './util';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    open : () => void,\n    send : (string) => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({ data : T }) => ZalgoPromise<R> | R // eslint-disable-line no-undef\n    ) => void,\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T // eslint-disable-line no-undef\n    ) => ZalgoPromise<R> // eslint-disable-line no-undef\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp } : MessageSocketOptions) : MessageSocket {\n    \n    const socketPromise = new ZalgoPromise();\n\n    const receivedMessages = {};\n    const requestListeners = {};\n    const responseListeners = {};\n\n    driver.open();\n\n    driver.onOpen(() => {\n        socketPromise.resolve(driver);\n    });\n\n    driver.onMessage(<T>(rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n        \n        const {\n            session_uid:  messageSessionUID,\n            request_uid:  requestUID,\n            message_uid:  messageUID,\n            message_name: messageName,\n            message_type: messageType,\n            message_data: messageData,\n            target_app:   messageTargetApp\n        } = parsedData;\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        if (receivedMessages[messageUID] || messageTargetApp !== sourceApp) {\n            return;\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            \n            const sendResponse = <R>({ responseStatus, responseData } : { responseStatus : $Values<typeof RESPONSE_STATUS>, responseData : R }) => {\n                const responseMessageUID = uniqueID();\n                \n                const response : ResponseMessage<R> = {\n                    session_uid:        messageSessionUID,\n                    request_uid:        requestUID,\n                    message_uid:        responseMessageUID,\n                    message_name:       messageName,\n                    message_status:     responseStatus,\n                    message_type:       MESSAGE_TYPE.RESPONSE,\n                    message_data:       responseData,\n                    source_app:         sourceApp,\n                    source_app_version: sourceAppVersion,\n                    target_app:         targetApp\n                };\n\n                return socketPromise.then(socket => {\n                    return socket.send(JSON.stringify(response, null, 4));\n                });\n            };\n\n            ZalgoPromise.try(() => {\n                const requestListener = requestListeners[messageName];\n\n                if (!requestListener) {\n                    throw new Error(`No listener found for name: ${ messageName }`);\n                }\n\n                if (messageSessionUID !== sessionUID) {\n                    throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n                }\n\n                return requestListener({ data: messageData });\n            }).then(res => {\n                sendResponse({ responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res });\n            }, err => {\n                const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n                sendResponse({ responseStatus: RESPONSE_STATUS.ERROR, responseData: res });\n            });\n\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            const responseListener = responseListeners[requestUID];\n            const {\n                message_status: responseStatus\n            } = parsedData;\n\n            if (!responseListener) {\n                throw new Error(`Could not find response listener with id: ${ requestUID }`);\n            }\n\n            delete responseListeners[requestUID];\n\n            if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n                responseListener.resolve({ data: messageData });\n            } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n                responseListener.reject(new Error(messageData.message));\n            } else {\n                throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n            }\n            \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    });\n\n    driver.onClose(err => {\n        socketPromise.asyncReject(err);\n    });\n\n    driver.onError(err => {\n        socketPromise.asyncReject(err);\n    });\n\n    const on = (name, handler) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = handler;\n    };\n\n    const send = <T, R>(messageName, messageData : T) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n            const messageUID = uniqueID();\n\n            const message : RequestMessage<T> = {\n                request_uid:        requestUID,\n                message_uid:        messageUID,\n                message_name:       messageName,\n                message_type:       MESSAGE_TYPE.REQUEST,\n                message_data:       messageData,\n                source_app:         sourceApp,\n                source_app_version: sourceAppVersion,\n                target_app:         targetApp\n            };\n\n            const responseListener = new ZalgoPromise();\n            responseListeners[requestUID] = responseListener;\n\n            socket.send(JSON.stringify(message));\n\n            return responseListener;\n        });\n    };\n\n    return { on, send };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    let socket;\n\n    const driver = {\n        open: () => {\n            socket = new WebSocket(url);\n        },\n        send: (data) => {\n            socket.send(data);\n        },\n        onMessage: (handler) => {\n            socket.onmessage = (event) => {\n                const data = event.data;\n\n                if (typeof data !== 'string' || !data) {\n                    throw new TypeError(`Expected string data from web socket`);\n                }\n\n                handler(data);\n            };\n        },\n        onError: (handler) => {\n            socket.onerror = () => {\n                handler(new Error(`The socket encountered an error`));\n            };\n        },\n        onOpen: (handler) => {\n            socket.onopen = () => handler();\n        },\n        onClose: (handler) => {\n            socket.onclose = () => handler(new Error(`Websocket connection closed`));\n        }\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport function httpSocket({ url, sourceApp, sourceAppVersion, targetApp, sessionUID } : WebSocketOptions) : MessageSocket {\n    const onMessageHandlers = [];\n    const onErrorHandlers = [];\n    const onOpenHandlers = [];\n\n    let isOpen = false;\n    let errDelay = 1;\n\n    const open = () => {\n        for (const handler of onOpenHandlers) {\n            handler();\n        }\n    };\n\n    const flush = (messages) => {\n        for (const message of messages) {\n            for (const handler of onMessageHandlers) {\n                handler(JSON.stringify(message, null, 4));\n            }\n        }\n    };\n\n    const error = (err) => {\n        for (const handler of onErrorHandlers) {\n            handler(err);\n        }\n    };\n\n    const fullURL = `${ url }/${ sessionUID }`;\n\n    const poll = () => {\n        return request({ url: fullURL }).then(({ status, body }) => {\n            if (status !== 200) {\n                throw new Error(`Bad status code from ${ url }: ${ status }`);\n            }\n\n            if (!body || !body.messages || !Array.isArray(body.messages)) {\n                throw new Error(`Expected messages to be an array`);\n            }\n\n            flush(body.messages);\n\n        }).catch(err => {\n\n            if (errDelay >= 32) {\n                error(err);\n                return new ZalgoPromise();\n            }\n\n            errDelay *= 2;\n            return sleep(errDelay);\n\n        }).then(() => {\n            return poll();\n        });\n    };\n    \n    const driver = {\n        open: once(() => {\n            open();\n            poll();\n            isOpen = true;\n        }),\n        send: (data) => {\n            request({\n                url,\n                method: 'post',\n                json:   {\n                    poll:     false,\n                    messages: [\n                        JSON.parse(data)\n                    ]\n                }\n            }).catch(error);\n        },\n        onMessage: (handler) => {\n            onMessageHandlers.push(handler);\n        },\n        onError: (handler) => {\n            onErrorHandlers.push(handler);\n        },\n        onOpen: (handler) => {\n            if (isOpen) {\n                handler();\n            } else {\n                onOpenHandlers.push(handler);\n            }\n        },\n        onClose: () => {\n            // pass\n        }\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\nexport * from './socket';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT: '/checkoutnow'\n};\n\nexport const NATIVE_WEBSOCKET_URL = 'wss://127.0.0.1/paypal/native';\nexport const HTTP_SOCKET_URL = 'https://www.paypal.com/smart/api/messages';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return buyerAccessToken\n        ? callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        })\n        : callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n            }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [HEADERS.AUTHORIZATION]:            `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './subscription';\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_BUTTONS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.SOURCE ]:       SMART_BUTTONS,\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body;\n    });\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onError';\nexport * from './getPopupBridge';\nexport * from './rememberFunding';\nexport * from './getPageUrl';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\n\nimport { createAccessToken, createOrderID, billingTokenToOrderID, subscriptionIdToCartId } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\nexport type XCreateOrderActionsType = {|\n    order : {\n        create : (Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    clientID : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildCreateOrder({ clientID, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : CreateOrder {\n    return (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n    \n            let payee = unit.payee;\n    \n            if (payee) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createAccessToken(clientID).then(facilitatorAccessToken => {\n            return createOrderID(order, { facilitatorAccessToken, partnerAttributionID });\n        });\n    };\n}\n\nexport function buildXCreateOrderActions({ clientID, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const create = buildCreateOrder({ clientID, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order: { create }\n    };\n}\n\nexport function getCreateOrder(xprops : XProps, { createBillingAgreement, createSubscription } : { createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, clientID, buttonSessionID, intent, currency, merchantID, partnerAttributionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ clientID, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: 'USD',\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n\n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n            }).flush();\n\n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse } from '../../api';\nimport { ORDER_API_ERROR, FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string\n|};\n\nexport type XOnApproveActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        patch : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : { orderID : string, restart : () => ZalgoPromise<void>, intent : $Values<typeof INTENT>, subscriptionID : string, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnApproveActionsType {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }));\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) =>\n        patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID, { buyerAccessToken }));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID, { buyerAccessToken }));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    return {\n        order:        { capture, authorize, patch, get },\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string,\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent, buttonSessionID, partnerAttributionID } = xprops;\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken, buyerAccessToken }, { restart }) => {\n        return createOrder().then(orderID => {\n\n            getLogger()\n                .info('button_authorize')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_AUTHORIZE,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID };\n            const actions = buildXApproveActions({ orderID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n\n            if (onApprove) {\n                return onApprove(data, actions).catch(onError);\n            } else {\n                if (intent === INTENT.CAPTURE) {\n                    return actions.order.capture().then(noop);\n                } else if (intent === INTENT.AUTHORIZE) {\n                    return actions.order.authorize().then(noop);\n                }\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError, buttonSessionID } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { promiseNoop, getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => true),\n        reject:  () => ZalgoPromise.try(() => false)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick {\n    const { onClick = promiseNoop, buttonSessionID } = xprops;\n\n    return ({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        getLogger().info('button_click').track({\n            [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n            [FPTI_KEY.CHOSEN_FUNDING]:     fundingSource\n        }).flush();\n        \n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== false);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return memoize(() => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport { createAccessToken, createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ clientID, partnerAttributionID } : { clientID : string, partnerAttributionID : ?string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createSubscription(accessToken, data, { partnerAttributionID });\n        });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return reviseSubscription(accessToken, subscriptionID, data, { partnerAttributionID });\n        });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc, partnerAttributionID } = xprops;\n    const { clientID } = xprops;\n    if (createSubscriptionFunc) {\n        return memoize(() => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ clientID, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : { orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) =>\n        patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, buttonSessionID, partnerAttributionID } = xprops;\n\n    if (onShippingChange) {\n        return ({ facilitatorAccessToken, buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                        [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\nimport type { RememberFunding } from './rememberFunding';\nimport type { GetPageURL } from './getPageUrl';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : ?boolean,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type GlobalProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : ?boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    enableStandardCardFields : ?boolean\n|};\n\nexport type ButtonCallbackProps = {|\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onClick : OnClick,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\n\nimport { getNonce } from '../dom';\n\nimport type { XProps, GlobalProps, ButtonCallbackProps } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getGlobalProps({ xprops, buyerGeoCountry, cspNonce } : {| xprops : XProps, buyerGeoCountry : ?$Values<typeof COUNTRY>, cspNonce : ?string |}) : GlobalProps {\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        buyerCountry = buyerGeoCountry || COUNTRY.US,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style\n    } = xprops;\n\n    cspNonce = cspNonce || getNonce();\n    const onInit = getOnInit(xprops);\n    const merchantDomain = getParentDomain();\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost\n    };\n}\n\nexport function getButtonCallbackProps({ xprops } : {| xprops : XProps |}) : ButtonCallbackProps {\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops);\n    const createOrder = getCreateOrder(xprops, { createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { createOrder });\n    const onCancel = getOnCancel(xprops, { createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { createOrder });\n    const onClick = getOnClick(xprops);\n\n    return {\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onClick,\n        onShippingChange\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport type RememberFunding = ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type GetPageURL = () => ZalgoPromise<string>;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { enableVault, createAccessToken } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport type { ProxyWindow, LocaleType, FundingEligibilityType } from '../types';\nimport type { CreateOrder, OnApprove, OnCancel, OnShippingChange, CreateBillingAgreement, CreateSubscription } from '../button/props';\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else {\n        return getParent();\n    }\n}\n\nexport function setupCheckout() : ZalgoPromise<void> {\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nexport function getDefaultContext() : $Values<typeof CONTEXT> {\n    return supportsPopups() ? CONTEXT.POPUP : CONTEXT.IFRAME;\n}\n\ntype CheckoutProps= {|\n    clientID : string,\n    win? : ?ProxyWindow,\n    buttonSessionID : string,\n    context? : $Values<typeof CONTEXT>,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : (mixed) => ZalgoPromise<void>,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    validationPromise? : ZalgoPromise<boolean>\n|};\n\ntype CheckoutInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\nexport function initCheckout(props : CheckoutProps) : CheckoutInstance {\n    const { clientID, win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onShippingChange, cspNonce, context, locale, commit, onError, vault, clientAccessToken, fundingEligibility,\n        createBillingAgreement, createSubscription, validationPromise = ZalgoPromise.resolve(true) } = props;\n\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        return validationPromise.then(valid => {\n            if (valid && !approved) {\n                return onCancel();\n            }\n        });\n    };\n\n    const facilitatorAccessTokenPromise = createAccessToken(clientID);\n    let buyerAccessToken;\n\n    const { renderTo, close: closeCheckout, onError: triggerError } = window.paypal.Checkout({\n        window: win,\n        buttonSessionID,\n        clientAccessToken,\n\n        createOrder: () => {\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return unresolvedPromise();\n                }\n\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            });\n        },\n\n        onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n            approved = true;\n\n            return ZalgoPromise.all([\n                facilitatorAccessTokenPromise,\n                closeCheckout()\n            ]).then(([ facilitatorAccessToken ]) => {\n                return onApprove({ payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken, buyerAccessToken }, { restart });\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel: () => {\n            return validationPromise.then(valid => {\n                if (valid) {\n                    return closeCheckout().then(() => {\n                        return onCancel();\n                    });\n                }\n            });\n        },\n\n        onShippingChange: onShippingChange\n            ? (data, actions) => {\n                return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n                    return onShippingChange({ facilitatorAccessToken, buyerAccessToken, ...data }, actions);\n                });\n            } : null,\n\n        onError,\n        onClose,\n\n        fundingSource,\n        card,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    checkoutOpen = true;\n    const renderPromise = renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n\n    const close = () => {\n        checkoutOpen = false;\n        return closeCheckout();\n    };\n\n    const start = () => {\n        return validationPromise.then(valid => {\n            return valid ? renderPromise : close();\n        }).then(noop);\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce } from 'belter/src';\n\nimport { CONTEXT, DATA_ATTRIBUTES } from '../constants';\nimport type { LocaleType, FundingEligibilityType, ProxyWindow } from '../types';\nimport { unresolvedPromise, promiseNoop } from '../lib';\nimport type {\n    CreateOrder,\n    OnApprove,\n    OnCancel,\n    OnShippingChange,\n    OnError,\n    CreateBillingAgreement,\n    CreateSubscription\n} from '../button/props';\nimport { createAccessToken } from '../api';\n\nimport { initCheckout } from './checkout';\n\nlet cardFieldsOpen = false;\n\ntype CardFieldsProps = {|\n    clientID : string,\n    buttonSessionID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : OnError,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType\n|};\n\ntype CardFieldsInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype CardFieldsEligibleProps = {|\n    win : ?ProxyWindow,\n    vault : boolean,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange,\n    isCardFieldsExperimentEnabled? : boolean,\n    enableStandardCardFields : ?boolean\n|};\n\nexport function isCardFieldsEligible({ win, vault, onShippingChange, fundingSource, isCardFieldsExperimentEnabled, enableStandardCardFields } : CardFieldsEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields === true) {\n        return true;\n    }\n\n    // if merchant doesn't pass the inline guest flag, they will in the ramp\n    if (!enableStandardCardFields) {\n        if (!isCardFieldsExperimentEnabled) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : $Values<typeof CARD>) {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nexport function initCardFields(props : CardFieldsProps) : CardFieldsInstance {\n    const { fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onShippingChange, cspNonce, locale, commit, onError, buttonSessionID, clientID,\n        vault, clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription  } = props;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start:        promiseNoop,\n            close:        promiseNoop,\n            triggerError: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ clientID, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n            onShippingChange, cspNonce, locale, commit, onError, vault, clientAccessToken, fundingEligibility,\n            createBillingAgreement, createSubscription, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    const facilitatorAccessTokenPromise = createAccessToken(clientID);\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields, onError: triggerError } = window.paypal.CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            return ZalgoPromise.all([\n                facilitatorAccessTokenPromise,\n                close() // eslint-disable-line no-use-before-define\n            ]).then(([ facilitatorAccessToken ]) => {\n                return onApprove({ payerID, paymentID, billingToken, facilitatorAccessToken, buyerAccessToken }, { restart });\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onShippingChange,\n        onCardTypeChange,\n\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { PopupBridge, CreateOrder, OnApprove, OnCancel, OnShippingChange, GetPopupBridge } from '../button/props';\nimport type { ProxyWindow } from '../types';\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../button/props/getPopupBridge';\nimport { USER_ACTION } from '../constants';\nimport { createAccessToken } from '../api';\n\nlet popupBridge;\n\nexport function setupPopupBridge({ getPopupBridge } : { getPopupBridge : GetPopupBridge }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                popupBridge = bridge;\n            });\n        }\n    });\n}\n\ntype PopupBridgeEligibleProps = {|\n    win : ?ProxyWindow,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isPopupBridgeEligible({ win, onShippingChange } : PopupBridgeEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!popupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype PopupBridgeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype PopupBridgeProps = {|\n    clientID : string,\n    popupBridge : ?PopupBridge,\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    commit : boolean,\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport function initPopupBridge(props : PopupBridgeProps) : PopupBridgeInstance {\n    const { clientID, createOrder, onApprove, onCancel, commit, fundingSource } = props;\n\n    const start = () => {\n        const facilitatorAccessTokenPromise = createAccessToken(clientID);\n\n        return createOrder().then(orderID => {\n            if (!popupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: popupBridge.nativeUrl\n                }\n            });\n\n            return popupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n                    return onApprove({ payerID, paymentID, billingToken, facilitatorAccessToken }, { restart: start });\n                });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { extendUrl, uniqueID, getUserAgent, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { ENV, PLATFORM, FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { CreateOrder, CreateBillingAgreement, CreateSubscription, OnApprove, OnCancel, OnShippingChange, OnError, GetPageURL } from '../button/props';\nimport type { ProxyWindow } from '../types';\nimport { NATIVE_WEBSOCKET_URL, HTTP_SOCKET_URL, EXPERIENCE_URI } from '../config';\nimport { webSocket, httpSocket, promiseNoop, getLogger, redirectTop, type MessageSocket } from '../lib';\nimport { createAccessToken } from '../api';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst SOURCE_APP_VERSION = window.paypal ? window.paypal.version : 'unknown';\nconst TARGET_APP = 'paypal_native_checkout_sdk';\n\nconst MESSAGE = {\n    DETECT_APP: 'detectApp',\n    GET_PROPS:  'getProps',\n    ON_APPROVE: 'onApprove',\n    ON_CANCEL:  'onCancel',\n    ON_ERROR:   'onError'\n};\n\nlet isNativeCheckoutInstalled = false;\n\ntype NativeEligibleProps = {|\n    win : ?ProxyWindow,\n    platform : $Values<typeof PLATFORM>,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    enableNativeCheckout : ?boolean\n|};\n\nexport function isNativeEligible({ win, platform, fundingSource, onShippingChange, createBillingAgreement, createSubscription, enableNativeCheckout } : NativeEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.PAYPAL) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n    \n    if (!isNativeCheckoutInstalled) {\n        return false;\n    }\n\n    return true;\n}\n\nconst sessionUID = uniqueID();\n\nconst useNativeWebSocket = true;\nlet nativeWebSocket : MessageSocket;\nlet nativeHttpSocket : MessageSocket;\n\nfunction getNativeSocket() : MessageSocket {\n    const socketParams = {\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: SOURCE_APP_VERSION,\n        targetApp:        TARGET_APP\n    };\n\n    let socket;\n\n    if (useNativeWebSocket) {\n        socket = nativeWebSocket = nativeWebSocket || webSocket({ url: NATIVE_WEBSOCKET_URL, ...socketParams });\n    } else {\n        socket = nativeHttpSocket = nativeHttpSocket || httpSocket({ url: HTTP_SOCKET_URL, ...socketParams });\n    }\n\n    return socket;\n}\n\ntype SetupNativeProps = {|\n    platform : $Values<typeof PLATFORM>,\n    enableNativeCheckout : ?boolean\n|};\n\nexport function setupNative({ platform, enableNativeCheckout } : SetupNativeProps) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (platform !== PLATFORM.MOBILE || !enableNativeCheckout) {\n            return;\n        }\n\n        return getNativeSocket().send(MESSAGE.DETECT_APP).then(() => {\n            getLogger().info('native_sdk_detected');\n            isNativeCheckoutInstalled = true;\n        }, err => {\n            getLogger().info('native_sdk_not_detected', { err: stringifyError(err) });\n            // useNativeWebSocket = false;\n        });\n    });\n}\n\ntype NativeProps = {|\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onError : OnError,\n    commit : boolean,\n    clientID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    getPageUrl : GetPageURL,\n    env : $Values<typeof ENV>,\n    stageHost : ?string,\n    apiStageHost : ?string\n|};\n\ntype NativeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    env : $Values<typeof ENV>,\n    stageHost : ?string,\n    apiStageHost : ?string\n|};\n\nexport function initNative(props : NativeProps) : NativeInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, clientID, getPageUrl, env, stageHost, apiStageHost } = props;\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            const facilitatorAccessTokenPromise = createAccessToken(clientID);\n            const orderPromise = createOrder();\n            const pageUrlPromise = getPageUrl();\n\n            const socket = getNativeSocket();\n\n            socket.on(MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n                return ZalgoPromise.all([\n                    facilitatorAccessTokenPromise, orderPromise, pageUrlPromise\n                ]).then(([ facilitatorAccessToken, orderID, pageUrl ]) => {\n                    const userAgent = getUserAgent();\n\n                    return {\n                        orderID,\n                        facilitatorAccessToken,\n                        pageUrl,\n                        commit,\n                        userAgent,\n                        env,\n                        stageHost,\n                        apiStageHost\n                    };\n                });\n            });\n\n            socket.on(MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n                return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n                    return onApprove({ payerID, paymentID, billingToken, facilitatorAccessToken }, { restart: start });\n                });\n            });\n    \n            socket.on(MESSAGE.ON_CANCEL, () => {\n                return onCancel();\n            });\n\n            socket.on(MESSAGE.ON_ERROR, ({ data : { error } }) => {\n                return onError(new Error(error.message));\n            });\n\n            redirectTop(extendUrl(EXPERIENCE_URI.CHECKOUT, { query: { sessionUID } }));\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, ProxyWindow, PersonalizationType } from '../types';\nimport { setupLogger, sendBeacon, fixClickFocus } from '../lib';\nimport { initCheckout, setupCheckout, isVaultCaptureEligible, isCardFieldsEligible, initVault, initCardFields } from '../payment-flows';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { isPopupBridgeEligible, initPopupBridge, setupPopupBridge } from '../payment-flows/popup-bridge';\nimport { isNativeEligible, initNative, setupNative } from '../payment-flows/native';\n\nimport { getGlobalProps, getButtonCallbackProps } from './props';\nimport { getSelectedFunding, enableLoadingSpinner, getButtons, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\nimport { setupButtonLogs } from './logs';\nimport { setupRemember } from './remember';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry? : ?$Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization? : PersonalizationType,\n    isCardFieldsExperimentEnabled? : boolean\n|};\n\ntype PayOptions = {|\n    button : HTMLElement,\n    win? : ?ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    paymentMethodID? : ?string\n|};\n\nexport function setupButton({ fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce, merchantID, personalization, isCardFieldsExperimentEnabled } : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const {\n        env, stageHost, apiStageHost, buttonSessionID, style,\n        vault, commit, clientAccessToken, buyerCountry, locale, cspNonce, platform,\n        sessionID, clientID, partnerAttributionID, correlationID, enableThreeDomainSecure,\n        merchantDomain, getPopupBridge, getPrerenderDetails, getPageUrl, rememberFunding,\n        onError, onInit, enableStandardCardFields, enableNativeCheckout\n    } = getGlobalProps({ xprops: window.xprops, buyerGeoCountry, cspNonce: serverCSPNonce });\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    const { initPromise, isEnabled } = onInit();\n\n    let buttonProcessing = false;\n    let popupBridge;\n\n    const pay = ({ button, win, fundingSource, card, paymentMethodID } : PayOptions) => {\n        return ZalgoPromise.try(() => {\n            if (buttonProcessing) {\n                return;\n            }\n\n            buttonProcessing = true;\n\n            const {\n                createOrder, createBillingAgreement, createSubscription,\n                onApprove, onCancel, onClick, onShippingChange\n            } = getButtonCallbackProps({ xprops: window.xprops });\n\n            const validationPromise = onClick({ fundingSource });\n\n            if (!isEnabled()) {\n                return win ? win.close() : null;\n            }\n\n            const isCardFields = isCardFieldsEligible({ win, vault, onShippingChange, fundingSource, isCardFieldsExperimentEnabled, enableStandardCardFields });\n            const isVaultCapture = isVaultCaptureEligible({ win, paymentMethodID, onShippingChange });\n            const isPopupBridge = isPopupBridgeEligible({ win, onShippingChange });\n            const isNative = isNativeEligible({ win, platform, fundingSource, onShippingChange, createBillingAgreement, createSubscription, enableNativeCheckout });\n            const isCheckout = !isCardFields && !isVaultCapture && !isPopupBridge && !isNative;\n\n            const { start, close, triggerError } = (() => {\n                if (isCheckout) {\n                    return initCheckout({\n                        clientID, win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, validationPromise, createBillingAgreement, createSubscription\n                    });\n                }\n\n                if (isVaultCapture) {\n                    enableLoadingSpinner(button);\n\n                    return initVault({\n                        clientID, createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure,\n                        buttonSessionID, partnerAttributionID\n                    });\n                }\n\n                if (isCardFields) {\n                    return initCardFields({\n                        clientID, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription\n                    });\n                }\n\n                if (isPopupBridge) {\n                    enableLoadingSpinner(button);\n\n                    return initPopupBridge({\n                        clientID, popupBridge, fundingSource, createOrder, onApprove, onCancel, commit\n                    });\n                }\n\n                if (isNative) {\n                    return initNative({\n                        createOrder, onApprove, onCancel, onError, commit, fundingSource,\n                        clientID, getPageUrl, env, stageHost, apiStageHost\n                    });\n                }\n\n                throw new Error(`No valid flow found`);\n            })();\n\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return ZalgoPromise.all([\n                        close(),\n                        win && win.close()\n                    ]).then(noop);\n                }\n\n                createOrder().then(orderID =>\n                    updateButtonClientConfig({ orderID, fundingSource, isCardFields }));\n\n                return start()\n                    .then(() => createOrder())\n                    .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                    .catch(err => {\n                        return ZalgoPromise.all([\n                            triggerError(err),\n                            close()\n                        ]);\n                    });\n\n            });\n        }).finally(() => {\n            buttonProcessing = false;\n            disableLoadingSpinner(button);\n        });\n    };\n\n    getButtons().forEach(button => {\n        fixClickFocus(button);\n\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const payPromise = pay({ button, fundingSource, card, paymentMethodID });\n            // $FlowFixMe\n            button.payPromise = payPromise;\n\n            if (personalization && personalization.tagline) {\n                sendBeacon(personalization.tagline.tracking.click);\n            }\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return getPrerenderDetails().then((prerenderDetails) => {\n            if (prerenderDetails) {\n                const { win, fundingSource, card } = prerenderDetails;\n                const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n                if (!button) {\n                    throw new Error(`Can not find button element`);\n                }\n\n                return pay({ button, win, fundingSource, card });\n            }\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogs({ style });\n\n    const setupCheckoutFlow = setupCheckout();\n    const setupPopupBridgeFlow = setupPopupBridge({ getPopupBridge });\n    const setupNativeFlow = setupNative({ platform, enableNativeCheckout });\n\n    return ZalgoPromise.hash({\n        initPromise, setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupCheckoutFlow, setupNativeFlow, setupPopupBridgeFlow\n    }).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ProxyWindow } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse, createAccessToken } from '../api';\nimport type { CreateOrder, OnApprove, OnShippingChange } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\ntype VaultCaptureEligibleProps = {|\n    win : ?ProxyWindow,\n    paymentMethodID : ?string,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isVaultCaptureEligible({ win, paymentMethodID, onShippingChange } : VaultCaptureEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n    \n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype VaultProps = {|\n    clientID : string,\n    createOrder : CreateOrder,\n    paymentMethodID : ?string,\n    onApprove : OnApprove,\n    clientAccessToken : ?string,\n    enableThreeDomainSecure : boolean,\n    buttonSessionID : string,\n    partnerAttributionID : ?string\n|};\n\n\ntype ThreeDomainSecureProps = {|\n    createOrder : CreateOrder\n|};\n\nfunction handleThreeDomainSecure({ createOrder } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = window.paypal.ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(window.parent, TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder\n|};\n\nfunction handleValidateResponse({ status, body, createOrder } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ createOrder });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nexport function initVault(props : VaultProps) : VaultInstance {\n    const { clientID, createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure, buttonSessionID, partnerAttributionID } = props;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        const facilitatorAccessTokenPromise = createAccessToken(clientID);\n\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ status, body, createOrder });\n        }).then(() => {\n            return facilitatorAccessTokenPromise.then(facilitatorAccessToken => {\n                return onApprove({ facilitatorAccessToken }, { restart });\n            });\n        });\n    };\n\n    return {\n        start,\n        close:        () => ZalgoPromise.resolve(),\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, isCardFields } : { orderID : string, fundingSource : $Values<typeof FUNDING>, isCardFields : boolean }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  isCardFields ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.data.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = intent;\n        const expectedCurrency = currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    });\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\n\nimport type { RememberFunding } from './props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : { rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nexport function setupButtonLogs({ style } : { style : ButtonStyle }) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n"],"sourceRoot":""}