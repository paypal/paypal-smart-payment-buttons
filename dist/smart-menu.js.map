{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/preact/dist/preact.module.js","webpack://spb/./node_modules/preact/hooks/dist/hooks.module.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/button/dom.js","webpack://spb/./src/constants.js","webpack://spb/./src/menu/menu.jsx","webpack://spb/./src/menu/hooks.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/menu/page.jsx","webpack://spb/./src/lib/util.js","webpack://spb/./src/menu/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","f","e","u","parentNode","removeChild","arguments","length","push","children","defaultProps","ref","a","type","props","__k","__p","__b","__e","__c","constructor","vnode","v","y","this","context","indexOf","w","__d","debounceRendering","g","sort","__v","pop","forceUpdate","k","h","b","x","_","C","P","N","appendChild","nextSibling","insertBefore","z","j","Array","isArray","setProperty","test","style","cssText","replace","toLowerCase","slice","addEventListener","removeEventListener","options","selected","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","T","contextType","__E","prototype","render","A","sub","state","__n","__h","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","__r","__P","getChildContext","getSnapshotBeforeUpdate","base","componentDidUpdate","$","diffed","nodeType","localName","document","createTextNode","createElementNS","createElement","data","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","current","unmount","componentWillUnmount","setState","ownerSVGElement","Promise","then","resolve","setTimeout","getDerivedStateFromError","componentDidCatch","__H","q","F","forEach","some","E","window","requestAnimationFrame","clearTimeout","cancelAnimationFrame","_extends","assign","target","source","apply","isPromise","item","Window","toString","err","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","args","delay","flush","Zalgo","awaitActive","isAboutProtocol","win","location","protocol","canReadFromWindow","getActualDomain","PROTOCOL","parent","getParent","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","iframeWindows","iframeFrames","noop","arrayFrom","PopupOpenError","message","renderChildren","renderer","renderedChild","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","child","normalizeChildren","normalizeChild","node","element","ADD_CHILDREN","firstChild","contentWindow","doc","docElement","documentElement","dom","opts","domRenderer","createTextElement","prop","val","match","tagName","id","charAt","Math","floor","random","addProps","html","ELEMENT_PROP","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","nonce","content","class","getNonce","body","getAttribute","Menu","choices","onChoose","onBlur","cspNonce","verticalOffset","autoFocus","useRef","useEffect","focus","useAutoFocus","tabIndex","choice","onClick","popup","assertSameDomain","url","width","height","top","left","outerWidth","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","params","filter","Boolean","join","open","allowMock","closed","mockclosed","iframeIndex","collection","safeIndexOf","frame","ownerDocument","contains","isFrameWindowClosed","isWindowClosed","close","tag","writeElementToWindow","openPopup","selectChoice","label","Page","useState","xprops","setXProps","onProps","newProps","useXProps","hide","opaque","setOpaque","visible","setVisible","hasChoices","toFixed","setupMenu","getBody"],"mappings":";IACE,IAAIA,mBAAmB;IAGvB,SAASC,oBAAoBC;QAG5B,IAAGF,iBAAiBE,WACnB,OAAOF,iBAAiBE,UAAUC;QAGnC,IAAIC,SAASJ,iBAAiBE,YAAY;YACzCG,GAAGH;YACHI,IAAG;YACHH,SAAS;;QAIVI,QAAQL,UAAUM,KAAKJ,OAAOD,SAASC,QAAQA,OAAOD,SAASF;QAG/DG,OAAOE,KAAI;QAGX,OAAOF,OAAOD;;IAKfF,oBAAoBQ,IAAIF;IAGxBN,oBAAoBS,IAAIV;IAGxBC,oBAAoBU,IAAI,SAASR,SAASS,MAAMC;QAC3CZ,oBAAoBa,EAAEX,SAASS,SAClCG,OAAOC,eAAeb,SAASS,MAAM;YAAEK,aAAY;YAAMC,KAAKL;;;IAKhEZ,oBAAoBkB,IAAI,SAAShB;QACX,sBAAXiB,UAA0BA,OAAOC,eAC1CN,OAAOC,eAAeb,SAASiB,OAAOC,aAAa;YAAEC,OAAO;;QAE7DP,OAAOC,eAAeb,SAAS,cAAc;YAAEmB,QAAO;;;IAQvDrB,oBAAoBsB,IAAI,SAASD,OAAOE;QAC7B,IAAPA,SAAUF,QAAQrB,oBAAoBqB;QACzC,IAAU,IAAPE,MAAU,OAAOF;QACpB,IAAW,IAAPE,QAA8B,mBAAVF,SAAsBA,SAASA,MAAMG,YAAY,OAAOH;QAChF,IAAII,KAAKX,OAAOY,OAAO;QACvB1B,oBAAoBkB,EAAEO;QACtBX,OAAOC,eAAeU,IAAI,WAAW;YAAET,aAAY;YAAMK,OAAOA;;QAChE,IAAU,IAAPE,QAA4B,mBAATF,OAAmB,KAAI,IAAIM,OAAON,OAAOrB,oBAAoBU,EAAEe,IAAIE,KAAK,SAASA;YAAO,OAAON,MAAMM;UAAQC,KAAK,MAAMD;QAC9I,OAAOF;;IAIRzB,oBAAoB6B,IAAI,SAAS1B;QAChC,IAAIS,SAAST,UAAUA,OAAOqB,aAC7B;YAAwB,OAAOrB,OAAgB;YAC/C;YAA8B,OAAOA;;QACtCH,oBAAoBU,EAAEE,QAAQ,KAAKA;QACnC,OAAOA;;IAIRZ,oBAAoBa,IAAI,SAASiB,QAAQC;QAAY,OAAOjB,GAAiBkB,eAAezB,KAAKuB,QAAQC;;IAGzG/B,oBAAoBiC,IAAI;IAIxB,OAAOjC,oBAAoBA,oBAAoBkC,IAAI;;;;IClFrD,IAAIL,GAAExB,GAAE,iBAAE,iBAAI,kBAAE,IAAG8B,IAAE,IAAGtB,IAAE;IAAkE,SAASuB,EAAEP,GAAExB;QAAG,KAAI,IAAIgC,KAAKhC,GAAEwB,EAAEQ,KAAGhC,EAAEgC;QAAG,OAAOR;;IAAE,SAASpB,EAAEoB;QAAG,IAAIxB,IAAEwB,EAAES;QAAWjC,KAAGA,EAAEkC,YAAYV;;IAAG,SAASK,EAAEL,GAAExB,GAAEgC;QAAG,IAAIf,GAAElB,GAAEc,GAAEiB,GAAEtB,IAAE2B;QAAU,IAAGnC,IAAE+B,EAAE,IAAG/B,IAAGmC,UAAUC,SAAO,GAAE,KAAIJ,IAAE,EAACA,KAAGf,IAAE,GAAEA,IAAEkB,UAAUC,QAAOnB,KAAIe,EAAEK,KAAK7B,EAAES;QAAI,IAAG,QAAMe,MAAIhC,EAAEsC,WAASN,IAAG,QAAMR,KAAG,QAAMA,EAAEe,cAAa,KAAIxC,KAAKyB,EAAEe,mBAAa,MAASvC,EAAED,OAAKC,EAAED,KAAGyB,EAAEe,aAAaxC;QAAI,OAAO+B,IAAE9B,EAAEsB,KAAI,SAAOT,IAAEb,EAAEwC,eAAaxC,EAAEwC,KAAI,QAAMV,YAAU9B,EAAEsB;QAAImB,EAAEjB,GAAExB,GAAE8B,GAAEjB;;IAAG,SAAS4B,EAAEzC,GAAEgC,GAAEf,GAAElB;QAAG,IAAIc,IAAE;YAAC6B,MAAK1C;YAAE2C,OAAMX;YAAEV,KAAIL;YAAEuB,KAAIzC;YAAE6C,KAAI;YAAKC,KAAI;YAAKC,KAAI;YAAEC,KAAI;YAAK/C,GAAE;YAAKgD,KAAI;YAAKC,kBAAY;;QAAQ,OAAOzB,EAAE0B,SAAO1B,EAAE0B,MAAMrC,IAAGA;;IAAwB,SAASsC,EAAE3B;QAAG,OAAOA,EAAEc;;IAAS,SAASV,EAAEJ;QAAG,IAAG,QAAMA,KAAG,oBAAkBA,GAAE,OAAO;QAAK,IAAG,mBAAiBA,KAAG,mBAAiBA,GAAE,OAAOiB,EAAE,MAAKjB,GAAE,MAAK;QAAM,IAAG,QAAMA,EAAEuB,OAAK,QAAMvB,EAAEwB,KAAI;YAAC,IAAIhD,IAAEyC,EAAEjB,EAAEkB,MAAKlB,EAAEmB,OAAMnB,EAAEF,KAAI;YAAM,OAAOtB,EAAE+C,MAAIvB,EAAEuB,KAAI/C;;QAAE,OAAOwB;;IAAE,SAAS4B,EAAE5B,GAAExB;QAAGqD,KAAKV,QAAMnB,GAAE6B,KAAKC,UAAQtD;;IAAE,SAASK,EAAEmB,GAAExB;QAAG,IAAG,QAAMA,GAAE,OAAOwB,EAAEqB,MAAIxC,EAAEmB,EAAEqB,KAAIrB,EAAEqB,IAAID,IAAIW,QAAQ/B,KAAG,KAAG;QAAK,KAAI,IAAIQ,GAAEhC,IAAEwB,EAAEoB,IAAIR,QAAOpC,KAAI,IAAG,SAAOgC,IAAER,EAAEoB,IAAI5C,OAAK,QAAMgC,EAAEe,KAAI,OAAOf,EAAEe;QAAI,OAAM,qBAAmBvB,EAAEkB,OAAKrC,EAAEmB,KAAG;;IAA2L,SAASgC,EAAEvC;SAAIA,EAAEwC,QAAMxC,EAAEwC,OAAI,MAAK,MAAIzD,EAAEqC,KAAKpB,OAAKO,EAAEkC,qBAAmB,iBAAGC;;IAAG,SAASA;QAAI,IAAInC;QAAE,KAAIxB,EAAE4D,MAAK,SAASpC,GAAExB;YAAG,OAAOA,EAAE6D,IAAIf,MAAItB,EAAEqC,IAAIf;aAAMtB,IAAExB,EAAE8D,SAAOtC,EAAEiC,OAAKjC,EAAEuC,aAAY;;IAAI,SAASC,EAAExC,GAAExB,GAAEgC,GAAEf,GAAElB,GAAES,GAAEuB,GAAEF,GAAEY;QAAG,IAAIwB,GAAEd,GAAEC,GAAEjD,GAAEqD,GAAEG,GAAEK,GAAEE,GAAEC,IAAEnE,EAAE4C,OAAKwB,EAAEpE,EAAE2C,MAAML,UAAStC,EAAE4C,MAAI,IAAGhB,IAAE,IAAIyC,IAAErC,KAAGA,EAAEY,OAAKd,GAAEwC,IAAED,EAAEjC;QAAO,KAAIP,KAAG,oBAAIA,IAAE,QAAMrB,IAAEA,EAAE,KAAG8D,IAAEjE,EAAE2B,GAAE,KAAG,OAAMmB,IAAE,GAAEA,IAAEgB,EAAE/B,QAAOe,KAAI,IAAG,SAAOc,IAAEE,EAAEhB,KAAGvB,EAAEuC,EAAEhB,MAAK;YAAC,IAAGc,EAAEpB,MAAI7C,GAAEiE,EAAEnB,MAAI9C,EAAE8C,MAAI,GAAE,UAAQ3C,IAAEkE,EAAElB,OAAKhD,KAAG8D,EAAE3C,OAAKnB,EAAEmB,OAAK2C,EAAEvB,SAAOvC,EAAEuC,MAAK2B,EAAElB,UAAG,QAAY,KAAIC,IAAE,GAAEA,IAAEkB,GAAElB,KAAI;gBAAC,KAAIjD,IAAEkE,EAAEjB,OAAKa,EAAE3C,OAAKnB,EAAEmB,OAAK2C,EAAEvB,SAAOvC,EAAEuC,MAAK;oBAAC2B,EAAEjB,UAAG;oBAAO;;gBAAMjD,IAAE;;YAAK,IAAGqD,IAAEe,EAAE/C,GAAEyC,GAAE9D,IAAEA,KAAG,iBAAEc,GAAElB,GAAES,GAAEuB,GAAE,MAAKF,GAAEY,KAAIW,IAAEa,EAAEzB,QAAMrC,EAAEqC,OAAKY,MAAIc,MAAIA,IAAE,KAAK7B,KAAKe,GAAEa,EAAEjB,OAAKQ,GAAES;YAAG,QAAMT,GAAE;gBAAC,IAAG,QAAMQ,MAAIA,IAAER,IAAG,QAAMS,EAAEjE,GAAEwD,IAAES,EAAEjE,GAAEiE,EAAEjE,IAAE,WAAU,IAAGQ,KAAGL,KAAGqD,KAAG3B,KAAG,QAAM2B,EAAEvB,YAAWT,GAAE,IAAG,QAAMK,KAAGA,EAAEI,eAAaT,GAAEA,EAAEgD,YAAYhB,SAAO;oBAAC,KAAIG,IAAE9B,GAAEuB,IAAE,IAAGO,IAAEA,EAAEc,gBAAcrB,IAAEkB,GAAElB,KAAG,GAAE,IAAGO,KAAGH,GAAE,MAAMhC;oBAAEA,EAAEkD,aAAalB,GAAE3B;;gBAAGA,IAAE2B,EAAEiB,aAAY,qBAAmBzE,EAAE0C,SAAO1C,EAAEA,IAAEwD;;;QAAI,IAAGxD,EAAE+C,MAAIiB,GAAE,QAAMxD,KAAG,qBAAmBR,EAAE0C,MAAK,KAAIS,IAAE3C,EAAE4B,QAAOe,OAAK,QAAM3C,EAAE2C,MAAI/C,EAAEI,EAAE2C;QAAI,KAAIA,IAAEmB,GAAEnB,OAAK,QAAMkB,EAAElB,MAAIwB,EAAEN,EAAElB,IAAGkB,EAAElB;QAAI,IAAGe,GAAE,KAAIf,IAAE,GAAEA,IAAEe,EAAE9B,QAAOe,KAAIyB,EAAEV,EAAEf,IAAGe,IAAIf,IAAGe,IAAIf;;IAAI,SAASiB,EAAE5C,GAAExB,GAAEgC,GAAEf;QAAG,IAAG,QAAMjB,MAAIA,IAAE,KAAI,QAAMwB,KAAG,oBAAkBA,GAAEP,KAAGjB,EAAEqC,KAAK,YAAW,IAAGwC,MAAMC,QAAQtD,IAAG,KAAI,IAAIzB,IAAE,GAAEA,IAAEyB,EAAEY,QAAOrC,KAAIqE,EAAE5C,EAAEzB,IAAGC,GAAEgC,GAAEf,SAAQjB,EAAEqC,KAAKL,IAAEA,EAAER,KAAGA;QAAG,OAAOxB;;IAAuK,SAASmE,EAAE3C,GAAExB,GAAEgC;QAAG,QAAMhC,EAAE,KAAGwB,EAAEuD,YAAY/E,GAAEgC,KAAGR,EAAExB,KAAG,mBAAiBgC,MAAG,MAAKxB,EAAEwE,KAAKhF,KAAGgC,IAAE,OAAKA;;IAAE,SAASqC,EAAE7C,GAAExB,GAAEgC,GAAEf,GAAElB;QAAG,IAAIc,GAAEiB,GAAEtB,GAAEuB,GAAE3B;QAAE,IAAG,WAASJ,IAAED,IAAE,gBAAcC,IAAE,UAAQA,IAAE,YAAUA,IAAE,cAAYA,MAAI,eAAaA,UAAQ,IAAG,YAAUA,GAAE,IAAGa,IAAEW,EAAEyD;QAAM,mBAAiBjD,GAAEnB,EAAEqE,UAAQlD,QAAM;YAAC,IAAG,mBAAiBf,MAAIJ,EAAEqE,UAAQ,IAAGjE,IAAE,OAAMA,GAAE,KAAIa,KAAKb,GAAEe,KAAGF,KAAKE,KAAGmC,EAAEtD,GAAEiB,GAAE;YAAI,IAAGE,GAAE,KAAIxB,KAAKwB,GAAEf,KAAGe,EAAExB,OAAKS,EAAET,MAAI2D,EAAEtD,GAAEL,GAAEwB,EAAExB;eAAS,IAAG,QAAMR,EAAE,MAAI,QAAMA,EAAE,IAAG+B,IAAE/B,OAAKA,IAAEA,EAAEmF,QAAQ,YAAW;QAAK/E,IAAEJ,EAAEoF,eAAcpF,KAAGI,KAAKoB,IAAEpB,IAAEJ,GAAGqF,MAAM,IAAGrD,KAAGf,KAAGO,EAAE8D,iBAAiBtF,GAAEsE,GAAEvC;SAAIP,EAAEQ,MAAIR,EAAEQ,IAAE,KAAKhC,KAAGgC,KAAGR,EAAE+D,oBAAoBvF,GAAEsE,GAAEvC,SAAQ,IAAG,WAAS/B,KAAG,cAAYA,MAAID,KAAGC,KAAKwB,GAAE,IAAGA,EAAEY,UAAQ,WAASpC,GAAE,KAAIA,IAAEwB,EAAEY,QAAOpC,OAAKwB,EAAEgE,QAAQxF,GAAGyF,WAASjE,EAAEgE,QAAQxF,GAAGgB,SAAOgB,QAAOR,EAAExB,KAAG,QAAMgC,IAAE,KAAGA,QAAM,qBAAmBA,KAAG,8BAA4BhC,MAAIA,OAAKA,IAAEA,EAAEmF,QAAQ,YAAW,OAAK,QAAMnD,MAAG,MAAKA,IAAER,EAAEkE,kBAAkB,gCAA+B1F,EAAEoF,iBAAe5D,EAAEmE,eAAe,gCAA+B3F,EAAEoF,eAAcpD,KAAG,QAAMA,MAAG,MAAKA,IAAER,EAAEoE,gBAAgB5F,KAAGwB,EAAEqE,aAAa7F,GAAEgC;;IAAI,SAASsC,EAAEtE;QAAG,OAAOqD,KAAKrB,EAAEhC,EAAE0C,MAAMlB,EAAEsE,QAAMtE,EAAEsE,MAAM9F,KAAGA;;IAAG,SAASuE,EAAEvE,GAAEgC,GAAEf,GAAElB,GAAEc,GAAEiB,GAAEtB,GAAEJ,GAAEyB,GAAEY;QAAG,IAAIwB,GAAE5D,GAAEF,GAAEqD,GAAEG,GAAEO,GAAEC,GAAEE,GAAEC,GAAEC,GAAEwB,IAAE/D,EAAEU;QAAK,SAAG,MAASV,EAAEiB,aAAY,OAAO;SAAMgB,IAAEzC,EAAEsB,QAAMmB,EAAEjC;QAAG;YAAIR,GAAE,IAAG,qBAAmBuE,GAAE;gBAAC,IAAG1B,IAAErC,EAAEW,OAAM2B,KAAGL,IAAE8B,EAAEC,gBAAcjG,EAAEkE,EAAEjB,MAAKuB,IAAEN,IAAEK,IAAEA,EAAE3B,MAAM3B,QAAMiD,EAAEpB,MAAI9C;gBAAEkB,EAAE+B,MAAImB,KAAG9D,IAAE2B,EAAEgB,MAAI/B,EAAE+B,KAAKH,MAAIxC,EAAE4F,OAAKF,EAAEG,aAAWH,EAAEG,UAAUC,SAAOnE,EAAEgB,MAAI3C,IAAE,IAAI0F,EAAE1B,GAAEE,MAAIvC,EAAEgB,MAAI3C,IAAE,IAAI+C,EAAEiB,GAAEE;gBAAGlE,EAAE4C,cAAY8C,GAAE1F,EAAE8F,SAAOC,IAAG9B,KAAGA,EAAE+B,IAAIhG,IAAGA,EAAEsC,QAAM0B,GAAEhE,EAAEiG,UAAQjG,EAAEiG,QAAM;gBAAIjG,EAAEiD,UAAQiB,GAAElE,EAAEkG,MAAIxG,GAAEI,IAAEE,EAAEoD,OAAI,GAAGpD,EAAEmG,MAAI,KAAI,QAAMnG,EAAEoG,QAAMpG,EAAEoG,MAAIpG,EAAEiG;gBAAO,QAAMP,EAAEW,4BAA0B3E,EAAE1B,EAAEoG,OAAKpG,EAAEiG,QAAMjG,EAAEoG,MAAI1E,EAAE,IAAG1B,EAAEoG,OAAKpG,EAAEoG,KAAIV,EAAEW,yBAAyBrC,GAAEhE,EAAEoG;gBAAMtG,GAAE,QAAM4F,EAAEW,4BAA0B,QAAMrG,EAAEsG,sBAAoBtG,EAAEsG;gBAAqB,QAAMtG,EAAEuG,qBAAmBpG,EAAE6B,KAAKhC,SAAO;oBAAC,IAAG,QAAM0F,EAAEW,4BAA0B,QAAMtG,KAAG,QAAMC,EAAEwG,6BAA2BxG,EAAEwG,0BAA0BxC,GAAEE;qBAAInE,KAAG,QAAMC,EAAEyG,0BAAuB,MAAKzG,EAAEyG,sBAAsBzC,GAAEhE,EAAEoG,KAAIlC,IAAG;wBAAClE,EAAEsC,QAAM0B,GAAEhE,EAAEiG,QAAMjG,EAAEoG,KAAIpG,EAAEoD,OAAI,GAAGpD,EAAEwD,MAAI7B,GAAEA,EAAEe,MAAI9B,EAAE8B,KAAIf,EAAEY,MAAI3B,EAAE2B;wBAAI,MAAMpB;;oBAAE,QAAMnB,EAAE0G,uBAAqB1G,EAAE0G,oBAAoB1C,GAAEhE,EAAEoG,KAAIlC;;gBAAG,KAAIf,IAAEnD,EAAEsC,OAAMgB,IAAEtD,EAAEiG,OAAMjG,EAAEiD,UAAQiB,GAAElE,EAAEsC,QAAM0B,GAAEhE,EAAEiG,QAAMjG,EAAEoG,MAAKxC,IAAEzC,EAAEwF,QAAM/C,EAAEjC;gBAAG3B,EAAEoD,OAAI,GAAGpD,EAAEwD,MAAI7B,GAAE3B,EAAE4G,MAAIjH,GAAEoE,EAAE,SAAOH,IAAE5D,EAAE8F,OAAO9F,EAAEsC,OAAMtC,EAAEiG,OAAMjG,EAAEiD,aAAWW,EAAEvB,QAAMS,KAAG,QAAMc,EAAE3C,MAAI2C,EAAEtB,MAAML,WAAS2B,GAAEjC,EAAEY,MAAI,IAAGhB,IAAE;gBAAI,QAAMvB,EAAE6G,oBAAkBnH,IAAEgC,EAAEA,EAAE,IAAGhC,IAAGM,EAAE6G,qBAAoB/G,KAAG,QAAME,EAAE8G,4BAA0BjD,IAAE7D,EAAE8G,wBAAwB3D,GAAEG;gBAAIK,EAAEhE,GAAEgC,GAAEf,GAAElB,GAAEc,GAAEiB,GAAEtB,GAAEqB,GAAEY,IAAGpC,EAAE+G,OAAKpF,EAAEe,KAAIkB,IAAE5D,EAAEmG,IAAI1C,SAAOG,EAAE/D,KAAKG;gBAAGF,KAAG,QAAMqD,KAAG,QAAMnD,EAAEgH,sBAAoBhH,EAAEgH,mBAAmB7D,GAAEG,GAAEO;gBAAGC,MAAI9D,EAAE4F,MAAI5F,EAAEwC,MAAI;mBAAWb,EAAEe,MAAIuE,EAAErG,EAAE8B,KAAIf,GAAEf,GAAElB,GAAEc,GAAEiB,GAAEtB,GAAEiC;aAAIwB,IAAEzC,EAAE+F,WAAStD,EAAEjC;UAAG,OAAMhC;YAAGwB,EAAEuB,IAAI/C,GAAEgC,GAAEf;;QAAG,OAAOe,EAAEe;;IAAI,SAASgD,EAAE/F,GAAEgC;QAAG,KAAI,IAAIf,GAAEA,IAAEjB,EAAE8D,SAAO;YAAI7C,EAAE2F;UAAoB,OAAM5G;YAAGwB,EAAEuB,IAAI/C,GAAEiB,EAAE4C;;QAAKrC,EAAEwB,OAAKxB,EAAEwB,IAAIhB;;IAAG,SAASsF,EAAE9F,GAAExB,GAAEgC,GAAEf,GAAElB,GAAES,GAAEuB,GAAE3B;QAAG,IAAIyB,GAAEY,GAAEwB,GAAEd,GAAEvB,IAAEI,EAAEW,OAAMS,IAAEpD,EAAE2C;QAAM,IAAG5C,IAAE,UAAQC,EAAE0C,QAAM3C,GAAE,QAAMyB,KAAG,QAAMhB,GAAE,KAAIqB,IAAE,GAAEA,IAAErB,EAAE4B,QAAOP,KAAI,IAAG,SAAOY,IAAEjC,EAAEqB,QAAM,SAAO7B,EAAE0C,OAAK,MAAID,EAAE+E,WAAS/E,EAAEgF,cAAYzH,EAAE0C,OAAM;YAAClB,IAAEiB,GAAEjC,EAAEqB,KAAG;YAAK;;QAAM,IAAG,QAAML,GAAE;YAAC,IAAG,SAAOxB,EAAE0C,MAAK,OAAOgF,SAASC,eAAevE;YAAG5B,IAAEzB,IAAE2H,SAASE,gBAAgB,8BAA6B5H,EAAE0C,QAAMgF,SAASG,cAAc7H,EAAE0C;YAAMlC,IAAE;;QAAK,OAAO,SAAOR,EAAE0C,OAAKd,MAAIwB,MAAI5B,EAAEsG,OAAK1E,KAAGpD,MAAIgC,MAAI,QAAMxB,MAAIA,IAAEsB,EAAEuD,MAAMnF,KAAKsB,EAAEuG;QAAa9D,KAAGrC,IAAEI,EAAEW,SAAO,iBAAGqF,yBAAwB7E,IAAEC,EAAE4E;QAAwB5H,MAAI+C,KAAGc,OAAKd,KAAGc,KAAGd,EAAE8E,UAAQhE,EAAEgE,WAASzG,EAAE0G,YAAU/E,KAAGA,EAAE8E,UAAQ;QAA7gH,SAAWzG,GAAExB,GAAEgC,GAAEf,GAAElB;YAAG,IAAIc;YAAE,KAAIA,KAAKmB,GAAEnB,KAAKb,KAAGqE,EAAE7C,GAAEX,GAAE,MAAKmB,EAAEnB,IAAGI;YAAG,KAAIJ,KAAKb,GAAED,KAAG,qBAAmBC,EAAEa,MAAI,YAAUA,KAAG,cAAYA,KAAGmB,EAAEnB,OAAKb,EAAEa,MAAIwD,EAAE7C,GAAEX,GAAEb,EAAEa,IAAGmB,EAAEnB,IAAGI;SAAg3GiD,CAAE1C,GAAE4B,GAAExB,GAAE7B,GAAEK,IAAG+C,KAAGa,EAAExC,GAAExB,GAAEgC,GAAEf,GAAE,oBAAkBjB,EAAE0C,QAAM3C,GAAES,GAAEuB,GAAE,iBAAE3B;QAAGA,MAAI,WAAUgD,UAAG,MAASA,EAAEpC,SAAOoC,EAAEpC,UAAQQ,EAAER,UAAQQ,EAAER,QAAM,QAAMoC,EAAEpC,QAAM,KAAGoC,EAAEpC;QAAO,aAAYoC,UAAG,MAASA,EAAE+E,WAAS/E,EAAE+E,YAAU3G,EAAE2G,YAAU3G,EAAE2G,UAAQ/E,EAAE+E;QAAW3G;;IAAE,SAASoD,EAAE5E,GAAEgC,GAAEf;QAAG;YAAI,qBAAmBjB,IAAEA,EAAEgC,KAAGhC,EAAEoI,UAAQpG;UAAE,OAAMhC;YAAGwB,EAAEuB,IAAI/C,GAAEiB;;;IAAI,SAAS0D,EAAE3E,GAAEgC,GAAEf;QAAG,IAAIlB,GAAEc,GAAEiB;QAAE,IAAGN,EAAE6G,WAAS7G,EAAE6G,QAAQrI,KAAID,IAAEC,EAAEwC,QAAMoC,EAAE7E,GAAE,MAAKiC,IAAGf,KAAG,qBAAmBjB,EAAE0C,SAAOzB,IAAE,SAAOJ,IAAEb,EAAE+C;QAAM/C,EAAE+C,MAAI/C,EAAEA,IAAE,MAAK,SAAOD,IAAEC,EAAEgD,MAAK;YAAC,IAAGjD,EAAEuI,sBAAqB;gBAAIvI,EAAEuI;cAAuB,OAAMtI;gBAAGwB,EAAEuB,IAAI/C,GAAEgC;;YAAGjC,EAAEqH,OAAKrH,EAAEkH,MAAI;;QAAK,IAAGlH,IAAEC,EAAE4C,KAAI,KAAId,IAAE,GAAEA,IAAE/B,EAAEqC,QAAON,KAAI/B,EAAE+B,MAAI6C,EAAE5E,EAAE+B,IAAGE,GAAEf;QAAG,QAAMJ,KAAGT,EAAES;;IAAG,SAASuF,EAAE5E,GAAExB,GAAEgC;QAAG,OAAOqB,KAAKJ,YAAYzB,GAAEQ;;IAAm3BR,IAAE,IAAG4B,EAAE8C,UAAUqC,WAAS,SAAS/G,GAAExB;QAAG,IAAIgC,IAAEqB,KAAKoD,QAAMpD,KAAKiD,SAAOjD,KAAKoD,QAAMpD,KAAKoD,MAAI1E,EAAE,IAAGsB,KAAKiD;SAAS,qBAAmB9E,MAAIA,IAAEA,EAAEQ,GAAEqB,KAAKV,YAAUZ,EAAEC,GAAER,IAAG,QAAMA,KAAG6B,KAAKQ,QAAM7D,KAAGqD,KAAKmD,IAAInE,KAAKrC;QAAGwD,EAAEH;OAAQD,EAAE8C,UAAUnC,cAAY,SAASvC;QAAG,IAAIxB,GAAEgC,GAAEf,GAAElB,IAAEsD,KAAKQ,KAAIhD,IAAEwC,KAAKQ,IAAId,KAAIjB,IAAEuB,KAAK4D;QAAInF,MAAI9B,KAAE,MAAKwB,GAAEQ,IAAE,IAAGf,IAAEsD,EAAEzC,GAAE/B,GAAEgC,EAAE,IAAGhC,IAAGsD,KAAKkD,UAAI,MAASzE,EAAE0G,iBAAgB,MAAKxG,GAAEhC,GAAE,QAAMa,IAAER,EAAEN,KAAGc;QAAGkF,EAAE/D,GAAEjC,IAAGkB,KAAGJ,KAAp3N,SAASV,EAAEqB;YAAG,IAAIxB,GAAEgC;YAAE,IAAG,SAAOR,IAAEA,EAAEqB,QAAM,QAAMrB,EAAEwB,KAAI;gBAAC,KAAIxB,EAAEuB,MAAIvB,EAAEwB,IAAIoE,OAAK,MAAKpH,IAAE,GAAEA,IAAEwB,EAAEoB,IAAIR,QAAOpC,KAAI,IAAG,SAAOgC,IAAER,EAAEoB,IAAI5C,OAAK,QAAMgC,EAAEe,KAAI;oBAACvB,EAAEuB,MAAIvB,EAAEwB,IAAIoE,OAAKpF,EAAEe;oBAAI;;gBAAM,OAAO5C,EAAEqB;;SAAqsNrB,CAAEJ,KAAIyB,KAAGA;OAAK4B,EAAE8C,UAAUC,SAAOhD,GAAEnD,IAAE,IAAG,kBAAE,qBAAmByI,UAAQA,QAAQvC,UAAUwC,KAAKnH,KAAKkH,QAAQE,aAAWC;IAAWpH,EAAEuB,MAAI,SAASvB,GAAExB,GAAEgC;QAAG,KAAI,IAAIf,GAAEjB,IAAEA,EAAE6C,OAAK,KAAI5B,IAAEjB,EAAEgD,SAAO/B,EAAE4B,KAAI;YAAI,IAAG5B,EAAEgC,eAAa,QAAMhC,EAAEgC,YAAY4F,0BAAyB5H,EAAEsH,SAAStH,EAAEgC,YAAY4F,yBAAyBrH,UAAQ;gBAAC,IAAG,QAAMP,EAAE6H,mBAAkB;gBAAS7H,EAAE6H,kBAAkBtH;;YAAG,OAAOgC,EAAEvC,EAAEgF,MAAIhF;UAAG,OAAMjB;YAAGwB,IAAExB;;QAAE,MAAMwB;OAAG,kBAAE;ICAz5Q,IAAI,gBAAE,gBAAE,iBAAE,IAAG,iBAAEA,EAAEwF;IAAIxF,EAAEwF,MAAI,SAASxF;QAAG,kBAAG,eAAEA,IAAG,iBAAE,IAAG,iBAAEA,EAAEwB,KAAK+F,QAAM,eAAEA,IAAI9H,IAAE,eAAE,eAAE8H,IAAI9H;;IAAK,IAAI,iBAAEO,EAAE+F;IAAO/F,EAAE+F,SAAO,SAAS/F;QAAG,kBAAG,eAAEA;QAAG,IAAIP,IAAEO,EAAEwB;QAAI,IAAG/B,GAAE;YAAC,IAAIJ,IAAEI,EAAE8H;YAAIlI,MAAIA,EAAEmB,IAAE,eAAEnB,EAAEmB;;;IAAM,IAAI,iBAAER,EAAE6G;IAAQ,SAAS,eAAEpH;QAAGO,EAAEgF,OAAKhF,EAAEgF,IAAI;QAAG,IAAIxE,IAAE,eAAE+G,QAAM,eAAEA,MAAI;YAAChJ,GAAE;YAAGkB,GAAE;YAAGe,GAAE;;QAAK,OAAOf,KAAGe,EAAEjC,EAAEqC,UAAQJ,EAAEjC,EAAEsC,KAAK,KAAIL,EAAEjC,EAAEkB;;IAAG,SAAS,eAAEO;QAAG,OAAc,SAAWA,GAAEQ,GAAEjC;YAAG,IAAIS,IAAE,eAAE;YAAK,OAAOA,EAAEwC,QAAMxC,EAAEwC,MAAI,gBAAExC,EAAEA,IAAE,EAAQwI,EAAE,MAAKhH,IAAG,SAASf;gBAAG,IAAIJ,IAAEW,EAAEhB,EAAEA,EAAE,IAAGS;gBAAGT,EAAEA,EAAE,OAAKK,MAAIL,EAAEA,EAAE,KAAGK,GAAEL,EAAEwC,IAAIuF,SAAS;kBAAQ/H,EAAEA;SAAhK,CAAEwI,GAAExH;;IAA8J,SAAS,eAAEA,GAAEQ;QAAG,IAAIjC,IAAE,eAAE;QAAKkJ,EAAElJ,EAAEoD,GAAEnB,OAAKjC,EAAES,IAAEgB,GAAEzB,EAAEoD,IAAEnB,GAAE,eAAE+G,IAAI9H,EAAEoB,KAAKtC,IAAG,cAAE;;IAAgfyB,EAAE6G,UAAQ,SAAS7G;QAAG,kBAAG,eAAEA;QAAG,IAAIP,IAAEO,EAAEwB;QAAI,IAAG/B,GAAE;YAAC,IAAIJ,IAAEI,EAAE8H;YAAIlI,KAAGA,EAAEd,EAAEmJ,SAAQ,SAAS1H;gBAAG,OAAOA,EAAEI,KAAGJ,EAAEI;;;;IAAQ,IAAI,gBAAE;IAAa,SAAS;QAAI,eAAEuH,MAAK,SAAS3H;YAAGA,EAAExB,KAAE,GAAGwB,EAAEyF,QAAMzF,EAAEuH,IAAI9H,IAAE,eAAEO,EAAEuH,IAAI9H;aAAM,iBAAE;;IAAG,SAAS,eAAEO;QAAG,OAAOA,EAAE0H,QAAQ,iBAAG1H,EAAE0H,QAAQE,IAAG;;IAAG,SAAS,eAAE5H;QAAGA,EAAEI,KAAGJ,EAAEI;;IAAI,SAASwH,EAAE5H;QAAG,IAAIP,IAAEO,EAAEhB;QAAI,qBAAmBS,MAAIO,EAAEI,IAAEX;;IAAG,SAASgI,EAAEzH,GAAEP;QAAG,QAAOO,KAAGP,EAAEkI,MAAK,SAASlI,GAAEJ;YAAG,OAAOI,MAAIO,EAAEX;;;IAAK,SAASmI,EAAExH,GAAEP;QAAG,OAAM,qBAAmBA,IAAEA,EAAEO,KAAGP;;IAAE,sBAAoBoI,WAAS,gBAAE,SAASpI;SAAIA,EAAEjB,MAAIiB,EAAEjB,KAAE,MAAK,MAAI,eAAEqC,KAAKpB,OAAKO,EAAE8H,yBAAuB,SAAS9H;YAAG,IAAIP,IAAE;gBAAWsI,aAAa1I,IAAG2I,qBAAqBxH,IAAG4G,WAAWpH;eAAIX,IAAE+H,WAAW3H,GAAE,MAAKe,IAAEsH,sBAAsBrI;WAAK;;ICA1tD,SAASwI;QAetB,QAdAA,WAAWhJ,OAAOiJ,UAAU,SAAUC;YACpC,KAAK,IAAI5J,IAAI,GAAGA,IAAIoC,UAAUC,QAAQrC,KAAK;gBACzC,IAAI6J,SAASzH,UAAUpC;gBAEvB,KAAK,IAAIuB,OAAOsI,SACVnJ,IAAiBkB,eAAezB,KAAK0J,QAAQtI,SAC/CqI,OAAOrI,OAAOsI,OAAOtI;;YAK3B,OAAOqI;WAGOE,MAAMxG,MAAMlB;;ICbvB,SAAS2H,gBAAUC;QACtB;YACI,KAAKA,MACD,QAAO;YAGX,IAAuB,sBAAZtB,WAA2BsB,gBAAgBtB,SAClD,QAAO;YAGX,IAAsB,sBAAXY,UAAmD,qBAAlBA,OAAOW,UAAyBD,gBAAgBV,OAAOW,QAC/F,QAAO;YAGX,IAAsB,sBAAXX,UAAwD,qBAAvBA,OAAOpG,eAA8B8G,gBAAgBV,OAAOpG,aACpG,QAAO;YAGX,IAAIgH,YAAY,GAAIA;YAEpB,IAAIA,WAAU;gBACV,IAAI3J,OAAO2J,UAAS/J,KAAK6J;gBAEzB,IAAa,sBAATzJ,QAAuC,sBAATA,QAAuC,yBAATA,MAC5D,QAAO;;YAIf,IAAyB,qBAAdyJ,KAAKrB,MACZ,QAAO;UAEb,OAAOwB;YACL,QAAO;;QAGX,QAAO;;ICjCX,IAAMC,mBAAmB;IACzB,IAAMC,mCAA4F;ICDlG,IAAIC,cAAc;IAClB,IAAIC;IAEJ,SAASC;QACL,KAAKF,eAAeC,cAAc;YAC9B,IAAME,UAAUF;YAChBA,eAAe;YACfE,QAAQ7B;;;IAIT,SAAS8B;QACZJ,eAAe;;IAGZ,SAASK;QACZL,eAAe;QACfE;;ICfG,IAAMI,uBAAb;QAeI,sBAAYC;YAAuF;YAAA,KAbnGC,gBAamG;YAAA,KAZnGC,gBAYmG;YAAA,KAXnGC,oBAWmG;YAAA,KAVnG/J,aAUmG;YAAA,KATnGgK,aASmG;YAAA,KARnGC,gBAQmG;YAAA,KAHnGC,mBAGmG;YAAA,KAFnGC,aAEmG;YAE/F9H,KAAKwH,YAAW;YAChBxH,KAAKyH,YAAW;YAChBzH,KAAK0H,gBAAe;YAEpB1H,KAAK4H,WAAW;YAEhB,IAAIL,SAAS;gBAET,IAAIQ;gBACJ,IAAIJ;gBACJ,IAAIH,YAAW;gBACf,IAAIC,YAAW;gBACf,IAAIO,WAAU;gBAEdZ;gBAEA;oBACIG,SAAQ,SAAAU;wBACJ,IAAID,SACA,MAAK1C,QAAQ2C,WACV;4BACHT,YAAW;4BACXO,UAASE;;yBAGd,SAAApB;wBACC,IAAImB,SACA,MAAKE,OAAOrB,WACT;4BACHY,YAAW;4BACXE,SAAQd;;;kBAIlB,OAAOA;oBACLQ;oBACArH,KAAKkI,OAAOrB;oBACZ;;gBAGJQ;gBAEAW,WAAU;gBAENR,WAEAxH,KAAKsF,QAAQyC,WACNN,YACPzH,KAAKkI,OAAOP;;;QAjE5B;QAAA,OA8EIrC,UAAA,SAAQyC;YACJ,IAAI/H,KAAKwH,YAAYxH,KAAKyH,UACtB,OAAOzH;YAGX,IAAIyG,gBAAUsB,SACV,MAAM,IAAII,MAAM;YAGpBnI,KAAKwH,YAAW;YAChBxH,KAAKrC,QAAQoK;YACb/H,KAAKoI;YAEL,OAAOpI;;QA3Ff,OA8FIkI,SAAA,SAAOP;YAAiC;YACpC,IAAI3H,KAAKwH,YAAYxH,KAAKyH,UACtB,OAAOzH;YAGX,IAAIyG,gBAAUkB,QACV,MAAM,IAAIQ,MAAM;YAGpB,KAAKR,OAAO;gBAER,IAAId,OAAOc,SAAmC,qBAAnBA,MAAMf,WAA0Be,MAAMf,aAAaxJ,GAAiBwJ,SAAS/J,KAAK8K;gBAC7GA,QAAQ,IAAIQ,MAAJ,kDAA2DtB;;YAGvE7G,KAAKyH,YAAW;YAChBzH,KAAK2H,QAAQA;YAER3H,KAAK0H,gBACNnC,YAAW;gBACF,OAAKmC,gBFjHnB,SAA2Cb,KAAaM;oBAE3D,KAAuC,MAAnCL,iBAAiB5G,QAAQ2G,MAA7B;wBAIAC,iBAAiB9H,KAAK6H;wBAEtBtB,YAAW;4BAMP,MAAMsB;4BACP;wBAEH,KAAK,IAAItF,IAAI,GAAGA,IAAIwF,iCAAiChI,QAAQwC,KAEzDwF,iCAAiCxF,GAAGsF,KAAKM;;iBE+F7BkB,CAA+BV,OAAO;gBAE3C;YAGP3H,KAAKoI;YAEL,OAAOpI;;QA1Hf,OA6HIsI,cAAA,SAAYX;YACR3H,KAAK0H,gBAAe;YACpB1H,KAAKkI,OAAOP;YACZ,OAAO3H;;QAhIf,OAmIIoI,WAAA;YAAW,IAEYZ,WAAiCxH,KAAjCwH,UAAUC,WAAuBzH,KAAvByH,UAAUG,WAAa5H,KAAb4H;YAEvC,KAFoD5H,KAA9C6H,gBAMDL,YAAaC,WAAlB;gBAIAzH,KAAK6H,eAAc;gBACnBT;gBAEA,IAAMmB,QAAQ,SAAIC,cAAgCC;oBAC9C,OAAOD,aAAanD,MAAK,SAAA4C;wBACrBQ,cAAcnD,QAAQ2C;yBACvB,SAAApB;wBACC4B,cAAcP,OAAOrB;;;gBAI7B,KAAK,IAAInK,IAAI,GAAGA,IAAIkL,SAAS7I,QAAQrC,KAAK;oBAAA,kBAEAkL,SAASlL,IAAzCgM,YAFgC,YAEhCA,WAAWC,UAFqB,YAErBA,SAASxB,UAFY,YAEZA;oBAE1B,IAAIY,gBAAM;oBAEV,IAAIP,UAEA;wBACIO,WAASW,YAAYA,UAAU1I,KAAKrC,SAASqC,KAAKrC;sBACpD,OAAOkJ;wBACLM,QAAQe,OAAOrB;wBACf;2BAGD,IAAIY,UAAU;wBAEjB,KAAKkB,SAAS;4BACVxB,QAAQe,OAAOlI,KAAK2H;4BACpB;;wBAGJ;4BACII,WAASY,QAAQ3I,KAAK2H;0BACxB,OAAOd;4BACLM,QAAQe,OAAOrB;4BACf;;;oBAIR,IAAIkB,oBAAkBT,iBAAiBS,SAAOP,YAAYO,SAAON,WAAW;wBAEpEM,SAAOP,WACPL,QAAQ7B,QAAQyC,SAAOpK,SAEvBwJ,QAAQe,OAAOH,SAAOJ;wBAG1BI,SAAOL,gBAAe;2BAEfjB,gBAAUsB,YAEbA,oBAAkBT,iBAAiBS,SAAOP,YAAYO,SAAON,YACzDM,SAAOP,WACPL,QAAQ7B,QAAQyC,SAAOpK,SAEvBwJ,QAAQe,OAAOH,SAAOJ,SAK1BY,MAAMR,UAAQZ,WAKlBA,QAAQ7B,QAAQyC;;gBAIxBH,SAAS7I,SAAS;gBAClBiB,KAAK6H,eAAc;gBACnBR;;;QAxNR,OA2NIhC,OAAA,SAA2BqD,WAA0DC;YAEjF,IAAID,aAAkC,qBAAdA,cAA6BA,UAAU7L,MAC3D,MAAM,IAAIsL,MAAM;YAGpB,IAAIQ,WAA8B,qBAAZA,YAA2BA,QAAQ9L,MACrD,MAAM,IAAIsL,MAAM;YAGpB,IAAIhB,UAAgC,IAAIG;YAExCtH,KAAK4H,SAAS5I,KAAK;gBACfmI;gBACAuB;gBACAC;;YAGJ3I,KAAK0H,gBAAe;YAEpB1H,KAAKoI;YAEL,OAAOjB;;QAjPf,OAoPIyB,QAAA,SAA4BD;YACxB,OAAO3I,KAAKqF,UAAKwD,GAAWF;;QArPpC,OAwPIG,UAAA,SAAQC;YAEJ,IAAIA,aAAkC,qBAAdA,cAA6BA,UAAUlM,MAC3D,MAAM,IAAIsL,MAAM;YAGpB,OAAOnI,KAAKqF,MAAK,SAAC0C;gBACd,OAAOT,aAAa0B,IAAID,WACnB1D,MAAK;oBACF,OAAO0C;;iBAEhB,SAAClB;gBACA,OAAOS,aAAa0B,IAAID,WACnB1D,MAAK;oBACF,MAAMwB;;;;QAtQ1B,OA2QIoC,UAAA,SAAQC,MAAerC;YAAgC;YAEnD,IAAI7G,KAAKwH,YAAYxH,KAAKyH,UACtB,OAAOzH;YAGX,IAAIiJ,UAAU1D,YAAW;gBAEjB,OAAKiC,YAAY,OAAKC,YAI1B,OAAKS,OAAOrB,OAAO,IAAIsB,MAAJ,6BAAsCe,OAAtC;gBAEpBA;YAEH,OAAOlJ,KAAKqF,MAAK,SAAA0C;gBACb7B,aAAa+C;gBACb,OAAOlB;;;QA7RnB,OAkSIoB,YAAA;YAEI,IAAuB,sBAAZ/D,SACP,MAAM,IAAIgE,UAAJ;YAGV,OAAOhE,QAAQE,QAAQtF;;QAxS/B,aA2SWsF,UAAP,SAA0B3H;YAEtB,OAAIA,iBAAiB2J,eACV3J,QAGP8I,gBAAU9I,SAEH,IAAI2J,cAAa,SAAChC,SAAS4C;gBAAV,OAAqBvK,MAAM0H,KAAKC,SAAS4C;mBAG9D,IAAIZ,cAAehC,QAAQ3H;;QAtT1C,aAyTWuK,SAAP,SAAcP;YACV,QAAO,IAAIL,cAAeY,OAAOP;;QA1TzC,aA6TWW,cAAP,SAAmBX;YACf,QAAO,IAAIL,cAAegB,YAAYX;;QA9T9C,aAiUW0B,MAAP,SAA6BC;YAEzB,IAAInC,UAAU,IAAIG;YAClB,IAAIiC,QAAQD,SAASvK;YACrB,IAAIyK,UAAU;YAEd,KAAKD,OAAO;gBACRpC,QAAQ7B,QAAQkE;gBAChB,OAAOrC;;YAGX,IAAMoB,QAAQ,SAAI7L,GAAY8L,cAAgCC;gBAC1D,OAAOD,aAAanD,MAAK,SAAA4C;oBACrBuB,QAAQ9M,KAAKuL;oBAEC,MADdsB,SAAS,MAELpC,QAAQ7B,QAAQkE;qBAErB,SAAA3C;oBACC4B,cAAcP,OAAOrB;;;YAI7B,KAAK,IAAInK,IAAI,GAAGA,IAAI4M,SAASvK,QAAQrC,KAAK;gBACtC,IAAI+M,OAAOH,SAAS5M;gBAEpB,IAAI+M,gBAAgBnC;oBAChB,IAAImC,KAAKjC,UAAU;wBACfgC,QAAQ9M,KAAK+M,KAAK9L;wBAClB4L,SAAS;wBACT;;uBAED,KAAK9C,gBAAUgD,OAAO;oBACzBD,QAAQ9M,KAAK+M;oBACbF,SAAS;oBACT;;gBAGJhB,MAAM7L,GAAG4K,aAAahC,QAAQmE,OAAOtC;;YAG3B,MAAVoC,SACApC,QAAQ7B,QAAQkE;YAGpB,OAAOrC;;QA9Wf,aAiXWuC,OAAP,SAAwBJ;YACpB,IAAIvB,SAAS;YAEb,OAAOT,aAAa+B,IAAIjM,OAAOuM,KAAKL,UAAUM,KAAI,SAAA3L;gBAC9C,OAAOqJ,aAAahC,QAAQgE,SAASrL,MAAMoH,MAAK,SAAA1H;oBAC5CoK,OAAO9J,OAAON;;iBAElB0H,MAAK;gBACL,OAAO0C;;;QAzXnB,aA6XW6B,MAAP,SAAiBC,OAAkBC;YAE/B,OAAOxC,aAAa+B,IAAIQ,MAAMD,IAAIE;;QA/X1C,aAkYWC,+BAAP,SAAoCxC;YAChC,OF3WD,SAAsCA;gBACzCR,iCAAiC/H,KAAKuI;gBAEtC,OAAO;oBACHyC,QADG;wBAECjD,iCAAiCkD,OAAOlD,iCAAiC7G,QAAQqH,UAAU;;;aEsWxFwC,CAA6BxC;;QAnY5C,aAsYWyB,MAAP,SAA8Dc,QAAiD7J,SAAciK;YAEzH,IAAIJ,UAA4B,qBAAXA,WAA0BA,OAAOjN,MAClD,MAAM,IAAIsL,MAAM;YAGpB,IAAIJ;YAEJX;YAEA;gBAEIW,SAAS+B,OAAOtD,MAAMvG,SAASiK,QAAQ;cACzC,OAAOrD;gBACLQ;gBACA,OAAOC,aAAaY,OAAOrB;;YAG/BQ;YAEA,OAAOC,aAAahC,QAAQyC;;QA1ZpC,aA6ZWoC,QAAP,SAAaA;YACT,OAAO,IAAI7C,cAAa,SAAAhC;gBACpBC,WAAWD,SAAS6E;;;QA/ZhC,aAmaW1D,YAAP,SAAiB9I;YAEb,UAAIA,SAASA,iBAAiB2J,iBAIvBb,gBAAU9I;;QAzazB,aA4aWyM,QAAP;YACI,OD3ZD,SAAqBC;gBACxB,IAAIlD,UAAUF,eAAeA,gBAAgB,IAAIoD;gBACjDnD;gBACA,OAAOC;aCwZImD,CAAYhD;;QA7a3B;KAAA;ICOO,SAASiD,gBAAgBC;aAA+C,MAA/CA,cAA6BxE;QACzD,OCTQ,aDSDwE,IAAIC,SAASC;;IAoCjB,SAASC,kBAAkBH;QAC9B;YAGI,QAAO;UACT,OAAO3D;QAIT,QAAO;;IAGJ,SAAS+D,gBAAgBJ;aAA+C,MAA/CA,cAA8BxE;QAE1D,IAAIyE,WAAWD,IAAIC;QAEnB,KAAKA,UACD,MAAM,IAAItC,MAAJ;QAGV,IAAIuC,WAAWD,SAASC;QAExB,KAAKA,UACD,MAAM,IAAIvC,MAAJ;QAGV,ICxEQ,YDwEJuC,UACA,OAAWG;QAGf,IC3EQ,aD2EJH,UAA6B;YAE7B,IAAII,SAjEL,SAAmBN;qBAAgE,MAAhEA,cAA+BxE;gBAErD,IAAKwE,KAIL;oBACI,IAAIA,IAAIM,UAAUN,IAAIM,WAAWN,KAC7B,OAAOA,IAAIM;kBAEjB,OAAOjE;aAuDQkE,CAAUP;YACvB,OAAIM,UAAUH,sBAEHC,gBAAgBE,UAGhBD;;QAGf,IAAIG,OAAOP,SAASO;QAEpB,KAAKA,MACD,MAAM,IAAI7C,MAAJ;QAGV,OAAWuC,WAAX,OAA0BM;;IAGvB,SAASC,UAAUT;aAA+C,MAA/CA,cAA8BxE;QAEpD,IAAIkF,SAASN,gBAAgBJ;QAE7B,OAAIU,UAAUV,IAAIW,cAAwD,MAA1CX,IAAIW,WAAWjL,QCrGvC,WDsGGsK,IAAIW,aAGRD;;IAgEJ,SAASE,aAAaZ;QAEzB,KA9CG,SAA8BA;YAEjC;gBACI,IAAIA,QAAQxE,QACR,QAAO;cAGb,OAAOa;YAIT;gBACI,IAAIwE,OAAOjO,OAAOkO,yBAAyBd,KAAK;gBAEhD,IAAIa,SAA4B,MAApBA,KAAK/N,YACb,QAAO;cAGb,OAAOuJ;YAIT;gBAEI,IAAI0D,gBAAgBC,QAAQG,qBACxB,QAAO;cAEb,OAAO9D;YAIT;gBAEI,IAAI+D,gBAAgBJ,SAASI,gBAAgB5E,SACzC,QAAO;cAGb,OAAOa;YAIT,QAAO;SAKF0E,CAAqBf,MACtB,QAAO;QAGX;YAEI,IAAIA,QAAQxE,QACR,QAAO;YAIX,IAAIuE,gBAAgBC,QAAQG,qBACxB,QAAO;YAIX,IAAIM,UAAUjF,YAAYiF,UAAUT,MAChC,QAAO;UAGb,OAAO3D;QAIT,QAAO;;IAoPX,IAAI2E,gBAAgB;IACpB,IAAIC,eAAe;IE5OZ,SAASC;IAiiBT,SAASC,UAAajF;QACzB,OAAOlF,GAAgBQ,MAAMnF,KAAK6J;;IC/W/B,SAASkF,eAAeC;QAC3B7L,KAAK6L,UAAUA;;IAGnBD,eAAe/I,YAAYzF,OAAOY,OAAOmK,MAAMtF;;KC9W4B,oCACnD,0BADmD,6BAEnD;KAGwD,qCACxD,gCADwD,8BAExD;ICLxB,SAASiJ,gBAAkB7M,UAAsE8M;QAC7F,IAAMhE,SAAS;QADiI,wBAG5H9I,SAH4H,eAGlH;YAC1B,IAAM+M,gBADU/M,SAAJ,KACgB6D,OAAOiJ;YAEnC,IAAKC,eAEE,IAAIxK,MAAMC,QAAQuK,gBAAgB,wBACdA,cADc,eACC;gBAAjC,IAAMC,WAAYD,cAAJ;gBACXC,YACAlE,OAAO/I,KAAKiN;mBAIpBlE,OAAO/I,KAAKgN;;QAIpB,OAAOjE;;IAGJ,IAAMmE,mBAAb;QAQI,qBAAYjP,MAAeqC,OAAuBL;YAAsE,KAPxHI,OC9CY;YDqD4G,KALxHpC,YAKwH;YAAA,KAJxHqC,aAIwH;YAAA,KAHxHL,gBAGwH;YAAA,KAFxHkN,gBAEwH;YACpHnM,KAAK/C,OAAOA;YACZ+C,KAAKV,QAAQA;YACbU,KAAKf,WAAWA;YAEhB,IAAMkN,WAAW7M,MAAM6M;YACvB,IAAwB,qBAAbA,UAAyB;gBAChCnM,KAAKmM,WAAWA;uBACT7M,MAAM6M;;;QAhBzB;QAAA,OAoBIrJ,SAAA,SAAUiJ;YACN,IAAMK,KAAKL,SAAS/L;YAChBA,KAAKmM,YACLnM,KAAKmM,SAASC;YAElB,OAAOA;;QAzBf,OA4BIN,iBAAA,SAAkBC;YACd,OAAOD,gBAAe9L,KAAKf,UAAU8M;;QA7B7C;KAAA;IAiCO,IAAMM,oBAAb;QAKI,sBAAYpN;YAAsE,KAJlFI,OC5EY;YDgFsE,KAFlFJ,gBAEkF;YAC9Ee,KAAKf,WAAWA;;QANxB,uBASI6D,SAAA,SAAUiJ;YACN,OAAOD,gBAAe9L,KAAKf,UAAU8M;;QAV7C;KAAA;IAcO,IAAMO,gBAAb;QAKI,kBAAYC;YAAe,KAJ3BlN,OC5FY;YDgGe,KAF3BkN,YAE2B;YACvBvM,KAAKuM,OAAOA;;QANpB,mBASIzJ,SAAA,SAAUiJ;YACN,OAAOA,SAAS/L;;QAVxB;KAAA;IAcO,IAAMwM,qBAAb;QAOI,uBAAYC,WAAsCnN,OAAuBL;YAAsE,KAN/II,OCzGY;YD+GmI,KAJ/IoN,iBAI+I;YAAA,KAH/InN,aAG+I;YAAA,KAF/IL,gBAE+I;YAC3Ie,KAAKyM,YAAYA;YACjBzM,KAAKV,QAAQA;YACbU,KAAKf,WAAWA;;QAVxB;QAAA,QAaIyN,kBAAA,SAAgBX;YAGZ,IAAMY,QAsCd,SAAwBA;gBACpB,IAAM1N,WAAW2N,kBAAkBpL,MAAMC,QAAQkL,SAASA,QAAQ,EAAEA;gBAEpE,OAAwB,MAApB1N,SAASF,SACFE,SAAS,KACTA,SAASF,SAAS,IAClB,IAAIsN,kBAAapN,iBADrB;aA3CW4N,CAAe7M,KAAKyM,UADhBzM,KAAKV,OAC4BU,KAAKf;YACxD,IAAI0N,OACA,OAAOA,MAAM7J,OAAOiJ;;QAlBhC,QAsBIjJ,SAAA,SAAUiJ;YACN,OAAOA,SAAS/L;;QAvBxB,QA0BI8L,iBAAA,SAAkBC;YACd,OAAOD,gBAAe9L,KAAKf,UAAU8M;;QA3B7C;KAAA;IA+BA,SAASa,kBAAkB3N;QACvB,IAAM8I,SAAS;QADqG,wBAGhG9I,SAHgG,eAGtF;YAAzB,IAAM0N,QAAS1N,SAAJ;YACZ,IAAK0N,OAEE,IAAqB,mBAAVA,OACd5E,OAAO/I,KAAK,IAAIsN,cAASK,cACtB,IAAInL,MAAMC,QAAQkL,QAAQ,wCACNC,kBAAkBD,QADZ,yCAEzB5E,OAAO/I,KADQ,gCAGhB;gBAAA,KAAI2N,SCrJH,cDqJaA,MAAMtN,QCpJnB,WDoJiDsN,MAAMtN,QCnJvD,gBDmJkFsN,MAAMtN,MAI5F,MAAM,IAAI+J,UAAJ,oCAAiDuD;gBAHvD5E,OAAO/I,KAAK2N;;;QAOpB,OAAO5E;;IAaJ,IAAM+E,YAAuB,SAACC,SAASzN;QAAuB,kCAAbL,WAAa,mEAAbA,SAAa;QAEjEK,QAAQA,SAAS;QACjBL,WAAW2N,kBAAkB3N;QAE7B,IAAuB,mBAAZ8N,SAEP,OAAO,IAAIb,iBAAYa,SAASzN,OAAOL;QAG3C,IAAuB,qBAAZ8N,SAEP,OAAO,IAAIP,mBAAcO,SAASzN,OAAOL;QAG7C,MAAM,IAAImK,UAAJ;;;IE7GV,IAAM4D,iBAAiF,6BAE3D,SAACZ,IAAIU;QACzB,IAAMG,aAAaH,KAAK7N,SAAS;QAEjC,IAA6B,MAAzB6N,KAAK7N,SAASF,WAAkBkO,cDjF5B,cCiF0CA,WAAW5N,QAxExD,WAwEuF4N,WAAWhQ,MACnG,MAAM,IAAIkL,MAAJ;QAGViE,GAAGnK,iBAAiB,SAAQ;YAGxB,IAAMuI,MAAM4B,GAAGc;YAEf,KAAK1C,KACD,MAAM,IAAIrC,MAAJ;YAGV,IAAMgF,MAAM3C,IAAInG;YAChB,IAAM+I,aAAaD,IAAIE;YAEvB,MAAOD,WAAWnO,YAAYmO,WAAWnO,SAASF,UAC9CqO,WAAWvO,YAAYuO,WAAWnO,SAAS;YAI/C,IAAM0N,QAAsBM,WAAWnK,OAAOwK,IAAI;gBAAEH;;YAEpD,MAAOR,MAAM1N,SAASF,UAClBqO,WAAWjM,YAAYwL,MAAM1N,SAAS;;OA7BiC,uBAkC3D,SAACmN,IAAIU;QACzB,IAAMG,aAAaH,KAAK7N,SAAS;QAEjC,IAA6B,MAAzB6N,KAAK7N,SAASF,WAAkBkO,cDhH5B,WCgH0CA,WAAW5N,MACzD,MAAM,IAAI8I,MAAJ;QAIViE,GAAGG,OAAOU,WAAWV;OA1C0D,wBA6C1D,SAACH,IAAIU,MAAMf;QAAa,0CACzBe,KAAKhB,eAAeC,WADK,2CAEzCK,GAAGjL,YADS;OA9C+D;IA+EhF,SAASmM,IAAIC;aAAgD,MAAhDA,gBAA8B;QAAkB,gBACrCA,KAAnBJ,gBADwD,kBAClD9I,WADkD;QAwBhE,OArBkC,SAA5BmJ,YAA6BV;YAC/B,ID7JQ,gBC6JJA,KAAKzN,MACL,OAAOyN,KAAKJ,gBAAgBc;YAGhC,IDlKQ,WCkKJV,KAAKzN,MAEL,OAvHZ,SAA2B8N,KAAgBL;gBACvC,OAAOK,IAAI7I,eAAewI,KAAKP;aAsHhBkB,CAAkBN,KAAKL;YAGlC,IDxKQ,cCwKJA,KAAKzN,MAA4B;gBACjC,IAAM+M,KApIlB,SAAuBe,KAAgBL;oBACnC,OAAIA,KAAKxN,MAAL,KAEOwN,KAAKxN,MAAL,KAGJ6N,IAAI3I,cAAcsI,KAAK7P;iBA8HXuH,CAAc2I,KAAKL;iBAvH1C,SAAkBV,IAAkBU;oBAChC,IAAMxN,QAAQwN,KAAKxN;oBADmB,kCAGnBlC,OAAOuM,KAAKrK,QAHO,mCAGC;wBAAlC,IAAMoO,OAAI;wBACX,IAAMC,MAAMrO,MAAMoO;wBAEdC,eArCI,SAqC0CD,QAtC1C,gBAsCsEA,SAI1EA,KAAKE,MAAM,oBAAmC,qBAARD,MACtCvB,GAAGnK,iBAAiByL,KAAK1L,MAAM,GAAGD,eAAe4L,OAC3B,mBAARA,OAAmC,mBAARA,MACzCvB,GAAG5J,aAAakL,MAAMC,IAAI/G,cAEJ,oBAAR+G,QACF,MAARA,OACAvB,GAAG5J,aAAakL,MAAM;;oBAzDzB,aA8DLtB,GAAGyB,QAAQ9L,iBAAyCzC,MAAMwO,MAC1D1B,GAAG5J,aAxDK,MAwDR,gBCvEG,aAAaV,QAAQ,OAAM;wBAAA,OAHlB,mBAGoCiM,OAAOC,KAAKC,MAAMD,KAAKE,WAH3D,mBAGkFnP;;iBDwK1FoP,CAAS/B,IAAIU;iBA1CzB,SAAqBV,IAAkBU,MAAoBK,KAAgBpB;oBACvE,IAAIe,KAAKxN,MAAMhB,eA/GH,cA+G4C;wBAEpD,IAAIwO,KAAK7N,SAASF,QACd,MAAM,IAAIoJ,MAAJ;wBAGV,IAAMiG,OAAOtB,KAAKxN,MAAL;wBAEb,IAAoB,mBAAT8O,MACP,MAAM,IAAIhF,UAAciF;wBAG5B,IAlIK,aAkIDvB,KAAK7P,MAELmP,GAAGG,OAAO6B,WACP;4BACHhC,GAAGvH,YAAYuJ;6BA3H3B,SAAoBhC,IAAkBe;qCAAkC,MAAlCA,cAAiBnH,OAAO3B;gCAAU,0CAC/C+H,GAAGkC,iBAAiB,WAD2B,2CAChB;oCAA/C,IAAMC,SAAM;oCACb,IAAM3P,aAAa2P,OAAO3P;oCAE1B,IAAKA,YAAL;wCAIA,IAAM4P,YAAYrB,IAAI3I,cAAc;wCAEpCgK,UAAUjC,OAAOgC,OAAOE;wCACxB7P,WAAW8P,aAAaF,WAAWD;;;6BAiH/BI,CAAWvC,IAAIe;;4BAIUH,aAAaF,KAAK7P,SAAS+P,aAAY,SAC/CZ,IAAIU,MAAMf;iBAoB3B6C,CAAYxC,IAAIU,MAAMK,KAAKK;gBAE3B,OAAOpB;;YAGX,MAAM,IAAIhD,UAAJ;;;IE5GP,SAASyF,YAAT,MAAsD5P;QAAuC,IAAtE6P,QAAsE,KAAtEA;QAC1B,OACI,wBACI,wBACI,oCACA;YAAM7R,MAAK;YAAW8R,SAAQ;aAElC,wBACI;YAAKC,OAAM;WACP;YAAOF,OAAQA;YAAQjK,WA3EtB;YA6ED;YAAKmK,OAAM;WACP;YAAGA,OAAM;YACT;YAAGA,OAAM;cAGf/P;;IC3DX,SAASgQ;QACZ,IAAIH,QAAQ;QACRzK,SAAS6K,SACTJ,QAAQzK,SAAS6K,KAAKC,aCRP,iBDQqD;QAExE,OAAOL;;IETJ,SAASM,KAAT;QAA0F,IAA1EC,UAA0E,KAA1EA,SAASC,WAAiE,KAAjEA,UAAUC,SAAuD,KAAvDA,QAAQC,WAA+C,KAA/CA,UAAUC,iBAAqC,KAArCA;QAExD,IAAMC,YCdH;YACH,IAAMvQ,MnBb4wB,SAAWhB,GAAEX;gBAAG,IAAImB,IAAE,eAAE;gBAAK,OAAOiH,EAAEjH,EAAEmB,GAAEtC,MAAImB,EAAEmB,IAAEtC,GAAEmB,EAAE7B,IAAEqB,GAAEQ,EAAExB,IAAjJ;oBAAC4H,cmBalrB4K;qBnBby0BhR,EAAExB;aAA7K,EAAE;gBAAW,OAAM;oBAAC4H,cmBalrB4K;;gBnBb8rB;YmBe1sBC,gBAAU;gBACFzQ,IAAI4F,WACJ5F,IAAI4F,QAAQ8K;;YAIpB,OAAO1Q;SDKW2Q;QAelB,OACI,EAAC,GAAD,MACI;YAAOhB,OAAQU;WAAf,ulBAc2BC,iBAd3B,orBAoCA;YAAKT,OAAM;YAAOe,UAAS;YAAIR,QAASA;YAASpQ,KAAMuQ;WAE/CL,QAAQzF,KAAI,SAAAoG;YACR,OACI;gBAAKhB,OAAM;gBAAYiB,SAAU;oBAAA,OAvDpC,SAACD;wBAClB,IAAIxF;wBAEAwF,OAAOE,UACP1F,MEtBL;4BACH,IAAMA,Md+LH,SAA0BA;gCAC7B,KAAKY,aAAaZ,MACd,MAAM,IAAIrC,MAAJ;gCAIV,OAAOqC;6BcrMK2F,CX0YT,SAAeC,KAAcjO;gCAAiD,IAK3EkO,SAFNlO,UAAUA,WAAW,IAEfkO,OAAOC,SAAWnO,QAAXmO;gCAEb,IAAIC,MAAM;gCACV,IAAIC,OAAO;gCAEPH,UACIrK,OAAOyK,aACPD,OAAOxC,KAAK0C,OAAO1K,OAAOyK,aAAaJ,SAAS,KAAKrK,OAAO2K,UACrD3K,OAAO4K,OAAOP,UACrBG,OAAOxC,KAAK0C,OAAO1K,OAAO4K,OAAOP,QAAQA,SAAS;gCAItDC,WACItK,OAAO6K,cACPN,MAAMvC,KAAK0C,OAAO1K,OAAO6K,cAAcP,UAAU,KAAKtK,OAAO8K,UACtD9K,OAAO4K,OAAON,WACrBC,MAAMvC,KAAK0C,OAAO1K,OAAO4K,OAAON,SAASA,UAAU;gCAIvDD,SAASC,WACTnO,UAAU;oCACNoO;oCACAC;oCACAH;oCACAC;oCACAS,QAAY;oCACZC,SAAY;oCACZC,SAAY;oCACZC,WAAY;oCACZC,YAAY;mCACThP;gCAIX,IAAIlF,OAAOkF,QAAQlF,QAAQ;uCACpBkF,QAAQlF;gCAGf,IAAImU,SAAShU,OAAOuM,KAAKxH,SAASyH,KAAI,SAAA3L;oCAElC,IAAIkE,gBAAQlE,MACR,OAAWA,MAAX,ODxGY,oBADEyI,OCyGgBvE,QAAQlE,QDvGnCyI,OAGPA,QAAQA,KAAKE,YAAqC,qBAAlBF,KAAKE,WAE9BF,KAAKE,aAGTxJ,GAAiBwJ,SAAS/J,KAAK6J;oCAVnC,IAAmBA;oCC2GnB2K,OAAOC,SAASC,KAAK;gCAExB,IAAI/G;gCAEJ;oCACIA,MAAMxE,OAAOwL,KWjckB,IXicRvU,MAAMmU,SAAQ;kCACvC,OAAOvK;oCACL,MAAM,IAAI+E,eAAJ,kCAAmD/E,IAAIiB,SAASjB,IAAIgF;;gCAG9E,IHpBG,SAAwBrB,KAA6BiH;yCAAsC,MAAtCA,2BAAsB;oCAE9E;wCACI,IAAIjH,QAAQxE,QACR,QAAO;sCAEb,OAAOa;wCACL,QAAO;;oCAGX;wCACI,KAAK2D,KACD,QAAO;sCAGb,OAAO3D;wCACL,QAAO;;oCAGX;wCACI,IAAI2D,IAAIkH,QACJ,QAAO;sCAGb,OAAO7K;wCAIL,QAAIA,OAldc,uCAkdPA,IAAIgF;;oCAQnB,IAAI4F,aAAarG,aAAaZ,MAC1B;wCAEI,IAAIA,IAAImH,YACJ,QAAO;sCAEb,OAAO9K;oCAOb;wCACI,KAAK2D,IAAIM,WAAWN,IAAI+F,KACpB,QAAO;sCAEb,OAAO1J;oCAeT,IAAI+K,cAtFR,SAAwBC,YAAuBnL;wCAC3C,KAAK,IAAIhK,IAAI,GAAGA,IAAImV,WAAW9S,QAAQrC,KAEnC;4CACI,IAAImV,WAAWnV,OAAOgK,MAClB,OAAOhK;0CAEb,OAAOmK;wCAKb,QAAQ;qCA0EUiL,CAAYtG,eAAehB;oCAE7C,KAAqB,MAAjBoH,aAAoB;wCACpB,IAAIG,QAAQtG,aAAamG;wCAEzB,IAAIG,SA9GL,SAA6BA;4CAEhC,KAAKA,MAAM7E,eACP,QAAO;4CAGX,KAAK6E,MAAMnT,YACP,QAAO;4CAGX,IAAIuO,MAAM4E,MAAMC;4CAEhB,UAAI7E,QAAOA,IAAIE,mBAAoBF,IAAIE,gBAAgB4E,SAASF;yCAkG/CG,CAAoBH,QAC7B,QAAO;;oCAIf,QAAO;iCG1DHI,CAAe3H,MAAM;oCACrB,IAAI3D;oCACJ,MADU,IAAI+E,eAAJ;;gCAId5F,OAAO/D,iBAAiB,WAAU;oCAAA,OAAMuI,IAAI4H;;gCAE5C,OAAO5H;6BW7csB0F,CAAM,GAAI;gCAAEG,OAD8D,KAA/EA;gCACwBC,QADuD,KAAxEA;;4BAG/B,IAAMnD,MAAM3C,IAAInG;6BX6db,SAA8BmG,KAA4B4B;gCAE7D,IAAIiG,MAAMjG,GAAGyB,QAAQ9L;gCAErB,IAAY,WAARsQ,KACA,MAAM,IAAIlK,MAAJ,sCAA+CkK;gCAGzD,IAAIhF,kBAAkB7C,IAAInG,SAASgJ;gCAR4C,gCAU3D1B,UAAU0B,gBAAgBpO,WAViC,iCAW3EoO,gBAAgBxO,YADJ;gCAV+D,gCAc3D8M,UAAUS,GAAGnN,WAd8C,iCAe3EoO,gBAAgBlM,YADJ;6BWrehBmR,CAAqB9H,KAHjB,UAACqE,aAAD;gCAAaC,OAAQG;+BACvBnM,OAAOwK,IAAI;gCAAEH;;4BAIf,OAAO3C;yBFWO+H,CAAU;4BACZlC,OAAQL,OAAOE,MAAMG;4BACrBC,QAAQN,OAAOE,MAAMI;;wBAI7B,OAAOhB,SAAS;4BAAExB,IAAIkC,OAAOlC;4BAAItD;;qBA6C0BgI,CAAaxC;;eAC9CA,OAAOyC;;;IGjEzC,SAASC,KAAT;QAA+C,IAA/BlD,WAA+B,KAA/BA;QAA+B,iBFfxC;YAA4B,gBACDmD,eAAS3M,OAAO4M,SAAtCA,SADuB,cACfC,YADe;YAE/BjD,gBAAU;gBAAA,OAAMgD,OAAOE,SAAQ,SAAAC;oBAC3BF,UAAU,aAAKE;;gBACf;YACJ,oBAAYH;SEWuDI,IAA3D3D,UADmC,WACnCA,SAASC,WAD0B,WAC1BA,UAAUG,iBADgB,WAChBA,gBAAgBwD,OADA,WACAA,MADA,+BACM1D,sBADN,0BACe7D,gBADf;QAAA,gBAEbiH,gBAAS,IAA/BO,SAFmC,cAE3BC,YAF2B;QAAA,iBAGXR,gBAAS,IAAjCS,UAHmC,eAG1BC,aAH0B;QAK3CzD,gBAAU;YACN,IAAM0D,aAAahC,QAAQjC,WAAWA,QAAQtQ;YAC9CoU,UAAUG;YACVD,WAAWC;YACZ,EAAEjE;QAeL,OACI,EAAC,GAAD,MACI;YAAOP,OAAQU;WAAf,uPASwB0D,SAAS,MAAM,OATvC,oDAUmC,IAAmBK,QAAQ,KAV9D,mPAsBKlE,WAAW+D,UACN,EAAChE,MAAD;YACEC,SAAUA;YAAUC,UAvChB,SAAC;gBAAgB,IAAdxB,KAAc,MAAdA,IAAItD,MAAU,MAAVA;gBAC3B6I,YAAW;gBACX,OAAO/D,SAAS;oBAAExB;oBAAItD;;;YAqC2C+E,QAlC/C;gBAClB4D,WAAU;gBACV,OAAO7L,qBAAa6C,MAxBV,KAwB2B9E,MAAK;oBACtCgO,YAAW;oBACX,OAAO/L,qBAAa+B,IAAI,EAAEkG,UAAU0D;;;YA+BxBzD,UAAWA;YAAWC,gBAAiBA;aACzC;;IAUf,SAAS+D,UAAT;StBjFixN,SAAW7W,GAAEgC,GAAEjC;YAAG,IAAIS,GAAEuB,GAAE3B;YAAEoB,EAAEqB,OAAKrB,EAAEqB,IAAI7C,GAAEgC,IAAGD,KAAGvB,IAAET,MAAI,mBAAG,OAAeiC,EAAEY,KAAI5C,IAAE6B,EAAEsB,GAAE,MAAK,EAACnD;YAAII,IAAE,IAAGmE,EAAEvC,GAAIA,EAAEY,MAAI5C,GAAe+B,KAAG,iBAAE,sBAAE,MAASC,EAAEwG,iBAA0BzG,IAAE,OAAKD,EAAEuD,MAAMnF,KAAK8B,EAAE+F,aAAY3H,IAAE,GAAM,iBAAEI;YAAGuF,EAAE3F,GAAEJ;SsBkFl/NmG,CAAO,EAAC4P,MAAD;YAAMlD,UADsC,MAA3BA;YClErB;YACH,IAAMN,OAAO7K,SAAS6K;YAEtB,KAAKA,MACD,MAAM,IAAI/G,MAAJ;YAGV,OAAO+G;SD4DgCuE;;IEhF3C;QAAA","file":"smart-menu.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var n,l,u,t,i,r={},f=[],o=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;function e(n,l){for(var u in l)n[u]=l[u];return n}function c(n){var l=n.parentNode;l&&l.removeChild(n)}function s(n,l,u){var t,i,r,f,o=arguments;if(l=e({},l),arguments.length>3)for(u=[u],t=3;t<arguments.length;t++)u.push(o[t]);if(null!=u&&(l.children=u),null!=n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===l[i]&&(l[i]=n.defaultProps[i]);return f=l.key,null!=(r=l.ref)&&delete l.ref,null!=f&&delete l.key,a(n,l,f,r)}function a(l,u,t,i){var r={type:l,props:u,key:t,ref:i,__k:null,__p:null,__b:0,__e:null,l:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(r),r}function h(){return{}}function v(n){return n.children}function p(n){if(null==n||\"boolean\"==typeof n)return null;if(\"string\"==typeof n||\"number\"==typeof n)return a(null,n,null,null);if(null!=n.__e||null!=n.__c){var l=a(n.type,n.props,n.key,null);return l.__e=n.__e,l}return n}function y(n,l){this.props=n,this.context=l}function d(n,l){if(null==l)return n.__p?d(n.__p,n.__p.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?d(n):null}function m(n){var l,u;if(null!=(n=n.__p)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return m(n)}}function w(t){!t.__d&&(t.__d=!0)&&1===l.push(t)&&(n.debounceRendering||u)(g)}function g(){var n;for(l.sort(function(n,l){return l.__v.__b-n.__v.__b});n=l.pop();)n.__d&&n.forceUpdate(!1)}function k(n,l,u,t,i,o,e,s,a){var h,v,y,m,w,g,k,b,x=l.__k||_(l.props.children,l.__k=[],p,!0),C=u&&u.__k||f,P=C.length;for(s==r&&(s=null!=o?o[0]:P?d(u,0):null),v=0;v<x.length;v++)if(null!=(h=x[v]=p(x[v]))){if(h.__p=l,h.__b=l.__b+1,null===(m=C[v])||m&&h.key==m.key&&h.type===m.type)C[v]=void 0;else for(y=0;y<P;y++){if((m=C[y])&&h.key==m.key&&h.type===m.type){C[y]=void 0;break}m=null}if(w=N(n,h,m=m||r,t,i,o,e,null,s,a),(y=h.ref)&&m.ref!=y&&(b||(b=[])).push(y,h.__c||w,h),null!=w){if(null==k&&(k=w),null!=h.l)w=h.l,h.l=null;else if(o==m||w!=s||null==w.parentNode)n:if(null==s||s.parentNode!==n)n.appendChild(w);else{for(g=s,y=0;(g=g.nextSibling)&&y<P;y+=2)if(g==w)break n;n.insertBefore(w,s)}s=w.nextSibling,\"function\"==typeof l.type&&(l.l=w)}}if(l.__e=k,null!=o&&\"function\"!=typeof l.type)for(v=o.length;v--;)null!=o[v]&&c(o[v]);for(v=P;v--;)null!=C[v]&&z(C[v],C[v]);if(b)for(v=0;v<b.length;v++)j(b[v],b[++v],b[++v])}function _(n,l,u,t){if(null==l&&(l=[]),null==n||\"boolean\"==typeof n)t&&l.push(null);else if(Array.isArray(n))for(var i=0;i<n.length;i++)_(n[i],l,u,t);else l.push(u?u(n):n);return l}function b(n,l,u,t,i){var r;for(r in u)r in l||C(n,r,null,u[r],t);for(r in l)i&&\"function\"!=typeof l[r]||\"value\"===r||\"checked\"===r||u[r]===l[r]||C(n,r,l[r],u[r],t)}function x(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===o.test(l)?u+\"px\":u}function C(n,l,u,t,i){var r,f,o,e,c;if(\"key\"===(l=i?\"className\"===l?\"class\":l:\"class\"===l?\"className\":l)||\"children\"===l);else if(\"style\"===l)if(r=n.style,\"string\"==typeof u)r.cssText=u;else{if(\"string\"==typeof t&&(r.cssText=\"\",t=null),t)for(f in t)u&&f in u||x(r,f,\"\");if(u)for(o in u)t&&u[o]===t[o]||x(r,o,u[o])}else if(\"o\"===l[0]&&\"n\"===l[1])e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,P,e),(n.u||(n.u={}))[l]=u):n.removeEventListener(l,P,e);else if(\"list\"!==l&&\"tagName\"!==l&&!i&&l in n)if(n.length&&\"value\"==l)for(l=n.length;l--;)n.options[l].selected=n.options[l].value==u;else n[l]=null==u?\"\":u;else\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u))}function P(l){return this.u[l.type](n.event?n.event(l):l)}function N(l,u,t,i,r,f,o,c,s,a){var h,d,m,w,g,b,x,C,P,N,T=u.type;if(void 0!==u.constructor)return null;(h=n.__b)&&h(u);try{n:if(\"function\"==typeof T){if(C=u.props,P=(h=T.contextType)&&i[h.__c],N=h?P?P.props.value:h.__p:i,t.__c?x=(d=u.__c=t.__c).__p=d.__E:(T.prototype&&T.prototype.render?u.__c=d=new T(C,N):(u.__c=d=new y(C,N),d.constructor=T,d.render=A),P&&P.sub(d),d.props=C,d.state||(d.state={}),d.context=N,d.__n=i,m=d.__d=!0,d.__h=[]),null==d.__s&&(d.__s=d.state),null!=T.getDerivedStateFromProps&&e(d.__s==d.state?d.__s=e({},d.__s):d.__s,T.getDerivedStateFromProps(C,d.__s)),m)null==T.getDerivedStateFromProps&&null!=d.componentWillMount&&d.componentWillMount(),null!=d.componentDidMount&&o.push(d);else{if(null==T.getDerivedStateFromProps&&null==c&&null!=d.componentWillReceiveProps&&d.componentWillReceiveProps(C,N),!c&&null!=d.shouldComponentUpdate&&!1===d.shouldComponentUpdate(C,d.__s,N)){d.props=C,d.state=d.__s,d.__d=!1,d.__v=u,u.__e=t.__e,u.__k=t.__k;break n}null!=d.componentWillUpdate&&d.componentWillUpdate(C,d.__s,N)}for(w=d.props,g=d.state,d.context=N,d.props=C,d.state=d.__s,(h=n.__r)&&h(u),d.__d=!1,d.__v=u,d.__P=l,_(null!=(h=d.render(d.props,d.state,d.context))&&h.type==v&&null==h.key?h.props.children:h,u.__k=[],p,!0),null!=d.getChildContext&&(i=e(e({},i),d.getChildContext())),m||null==d.getSnapshotBeforeUpdate||(b=d.getSnapshotBeforeUpdate(w,g)),k(l,u,t,i,r,f,o,s,a),d.base=u.__e;h=d.__h.pop();)h.call(d);m||null==w||null==d.componentDidUpdate||d.componentDidUpdate(w,g,b),x&&(d.__E=d.__p=null)}else u.__e=$(t.__e,u,t,i,r,f,o,a);(h=n.diffed)&&h(u)}catch(l){n.__e(l,u,t)}return u.__e}function T(l,u){for(var t;t=l.pop();)try{t.componentDidMount()}catch(l){n.__e(l,t.__v)}n.__c&&n.__c(u)}function $(n,l,u,t,i,o,e,c){var s,a,h,v,p=u.props,y=l.props;if(i=\"svg\"===l.type||i,null==n&&null!=o)for(s=0;s<o.length;s++)if(null!=(a=o[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,o[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(y);n=i?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type),o=null}return null===l.type?p!==y&&(n.data=y):l!==u&&(null!=o&&(o=f.slice.call(n.childNodes)),h=(p=u.props||r).dangerouslySetInnerHTML,v=y.dangerouslySetInnerHTML,c||(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||\"\")),b(n,y,p,i,c),v||k(n,l,u,t,\"foreignObject\"!==l.type&&i,o,e,r,c),c||(\"value\"in y&&void 0!==y.value&&y.value!==n.value&&(n.value=null==y.value?\"\":y.value),\"checked\"in y&&void 0!==y.checked&&y.checked!==n.checked&&(n.checked=y.checked))),n}function j(l,u,t){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,t)}}function z(l,u,t){var i,r,f;if(n.unmount&&n.unmount(l),(i=l.ref)&&j(i,null,u),t||\"function\"==typeof l.type||(t=null!=(r=l.__e)),l.__e=l.l=null,null!=(i=l.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(l){n.__e(l,u)}i.base=i.__P=null}if(i=l.__k)for(f=0;f<i.length;f++)i[f]&&z(i[f],u,t);null!=r&&c(r)}function A(n,l,u){return this.constructor(n,u)}function D(l,u,i){var o,e,c;n.__p&&n.__p(l,u),e=(o=i===t)?null:i&&i.__k||u.__k,l=s(v,null,[l]),c=[],N(u,o?u.__k=l:(i||u).__k=l,e||r,r,void 0!==u.ownerSVGElement,i&&!o?[i]:e?null:f.slice.call(u.childNodes),c,!1,i||r,o),T(c,l)}function H(n,l){D(n,l,t)}function I(n,l){return l=e(e({},n.props),l),arguments.length>2&&(l.children=f.slice.call(arguments,2)),a(n.type,l,l.key||n.key,l.ref||n.ref)}function L(n){var l={},u={__c:\"__cC\"+i++,__p:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var t,i=this;return this.getChildContext||(t=[],this.getChildContext=function(){return l[u.__c]=i,l},this.shouldComponentUpdate=function(n){t.some(function(l){l.__P&&(l.context=n.value,w(l))})},this.sub=function(n){t.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){t.splice(t.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Consumer.contextType=u,u}n={},y.prototype.setState=function(n,l){var u=this.__s!==this.state&&this.__s||(this.__s=e({},this.state));(\"function\"!=typeof n||(n=n(u,this.props)))&&e(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),w(this))},y.prototype.forceUpdate=function(n){var l,u,t,i=this.__v,r=this.__v.__e,f=this.__P;f&&(l=!1!==n,u=[],t=N(f,i,e({},i),this.__n,void 0!==f.ownerSVGElement,null,u,l,null==r?d(i):r),T(u,i),t!=r&&m(i)),n&&n()},y.prototype.render=v,l=[],u=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,n.__e=function(n,l,u){for(var t;l=l.__p;)if((t=l.__c)&&!t.__p)try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError)t.setState(t.constructor.getDerivedStateFromError(n));else{if(null==t.componentDidCatch)continue;t.componentDidCatch(n)}return w(t.__E=t)}catch(l){n=l}throw n},t=r,i=0;export{D as render,H as hydrate,s as createElement,s as h,v as Fragment,h as createRef,y as Component,I as cloneElement,L as createContext,_ as toChildArray,z as _unmount,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u=[],i=n.__r;n.__r=function(n){i&&i(n),t=0,(r=n.__c).__H&&(r.__H.t=w(r.__H.t))};var o=n.diffed;n.diffed=function(n){o&&o(n);var t=n.__c;if(t){var r=t.__H;r&&(r.u=w(r.u))}};var f=n.unmount;function c(t){n.__h&&n.__h(r);var u=r.__H||(r.__H={i:[],t:[],u:[]});return t>=u.i.length&&u.i.push({}),u.i[t]}function e(n){return a(q,n)}function a(n,u,i){var o=c(t++);return o.__c||(o.__c=r,o.o=[i?i(u):q(null,u),function(t){var r=n(o.o[0],t);o.o[0]!==r&&(o.o[0]=r,o.__c.setState({}))}]),o.o}function v(n,u){var i=c(t++);F(i.v,u)&&(i.o=n,i.v=u,r.__H.t.push(i),_(r))}function m(n,u){var i=c(t++);F(i.v,u)&&(i.o=n,i.v=u,r.__H.u.push(i))}function p(n){return s(function(){return{current:n}},[])}function l(n,r,u){var i=c(t++);F(i.v,u)&&(i.v=u,n&&(n.current=r()))}function s(n,r){var u=c(t++);return F(u.v,r)?(u.v=r,u.m=n,u.o=n()):u.o}function d(n,t){return s(function(){return n},t)}function y(n){var u=r.context[n.__c];if(!u)return n.__p;var i=c(t++);return null==i.o&&(i.o=!0,u.sub(r)),u.props.value}function T(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}n.unmount=function(n){f&&f(n);var t=n.__c;if(t){var r=t.__H;r&&r.i.forEach(function(n){return n.p&&n.p()})}};var _=function(){};function g(){u.some(function(n){n.l=!1,n.__P&&(n.__H.t=w(n.__H.t))}),u=[]}function w(n){return n.forEach(A),n.forEach(E),[]}function A(n){n.p&&n.p()}function E(n){var t=n.o();\"function\"==typeof t&&(n.p=t)}function F(n,t){return!n||t.some(function(t,r){return t!==n[r]})}function q(n,t){return\"function\"==typeof t?t(n):t}\"undefined\"!=typeof window&&(_=function(t){!t.l&&(t.l=!0)&&1===u.push(t)&&(n.requestAnimationFrame||function(n){var t=function(){clearTimeout(r),cancelAnimationFrame(u),setTimeout(n)},r=setTimeout(t,100),u=requestAnimationFrame(t)})(g)});export{e as useState,a as useReducer,v as useEffect,m as useLayoutEffect,p as useRef,l as useImperativeHandle,s as useMemo,d as useCallback,y as useContext,T as useDebugValue};\n//# sourceMappingURL=hooks.module.js.map\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        console.warn('???', win, isWindowClosed(win));\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n/** @jsx h */\n\nimport { h, Fragment, type Node } from 'preact';\n\nimport { openPopup } from '../ui';\n\nimport { useAutoFocus } from './hooks';\n\ntype MenuProps = {|\n    cspNonce : string,\n    verticalOffset : number,\n    choices : $ReadOnlyArray<{|\n        id : string,\n        label : string,\n        popup? : {|\n            width : number,\n            height : number\n        |}\n    |}>,\n    onChoose : ({ id : string }) => void,\n    onBlur : () => void\n|};\n\nexport function Menu({ choices, onChoose, onBlur, cspNonce, verticalOffset } : MenuProps) : Node {\n\n    const autoFocus = useAutoFocus();\n\n    const selectChoice = (choice) => {\n        let win;\n\n        if (choice.popup) {\n            win = openPopup({\n                width:  choice.popup.width,\n                height: choice.popup.height\n            });\n        }\n\n        return onChoose({ id: choice.id, win });\n    };\n\n    return (\n        <Fragment>\n            <style nonce={ cspNonce }>\n                {`\n                    .menu {\n                        width: 100%;\n                        z-index: 5000;\n                        background: white;\n                        border-radius: 3px;\n                        font-family: Helvetica, sans-serif;\n                        font-size: 14px;\n                        letter-spacing: 0.5px;\n                        box-shadow: 0px 0px 3px 1px rgba(222,222,222,1);\n                        outline-style: none;\n                        user-select: none;\n                        text-align: center;\n                        margin-top: ${ verticalOffset }px;\n                    }\n                    \n                    .menu-item {\n                        border-top: 2px solid rgba(230, 230, 230, 0.5);;\n                        padding: 14px 18px;\n                        color: #0070ba;\n                        cursor: pointer;\n                        line-height: 18px;\n                    }\n                    \n                    .menu-item:first-child {\n                        border-top: none;\n                    }\n                    \n                    .menu-item:hover {\n                        background: #fcfcfc;\n                        text-decoration: underline;\n                    }\n                `}\n            </style>\n\n            <div class='menu' tabIndex='0' onBlur={ onBlur } ref={ autoFocus }>\n                {\n                    choices.map(choice => {\n                        return (\n                            <div class='menu-item' onClick={ () => selectChoice(choice) }>\n                                { choice.label }\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n}\n","/* @flow */\n\nimport { useState, useEffect, useRef } from 'preact/hooks';\n\nexport function useXProps<T>() : T {\n    const [ xprops, setXProps ] = useState(window.xprops);\n    useEffect(() => xprops.onProps(newProps => {\n        setXProps({ ...newProps });\n    }), []);\n    return { ...xprops };\n}\n\nexport function useAutoFocus() : Object {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    });\n\n    return ref;\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../button/dom';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n/** @jsx h */\n\nimport { h, render, Fragment, type Node } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getBody } from '../lib';\n\nimport { Menu } from './menu';\nimport { useXProps } from './hooks';\n\nconst FADE_TIME = 150;\n\ntype PageProps = {|\n    cspNonce : string\n|};\n\nfunction Page({ cspNonce } : PageProps) : Node {\n    const { choices, onChoose, verticalOffset, hide, onBlur = noop } = useXProps();\n    const [ opaque, setOpaque ] = useState(false);\n    const [ visible, setVisible ] = useState(false);\n\n    useEffect(() => {\n        const hasChoices = Boolean(choices && choices.length);\n        setOpaque(hasChoices);\n        setVisible(hasChoices);\n    }, [ choices ]);\n\n    const onChooseHandler = ({ id, win }) => {\n        setVisible(false);\n        return onChoose({ id, win });\n    };\n\n    const onBlurHandler = () => {\n        setOpaque(false);\n        return ZalgoPromise.delay(FADE_TIME).then(() => {\n            setVisible(false);\n            return ZalgoPromise.all([ onBlur(), hide() ]);\n        });\n    };\n\n    return (\n        <Fragment>\n            <style nonce={ cspNonce }>\n                {`\n                    * {\n                        box-sizing: border-box;\n                    }\n\n                    html, body {\n                        margin: 0;\n                        padding: 0;\n                        opacity: ${ opaque ? '1' : '0' };\n                        transition: opacity ${ (FADE_TIME / 1000).toFixed(2) }s ease-in-out;\n                    }\n\n                    body {\n                        padding: 5px 20px;\n                        display: inline-block;\n                        width: 100%;\n                    }\n                `}\n            </style>\n\n            {\n                (choices && visible)\n                    ? <Menu\n                        choices={ choices } onChoose={ onChooseHandler } onBlur={ onBlurHandler }\n                        cspNonce={ cspNonce } verticalOffset={ verticalOffset } />\n                    : null\n            }\n        </Fragment>\n    );\n}\n\ntype SetupOptions = {|\n    cspNonce : string\n|};\n\nexport function setupMenu({ cspNonce } : SetupOptions) {\n    render(<Page cspNonce={ cspNonce } />, getBody());\n}\n \n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n","/* @flow */\n\nexport * from './page';\n"],"sourceRoot":""}