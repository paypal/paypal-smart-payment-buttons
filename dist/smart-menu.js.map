{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/preact/dist/preact.module.js","webpack://spb/./node_modules/preact/hooks/dist/hooks.module.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./src/config.js","webpack://spb/./src/lib/dom.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/menu/menu.jsx","webpack://spb/./src/menu/hooks.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/menu/page.jsx","webpack://spb/./src/lib/util.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","f","e","u","a","parentNode","removeChild","v","arguments","length","push","children","defaultProps","h","ref","type","props","__k","__","__b","__e","__d","__c","constructor","vnode","y","this","context","indexOf","w","base","g","debounceRendering","k","sort","__v","pop","__P","z","__n","ownerSVGElement","A","_","b","appendChild","nextSibling","insertBefore","j","$","Array","isArray","P","setProperty","test","C","style","cssText","replace","toLowerCase","slice","addEventListener","N","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","x","contextType","__E","prototype","render","D","sub","state","__h","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","__r","getChildContext","getSnapshotBeforeUpdate","T","diffed","some","nodeType","localName","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","unmount","componentWillUnmount","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","q","F","forEach","requestAnimationFrame","clearTimeout","cancelAnimationFrame","window","filter","_extends","assign","target","source","apply","isPromise","item","Window","toString","err","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","args","delay","flush","Zalgo","awaitActive","isAboutProtocol","win","location","protocol","canReadFromWindow","getActualDomain","PROTOCOL","parent","getParent","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","iframeWindows","iframeFrames","noop","arrayFrom","PopupOpenError","message","getNonce","nonce","body","getAttribute","renderChildren","renderer","renderedChild","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","child","normalizeChildren","normalizeChild","node","element","ADD_CHILDREN","firstChild","contentWindow","doc","docElement","documentElement","dom","opts","domRenderer","createTextElement","prop","val","match","tagName","id","charAt","Math","floor","random","addProps","html","ELEMENT_PROP","querySelectorAll","script","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","content","class","Menu","choices","onChoose","onBlur","cspNonce","verticalOffset","autoFocus","useRef","useEffect","focus","useAutoFocus","tabIndex","choice","onClick","popup","assertSameDomain","url","options","width","height","top","left","outerWidth","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","params","Boolean","join","open","allowMock","closed","mockclosed","iframeIndex","collection","safeIndexOf","frame","ownerDocument","contains","isFrameWindowClosed","isWindowClosed","close","tag","writeElementToWindow","openPopup","selectChoice","label","Page","useState","xprops","setXProps","onProps","newProps","useXProps","hide","opaque","setOpaque","visible","setVisible","hasChoices","toFixed","setupMenu","getBody"],"mappings":"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","file":"smart-menu.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function v(n,l,u){var i,t=arguments,o={};for(i in l)\"key\"!==i&&\"ref\"!==i&&(o[i]=l[i]);if(arguments.length>3)for(u=[u],i=3;i<arguments.length;i++)u.push(t[i]);if(null!=u&&(o.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===o[i]&&(o[i]=n.defaultProps[i]);return h(n,o,l&&l.key,l&&l.ref)}function h(l,u,i,t){var o={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0};return n.vnode&&n.vnode(o),o}function p(){return{}}function d(n){return n.children}function y(n,l){this.props=n,this.context=l}function m(n,l){if(null==l)return n.__?m(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?m(n):null}function w(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return w(n)}}function g(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(k)}function k(){var n,l,i,t,o,r,f;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();)n.__d&&(i=void 0,t=void 0,r=(o=(l=n).__v).__e,(f=l.__P)&&(i=[],t=z(f,o,s({},o),l.__n,void 0!==f.ownerSVGElement,null,i,null==r?m(o):r),A(i,o),t!=r&&w(o)))}function _(n,l,u,i,t,o,r,c,s){var v,h,p,d,y,w,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=o?o[0]:_?m(u,0):null),v=0,l.__k=b(l.__k,function(u){if(null!=u){if(u.__=l,u.__b=l.__b+1,null===(p=k[v])||p&&u.key==p.key&&u.type===p.type)k[v]=void 0;else for(h=0;h<_;h++){if((p=k[h])&&u.key==p.key&&u.type===p.type){k[h]=void 0;break}p=null}if(d=z(n,u,p=p||f,i,t,o,r,c,s),(h=u.ref)&&p.ref!=h&&(g||(g=[]),p.ref&&g.push(p.ref,null,u),g.push(h,u.__c||d,u)),null!=d){var e;if(null==w&&(w=d),void 0!==u.__d)e=u.__d,u.__d=void 0;else if(o==p||d!=c||null==d.parentNode){n:if(null==c||c.parentNode!==n)n.appendChild(d),e=null;else{for(y=c,h=0;(y=y.nextSibling)&&h<_;h+=2)if(y==d)break n;n.insertBefore(d,c),e=c}\"option\"==l.type&&(n.value=\"\")}c=void 0!==e?e:d.nextSibling,\"function\"==typeof l.type&&(l.__d=c)}else c&&p.__e==c&&c.parentNode!=n&&(c=m(p))}return v++,u}),l.__e=w,null!=o&&\"function\"!=typeof l.type)for(v=o.length;v--;)null!=o[v]&&a(o[v]);for(v=_;v--;)null!=k[v]&&j(k[v],k[v]);if(g)for(v=0;v<g.length;v++)$(g[v],g[++v],g[++v])}function b(n,l,u){if(null==u&&(u=[]),null==n||\"boolean\"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var i=0;i<n.length;i++)b(n[i],l,u);else u.push(l?l(\"string\"==typeof n||\"number\"==typeof n?h(null,n,null,null):null!=n.__e||null!=n.__c?h(n.type,n.props,n.key,null):n):n);return u}function x(n,l,u,i,t){var o;for(o in u)o in l||C(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"value\"===o||\"checked\"===o||u[o]===l[o]||C(n,o,l[o],u[o],i)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===c.test(l)?u+\"px\":null==u?\"\":u}function C(n,l,u,i,t){var o,r,f,e,c;if(t?\"className\"===l&&(l=\"class\"):\"class\"===l&&(l=\"className\"),\"key\"===l||\"children\"===l);else if(\"style\"===l)if(o=n.style,\"string\"==typeof u)o.cssText=u;else{if(\"string\"==typeof i&&(o.cssText=\"\",i=null),i)for(r in i)u&&r in u||P(o,r,\"\");if(u)for(f in u)i&&u[f]===i[f]||P(o,f,u[f])}else\"o\"===l[0]&&\"n\"===l[1]?(e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(i||n.addEventListener(l,N,e),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,N,e)):\"list\"!==l&&\"tagName\"!==l&&\"form\"!==l&&\"type\"!==l&&\"size\"!==l&&!t&&l in n?n[l]=null==u?\"\":u:\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u&&!/^ar/.test(l)?n.removeAttribute(l):n.setAttribute(l,u))}function N(l){this.l[l.type](n.event?n.event(l):l)}function z(l,u,i,t,o,r,f,e,c){var a,v,h,p,m,w,g,k,b,x,P=u.type;if(void 0!==u.constructor)return null;(a=n.__b)&&a(u);try{n:if(\"function\"==typeof P){if(k=u.props,b=(a=P.contextType)&&t[a.__c],x=a?b?b.props.value:a.__:t,i.__c?g=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(k,x):(u.__c=v=new y(k,x),v.constructor=P,v.render=D),b&&b.sub(v),v.props=k,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=s({},v.__s)),s(v.__s,P.getDerivedStateFromProps(k,v.__s))),p=v.props,m=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&k!==p&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(k,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(k,v.__s,x)){for(v.props=k,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=i.__e,u.__k=i.__k,v.__h.length&&f.push(v),a=0;a<u.__k.length;a++)u.__k[a]&&(u.__k[a].__=u);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(k,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(p,m,w)})}v.context=x,v.props=k,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),u.__k=null!=a&&a.type==d&&null==a.key?a.props.children:Array.isArray(a)?a:[a],null!=v.getChildContext&&(t=s(s({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(w=v.getSnapshotBeforeUpdate(p,m)),_(l,u,i,t,o,r,f,e,c),v.base=u.__e,v.__h.length&&f.push(v),g&&(v.__E=v.__=null),v.__e=!1}else u.__e=T(i.__e,u,i,t,o,r,f,c);(a=n.diffed)&&a(u)}catch(l){n.__e(l,u,i)}return u.__e}function A(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function T(n,l,u,i,t,o,r,c){var s,a,v,h,p,d=u.props,y=l.props;if(t=\"svg\"===l.type||t,null!=o)for(s=0;s<o.length;s++)if(null!=(a=o[s])&&((null===l.type?3===a.nodeType:a.localName===l.type)||n==a)){n=a,o[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(y);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type,y.is&&{is:y.is}),o=null}if(null===l.type)d!==y&&n.data!=y&&(n.data=y);else if(l!==u){if(null!=o&&(o=e.slice.call(n.childNodes)),v=(d=u.props||f).dangerouslySetInnerHTML,h=y.dangerouslySetInnerHTML,!c){if(d===f)for(d={},p=0;p<n.attributes.length;p++)d[n.attributes[p].name]=n.attributes[p].value;(h||v)&&(h&&v&&h.__html==v.__html||(n.innerHTML=h&&h.__html||\"\"))}x(n,y,d,t,c),l.__k=l.props.children,h||_(n,l,u,i,\"foreignObject\"!==l.type&&t,o,r,f,c),c||(\"value\"in y&&void 0!==y.value&&y.value!==n.value&&(n.value=null==y.value?\"\":y.value),\"checked\"in y&&void 0!==y.checked&&y.checked!==n.checked&&(n.checked=y.checked))}return n}function $(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function j(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||$(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&j(t[r],u,i);null!=o&&a(o)}function D(n,l,u){return this.constructor(n,u)}function E(l,u,i){var t,r,c;n.__&&n.__(l,u),r=(t=i===o)?null:i&&i.__k||u.__k,l=v(d,null,[l]),c=[],z(u,(t?u:i||u).__k=l,r||f,f,void 0!==u.ownerSVGElement,i&&!t?[i]:r?null:e.slice.call(u.childNodes),c,i||f,t),A(c,l)}function H(n,l){E(n,l,o)}function I(n,l){return l=s(s({},n.props),l),arguments.length>2&&(l.children=e.slice.call(arguments,2)),h(n.type,l,l.key||n.key,l.ref||n.ref)}function L(n){var l={},u={__c:\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var i,t=this;return this.getChildContext||(i=[],this.getChildContext=function(){return l[u.__c]=t,l},this.shouldComponentUpdate=function(l){n.value!==l.value&&i.some(function(n){n.context=l.value,g(n)})},this.sub=function(n){i.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){i.splice(i.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Consumer.contextType=u,u}n={__e:function(n,l){for(var u,i;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(i=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(i=!0,u.componentDidCatch(n)),i)return g(u.__E=u)}catch(l){n=l}throw n}},l=function(n){return null!=n&&void 0===n.constructor},y.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(u,this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),g(this))},y.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),g(this))},y.prototype.render=d,u=[],i=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,o=f,r=0;export{E as render,H as hydrate,v as createElement,v as h,d as Fragment,p as createRef,l as isValidElement,y as Component,I as cloneElement,L as createContext,b as toChildArray,j as _unmount,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i=[],o=n.__r,f=n.diffed,c=n.__c,e=n.unmount;function a(t){n.__h&&n.__h(r);var u=r.__H||(r.__H={__:[],__h:[]});return t>=u.__.length&&u.__.push({}),u.__[t]}function v(n){return m(x,n)}function m(n,u,i){var o=a(t++);return o.__c||(o.__c=r,o.__=[i?i(u):x(void 0,u),function(t){var r=n(o.__[0],t);o.__[0]!==r&&(o.__[0]=r,o.__c.setState({}))}]),o.__}function p(n,u){var i=a(t++);q(i.__H,u)&&(i.__=n,i.__H=u,r.__H.__h.push(i))}function l(n,u){var i=a(t++);q(i.__H,u)&&(i.__=n,i.__H=u,r.__h.push(i))}function y(n){return s(function(){return{current:n}},[])}function d(n,t,r){l(function(){\"function\"==typeof n?n(t()):n&&(n.current=t())},null==r?r:r.concat(n))}function s(n,r){var u=a(t++);return q(u.__H,r)?(u.__H=r,u.__h=n,u.__=n()):u.__}function h(n,t){return s(function(){return n},t)}function T(n){var u=r.context[n.__c];if(!u)return n.__;var i=a(t++);return null==i.__&&(i.__=!0,u.sub(r)),u.props.value}function w(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function A(n){var u=a(t++),i=v();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n){u.__&&u.__(n),i[1](n)}),[i[0],function(){i[1](void 0)}]}function F(){i.some(function(t){if(t.__P)try{t.__H.__h.forEach(_),t.__H.__h.forEach(g),t.__H.__h=[]}catch(r){return n.__e(r,t.__v),!0}}),i=[]}function _(n){n.t&&n.t()}function g(n){var t=n.__();\"function\"==typeof t&&(n.t=t)}function q(n,t){return!n||t.some(function(t,r){return t!==n[r]})}function x(n,t){return\"function\"==typeof t?t(n):t}n.__r=function(n){o&&o(n),t=0,(r=n.__c).__H&&(r.__H.__h.forEach(_),r.__H.__h.forEach(g),r.__H.__h=[])},n.diffed=function(t){f&&f(t);var r=t.__c;if(r){var o=r.__H;o&&o.__h.length&&(1!==i.push(r)&&u===n.requestAnimationFrame||((u=n.requestAnimationFrame)||function(n){var t,r=function(){clearTimeout(u),cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);\"undefined\"!=typeof window&&(t=requestAnimationFrame(r))})(F))}},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(_),t.__h=t.__h.filter(function(n){return!n.__||g(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),c&&c(t,r)},n.unmount=function(t){e&&e(t);var r=t.__c;if(r){var u=r.__H;if(u)try{u.__.forEach(function(n){return n.t&&n.t()})}catch(t){n.__e(t,r.__v)}}};export{v as useState,m as useReducer,p as useEffect,l as useLayoutEffect,y as useRef,d as useImperativeHandle,s as useMemo,h as useCallback,T as useContext,w as useDebugValue,A as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { DATA_ATTRIBUTES } from '../constants';\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const BUYER_INTENT = {\n    PAY:                                 'pay',\n    PAY_WITH_DIFFERENT_ACCOUNT:          'pay_with_different_account',\n    PAY_WITH_DIFFERENT_FUNDING_SHIPPING: 'pay_with_different_funding_shipping'\n};\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    WALLET_SESSION_ID: ('wallet_session_id' : 'wallet_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button'),\n    WALLET:   ('smart_wallet' : 'smart_wallet')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    WALLET_LOAD:              ('process_wallet_load' : 'process_wallet_load'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack'),\n\n    HONEY_IDENTIFY:           ('honey_identify')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_CUSTOM_KEY = {\n    HONEY_DEVICE_ID:  ('honey_device_id' : 'honey_device_id'),\n    HONEY_SESSION_ID: ('honey_session_id' : 'honey_session_id')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const FTPI_WALLET_KEY = {\n    WALLET_SESSION_UID: ('wallet_session_id' : 'wallet_session_id'),\n    WALLET_VERSION:     ('wallet_version' : 'wallet_version')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n/** @jsx h */\n\nimport { h, Fragment, type Node } from 'preact';\n\nimport { openPopup } from '../ui';\n\nimport { useAutoFocus } from './hooks';\n\ntype MenuProps = {|\n    cspNonce : string,\n    verticalOffset : number,\n    choices : $ReadOnlyArray<{|\n        id : string,\n        label : string,\n        popup? : {|\n            width : number,\n            height : number\n        |}\n    |}>,\n    onChoose : ({ id : string }) => void,\n    onBlur : () => void\n|};\n\nexport function Menu({ choices, onChoose, onBlur, cspNonce, verticalOffset } : MenuProps) : Node {\n\n    const autoFocus = useAutoFocus();\n\n    const selectChoice = (choice) => {\n        let win;\n\n        if (choice.popup) {\n            win = openPopup({\n                width:  choice.popup.width,\n                height: choice.popup.height\n            });\n        }\n\n        return onChoose({ id: choice.id, win });\n    };\n\n    return (\n        <Fragment>\n            <style nonce={ cspNonce }>\n                {`\n                    .menu {\n                        width: 100%;\n                        z-index: 5000;\n                        background: white;\n                        border-radius: 3px;\n                        font-family: Helvetica, sans-serif;\n                        font-size: 14px;\n                        letter-spacing: 0.5px;\n                        box-shadow: 0px 0px 3px 1px rgba(222,222,222,1);\n                        outline-style: none;\n                        user-select: none;\n                        text-align: center;\n                        margin-top: ${ verticalOffset }px;\n                    }\n                    \n                    .menu-item {\n                        border-top: 2px solid rgba(230, 230, 230, 0.5);;\n                        padding: 14px 18px;\n                        color: #0070ba;\n                        cursor: pointer;\n                        line-height: 18px;\n                    }\n                    \n                    .menu-item:first-child {\n                        border-top: none;\n                    }\n                    \n                    .menu-item:hover {\n                        background: #fcfcfc;\n                        text-decoration: underline;\n                    }\n                `}\n            </style>\n\n            <div class='menu' tabIndex='0' onBlur={ onBlur } ref={ autoFocus }>\n                {\n                    choices.map(choice => {\n                        return (\n                            <div class='menu-item' onClick={ () => selectChoice(choice) }>\n                                { choice.label }\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n}\n","/* @flow */\n\nimport { useState, useEffect, useRef } from 'preact/hooks';\n\nexport function useXProps<T>() : T {\n    const [ xprops, setXProps ] = useState(window.xprops);\n    useEffect(() => xprops.onProps(newProps => {\n        setXProps({ ...newProps });\n    }), []);\n    return { ...xprops };\n}\n\nexport function useAutoFocus() : Object {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.focus();\n        }\n    });\n\n    return ref;\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../lib';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n/** @jsx h */\n\nimport { h, render, Fragment, type Node } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getBody } from '../lib';\n\nimport { Menu } from './menu';\nimport { useXProps } from './hooks';\n\nconst FADE_TIME = 150;\n\ntype PageProps = {|\n    cspNonce : string\n|};\n\nfunction Page({ cspNonce } : PageProps) : Node {\n    const { choices, onChoose, verticalOffset, hide, onBlur = noop } = useXProps();\n    const [ opaque, setOpaque ] = useState(false);\n    const [ visible, setVisible ] = useState(false);\n\n    useEffect(() => {\n        const hasChoices = Boolean(choices && choices.length);\n        setOpaque(hasChoices);\n        setVisible(hasChoices);\n    }, [ choices ]);\n\n    const onChooseHandler = ({ id, win }) => {\n        setVisible(false);\n        return onChoose({ id, win });\n    };\n\n    const onBlurHandler = () => {\n        setOpaque(false);\n        return ZalgoPromise.delay(FADE_TIME).then(() => {\n            setVisible(false);\n            return ZalgoPromise.all([ onBlur(), hide() ]);\n        });\n    };\n\n    return (\n        <Fragment>\n            <style nonce={ cspNonce }>\n                {`\n                    * {\n                        box-sizing: border-box;\n                    }\n\n                    html, body {\n                        margin: 0;\n                        padding: 0;\n                        opacity: ${ opaque ? '1' : '0' };\n                        transition: opacity ${ (FADE_TIME / 1000).toFixed(2) }s ease-in-out;\n                    }\n\n                    body {\n                        padding: 5px 20px;\n                        display: inline-block;\n                        width: 100%;\n                    }\n                `}\n            </style>\n\n            {\n                (choices && visible)\n                    ? <Menu\n                        choices={ choices } onChoose={ onChooseHandler } onBlur={ onBlurHandler }\n                        cspNonce={ cspNonce } verticalOffset={ verticalOffset } />\n                    : null\n            }\n        </Fragment>\n    );\n}\n\ntype SetupOptions = {|\n    cspNonce : string\n|};\n\nexport function setupMenu({ cspNonce } : SetupOptions) {\n    render(<Page cspNonce={ cspNonce } />, getBody());\n}\n \n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n\nexport function isServer() : boolean {\n    return (typeof window === 'undefined');\n}\n\nexport function isClient() : boolean {\n    return (typeof window !== 'undefined');\n}\n"],"sourceRoot":""}