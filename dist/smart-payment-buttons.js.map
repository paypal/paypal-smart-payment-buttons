{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/config.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/constants.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/api/api.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/props/props.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./src/button/props/onError.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/rememberFunding.js","webpack://spb/./src/button/props/getPageUrl.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/pay.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./src/button/menu.js","webpack://spb/./src/button/button.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/menu/interface.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js","webpack://spb/./src/button/props/types.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isAndroid","test","isIos","supportsPopups","isGoogleSearchApp","isIosWebview","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","isChrome","_extends","assign","target","arguments","length","source","apply","this","isPromise","item","Promise","Window","constructor","toString","then","err","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","Zalgo","awaitActive","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","isAncestorParent","child","childParent","getParents","getTop","top","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","self","__cross_domain_utils_window_check__","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","uniqueID","chars","replace","charAt","floor","str","btoa","encodeURIComponent","p1","String","fromCharCode","parseInt","Buffer","from","base64encode","Date","toISOString","slice","toLowerCase","objectIDs","serializeArgs","JSON","stringify","Array","subkey","val","uid","getObjectID","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","identity","arrayFrom","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","formatQuery","extendUrl","url","query","originalUrl","originalHash","hashString","redirect","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","isBrowser","querySelectorAll","selector","onClick","element","addEventListener","event","keyCode","PopupOpenError","prototype","destroyElement","removeChild","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","ontimeout","send","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","loadScript","container","head","script","setAttribute","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","httpTransport","extendIfDefined","ORDERS_API_URL","NATIVE_CHECKOUT_URI","NATIVE_CHECKOUT_POPUP_URI","CLIENT_ID_PAYEE_NO_MATCH","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","warning","immediateFlush","meta","builder","req","localPromise","promiseDebounce","logger","logPayload","timestamp","enqueue","addBuilder","builders","loop","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","enableLoadingSpinner","button","classList","add","disableLoadingSpinner","remove","getNonce","nonce","getAttribute","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","xprops","onInit","enabled","initPromise","isEnabled","callRestAPI","accessToken","requestHeaders","callSmartAPI","reqHeaders","ack","contingency","callGraphQL","variables","errors","GRAPHQL_URI","getFirebaseSessionToken","sessionUID","firebase","auth","sessionToken","patchOrder","orderID","facilitatorAccessToken","buyerAccessToken","partnerAttributionID","forceRestAPI","patchData","isArray","patch","SMART_API_URI","getPayee","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","buttonSessionID","paymentSource","token","id","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","loadFirebaseSDK","config","initializeApp","buildXCreateOrderData","buildOrderActions","intent","currency","merchantID","order","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","createOrderID","buildPaymentActions","payment","expectedIntent","transactions","transaction","redirect_urls","return_url","cancel_url","payer","payment_method","paymentID","createPayment","links","rel","match","createPaymentToken","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createSubscription","createOrder","actions","startTime","duration","getOnApprove","onApprove","capture","authorize","getDefaultOnApprove","upgradeLSAT","payerID","restart","upgradeFacilitatorAccessToken","getSubscriptionApi","getSubscription","activateSubscriptionApi","activateSubscription","handleProcessorError","details","some","detail","issue","getOrder","captureOrder","authorizeOrder","PAYMENTS_API_URL","getPayment","execute","payer_id","executePayment","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","excluded","sourceKeys","CLICK_VALID","VALID","INVALID","buildXOnClickData","fundingSource","buildXOnClickActions","getOnClick","valid","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","subscriptionPayload","revise","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","getCreateSubscription","createSubscriptionFunc","getProps","env","vault","commit","locale","platform","sessionID","clientID","correlationID","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","merchantDomain","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","getConfig","firebaseConfig","cspNonce","serverCSPNonce","version","getServiceData","serverMerchantID","buyerCountry","buyerGeoCountry","fundingEligibility","sdkMeta","personalization","eligibility","getOnError","POPUP_BRIDGE_OPTYPE","PAYMENT","CANCEL","getRememberFunding","getGetPageUrl","renderChildren","children","renderer","renderedChild","render","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ADD_CHILDREN","firstChild","docElement","dom","opts","domRenderer","createTextNode","createTextElement","prop","tagName","addProps","html","ELEMENT_PROP","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","content","class","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","isPaymentEligible","init","initCheckout","serviceData","card","venmoPayloadID","isClick","approved","start","onClose","instance","close","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","onAuth","renderTo","click","assertSameDomain","width","height","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","popup","tag","writeElementToWindow","openPopup","cardFieldsOpen","highlightCard","forEach","opacity","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","cardFields","onCardTypeChange","closeCardFields","marginTop","slideDownButtons","renderPromise","minHeight","display","recalculateMargin","offsetTop","debounce","transitionDuration","slideUpButtons","inline","vaultCapture","link","handleThreeDomainSecure","handleValidateResponse","spinner","NATIVE_DOMAIN","getNativeSocket","sourceApp","sourceAppVersion","targetApp","driver","retry","receivedMessages","responseListeners","activeRequests","requestListeners","errorListeners","sendMessage","socket","messageUID","session_uid","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","requestUID","isOpen","request_uid","message_name","message_status","message_type","message_data","retryDelay","socketPromise","retryPromise","connectionPromise","onOpen","errorListener","onMessage","rawMessage","rawData","parsedData","messageSessionUID","messageType","messageData","request_id","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","database","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","isAndroidChrome","didAppSwitch","popupWin","isNativeOptedIn","localStorage","getItem","nativeSocket","initialPageUrl","parentPopupBridge","PAYMENT_FLOWS","bridge","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","pageUrl","isSafari","nativeCheckout","venmo","clean","cleaned","register","task","shift","cancelled","listen","postRobot","fallbackToWebCheckout","fallbackWin","checkoutPayment","getNativeUrl","getNativePopupUrl","getWebCheckoutUrl","native_xo","getSDKProps","webCheckoutUrl","forceEligible","connectNative","setNativeProps","sdkProps","closeNative","getPropsListener","onApproveListener","onCancelListener","onErrorListener","setProps","detectAppSwitch","detectWebSwitch","validate","nativeWin","validatePromise","delayPromise","detectWebSwitchListener","initDirectAppSwitch","closeListener","callback","maxtime","Infinity","check","onCloseWindow","awaitRedirectListener","redirectUrl","detectAppSwitchListener","onCompleteListener","initPopupAppSwitch","smartMenu","setupButton","isCardFieldsExperimentEnabled","referer","lang","country","__SMART_BUTTONS__","setupLogger","paymentProcessing","initiatePayment","decorateCreateOrder","tagline","buttonText","sendPersonalizationBeacons","flow","getPaymentFlow","clickPromise","integrationArtifact","userExperienceFlow","productFlow","cart","checkoutSession","amounts","total","currencyCode","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","validateOrder","initiatePaymentFlow","getSelectedFunding","preventDefault","blur","fixClickFocus","menuToggle","buttonParent","parentElement","Menu","updateProps","show","hide","choices","verticalOffset","onChoose","renderSmartMenu","onElementClick","stopPropagation","label","useDifferentAccount","deleteVaultedCard","getBoundingClientRect","bottom","loadingTimeout","payInstantlyHeader","renderButtonDropdown","payPromise","setupPrerenderTask","prerenderDetails","setupRememberTask","eligible","setupRemember","setupButtonLogsTask","documentMode","isIEIntranet","domInteractive","pageRenderTime","fundingSources","layout","color","shape","innerWidth","setupButtonLogs","setupPaymentFlowsTask","setupPaymentFlows"],"mappings":"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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = __DEBUG__ ? LOG_LEVEL.DEBUG : LOG_LEVEL.WARN;\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Payload = { [string] : string };\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {|\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n|};\n\ntype ClientPayload = { [string] : ?string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {|\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n|};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    const payloadBuilders : Array<Builder> = [];\n    const metaBuilders : Array<Builder> = [];\n    const trackingBuilders : Array<Builder> = [];\n    const headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(logLevel)) {\n            return;\n        }\n\n        const args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            const meta = {};\n            for (const builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            const headers = {};\n            for (const builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            const req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    const flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        const logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (const builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        const trackingPayload : Payload = objFilter(payload);\n\n        for (const builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            buttonSessionID,\n            sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.BUTTON_SESSION_UID]:     buttonSessionID,\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID,\n            [FPTI_KEY.BUTTON_VERSION]:         __SMART_BUTTONS__.__MINOR_VERSION__\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : { buyerAccessToken : string, orderID : string }) : ZalgoPromise<void> {\n    return callGraphQL({\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : { paymentMethodID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({ data : T }) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => {|\n        cancel : () => void\n    |},\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    onError : ((mixed) => void) => void,\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    let requestListeners = {};\n    let errorListeners = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            session_uid:        sessionUID,\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ messageName, requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID] || {};\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener for ${ messageName } with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        let {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        requestUID = requestUID || parsedData.request_id;\n\n        if (messageUID && receivedMessages[messageUID]) {\n            return;\n        }\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ messageName, requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n\n                    for (const errorListener of errorListeners) {\n                        errorListener(err);\n                    }\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n\n        return {\n            cancel: () => {\n                delete requestListeners[name];\n            }\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        requestListeners = {};\n        errorListeners = [];\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    const onError = (handler) => {\n        errorListeners.push(handler);\n    };\n        \n    return { on, send, onError, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\nexport const loadFirebaseSDK = memoize((config) => {\n    return loadScript(FIREBASE_SCRIPTS.APP).then(() => {\n        return ZalgoPromise.all([\n            loadScript(FIREBASE_SCRIPTS.AUTH),\n            loadScript(FIREBASE_SCRIPTS.DATABASE)\n        ]);\n    }).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.all([\n            loadFirebaseSDK(config),\n            getFirebaseSessionToken(sessionUID)\n        ]).then(([ firebase, sessionToken ]) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                }, err => {\n                    error(err);\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        databasePromise.catch(noop);\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessToken : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, forceRestAPI: false });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n\n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n\n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n\n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\nexport function getCreateOrder(xprops : XProps, { facilitatorAccessToken, createBillingAgreement, createSubscription } : { facilitatorAccessToken : string, createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, buttonSessionID, intent, currency, merchantID, partnerAttributionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: currency,\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.TOKEN]:              orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        },\n        data: {\n            payer_id: payerID\n        }\n    });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `patch`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        data:        patchData,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment, upgradeFacilitatorAccessToken } from '../../api';\nimport { ORDER_API_ERROR, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\nimport { ENABLE_PAYMENT_API } from '../../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string,\n    facilitatorAccessToken : string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : string,\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : OrderActions {\n    \n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n    \n    const get = memoize(() => {\n        return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n    });\n\n    const execute = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(execute.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : XOnApproveActionsType {\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID, { buyerAccessToken }));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID, { buyerAccessToken }));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string,\n    buyerAccessToken? : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nfunction getDefaultOnApprove(intent : $Values<typeof INTENT>) : XOnApprove {\n    return (data, actions) => {\n        if (intent === INTENT.CAPTURE) {\n            return actions.order.capture().then(noop);\n        } else if (intent === INTENT.AUTHORIZE) {\n            return actions.order.authorize().then(noop);\n        } else {\n            throw new Error(`Unsupported intent for auto-capture: ${ intent }`);\n        }\n    };\n}\n\nexport function getOnApprove(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : OnApprove {\n    const { intent, onApprove = getDefaultOnApprove(intent), partnerAttributionID, onError, upgradeLSAT = false } = xprops;\n\n    if (!onApprove) {\n        throw new Error(`Expected onApprove`);\n    }\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, forceRestAPI = upgradeLSAT }, { restart }) => {\n        return ZalgoPromise.try(() => {\n            if (upgradeLSAT) {\n                return createOrder().then(orderID => upgradeFacilitatorAccessToken(facilitatorAccessToken, { buyerAccessToken, orderID }));\n            }\n        }).then(() => {\n            return createOrder();\n        }).then(orderID => {\n\n            getLogger()\n                .info('button_approve')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_APPROVE,\n                    [FPTI_KEY.TOKEN]:      orderID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken };\n            const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n            return onApprove(data, actions).catch(err => {\n                return ZalgoPromise.try(() => {\n                    return onError(err);\n                }).then(() => {\n                    throw err;\n                });\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.TOKEN]:      orderID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : { orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string }) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { facilitatorAccessToken, createOrder } : { facilitatorAccessToken : string, createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, partnerAttributionID } = xprops;\n\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.TOKEN]:      orderID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick | void {\n    const { onClick } = xprops;\n\n    if (!onClick) {\n        return;\n    }\n\n    return memoize(({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID } : { facilitatorAccessToken : string, partnerAttributionID : ?string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createSubscription(facilitatorAccessToken, data, { partnerAttributionID });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return reviseSubscription(facilitatorAccessToken, subscriptionID, data, { partnerAttributionID });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps, { facilitatorAccessToken } : { facilitatorAccessToken : string }) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc, partnerAttributionID } = xprops;\n    if (createSubscriptionFunc) {\n        return () => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { COUNTRY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { FundingEligibilityType, CheckoutFlowType, CardFieldsFlowType, ThreeDomainSecureFlowType, PersonalizationType } from '../../types';\nimport { type FirebaseConfig } from '../../api';\nimport { getNonce } from '../dom';\n\nimport type { XProps, Props } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getProps({ facilitatorAccessToken } : { facilitatorAccessToken : string }) : Props {\n\n    const xprops : XProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        currency\n    } = xprops;\n\n    const onInit = getOnInit(xprops);\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick(xprops);\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops, { facilitatorAccessToken });\n    \n    const createOrder = getCreateOrder(xprops, { facilitatorAccessToken, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { facilitatorAccessToken, createOrder });\n    const onCancel = getOnCancel(xprops, { facilitatorAccessToken, createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { facilitatorAccessToken, createOrder });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n        currency,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure } = paypal;\n    return { Checkout, CardFields, ThreeDomainSecure };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : { serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig }) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const { version } = paypal;\n    \n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    facilitatorAccessToken : string,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [ $Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function getServiceData({ facilitatorAccessToken, sdkMeta, buyerGeoCountry, fundingEligibility, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        sdkMeta,\n        personalization,\n        facilitatorAccessToken,\n        eligibility\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnError = (mixed) => ZalgoPromise<void>;\nexport type OnError = XOnError;\n\nexport function getOnError(xprops : XProps) : OnError {\n    const { onError } = xprops;\n    return onError;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { XProps } from './types';\n\nexport type RememberFunding = ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>;\n\nexport function getRememberFunding(xprops : XProps) : RememberFunding {\n    const { remember } = xprops;\n    return remember;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type GetPageURL = () => ZalgoPromise<string>;\n\nexport function getGetPageUrl(xprops : XProps) : GetPageURL {\n    const { getPageUrl } = xprops;\n    return getPageUrl;\n}\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport type { Props, Components, ServiceData, Config, CreateBillingAgreement, CreateSubscription } from '../button/props';\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { openPopup } from '../ui';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : { components : Components }) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\nfunction isCheckoutPaymentEligible() : boolean {\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : { win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean }) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : { props : Props, components : Components, serviceData : ServiceData, payment : Payment, config : Config }) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { sessionID, buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick } = props;\n    let { button, win, fundingSource, card, isClick, buyerAccessToken, venmoPayloadID } = payment;\n    const { fundingEligibility, buyerCountry } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ props, components, serviceData, config, payment: { button, win, fundingSource, card, isClick: false } })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        if (!approved) {\n            return onCancel();\n        }\n    };\n    \n    const init = () => {\n        return Checkout({\n            window: win,\n            sessionID,\n            buttonSessionID,\n            clientAccessToken,\n            buyerAccessToken,\n            venmoPayloadID,\n    \n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n    \n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n                approved = true;\n                getLogger().info(`spb_onapprove_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n    \n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken }, { restart }).catch(noop);\n                });\n            },\n    \n            onAuth: ({ accessToken }) => {\n                getLogger().info(`spb_onauth_access_token_${ (accessToken || buyerAccessToken)  ? 'present' : 'not_present' }`);\n                if (accessToken) {\n                    buyerAccessToken = accessToken;\n                }\n            },\n    \n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n    \n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n    \n            onError,\n            onClose,\n    \n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce\n        });\n    };\n\n    let instance;\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n    });\n\n    const click = () => {\n        if (!onClick) {\n            start();\n            return;\n        }\n\n        if (supportsPopups()) {\n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n        }\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (win && !valid) {\n                win.close();\n            }\n        });\n    };\n\n    return { click, start, close };\n}\n\nexport const checkout : PaymentFlow = {\n    name:              'checkout',\n    setup:             setupCheckout,\n    isEligible:        isCheckoutEligible,\n    isPaymentEligible: isCheckoutPaymentEligible,\n    init:              initCheckout\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../button/dom';\n\nexport function openPopup({ width, height } : { width : number, height : number }) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce, noop } from 'belter/src';\n\nimport type { Props, Config, ServiceData, Components } from '../button/props';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { Payment, PaymentFlow, PaymentFlowInstance } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, serviceData } : { props : Props, serviceData : ServiceData }) : boolean {\n    const { vault, onShippingChange, enableStandardCardFields } = props;\n    const { eligibility } = serviceData;\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields) {\n        return true;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction isCardFieldsPaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, fundingSource } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource && fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : ?$Values<typeof CARD>) {\n    if (!card) {\n        return;\n    }\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : { props : Props, config : Config, components : Components, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, sessionID, buttonSessionID } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart }).catch(noop);\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        sessionID,\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    name:              'card_fields',\n    setup:             setupCardFields,\n    isEligible:        isCardFieldsEligible,\n    isPaymentEligible: isCardFieldsPaymentEligible,\n    init:              initCardFields,\n    inline:            true\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ThreeDomainSecureFlowType } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, Props, Components } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isVaultCapturePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win, paymentMethodID } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment } : { props : Props, components : Components, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken,\n        enableThreeDomainSecure, buttonSessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { paymentMethodID } = payment;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const vaultCapture : PaymentFlow = {\n    name:              'vault_capture',\n    setup:             setupVaultCapture,\n    isEligible:        isVaultCaptureEligible,\n    isPaymentEligible: isVaultCapturePaymentEligible,\n    init:              initVaultCapture,\n    spinner:           true,\n    inline:            true\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, memoize, stringifyError, isIos, isAndroid,\n    isSafari, isChrome, stringifyErrorMessage, cleanup, once, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { type CrossDomainWindowType, getDomain, isWindowClosed, onCloseWindow } from 'cross-domain-utils/src';\n\nimport type { Props, Components, Config, ServiceData } from '../button/props';\nimport { NATIVE_CHECKOUT_URI, WEB_CHECKOUT_URI, NATIVE_CHECKOUT_POPUP_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { getLogger, promiseOne } from '../lib';\nimport { USER_ACTION, FPTI_TRANSITION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout';\n\nconst POST_MESSAGE = {\n    AWAIT_REDIRECT:    'awaitRedirect',\n    DETECT_APP_SWITCH: 'detectAppSwitch',\n    DETECT_WEB_SWITCH: 'detectWebSwitch',\n    ON_COMPLETE:       'onComplete'\n};\n\nconst SOCKET_MESSAGE = {\n    SET_PROPS:  'setProps',\n    GET_PROPS:  'getProps',\n    CLOSE:      'close',\n    ON_APPROVE: 'onApprove',\n    ON_CANCEL:  'onCancel',\n    ON_ERROR:   'onError'\n};\n\nconst NATIVE_DOMAIN = 'https://www.paypal.com';\nconst NATIVE_POPUP_DOMAIN = 'https://ic.paypal.com';\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\ntype NativeConnection = {|\n    setProps : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    return firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n});\n\nfunction isIOSSafari() : boolean {\n    return isIos() && isSafari();\n}\n\nfunction isAndroidChrome() : boolean {\n    return isAndroid() && isChrome();\n}\n\nfunction useDirectAppSwitch() : boolean {\n    return isAndroidChrome();\n}\n\nfunction didAppSwitch(popupWin : ?CrossDomainWindowType) : boolean {\n    return !popupWin || isWindowClosed(popupWin);\n}\n\nfunction isNativeOptedIn({ props } : { props : Props }) : boolean {\n    const { enableNativeCheckout } = props;\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n\n    try {\n        if (window.localStorage.getItem('__native_checkout__')) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nlet sessionUID;\nlet nativeSocket;\nlet initialPageUrl;\n\nfunction isNativeEligible({ props, config, serviceData } : { props : Props, config : Config, serviceData : ServiceData }) : boolean {\n    \n    const { platform, onShippingChange, createBillingAgreement, createSubscription } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (!isIOSSafari() && !isAndroidChrome()) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout.paypal || eligibility.nativeCheckout.venmo) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isNativePaymentEligible({ payment, props, serviceData } : { payment : Payment, props : Props, serviceData : ServiceData }) : boolean {\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (!nativeSocket) {\n        return false;\n    }\n\n    if (!initialPageUrl) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout[fundingSource]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupNative({ config, props } : { config : Config, props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { version, firebase: firebaseConfig } = config;\n        const { getPageUrl } = props;\n\n        sessionUID = uniqueID();\n        nativeSocket = getNativeSocket({\n            sessionUID, firebaseConfig, version\n        });\n\n        nativeSocket.onError(err => {\n            nativeSocket = null;\n            getLogger().error('native_socket_error', { err: stringifyError(err) });\n        });\n\n        return getPageUrl().then(pageUrl => {\n            initialPageUrl = pageUrl;\n        });\n    });\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    webCheckoutUrl : string,\n    stageHost : ?string,\n    apiStageHost : ?string,\n    forceEligible : boolean\n|};\n\nfunction initNative({ props, components, config, payment, serviceData } : { props : Props, components : Components, config : Config, payment : Payment, serviceData : ServiceData }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, getPageUrl,\n        buttonSessionID, env, stageHost, apiStageHost, onClick } = props;\n    const { facilitatorAccessToken, sdkMeta } = serviceData;\n    const { fundingSource } = payment;\n\n    const clean = cleanup();\n    let approved = false;\n    let cancelled = false;\n\n    const close = memoize(() => {\n        return clean.all();\n    });\n\n    const listen = (popupWin, domain, event, handler) =>\n        paypal.postRobot.once(event, { window: popupWin, domain }, handler);\n\n    const fallbackToWebCheckout = (fallbackWin? : ?CrossDomainWindowType) => {\n        const checkoutPayment = { ...payment, win: fallbackWin, isClick: false };\n        const instance = checkout.init({ props, components, payment: checkoutPayment, config, serviceData });\n        clean.register(() => instance.close());\n        return instance.start();\n    };\n\n    const getNativeUrl = memoize(({ pageUrl = initialPageUrl } = {}) : string => {\n        return extendUrl(`${ NATIVE_DOMAIN }${ NATIVE_CHECKOUT_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, pageUrl }\n        });\n    });\n\n    const getNativePopupUrl = memoize(() : string => {\n        return extendUrl(`${ NATIVE_POPUP_DOMAIN }${ NATIVE_CHECKOUT_POPUP_URI[fundingSource] }`, {\n            query: { sdkMeta }\n        });\n    });\n\n    const getWebCheckoutUrl = memoize(({ orderID }) : string => {\n        return extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n            query: {\n                fundingSource,\n                facilitatorAccessToken,\n                token:         orderID,\n                useraction:    commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                native_xo:     '1'\n            }\n        });\n    });\n\n    const getSDKProps = memoize(() : ZalgoPromise<NativeSDKProps> => {\n        return ZalgoPromise.hash({\n            orderID: createOrder(),\n            pageUrl: getPageUrl()\n        }).then(({ orderID, pageUrl }) => {\n            const userAgent = getUserAgent();\n            const webCheckoutUrl = getWebCheckoutUrl({ orderID });\n            const forceEligible = isNativeOptedIn({ props });\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit, webCheckoutUrl,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost, forceEligible\n            };\n        });\n    });\n\n    const connectNative = memoize(() : NativeConnection => {\n        const socket = nativeSocket;\n\n        if (!socket) {\n            throw new Error(`Native socket connection not established`);\n        }\n\n        const setNativeProps = memoize(() => {\n            return getSDKProps().then(sdkProps => {\n                getLogger().info(`native_message_setprops`).flush();\n                return socket.send(SOCKET_MESSAGE.SET_PROPS, sdkProps);\n            }).then(() => {\n                getLogger().info(`native_response_setprops`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_APP_SWITCH_ACK\n                }).flush();\n            });\n        });\n\n        const closeNative = memoize(() => {\n            getLogger().info(`native_message_close`).flush();\n            return socket.send(SOCKET_MESSAGE.CLOSE).then(() => {\n                getLogger().info(`native_response_close`).flush();\n                return close();\n            });\n        });\n\n        const getPropsListener = socket.on(SOCKET_MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            getLogger().info(`native_message_getprops`).flush();\n            return getSDKProps();\n        });\n\n        const onApproveListener = socket.on(SOCKET_MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            approved = true;\n            getLogger().info(`native_message_onapprove`).flush();\n            const data = { payerID, paymentID, billingToken, forceRestAPI: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return ZalgoPromise.all([\n                onApprove(data, actions),\n                close()\n            ]).then(noop);\n        });\n\n        const onCancelListener = socket.on(SOCKET_MESSAGE.ON_CANCEL, () => {\n            cancelled = true;\n            getLogger().info(`native_message_oncancel`).flush();\n            return ZalgoPromise.all([\n                onCancel(),\n                close()\n            ]).then(noop);\n        });\n\n        const onErrorListener = socket.on(SOCKET_MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            getLogger().info(`native_message_onerror`, { err: message }).flush();\n            return ZalgoPromise.all([\n                onError(new Error(message)),\n                close()\n            ]).then(noop);\n        });\n\n        clean.register(getPropsListener.cancel);\n        clean.register(onApproveListener.cancel);\n        clean.register(onCancelListener.cancel);\n        clean.register(onErrorListener.cancel);\n\n        socket.reconnect();\n        \n        return {\n            setProps: setNativeProps,\n            close:    closeNative\n        };\n    });\n\n    const detectAppSwitch = once(() => {\n        getLogger().info(`native_detect_app_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n        }).flush();\n\n        return connectNative().setProps();\n    });\n\n    const detectWebSwitch = once((fallbackWin : ?CrossDomainWindowType) => {\n        getLogger().info(`native_detect_web_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n        }).flush();\n\n        return fallbackToWebCheckout(fallbackWin);\n    });\n\n    const validate = memoize(() => {\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        });\n    });\n\n    const popup = memoize((url : string) => {\n        const win = window.open(url);\n        clean.register(() => {\n            if (win && !isWindowClosed(win)) {\n                win.close();\n            }\n        });\n\n        return win;\n    });\n\n    const initDirectAppSwitch = () => {\n        const nativeWin = popup(getNativeUrl());\n        const validatePromise = validate();\n        const delayPromise = ZalgoPromise.delay(500);\n\n        const detectWebSwitchListener = listen(nativeWin, NATIVE_DOMAIN, POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(nativeWin);\n        });\n\n        clean.register(detectWebSwitchListener.cancel);\n\n        return validatePromise.then(valid => {\n            if (!valid) {\n                return delayPromise.then(() => {\n                    if (didAppSwitch(nativeWin)) {\n                        return connectNative().close();\n                    }\n                }).then(() => {\n                    return close();\n                });\n            }\n\n            return createOrder().then(() => {\n                if (didAppSwitch(nativeWin)) {\n                    return detectAppSwitch();\n                } else if (nativeWin) {\n                    return detectWebSwitch(nativeWin);\n                } else {\n                    throw new Error(`No window found`);\n                }\n            }).catch(err => {\n                return connectNative().close().then(() => {\n                    throw err;\n                });\n            });\n        });\n    };\n\n    const initPopupAppSwitch = () => {\n        const popupWin = popup(getNativePopupUrl());\n\n        const closeListener = onCloseWindow(popupWin, () => {\n            return ZalgoPromise.delay(1000).then(() => {\n                if (!approved && !cancelled) {\n                    return ZalgoPromise.all([\n                        onCancel(),\n                        close()\n                    ]);\n                }\n            }).then(noop);\n        }, 500);\n\n        clean.register(() => {\n            closeListener.cancel();\n        });\n\n        const validatePromise = validate();\n\n        const awaitRedirectListener = listen(popupWin, NATIVE_POPUP_DOMAIN, POST_MESSAGE.AWAIT_REDIRECT, ({ data: { pageUrl } }) => {\n            getLogger().info(`native_post_message_await_redirect`).flush();\n            return validatePromise.then(valid => {\n                if (!valid) {\n                    return close().then(() => {\n                        throw new Error(`Validation failed`);\n                    });\n                }\n\n                return createOrder().then(() => {\n                    return { redirectUrl: getNativeUrl({ pageUrl }) };\n                });\n            });\n        });\n\n        const detectAppSwitchListener = listen(popupWin, NATIVE_POPUP_DOMAIN, POST_MESSAGE.DETECT_APP_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_app_switch`).flush();\n            return detectAppSwitch();\n        });\n\n        const detectWebSwitchListener = listen(popupWin, NATIVE_DOMAIN, POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(popupWin);\n        });\n\n        const onCompleteListener = listen(popupWin, NATIVE_DOMAIN, POST_MESSAGE.ON_COMPLETE, () => {\n            getLogger().info(`native_post_message_on_complete`).flush();\n            close();\n        });\n\n        clean.register(awaitRedirectListener.cancel);\n        clean.register(detectAppSwitchListener.cancel);\n        clean.register(detectWebSwitchListener.cancel);\n        clean.register(onCompleteListener.cancel);\n\n        return awaitRedirectListener.then(() => {\n            return promiseOne([\n                detectAppSwitchListener,\n                detectWebSwitchListener\n            ]);\n        });\n    };\n\n    const click = () => {\n        return ZalgoPromise.try(() => {\n            return useDirectAppSwitch() ? initDirectAppSwitch() : initPopupAppSwitch();\n        }).catch(err => {\n            return close().then(() => {\n                getLogger().error(`native_error`, { err: stringifyError(err) }).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ERROR,\n                    [FPTI_KEY.ERROR_CODE]: 'native_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                }).flush();\n\n                throw err;\n            });\n        });\n    };\n\n    const start = memoize(() => {\n        // pass\n    });\n\n    return {\n        click,\n        start,\n        close\n    };\n}\n\nexport const native : PaymentFlow = {\n    name:              'native',\n    setup:             setupNative,\n    isEligible:        isNativeEligible,\n    isPaymentEligible: isNativePaymentEligible,\n    init:              initNative,\n    spinner:           true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { WEB_CHECKOUT_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE, type Props } from '../button/props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, Payment } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : { props : Props }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props } : { props : Props }) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isPopupBridgePaymentEligible({ payment } : { payment : Payment }) : boolean {\n    const { win } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : { props : Props, payment : Payment }) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    name:              'popup_bridge',\n    setup:             setupPopupBridge,\n    isEligible:        isPopupBridgeEligible,\n    isPaymentEligible: isPopupBridgePaymentEligible,\n    init:              initPopupBridge,\n    spinner:           true\n};\n","/* @flow */\n\nimport { noop, identity, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { checkout, cardFields, native, vaultCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\nimport { sendBeacon, getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION } from '../constants';\n\nimport { type Props, type Config, type ServiceData, type Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    vaultCapture,\n    cardFields,\n    popupBridge,\n    native,\n    checkout\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : { props : Props, config : Config, serviceData : ServiceData, components : Components }) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.isEligible({ props, config, serviceData, components })\n            ? flow.setup({ props, config, serviceData, components })\n            : null;\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, components, serviceData } : { props : Props, payment : Payment, config : Config, components : Components, serviceData : ServiceData }) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, config, components, serviceData }) && flow.isPaymentEligible({ props, payment, config, components, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n\nconst sendPersonalizationBeacons = (personalization) => {\n    if (personalization && personalization.tagline && personalization.tagline.tracking) {\n        sendBeacon(personalization.tagline.tracking.click);\n    }\n    if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n        sendBeacon(personalization.buttonText.tracking.click);\n    }\n};\n\ntype InitiatePaymentType = {|\n    payment : Payment,\n    props : Props,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiatePaymentFlow({ payment, serviceData, config, components, props } : InitiatePaymentType) : ZalgoPromise<void> {\n    const { button, fundingSource, decorateCreateOrder = identity } = payment;\n\n    return ZalgoPromise.try(() => {\n        const { personalization, merchantID } = serviceData;\n        let { clientID, onClick, createOrder } = props;\n\n        createOrder = decorateCreateOrder(createOrder);\n\n        sendPersonalizationBeacons(personalization);\n\n        const { name, init, inline, spinner } = getPaymentFlow({ props, payment, config, components, serviceData });\n        const { click = promiseNoop, start, close } = init({ props, config, serviceData, components, payment });\n\n        const clickPromise = ZalgoPromise.try(click);\n        clickPromise.catch(noop);\n\n        getLogger().info(`button_click`).info(`pay_flow_${ name }`).track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n            [FPTI_KEY.PAYMENT_FLOW]:   name\n        }).flush();\n\n        return ZalgoPromise.hash({\n            valid: onClick ? onClick({ fundingSource }) : true\n        }).then(({ valid }) => {\n            if (!valid) {\n                return;\n            }\n\n            if (spinner) {\n                enableLoadingSpinner(button);\n            }\n\n            createOrder()\n                .then(orderID => updateButtonClientConfig({ orderID, fundingSource, inline }))\n                .catch(err => getLogger().error('update_client_config_error', { err: stringifyError(err) }));\n\n            return ZalgoPromise.try(start)\n                .then(() => createOrder())\n                .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                .then(() => clickPromise)\n                .catch(err => {\n                    return ZalgoPromise.all([\n                        close(),\n                        ZalgoPromise.reject(err)\n                    ]);\n                }).then(noop);\n        });\n\n    }).finally(() => {\n        disableLoadingSpinner(button);\n    });\n}\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nimport { onClick as onElementClick, destroyElement, memoize } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ContentType } from '../types';\nimport { renderSmartMenu } from '../menu/interface';\nimport { CHECKOUT_POPUP_DIMENSIONS, type Payment } from '../payment-flows';\nimport { deleteVault, validatePaymentMethod } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\n\nimport { type Props } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\n\nconst MENU_CHOICE = {\n    DELETE_VAULT:            'DELETE_VAULT',\n    SELECT_FUNDING_SHIPPING: 'SELECT_FUNDING_SHIPPING',\n    CHANGE_ACCOUNT:          'CHANGE_ACCOUNT'\n};\n\nconst popup = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\ntype ButtonDropdownProps = {|\n    payment : Payment,\n    props : Props,\n    content : ContentType,\n    initiatePayment : ({ payment : Payment }) => ZalgoPromise<void>\n|};\n\nlet smartMenu;\n\nexport function renderButtonDropdown({ props, payment, content, initiatePayment } : ButtonDropdownProps) {\n    const { clientID, clientAccessToken, enableThreeDomainSecure, buttonSessionID, partnerAttributionID } = props;\n    const { button, fundingSource, paymentMethodID } = payment;\n    const menuToggle = button.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`);\n\n    const buttonParent = button.parentElement;\n\n    if (clientID && buttonParent && menuToggle && paymentMethodID && clientAccessToken) {\n        smartMenu = smartMenu || renderSmartMenu({ clientID });\n\n        onElementClick(menuToggle, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const PAYPAL_CHOICES = [\n                /*\n                {\n                    id:    MENU_CHOICE.SELECT_FUNDING_SHIPPING,\n                    label: content.chooseCardOrShipping,\n                    popup\n                },\n                */\n                {\n                    id:    MENU_CHOICE.CHANGE_ACCOUNT,\n                    label: content.useDifferentAccount,\n                    popup\n                } /* ,\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedAccount\n                }\n                */\n            ];\n\n            const CARD_CHOICES = [\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedCard\n                }\n            ];\n\n            const choices = (fundingSource === FUNDING.PAYPAL)\n                ? PAYPAL_CHOICES\n                : CARD_CHOICES;\n\n            const verticalOffset = button.getBoundingClientRect().bottom;\n            const loadingTimeout = setTimeout(() => enableLoadingSpinner(button), 50);\n\n            smartMenu.display({\n                choices,\n                verticalOffset,\n                onChoose: ({ id, win }) => {\n                    if (id === MENU_CHOICE.CHANGE_ACCOUNT) {\n                        return initiatePayment({ payment: { ...payment, win } });\n\n                    } else if (id === MENU_CHOICE.DELETE_VAULT) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not delete vault without client access token and payment method id`);\n                        }\n\n                        enableLoadingSpinner(button);\n                        return deleteVault({ paymentMethodID, clientAccessToken }).then(() => {\n                            disableLoadingSpinner(button);\n                            destroyElement(button);\n\n                            if (buttonParent.querySelectorAll(`[${ DATA_ATTRIBUTES.PAYMENT_METHOD_ID }]`).length === 0) {\n                                const payInstantlyHeader = buttonParent.querySelector('.paypal-vault-header');\n                                if (payInstantlyHeader) {\n                                    destroyElement(payInstantlyHeader);\n                                }\n                            }\n                        });\n\n                    } else if (id === MENU_CHOICE.SELECT_FUNDING_SHIPPING) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not change funding or shipping without client access token and payment method id`);\n                        }\n\n                        const decorateCreateOrder = (createOrder) => {\n                            return memoize(() => {\n                                return createOrder().then(orderID => {\n                                    return validatePaymentMethod({\n                                        clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID\n                                    }).then(({ status }) => {\n                                        if (status !== 200) {\n                                            throw new Error(`Validate payment failed with status: ${ status }`);\n                                        }\n\n                                        return orderID;\n                                    });\n                                });\n                            });\n                        };\n\n                        return initiatePayment({ payment: { ...payment, win, decorateCreateOrder } });\n                    }\n                }\n            }).then(() => {\n                clearTimeout(loadingTimeout);\n                disableLoadingSpinner(button);\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop, stringifyErrorMessage, stringifyError } from 'belter/src';\nimport { COUNTRY, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, PersonalizationType, ContentType } from '../types';\nimport { setupLogger, fixClickFocus, getLogger } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData } from './props';\nimport { getSelectedFunding, getButtons } from './dom';\nimport { setupButtonLogs } from './logs';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, initiatePaymentFlow } from './pay';\nimport { renderButtonDropdown } from './menu';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken : string,\n    content : ContentType,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function setupButton(opts : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const { facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, content, sdkMeta,\n        cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig } = opts;\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({ eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization, isCardFieldsExperimentEnabled, sdkMeta });\n    const { merchantID } = serviceData;\n\n    let props = getProps({ facilitatorAccessToken });\n    const { env, sessionID, partnerAttributionID, commit, correlationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n    \n    setupLogger({ env, version, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    const { initPromise, isEnabled } = onInit();\n\n    let paymentProcessing = false;\n\n    function initiatePayment({ payment } : { payment : Payment }) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            props = getProps({ facilitatorAccessToken });\n\n            const { win, fundingSource } = payment;\n            const { onClick } = props;\n\n            if (onClick) {\n                onClick({ fundingSource });\n            }\n\n            if (isEnabled()) {\n                paymentProcessing = true;\n\n                return initiatePaymentFlow({ payment, config, serviceData, components, props }).finally(() => {\n                    paymentProcessing = false;\n                });\n            } else  {\n                if (win) {\n                    win.close();\n                }\n            }\n        }).catch(err => {\n            \n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n        const payment = { button, fundingSource, card, paymentMethodID, isClick: true };\n        \n        fixClickFocus(button);\n        renderButtonDropdown({ props, payment, content, initiatePayment });\n        \n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            \n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            const payment = { win, button, fundingSource, card };\n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogs({ style });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessToken,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask\n    }).then(noop);\n}\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration'),\n    SDK_INTEGRATION_SOURCE: ('sdk_integration_source' : 'sdk_integration_source'),\n    PAYMENT_FLOW:           ('payment_flow' : 'payment_flow'),\n    BUTTON_VERSION:         ('button_version' : 'button_version')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : { orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : ?string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = intent;\n        const expectedCurrency = currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (clientID && CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { ProxyWindow } from '../types';\n\ntype SmartMenuProps = {|\n    clientID : string\n|};\n\ntype SmartMenu = {|\n    display : ({\n        verticalOffset : number,\n        choices : $ReadOnlyArray<{|\n            id : string,\n        label : string,\n        popup? : {\n            width : number,\n            height : number\n        }\n            |}>,\n        onChoose : ({|\n            id : string,\n            win : ?ProxyWindow\n                |}) => void\n    }) => ZalgoPromise<void>\n|};\n\nexport function renderSmartMenu({ clientID } : SmartMenuProps) : SmartMenu {\n\n    const { Menu } = paypal;\n\n    if (!Menu) {\n        throw new Error(`Menu component not found`);\n    }\n\n    const { renderTo, updateProps, show, hide } = Menu({ clientID });\n\n    const render = memoize(() => {\n        return renderTo(window.xprops.getParent(), '#smart-menu');\n    });\n\n    const display = ({ choices, verticalOffset, onChoose }) => {\n        return render().then(() => {\n            return updateProps({\n                verticalOffset,\n                choices,\n                onChoose: ({ id, win }) => {\n                    hide();\n                    return onChoose({ id, win });\n                }\n            });\n        }).then(() => {\n            return show();\n        });\n    };\n\n    hide();\n    render();\n\n    return { display };\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\n\nimport type { RememberFunding } from './props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : { rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\nexport function setupButtonLogs({ style } : { style : ButtonStyle }) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\nimport type { RememberFunding } from './rememberFunding';\nimport type { GetPageURL } from './getPageUrl';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    upgradeLSAT? : boolean,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type Props = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    enableStandardCardFields : ?boolean,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange\n|};\n"],"sourceRoot":""}