{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/global.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/index.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/belter/src/storage.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/experiment.js","webpack://spb/./node_modules/belter/src/global.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/decorators.js","webpack://spb/./node_modules/belter/src/test.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/defaults.js","webpack://spb/./src/config.js","webpack://spb/./src/constants.js","webpack://spb/./src/api.js","webpack://spb/./src/checkout.js","webpack://spb/./src/button.js","webpack://spb/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","uniqueID","getGlobal","memoize","promisify","inlineMemoize","noop","once","stringify","extend","safeInterval","capitalizeFirstLetter","tryCatch","removeFromArray","objectIDs","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","cross_domain_safe_weakmap_src__WEBPACK_IMPORTED_MODULE_1__","chars","replace","charAt","Math","floor","random","length","str","btoa","Buffer","from","toString","Error","base64encode","Date","toISOString","slice","toLowerCase","window","global","__GLOBAL__","serializeArgs","args","JSON","Array","subkey","val","obj","WeakMap","uid","set","getObjectID","err","method","options","_this","this","cacheMap","memoizedFunction","_len","arguments","_key","cache","getOrSet","thisNamespace","cacheTime","time","now","apply","reset","delete","displayName","promisifiedFunction","ZalgoPromise","try","logic","__inline_memoize_cache__","called","item","source","assign","timeout","loop","setTimeout","cancel","clearTimeout","string","toUpperCase","fn","result","error","arr","index","indexOf","splice","isPromise","Promise","Window","constructor","then","glob","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","handler","resolved","rejected","errorHandled","handlers","dispatching","stack","isAsync","res","resolve","reject","_proto","dispatch","_this2","promise","push","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","flushQueue","catch","undefined","finally","onFinally","_this4","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","items","onPossiblyUnhandledException","context","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","_device__WEBPACK_IMPORTED_MODULE_0__","_dom__WEBPACK_IMPORTED_MODULE_1__","_util__WEBPACK_IMPORTED_MODULE_5__","_http__WEBPACK_IMPORTED_MODULE_6__","_utils__WEBPACK_IMPORTED_MODULE_0__","PROTOCOL","WILDCARD","MOCK","FILE","ABOUT","_extends","target","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","weakmap","values","freeze","testWeakMap","testKey","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","self","entry","writable","has","weakmap_CrossDomainSafeWeakMap","isDevice","supportsPopups","getUserAgent","navigator","mockUserAgent","userAgent","match","isOperaMini","ua","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","getStorage","_util__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$version","version","_ref$lifetime","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","isLocalStorageEnabled","rawStorage","localStorage","getItem","parse","id","setItem","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","KEY_CODES","querySelectorAll","selector","doc","document","onClick","element","addEventListener","event","keyCode","removeItem","request","HEADERS","CONTENT_TYPE","ACCEPT","headerBuilders","url","_ref$method","_ref$headers","headers","json","data","body","_ref$win","win","_ref$timeout","normalizedHeaders","_i4","_Object$keys2","_i6","builtHeaders","headerBuilder","_i8","_Object$keys4","xhr","XMLHttpRequest","responseHeaders","rawHeaders","_rawHeaders$trim$spli2","trim","split","_line$split","join","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","evt","open","setRequestHeader","encodeURIComponent","ontimeout","send","getParent","getTop","linkFrameWindow","IE_WIN_ACCESS_ERROR","isAboutProtocol","location","protocol","parent","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","top","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","frames","len","frame","getFrames","_i5","_getAllChildFrames2","childFrame","iframeWindows","iframeFrames","allowMock","closed","message","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","contains","isFrameWindowClosed","cleanIframes","__cross_domain_utils_window_check__","SDK_QUERY_KEYS","_COUNTRY_LANGS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","CAPTURE","AUTHORIZE","ORDER","API_URI","AUTH","PAYMENT","GRAPHQL","SMART_BUTTONS","CSRF_TOKEN","SOURCE","ORDER_API_ERROR","CC_PROCESSOR_DECLINED","INSTRUMENT_DECLINED","ORDER_ID_PATTERN","ERROR_URL","defaultHeaders","csrfToken","callAPI","_extends2","reqHeaders","esm_extends","_ref2","resHeaders","ack","contingency","getAuth","persistAccessToken","accessToken","validateOrder","orderID","query","_ref3","errors","filter","cart","checkout","checkoutSession","intent","currency","amounts","total","currencyCode","returnUrl","cancelUrl","expectedIntent","xprops","expectedCurrency","checkoutOpen","canRenderTop","renderCheckout","props","createOrder","createBillingAgreement","billingToken","token","billingTokenToOrderID","getCreateOrder","renderWindow","validateOrderPromise","instance","paypal","Checkout","locale","commit","onApprove","payerID","paymentID","actions","restartFlow","close","handleProcessorError","orderGet","getOrder","order","capture","captureOrder","authorize","authorizeOrder","restart","buildExecuteActions","onCancel","onAuth","_ref4","onClose","nonce","getAttribute","getNonce","renderTo","setupButton","forEach","button","fundingSource","card","preventDefault","stopPropagation","getPrerenderDetails","prerenderDetails"],"mappings":"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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement, attempts : number = 3) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    // $FlowFixMe\n    let win = frame.contentWindow;\n\n    if (win) {\n        try {\n            // $FlowFixMe\n            noop(win.name);\n        } catch (err) {\n            el.removeChild(frame);\n\n            if (!attempts) {\n                throw new Error(`Frame is cross-domain: ${ err.stack }`);\n            }\n\n            return iframe(options, container, attempts - 1);\n        }\n    }\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Prom<X> = Promise<X> | ZalgoPromise<X>;\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({ expect : Handler, avoid : Handler, expectError : Handler, error : Handler }) => (Prom<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : { timeout? : number } = {}) : ZalgoPromise<void> {\n    let expected : Array<string> = [];\n    let promises : Array<ZalgoPromise<*>> = [];\n\n    let timer = setTimeout(() => {\n        if (expected) {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ expected[0] } to be called`)));\n        }\n    }, timeout);\n\n    let expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    let avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    let expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            let { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid })));\n\n    let drain = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return drain();\n            }\n            if (expected.length) {\n                return ZalgoPromise.delay(10).then(drain);\n            }\n        });\n    };\n\n    return drain().then(() => {\n        clearTimeout(timer);\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        if (isWindowClosed(iframeWindows[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:   ('client-id' : 'client-id'),\n    MERCHANT_ID: ('merchant-id' : 'merchant-id'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    [COUNTRY.AD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.AG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AL]: [ LANG.EN ],\n    [COUNTRY.AM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AR]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.AT]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.AU]: [ LANG.EN ],\n    [COUNTRY.AW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BA]: [ LANG.EN ],\n    [COUNTRY.BB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BE]: [ LANG.EN, LANG.NL, LANG.FR ],\n    [COUNTRY.BF]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BG]: [ LANG.EN ],\n    [COUNTRY.BH]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BI]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BN]: [ LANG.EN ],\n    [COUNTRY.BO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.BR]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.BS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BT]: [ LANG.EN ],\n    [COUNTRY.BW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BY]: [ LANG.EN ],\n    [COUNTRY.BZ]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.CA]: [ LANG.EN, LANG.FR ],\n    [COUNTRY.CD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.CG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CH]: [ LANG.DE, LANG.FR, LANG.EN ],\n    [COUNTRY.CI]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CL]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CM]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CN]: [ LANG.ZH ],\n    [COUNTRY.CO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CR]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CY]: [ LANG.EN ],\n    [COUNTRY.CZ]: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DE]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.DJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.DK]: [ LANG.DA, LANG.EN ],\n    [COUNTRY.DM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.DZ]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EC]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.EE]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EG]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ER]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ES]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.ET]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FI]: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FM]: [ LANG.EN ],\n    [COUNTRY.FO]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FR]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.GA]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GB]: [ LANG.EN ],\n    [COUNTRY.GD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GL]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GP]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GR]: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GT]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.GW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.HK]: [ LANG.EN, LANG.ZH ],\n    [COUNTRY.HN]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.HR]: [ LANG.EN ],\n    [COUNTRY.HU]: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ID]: [ LANG.ID, LANG.EN ],\n    [COUNTRY.IE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.IL]: [ LANG.HE, LANG.EN ],\n    [COUNTRY.IN]: [ LANG.EN ],\n    [COUNTRY.IS]: [ LANG.EN ],\n    [COUNTRY.IT]: [ LANG.IT, LANG.EN ],\n    [COUNTRY.JM]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.JO]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.JP]: [ LANG.JA, LANG.EN ],\n    [COUNTRY.KE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KH]: [ LANG.EN ],\n    [COUNTRY.KI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KM]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.KN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KR]: [ LANG.KO, LANG.EN ],\n    [COUNTRY.KW]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LA]: [ LANG.EN ],\n    [COUNTRY.LC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LK]: [ LANG.EN ],\n    [COUNTRY.LS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LT]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LU]: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LV]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MC]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.MD]: [ LANG.EN ],\n    [COUNTRY.ME]: [ LANG.EN ],\n    [COUNTRY.MG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MK]: [ LANG.EN ],\n    [COUNTRY.ML]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.MN]: [ LANG.EN ],\n    [COUNTRY.MQ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MT]: [ LANG.EN ],\n    [COUNTRY.MU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MV]: [ LANG.EN ],\n    [COUNTRY.MW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MX]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.MY]: [ LANG.EN ],\n    [COUNTRY.MZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NE]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.NF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NG]: [ LANG.EN ],\n    [COUNTRY.NI]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.NL]: [ LANG.NL, LANG.EN ],\n    [COUNTRY.NO]: [ LANG.NO, LANG.EN ],\n    [COUNTRY.NP]: [ LANG.EN ],\n    [COUNTRY.NR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.OM]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PA]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PH]: [ LANG.EN ],\n    [COUNTRY.PL]: [ LANG.PL, LANG.EN ],\n    [COUNTRY.PM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PT]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.PW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PY]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.QA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.RE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RU]: [ LANG.RU, LANG.EN ],\n    [COUNTRY.RW]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SC]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SE]: [ LANG.SV, LANG.EN ],\n    [COUNTRY.SG]: [ LANG.EN ],\n    [COUNTRY.SH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SK]: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SL]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ST]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SV]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.SZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TG]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TH]: [ LANG.TH, LANG.EN ],\n    [COUNTRY.TJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TN]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TO]: [ LANG.EN ],\n    [COUNTRY.TR]: [ LANG.TR, LANG.EN ],\n    [COUNTRY.TT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TW]: [ LANG.ZH, LANG.EN ],\n    [COUNTRY.TZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UA]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.US]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UY]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VN]: [ LANG.EN ],\n    [COUNTRY.VU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WS]: [ LANG.EN ],\n    [COUNTRY.YE]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.YT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZW]: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nimport { COUNTRY } from './locale';\nimport { CURRENCY, INTENT, COMMIT, VAULT } from './order';\nimport { COMPONENTS, DEBUG } from './params';\n\nexport const DEFAULT_COUNTRY = COUNTRY.US;\nexport const DEFAULT_CURRENCY = CURRENCY.USD;\nexport const DEFAULT_INTENT = INTENT.CAPTURE;\nexport const DEFAULT_COMMIT = COMMIT.TRUE;\nexport const DEFAULT_VAULT = VAULT.FALSE;\nexport const DEFAULT_COMPONENTS = COMPONENTS.BUTTONS;\nexport const DEFAULT_DEBUG = DEBUG.FALSE;\n","/* @flow */\n\nexport const API_URI = {\n    AUTH:    '/webapps/hermes/api/auth',\n    ORDER:   '/webapps/hermes/api/order',\n    PAYMENT: '/webapps/hermes/api/payment',\n    GRAPHQL: '/graphql'\n};\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\n\nexport const ACCESS_TOKEN_HEADER = 'x-paypal-internal-euat';\n\nexport const HEADERS = {\n    CSRF_TOKEN: 'x-csrf-jwt',\n    SOURCE:     'x-source'\n};\n\nexport const ORDER_API_ERROR = {\n    CC_PROCESSOR_DECLINED: 'CC_PROCESSOR_DECLINED',\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED'\n};\n\nexport const ORDER_ID_PATTERN = /^(EC-)?[A-Z0-9]+$/;\n\nexport const ERROR_URL = 'https://www.paypal.com/checkoutnow/error';\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, request, noop } from 'belter/src';\n\nimport { API_URI } from './config';\nimport { ACCESS_TOKEN_HEADER, HEADERS, SMART_BUTTONS } from './constants';\n\nconst defaultHeaders = {};\nlet csrfToken = '';\n\ntype APIRequest = {|\n    url : string,\n    method? : string,\n    json? : Object\n|};\n\nfunction callAPI({ url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders = {\n        ...defaultHeaders,\n        [ HEADERS.CSRF_TOKEN ]: csrfToken,\n        [ HEADERS.SOURCE ]:     SMART_BUTTONS\n    };\n\n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, headers: resHeaders, body }) => {\n            csrfToken = resHeaders[HEADERS.CSRF_TOKEN];\n\n            if (body.ack === 'contingency') {\n                throw new Error(body.contingency);\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status }`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack }`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>(query : string) : ZalgoPromise<T> {\n    return request({\n        url:     API_URI.GRAPHQL,\n        method:  'POST',\n        json:    {\n            query: `\n                query {\n                    ${ query }\n                }\n            `\n        }\n    }).then(({ body }) => {\n        const errors = (body.errors || []).filter(error => (error.message !== 'ACCOUNT_CANNOT_BE_FETCHED'));\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        return body;\n    });\n}\n\nexport type AuthResponse = {|\n\n|};\n\nexport function getAuth() : ZalgoPromise<AuthResponse> {\n    return callAPI({\n        url: API_URI.AUTH\n    });\n}\n\nexport type OrderResponse = {|\n\n|};\n\nexport function getOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callAPI({\n        url: `${ API_URI.ORDER }/${ orderID }`\n    });\n}\n\nexport function captureOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/capture`\n    });\n}\n\nexport function authorizeOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/authorize`\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callAPI({\n        method: 'post',\n        url:    `${ API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport const persistAccessToken = memoize((accessToken) : ZalgoPromise<void> => {\n    defaultHeaders[ACCESS_TOKEN_HEADER] = accessToken;\n    return getAuth().then(noop);\n});\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { getOrder, captureOrder, authorizeOrder, persistAccessToken, billingTokenToOrderID, callGraphQL, type OrderResponse } from './api';\nimport { ORDER_API_ERROR, ORDER_ID_PATTERN, ERROR_URL } from './constants';\n\ntype ActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    restart : () => ZalgoPromise<OrderResponse>\n|};\n\ntype CheckoutComponent = {|\n    close : () => ZalgoPromise<void>\n|};\n\nfunction buildExecuteActions(checkout : CheckoutComponent, orderID : string) : ActionsType {\n\n    const restartFlow = memoize(() : ZalgoPromise<OrderResponse> =>\n        checkout.close().then(() => {\n            // eslint-disable-next-line no-use-before-define\n            return renderCheckout({\n                createOrder: () => ZalgoPromise.resolve(orderID)\n            }, 'iframe');\n        }).catch(noop).then(() => new ZalgoPromise(noop)));\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        if (err && err.message === ORDER_API_ERROR.CC_PROCESSOR_DECLINED) {\n            return restartFlow();\n        }\n\n        if (err && err.message === ORDER_API_ERROR.INSTRUMENT_DECLINED) {\n            return restartFlow();\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const orderGet = memoize(() =>\n        getOrder(orderID));\n\n    const orderCapture = memoize(() => {\n        if (window.xprops.intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID)\n            .catch(handleProcessorError)\n            .finally(orderGet.reset);\n    });\n\n    const orderAuthorize = memoize(() =>\n        authorizeOrder(orderID)\n            .catch(handleProcessorError)\n            .finally(orderGet.reset));\n\n    return {\n        order: {\n            capture:    orderCapture,\n            authorize:  orderAuthorize,\n            get:        orderGet\n        },\n        restart: restartFlow\n    };\n}\n\nfunction validateOrder(orderID : string) : ZalgoPromise<void> {\n    if (!orderID.match(ORDER_ID_PATTERN)) {\n        throw new Error(`${ orderID } does not match pattern for order-id, ec-token or cart-id`);\n    }\n\n    return callGraphQL(`\n        checkout {\n            checkoutSession(token : \"${ orderID }\") {\n                cart {\n                    intent\n                    returnUrl {\n                        href\n                    }\n                    cancelUrl {\n                        href\n                    }\n                    amounts {\n                        total {\n                            currencyCode\n                        }\n                    }\n                }\n            }\n        }\n    `).then(res => {\n        const cart = res.data.checkout.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n        const returnUrl = cart.returnUrl && cart.returnUrl.href;\n        const cancelUrl = cart.cancelUrl && cart.cancelUrl.href;\n\n        const expectedIntent = window.xprops.intent;\n        const expectedCurrency = window.xprops.currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        if (returnUrl && returnUrl.indexOf(ERROR_URL) !== 0) {\n            throw new Error(`Expected return url to be either blank, or \"${ ERROR_URL }\". Return url is forbidden for smart payment button integration.`);\n        }\n\n        if (cancelUrl && cancelUrl.indexOf(ERROR_URL) !== 0) {\n            throw new Error(`Expected cancel url to be either blank, or \"${ ERROR_URL }\". Cancel url is forbidden for smart payment button integration.`);\n        }\n    });\n}\n\nlet checkoutOpen = false;\nlet canRenderTop = true;\n\nexport function setupCheckout() {\n    const [ parent, top ] = [ getTop(window), getParent() ];\n\n    if (top && parent && parent !== top) {\n        window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n}\n\nfunction getCreateOrder(props : Object = {}) : () => ZalgoPromise<string> {\n    return memoize(() => {\n        return ZalgoPromise.try(() => {\n            if (props.createOrder) {\n                return props.createOrder();\n            } else if (window.xprops.createBillingAgreement) {\n                return window.xprops.createBillingAgreement().then(billingToken => {\n                    return billingTokenToOrderID(billingToken);\n                });\n            } else if (window.xprops.createOrder) {\n                return window.xprops.createOrder();\n            } else {\n                throw new Error(`No mechanism to create order`);\n            }\n        });\n    });\n}\n\nfunction getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n\nfunction getDefaultContext() : string {\n    return supportsPopups() ? 'popup' : 'iframe';\n}\n\nexport function renderCheckout(props : Object = {}, context : string = getDefaultContext()) : ZalgoPromise<mixed> {\n\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const [ parent, top ] = [ getTop(window), getParent() ];\n\n    const createOrder = getCreateOrder(props);\n    const renderWindow = (canRenderTop && top) ? top : parent;\n\n    const validateOrderPromise = createOrder().then(validateOrder);\n\n    const instance = window.paypal.Checkout({\n        ...props,\n\n        createOrder,\n\n        locale: window.xprops.locale,\n        commit: window.xprops.commit,\n\n        onError: window.xprops.onError,\n\n        onApprove({ orderID, payerID, paymentID, billingToken }) : ZalgoPromise<void> {\n            const actions = buildExecuteActions(this, orderID);\n\n            return window.xprops.onApprove({ orderID, payerID, paymentID, billingToken }, actions).catch(err => {\n                return window.xprops.onError(err);\n            });\n        },\n\n        onCancel: () : ZalgoPromise<void> => {\n            return ZalgoPromise.try(() => {\n                return createOrder();\n            }).then(orderID => {\n                return window.xprops.onCancel({ orderID });\n            }).catch(err => {\n                return window.xprops.onError(err);\n            });\n        },\n\n        onAuth: ({ accessToken }) : ZalgoPromise<void> => {\n            return persistAccessToken(accessToken);\n        },\n\n        onClose: () => {\n            checkoutOpen = false;\n        },\n\n        nonce: getNonce()\n    });\n    \n    return instance.renderTo(renderWindow, 'body', context).then(() => {\n        return validateOrderPromise.catch(err => {\n            return ZalgoPromise.all([\n                instance.close(),\n                instance.onError(err)\n            ]);\n        });\n    });\n}\n","/* @flow */\n\nimport { querySelectorAll, onClick, noop } from 'belter/src';\n\nimport { renderCheckout } from './checkout';\nimport { getAuth } from './api';\n\nexport function setupButton() {\n\n    if (!window.paypal) {\n        throw new Error(`PayPal library not loaded`);\n    }\n\n    querySelectorAll('.paypal-button').forEach(button => {\n        const fundingSource = button.getAttribute('data-funding-source');\n        const card = button.getAttribute('data-card');\n\n        onClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            if (window.xprops.onClick) {\n                window.xprops.onClick({ fundingSource, card });\n            }\n\n            renderCheckout({ fundingSource }).catch(noop);\n        });\n    });\n\n    getAuth().then(noop);\n\n    window.xprops.getPrerenderDetails().then((prerenderDetails) => {\n        if (prerenderDetails) {\n            const { win, order, fundingSource } = prerenderDetails;\n\n            renderCheckout({\n                window:      win,\n                createOrder: () => order,\n                fundingSource\n            }).catch(noop);\n        }\n    });\n}\n","/* @flow */\n\nexport * from './button';\n"],"sourceRoot":""}