{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/onAuth.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/index.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/button/button.js","webpack://spb/./src/payment-flows/vault.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/dist/paypal-sdk-constants.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","_COUNTRY_LANGS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","MERCHANT_DOMAIN","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","FUNDING","PAYPAL","VENMO","ITAU","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","ZIMPLER","WECHATPAY","__webpack_exports__","SMART_BUTTONS","SMART_PAYMENT_BUTTONS","ACCESS_TOKEN_HEADER","HEADERS","DATA_ATTRIBUTES","CLASS","ORDER_API_ERROR","CONTEXT","TARGET_ELEMENT","INTEGRATION_ARTIFACT","USER_EXPERIENCE_FLOW","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","FPTI_STATE","FPTI_TRANSITION","FPTI_BUTTON_TYPE","FTPI_BUTTON_KEY","AUTHORIZATION","CSRF_TOKEN","SOURCE","REQUESTED_BY","ACCESS_TOKEN","CLIENT_METADATA_ID","FUNDING_SOURCE","PAYMENT_METHOD_ID","LOADING","CLICKED","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","IFRAME","POPUP","BODY","PAYPAL_JS_SDK","INCONTEXT","INLINE","BUTTON_SESSION_ID","ORDER_ID","BUTTON","BUTTON_LOAD","BUTTON_CLICK","CREATE_ORDER","RECEIVE_ORDER","CHECKOUT_SHIPPING_CHANGE","CHECKOUT_AUTHORIZE","CHECKOUT_CANCEL","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isIEIntranet","document","documentMode","status","err","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","item","length","objectIDs","counter","Date","now","CrossDomainSafeWeakMap","this","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_proto","prototype","_cleanupClosedWindows","isWindow","isWindowClosed","delete","splice","isSafeToReadWrite","Error","entry","writable","index","push","has","undefined","getOrSet","base64encode","str","btoa","Buffer","from","toString","serializeArgs","args","JSON","stringify","Array","slice","subkey","val","obj","chars","uid","replace","charAt","floor","toISOString","toLowerCase","getObjectID","memoize","method","options","_this","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","time","apply","reset","displayName","inlineMemoize","logic","__inline_memoize_cache__","noop","stringifyError","level","stack","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","result","promiseDebounce","delay","promise","timeout","clearTimeout","localPromise","ZalgoPromise","setTimeout","try","then","resolve","reject","safeInterval","loop","cancel","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","esm_extends","map","join","extendUrl","url","originalUrl","originalHash","query","hash","_url$split","_originalUrl$split","hashString","redirect","win","location","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","handler","addEventListener","event","keyCode","CONTENT_TYPE","ACCEPT","headerBuilders","request","_ref","_ref$method","_ref$headers","headers","json","data","_ref$win","_ref$timeout","normalizedHeaders","_i4","_Object$keys2","_i6","builtHeaders","headerBuilder","_i8","_Object$keys4","xhr","XMLHttpRequest","responseHeaders","rawHeaders","_rawHeaders$trim$spli2","trim","_line$split","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","encodeURIComponent","ontimeout","send","util_noop","isPromise","Promise","Window","constructor","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","startActive","endActive","resolved","rejected","errorHandled","error","handlers","dispatching","isAsync","res","dispatch","_this2","j","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","finally","onFinally","_this4","toPromise","TypeError","all","promises","count","results","_loop2","prom","items","onPossiblyUnhandledException","context","flush","promise_ZalgoPromise","unresolvedPromise","promiseNoop","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","target","source","getLogger","_ref2","prefix","_ref2$logLevel","logLevel","_ref2$transport","transport","_ref2$flushInterval","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","buttonSessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","merchantDomain","referer","host","lang","country","mID","paypal","version","_logger$track","persistedAccessToken","createAccessToken","basicAuth","AUTH_API_URL","Authorization","grant_type","access_token","persistAccessToken","accessToken","createOrderID","order","currency","xprops","intent","toUpperCase","purchase_units","unit","amount","currency_code","payee","UNKNOWN","merchant_id","application_context","PayPal-Partner-Attribution-Id","ORDERS_API_URL","_getLogger$track","orderID","id","getOrder","callSmartAPI","API_URI","captureOrder","authorizeOrder","patchOrder","patch","VALIDATE_CONTINGENCIES","THREE_DOMAIN_SECURE","validatePaymentMethod","_headers","clientAccessToken","paymentMethodID","enableThreeDomainSecure","paymentSource","token","type","contingencies","payment_source","VALIDATE_PAYMENT_METHOD_API","billingTokenToOrderID","billingToken","PAYMENT","subscriptionIdToCartId","subscriptionID","SUBSCRIPTION","enableVault","_ref3","_headers2","callGraphQL","variables","updateClientConfig","_ref4","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createSubscription","subscriptionPayload","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","activateSubscription","getSubscription","EXPERIENCE_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","GRAPHQL","_extends","assign","_reqHeaders","reqHeaders","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ack","contingency","_ref3$variables","_ref3$headers","errors","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","getTop","top","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","frames","len","frame","getFrames","_i5","_getAllChildFrames2","iframeWindows","iframeFrames","allowMock","closed","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","__cross_domain_utils_window_check__","getButtons","getSelectedFunding","enableLoadingSpinner","disableLoadingSpinner","getNonce","belter_src__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","button","getAttribute","card","classList","add","remove","nonce","POPUP_BRIDGE_OPTYPE","CANCEL","_props__WEBPACK_IMPORTED_MODULE_1__","_createOrder__WEBPACK_IMPORTED_MODULE_2__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_3__","_createSubscription__WEBPACK_IMPORTED_MODULE_4__","_onApprove__WEBPACK_IMPORTED_MODULE_5__","_onInit__WEBPACK_IMPORTED_MODULE_6__","_onCancel__WEBPACK_IMPORTED_MODULE_7__","_onShippingChange__WEBPACK_IMPORTED_MODULE_8__","_onClick__WEBPACK_IMPORTED_MODULE_9__","_onAuth__WEBPACK_IMPORTED_MODULE_10__","_onError__WEBPACK_IMPORTED_MODULE_11__","__WEBPACK_IMPORT_KEY__","_getPopupBridge__WEBPACK_IMPORTED_MODULE_12__","buildXOnInitData","buildXOnInitActions","getOnInit","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","enable","disable","onInit","enabled","isEnabled","buildXCreateOrderData","buildXCreateOrderActions","getCreateOrder","belter_src__WEBPACK_IMPORTED_MODULE_0__","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_constants__WEBPACK_IMPORTED_MODULE_3__","_lib__WEBPACK_IMPORTED_MODULE_4__","createBillingAgreement","createOrder","actions","getOnApprove","onApprove","payerID","paymentID","restart","_getLogger$info$track","handleProcessorError","details","some","detail","issue","capture","authorize","getSubscriptionApi","activateSubscriptionApi","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","_lib__WEBPACK_IMPORTED_MODULE_2__","_xprops$onCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","buildXOnClickData","buildXOnClickActions","getOnClick","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_2__","_lib__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_xprops$onClick","valid","getOnAuth","_api__WEBPACK_IMPORTED_MODULE_1__","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","getCreateSubscription","revise","createSubscriptionFunc","_button__WEBPACK_IMPORTED_MODULE_0__","getGlobalProps","getButtonCallbackProps","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_0__","_dom__WEBPACK_IMPORTED_MODULE_1__","_onInit__WEBPACK_IMPORTED_MODULE_2__","_createOrder__WEBPACK_IMPORTED_MODULE_3__","_onApprove__WEBPACK_IMPORTED_MODULE_4__","_onCancel__WEBPACK_IMPORTED_MODULE_5__","_onShippingChange__WEBPACK_IMPORTED_MODULE_6__","_onClick__WEBPACK_IMPORTED_MODULE_7__","_onAuth__WEBPACK_IMPORTED_MODULE_8__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_9__","_createSubscription__WEBPACK_IMPORTED_MODULE_10__","cspNonce","vault","getParentDomain","_xprops$buyerCountry","buyerCountry","buyerGeoCountry","getPopupBridge","getPrerenderDetails","rememberFunding","remember","onAuth","checkoutOpen","canRenderTop","initCheckout","fundingEligibility","_props$validationProm","validationPromise","approved","start","_window$paypal$Checko","Checkout","enableVaultSetup","closeCheckout","onClose","close","triggerError","renderPromise","renderTo","getRenderWindow","cardFieldsOpen","highlightCard","forEach","el","style","opacity","openCardFields","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","display","recalculateMargin","marginTop","offsetHeight","transitionDuration","validateOrder","cart","checkoutSession","amounts","total","currencyCode","expectedIntent","expectedCurrency","setupButton","opts","serverCSPNonce","init","_getGlobalProps","popupBridge","buttonProcessing","pay","_getButtonCallbackPro","isCardFields","enableInlineGuest","isCardFieldsEligible","isVaultCapture","isVaultCaptureEligible","isPopupBridge","isPopupBridgeEligible","links","link","rel","instance","ThreeDomainSecure","handleThreeDomainSecure","handleValidateResponse","initVault","_window$paypal$CardFi","CardFields","onCardTypeChange","render","initCardFields","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","initPopupBridge","updateClientConfiguration","updateButtonClientConfig","tasks","_getSelectedFunding","onElementClick","preventDefault","stopPropagation","payPromise","blur","venmo","eligible","bridge","pageRenderTime","fundingSources","layout","color","shape","label","_style$tagline","tagline","innerWidth","triggerButtonLogs","setupCheckout","canRenderTo","prerender","prerenderDetails","require","configurable","default","./src/index.js","LANG","CS","DA","EL","EN","HE","JA","KO","ZH","COUNTRY_LANGS","SDK_SETTINGS","CLIENT_TOKEN","STAGE_HOST","API_STAGE_HOST","CSP_NONCE","ENABLE_3DS","BUTTONS","HOSTED_FIELDS","ANGULARJS","ANGULAR","REACT","VUE","TRUE","FALSE","QUERY_BOOL","HTTP","HTTPS","LOCAL","STAGE","SANDBOX","PRODUCTION","TEST","AUD","BRL","CAD","CZK","DKK","EUR","HKD","HUF","INR","ILS","JPY","MUR","MYR","MXN","TWD","NZD","NOK","PHP","PLN","GBP","RUB","SGD","SEK","CHF","THB","USD","PLATFORM","DESKTOP","MOBILE","VISA","MASTERCARD","AMEX","DISCOVER","HIPER","ELO","JCB","CUP","DEFAULT_COUNTRY","DEFAULT_CURRENCY","DEFAULT_INTENT","DEFAULT_COMMIT","DEFAULT_SALE_COMMIT","DEFAULT_NONSALE_COMMIT","DEFAULT_VAULT","DEFAULT_COMPONENTS","DEFAULT_DEBUG"],"mappings":"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C,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACA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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    [COUNTRY.AD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.AG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AL]: [ LANG.EN ],\n    [COUNTRY.AM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AR]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.AT]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.AU]: [ LANG.EN ],\n    [COUNTRY.AW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BA]: [ LANG.EN ],\n    [COUNTRY.BB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BE]: [ LANG.EN, LANG.NL, LANG.FR ],\n    [COUNTRY.BF]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BG]: [ LANG.EN ],\n    [COUNTRY.BH]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BI]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BN]: [ LANG.EN ],\n    [COUNTRY.BO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.BR]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.BS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BT]: [ LANG.EN ],\n    [COUNTRY.BW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BY]: [ LANG.EN ],\n    [COUNTRY.BZ]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.CA]: [ LANG.EN, LANG.FR ],\n    [COUNTRY.CD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.CG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CH]: [ LANG.DE, LANG.FR, LANG.EN ],\n    [COUNTRY.CI]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CL]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CM]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CN]: [ LANG.ZH ],\n    [COUNTRY.CO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CR]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CY]: [ LANG.EN ],\n    [COUNTRY.CZ]: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DE]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.DJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.DK]: [ LANG.DA, LANG.EN ],\n    [COUNTRY.DM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.DZ]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EC]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.EE]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EG]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ER]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ES]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.ET]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FI]: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FM]: [ LANG.EN ],\n    [COUNTRY.FO]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FR]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.GA]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GB]: [ LANG.EN ],\n    [COUNTRY.GD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GL]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GP]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GR]: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GT]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.GW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.HK]: [ LANG.EN, LANG.ZH ],\n    [COUNTRY.HN]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.HR]: [ LANG.EN ],\n    [COUNTRY.HU]: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ID]: [ LANG.ID, LANG.EN ],\n    [COUNTRY.IE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.IL]: [ LANG.HE, LANG.EN ],\n    [COUNTRY.IN]: [ LANG.EN ],\n    [COUNTRY.IS]: [ LANG.EN ],\n    [COUNTRY.IT]: [ LANG.IT, LANG.EN ],\n    [COUNTRY.JM]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.JO]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.JP]: [ LANG.JA, LANG.EN ],\n    [COUNTRY.KE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KH]: [ LANG.EN ],\n    [COUNTRY.KI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KM]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.KN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KR]: [ LANG.KO, LANG.EN ],\n    [COUNTRY.KW]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LA]: [ LANG.EN ],\n    [COUNTRY.LC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LK]: [ LANG.EN ],\n    [COUNTRY.LS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LT]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LU]: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LV]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MC]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.MD]: [ LANG.EN ],\n    [COUNTRY.ME]: [ LANG.EN ],\n    [COUNTRY.MG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MK]: [ LANG.EN ],\n    [COUNTRY.ML]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.MN]: [ LANG.EN ],\n    [COUNTRY.MQ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MT]: [ LANG.EN ],\n    [COUNTRY.MU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MV]: [ LANG.EN ],\n    [COUNTRY.MW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MX]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.MY]: [ LANG.EN ],\n    [COUNTRY.MZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NE]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.NF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NG]: [ LANG.EN ],\n    [COUNTRY.NI]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.NL]: [ LANG.NL, LANG.EN ],\n    [COUNTRY.NO]: [ LANG.NO, LANG.EN ],\n    [COUNTRY.NP]: [ LANG.EN ],\n    [COUNTRY.NR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.OM]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PA]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PH]: [ LANG.EN ],\n    [COUNTRY.PL]: [ LANG.PL, LANG.EN ],\n    [COUNTRY.PM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PT]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.PW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PY]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.QA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.RE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RU]: [ LANG.RU, LANG.EN ],\n    [COUNTRY.RW]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SC]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SE]: [ LANG.SV, LANG.EN ],\n    [COUNTRY.SG]: [ LANG.EN ],\n    [COUNTRY.SH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SK]: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SL]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ST]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SV]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.SZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TG]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TH]: [ LANG.TH, LANG.EN ],\n    [COUNTRY.TJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TN]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TO]: [ LANG.EN ],\n    [COUNTRY.TR]: [ LANG.TR, LANG.EN ],\n    [COUNTRY.TT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TW]: [ LANG.ZH, LANG.EN ],\n    [COUNTRY.TZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UA]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.US]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UY]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VN]: [ LANG.EN ],\n    [COUNTRY.VU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WS]: [ LANG.EN ],\n    [COUNTRY.YE]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.YT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZW]: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce'),\n    ENABLE_3DS:             ('data-enable-3ds' : 'data-enable-3ds')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:   ('client-id' : 'client-id'),\n    MERCHANT_ID: ('merchant-id' : 'merchant-id'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n\nexport const PROTOCOL = {\n    HTTP:  ('http' : 'http'),\n    HTTPS: ('https' : 'https')\n};\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:      ('paypal' : 'paypal'),\n    VENMO:       ('venmo' : 'venmo'),\n    ITAU:        ('itau' : 'itau'),\n    CREDIT:      ('credit' : 'credit'),\n    CARD:        ('card' : 'card'),\n    IDEAL:       ('ideal' : 'ideal'),\n    SEPA:        ('sepa' : 'sepa'),\n    BANCONTACT:  ('bancontact' : 'bancontact'),\n    GIROPAY:     ('giropay' : 'giropay'),\n    SOFORT:      ('sofort' : 'sofort'),\n    EPS:         ('eps' : 'eps'),\n    MYBANK:      ('mybank' : 'mybank'),\n    P24:         ('p24' : 'p24'),\n    ZIMPLER:     ('zimpler' : 'zimpler'),\n    WECHATPAY:   ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const ACCESS_TOKEN_HEADER = 'x-paypal-internal-euat';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n\n    CSRF_TOKEN:         'x-csrf-jwt',\n    SOURCE:             'x-source',\n    REQUESTED_BY:       'x-requested-by',\n\n    ACCESS_TOKEN:           'x-paypal-internal-euat',\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_AUTHORIZE:       ('process_checkout_authorize' : 'process_checkout_authorize'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT: ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:  ('button_color' : 'button_color'),\n    BUTTON_SIZE:   ('button_size' : 'button_size'),\n    BUTTON_SHAPE:  ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:  ('button_label' : 'button_label'),\n    BUTTON_WIDTH:  ('button_width' : 'button_width'),\n    BUTTON_TYPE:   ('button_type' : 'button_type')\n};\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : ?string,\n    merchantDomain : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n        const mID = merchantID;\n\n        return {\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              mID && mID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            window.paypal.version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, inlineMemoize, base64encode, request } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { ACCESS_TOKEN_HEADER } from '../constants';\n\nimport { addHeaderBuilder } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nlet persistedAccessToken;\n\naddHeaderBuilder(() => {\n    return {\n        [ ACCESS_TOKEN_HEADER ]: persistedAccessToken\n    };\n});\n\nexport const persistAccessToken = memoize((accessToken : string) : ZalgoPromise<void> => {\n    return ZalgoPromise.try(() => {\n        if (accessToken) {\n            persistedAccessToken = accessToken;\n        }\n    });\n});\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { SDK_QUERY_KEYS, UNKNOWN, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\nexport function createOrderID(accessToken : string, order : OrderCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!order) {\n        throw new Error(`Expected order details to be passed`);\n    }\n\n    const currency = window.xprops.currency;\n    const intent = window.xprops.intent;\n    const merchantID = window.xprops.merchantID;\n\n    order = { ...order };\n\n    if (order.intent && order.intent.toLowerCase() !== intent) {\n        throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n    }\n\n    // $FlowFixMe\n    order = { ...order, intent: intent.toUpperCase() };\n\n    order.purchase_units = order.purchase_units.map(unit => {\n        if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n            throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n        }\n\n        let payee = unit.payee;\n\n        if (payee) {\n            if (!merchantID) {\n                throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag. Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ UNKNOWN } if you do not have access to the merchant id`);\n            }\n\n            if (payee.merchant_id && merchantID[0] !== UNKNOWN && payee.merchant_id !== merchantID) {\n                throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n            }\n        }\n\n        if (merchantID && merchantID[0] !== UNKNOWN) {\n            payee = {\n                ...payee,\n                merchant_id: merchantID[0]\n            };\n        }\n\n        return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n    });\n\n    order.application_context = order.application_context || {};\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    ORDERS_API_URL,\n        headers,\n        json:   order\n    }).then(({ body }) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.ORDER }/${ orderID }`\n    });\n}\n\nexport function captureOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/capture`\n    });\n}\n\nexport function authorizeOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/authorize`\n    });\n}\n\nexport function patchOrder(orderID : string, patch : []) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/patch`,\n        json:   { data: { patch } }\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [HEADERS.AUTHORIZATION]:            `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: window.xprops.partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     window.xprops.buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\nexport function activateSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        method: `post`,\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\n\nexport function getSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './subscription';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`,\n    GRAPHQL:        '/graphql'\n};\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT: '/checkoutnow'\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { API_URI } from '../config';\nimport { HEADERS, SMART_BUTTONS, SMART_PAYMENT_BUTTONS } from '../constants';\n\nconst headerBuilders = [];\n\nexport function addHeaderBuilder(builder : () => { [string] : string }) {\n    headerBuilders.push(builder);\n}\n\ntype APIRequest = {|\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    let reqHeaders = {\n        [ HEADERS.SOURCE ]:       SMART_BUTTONS,\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    for (const headerBuilder of headerBuilders) {\n        reqHeaders = {\n            ...reqHeaders,\n            ...headerBuilder()\n        };\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status }`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack }`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     API_URI.GRAPHQL,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ API_URI.GRAPHQL } returned status ${ status }`);\n        }\n\n        return body;\n    });\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onAuth';\nexport * from './onError';\nexport * from './getPopupBridge';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    promise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const promise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            promise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { createAccessToken, createOrderID, billingTokenToOrderID, subscriptionIdToCartId } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\nexport type XCreateOrderActionsType = {|\n    order : {\n        create : (Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateOrderActions({ clientID } : { clientID : string }) : XCreateOrderActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createOrderID(accessToken, data);\n        });\n    };\n\n    return {\n        order: { create }\n    };\n}\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function getCreateOrder(xprops : XProps, { createBillingAgreement, createSubscription } : { createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, clientID, buttonSessionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ clientID });\n\n    return memoize(() => {\n        if (createBillingAgreement) {\n            return createBillingAgreement().then(billingTokenToOrderID);\n        }  else if (createSubscription) {\n            return createSubscription().then(subscriptionIdToCartId);\n        } else if (createOrder) {\n            return createOrder(data, actions).then(orderID => {\n                if (!orderID || typeof orderID !== 'string')  {\n                    throw new Error(`Expected an order id to be passed to createOrder`);\n                }\n\n                getLogger().track({\n                    [ FPTI_KEY.STATE ]:              FPTI_STATE.BUTTON,\n                    [ FPTI_KEY.TRANSITION ]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                    [ FPTI_KEY.CONTEXT_TYPE ]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                    [ FPTI_KEY.CONTEXT_ID ]:         orderID,\n                    [ FPTI_KEY.BUTTON_SESSION_UID ]: buttonSessionID\n                }).flush();\n\n                return orderID;\n            });\n        } else {\n            return actions.order.create({\n                purchase_units: [\n                    {\n                        amount: {\n                            currency_code: 'USD',\n                            value:         '0.01'\n                        }\n                    }\n                ]\n            });\n        }\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse } from '../../api';\nimport { ORDER_API_ERROR, FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string\n|};\n\nexport type XOnApproveActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        patch : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, restart, subscriptionID } : { orderID : string, restart : () => ZalgoPromise<void>, intent : $Values<typeof INTENT>, subscriptionID : string }) : XOnApproveActionsType {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => getOrder(orderID));\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID)\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID)\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n        return redir(url, window.top);\n    };\n\n    return {\n        order:        { capture, authorize, patch, get },\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent, buttonSessionID } = xprops;\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID }, { restart }) => {\n        return createOrder().then(orderID => {\n\n            getLogger()\n                .info('button_authorize')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_AUTHORIZE,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID };\n            const actions = buildXApproveActions({ orderID, intent, restart, subscriptionID });\n\n            if (onApprove) {\n                return onApprove(data, actions).catch(onError);\n            } else {\n                if (intent === INTENT.CAPTURE) {\n                    return actions.order.capture().then(noop);\n                } else if (intent === INTENT.AUTHORIZE) {\n                    return actions.order.authorize().then(noop);\n                }\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError, buttonSessionID } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    \n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions } : { orderID : string, actions : OnShippingChangeActionsType }) : XOnShippingChangeActionsType {\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, buttonSessionID } = xprops;\n\n    if (onShippingChange) {\n        return (data, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                        [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, actions }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { promiseNoop, getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => true),\n        reject:  () => ZalgoPromise.try(() => false)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick {\n    const { onClick = promiseNoop, buttonSessionID } = xprops;\n\n    return ({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        getLogger().info('button_click').track({\n            [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n            [FPTI_KEY.CHOSEN_FUNDING]:     fundingSource\n        }).flush();\n        \n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== false);\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { persistAccessToken } from '../../api';\n\nexport type OnAuthDataType = {|\n    accessToken : string\n|};\n\nexport type OnAuth = (OnAuthDataType) => ZalgoPromise<void>;\n\nexport function getOnAuth() : OnAuth {\n    return ({ accessToken }) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            return persistAccessToken(accessToken);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return memoize(() => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport { createAccessToken, createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ clientID } : { clientID : string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createSubscription(accessToken, data);\n        });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return reviseSubscription(accessToken, subscriptionID, data);\n        });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc } = xprops;\n    const { clientID } = xprops;\n    if (createSubscriptionFunc) {\n        return memoize(() => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ clientID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        });\n    }\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n","/* @flow */\n\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { OnAuth } from './onAuth';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n    getParentDomain : () => string,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type GlobalProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n    merchantDomain : string,\n\n    onInit : OnInit,\n    onError : OnError\n|};\n\nexport type ButtonCallbackProps = {|\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onClick : OnClick,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\n\nimport { getNonce } from '../dom';\n\nimport type { XProps, GlobalProps, ButtonCallbackProps } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getOnAuth } from './onAuth';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getGlobalProps({ xprops, buyerGeoCountry, cspNonce } : {| xprops : XProps, buyerGeoCountry : ?$Values<typeof COUNTRY>, cspNonce : ?string |}) : GlobalProps {\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        buyerCountry = buyerGeoCountry || COUNTRY.US,\n        getPopupBridge,\n        getPrerenderDetails,\n        enableThreeDomainSecure,\n        remember: rememberFunding,\n        onError\n    } = xprops;\n\n    cspNonce = cspNonce || getNonce();\n    const onInit = getOnInit(xprops);\n    const merchantDomain = getParentDomain();\n\n    return {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n        enableThreeDomainSecure,\n\n        onInit,\n        onError\n    };\n}\n\nexport function getButtonCallbackProps({ xprops } : {| xprops : XProps |}) : ButtonCallbackProps {\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops);\n    const createOrder = getCreateOrder(xprops, { createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { createOrder });\n    const onCancel = getOnCancel(xprops, { createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { createOrder });\n    const onClick = getOnClick(xprops);\n    const onAuth = getOnAuth();\n\n    return {\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onClick,\n        onAuth,\n        onShippingChange\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport type { ProxyWindow, LocaleType, FundingEligibilityType } from '../types';\nimport type { CreateOrder, OnApprove, OnCancel, OnAuth, OnShippingChange, CreateBillingAgreement, CreateSubscription } from '../button/props';\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else {\n        return window.xprops.getParent();\n    }\n}\n\nexport function setupCheckout() : ZalgoPromise<void> {\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\ntype VaultSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction isVaultSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription } : VaultSetupEligibleProps) : boolean {\n    if (!window.xprops.enableVault) {\n        return false;\n    }\n\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement) {\n        return false;\n    }\n\n    // No buyer vault for subscription\n    if (createSubscription) {\n        return false;\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (clientAccessToken && isVaultSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nexport function getDefaultContext() : $Values<typeof CONTEXT> {\n    return supportsPopups() ? CONTEXT.POPUP : CONTEXT.IFRAME;\n}\n\ntype CheckoutProps= {|\n    win? : ?ProxyWindow,\n    buttonSessionID : string,\n    context? : $Values<typeof CONTEXT>,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : (mixed) => ZalgoPromise<void>,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    validationPromise? : ZalgoPromise<boolean>\n|};\n\ntype CheckoutInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\nexport function initCheckout(props : CheckoutProps) : CheckoutInstance {\n    const { win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, context, locale, commit, onError, vault,\n        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription, validationPromise = ZalgoPromise.resolve(true) } = props;\n\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        return validationPromise.then(valid => {\n            if (valid && !approved) {\n                return onCancel();\n            }\n        });\n    };\n\n    const { renderTo, close: closeCheckout, onError: triggerError } = window.paypal.Checkout({\n        window: win,\n        buttonSessionID,\n\n        createOrder: () => {\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return unresolvedPromise();\n                }\n\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            });\n        },\n\n        onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n            approved = true;\n\n            return closeCheckout().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, subscriptionID }, { restart });\n            });\n        },\n\n        onCancel: () => {\n            return validationPromise.then(valid => {\n                if (valid) {\n                    return closeCheckout().then(() => {\n                        return onCancel();\n                    });\n                }\n            });\n        },\n\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n\n        fundingSource,\n        card,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    checkoutOpen = true;\n    const renderPromise = renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n\n    const close = () => {\n        checkoutOpen = false;\n        return closeCheckout();\n    };\n\n    const start = () => {\n        return validationPromise.then(valid => {\n            return valid ? renderPromise : close();\n        }).then(noop);\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll } from 'belter/src';\n\nimport { CONTEXT, DATA_ATTRIBUTES } from '../constants';\nimport type { LocaleType, FundingEligibilityType, ProxyWindow } from '../types';\nimport { unresolvedPromise, promiseNoop } from '../lib';\nimport type {\n    CreateOrder,\n    OnApprove,\n    OnCancel,\n    OnAuth,\n    OnShippingChange,\n    OnError,\n    CreateBillingAgreement,\n    CreateSubscription\n} from '../button/props';\n\nimport { initCheckout } from './checkout';\n\nlet cardFieldsOpen = false;\n\ntype CardFieldsProps = {|\n    buttonSessionID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : OnError,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType\n|};\n\ntype CardFieldsInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype CardFieldsEligibleProps = {|\n    win : ?ProxyWindow,\n    vault : boolean,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isCardFieldsEligible({ win, vault, onShippingChange, fundingSource } : CardFieldsEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!window.xprops.enableInlineGuest) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : $Values<typeof CARD>) {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nconst openCardFields = () => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        const margin = -(buttonsContainer.offsetHeight - cardButtonsContainer.offsetHeight);\n        buttonsContainer.style.marginTop = `${ margin }px`;\n    };\n\n    window.addEventListener('resize', () => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    });\n\n    recalculateMargin();\n};\n\nexport function initCardFields(props : CardFieldsProps) : CardFieldsInstance {\n    const { fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, locale, commit, onError } = props;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start:        promiseNoop,\n            close:        promiseNoop,\n            triggerError: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n        return onCancel();\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    const { render, close, onError: triggerError } = window.paypal.CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken }, { restart });\n            });\n        },\n\n        onCancel,\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n        onCardTypeChange,\n\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        openCardFields();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig } from '../api';\nimport { callGraphQL } from '../api/api';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, isCardFields } : { orderID : string, fundingSource : $Values<typeof FUNDING>, isCardFields : boolean }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (window.xprops.updateClientConfiguration) {\n            return updateClientConfig({\n                orderID,\n                fundingSource,\n                integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n                userExperienceFlow:  isCardFields ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n                productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n            });\n        }\n    });\n}\n\nexport function validateOrder(orderID : string) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            query GetCheckoutDetails($orderID: String!) {\n                checkoutSession(token: $orderID) {\n                    cart {\n                        intent\n                        amounts {\n                            total {\n                                currencyCode\n                            }\n                        }\n                    }\n                }\n            }\n        `,\n        variables: { orderID }\n    }).then(res => {\n        const cart = res.data.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = window.xprops.intent;\n        const expectedCurrency = window.xprops.currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n    });\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { setupLogger } from '../lib';\nimport { initCheckout, setupCheckout, isVaultCaptureEligible, isCardFieldsEligible, initVault, initCardFields } from '../payment-flows';\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport { isPopupBridgeEligible, initPopupBridge } from '../payment-flows/popup-bridge';\n\nimport { getGlobalProps, getButtonCallbackProps } from './props';\nimport { getSelectedFunding, enableLoadingSpinner, getButtons, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\nimport { triggerButtonLogs } from './logs';\n\nexport function setupButton(opts : { fundingEligibility : FundingEligibilityType, buyerCountry? : ?$Values<typeof COUNTRY>, cspNonce? : string }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    if (opts.paypal) {\n        // $FlowFixMe\n        opts = { fundingEligibility: opts };\n    }\n\n    const { fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce } = opts;\n\n    if (!window.paypal) {\n        throw new Error(`PayPal library not loaded`);\n    }\n\n    const {\n        env,\n        buttonSessionID,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        enableThreeDomainSecure,\n        merchantDomain,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n\n        onError,\n        onInit\n    } = getGlobalProps({ xprops: window.xprops, buyerGeoCountry, cspNonce: serverCSPNonce });\n\n    // eslint-disable-next-line prefer-const\n    let init;\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    let buttonProcessing = false;\n    let popupBridge;\n\n    const pay = ({ button, win, fundingSource, card, paymentMethodID } : { button : HTMLElement, win? : ?ProxyWindow, fundingSource : $Values<typeof FUNDING>, card : ?$Values<typeof CARD>, paymentMethodID? : ?string }) => {\n        return ZalgoPromise.try(() => {\n            if (buttonProcessing) {\n                return;\n            }\n\n            buttonProcessing = true;\n\n            const {\n                createOrder,\n                createBillingAgreement,\n                onApprove,\n                onCancel,\n                onClick,\n                onAuth,\n                onShippingChange,\n                createSubscription\n            } = getButtonCallbackProps({ xprops: window.xprops });\n\n            const validationPromise = onClick({ fundingSource });\n\n            if (!init || !init.isEnabled()) {\n                return win ? win.close() : null;\n            }\n\n            const isCardFields = isCardFieldsEligible({ win, vault, onShippingChange, fundingSource });\n            const isVaultCapture = isVaultCaptureEligible({ win, paymentMethodID, onShippingChange });\n            const isPopupBridge = isPopupBridgeEligible({ win, popupBridge, onShippingChange });\n\n            if (isVaultCapture || isPopupBridge) {\n                enableLoadingSpinner(button);\n            }\n\n            const { start, close, triggerError } = (() => {\n                if (isVaultCapture) {\n                    return initVault({\n                        createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure\n                    });\n                }\n\n                if (isCardFields) {\n                    return initCardFields({\n                        buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription\n                    });\n                }\n\n                if (isPopupBridge) {\n                    return initPopupBridge({\n                        popupBridge, createOrder, onApprove, onCancel\n                    });\n                }\n\n                return initCheckout({\n                    win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                    onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                    clientAccessToken, fundingEligibility, validationPromise, createBillingAgreement, createSubscription\n                });\n            })();\n\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return ZalgoPromise.all([\n                        close(),\n                        win && win.close()\n                    ]).then(noop);\n                }\n\n                createOrder().then(orderID =>\n                    updateButtonClientConfig({ orderID, fundingSource, isCardFields }));\n\n                return start()\n                    .then(createOrder)\n                    .then(validateOrder)\n                    .catch(err => {\n                        return ZalgoPromise.all([\n                            triggerError(err),\n                            close()\n                        ]);\n                    });\n                    \n            });\n        }).finally(() => {\n            buttonProcessing = false;\n            disableLoadingSpinner(button);\n        });\n    };\n\n    const tasks = {};\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            const payPromise = pay({ button, fundingSource, card, paymentMethodID });\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n\n        button.addEventListener('mousedown', () => {\n            button.classList.add(CLASS.CLICKED);\n        });\n\n        button.addEventListener('focus', (event : Event) => {\n            if (button.classList.contains(CLASS.CLICKED)) {\n                event.preventDefault();\n                button.blur();\n                button.classList.remove(CLASS.CLICKED);\n            }\n        });\n    });\n\n    tasks.remember = ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n\n    tasks.getPopupBridge = ZalgoPromise.try(() => {\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                popupBridge = bridge;\n            });\n        }\n    });\n\n    triggerButtonLogs();\n\n    tasks.setupCheckout = setupCheckout();\n\n    init = onInit();\n    tasks.onInit = init.promise;\n\n    tasks.prerender = tasks.onInit.then(() => {\n        return getPrerenderDetails().then((prerenderDetails) => {\n            if (prerenderDetails) {\n                const { win, fundingSource, card } = prerenderDetails;\n                const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n                if (!button) {\n                    throw new Error(`Can not find button element`);\n                }\n\n                return pay({ button, win, fundingSource, card });\n            }\n        });\n    });\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ProxyWindow } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, OnApprove, OnShippingChange } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\ntype VaultCaptureEligibleProps = {|\n    win : ?ProxyWindow,\n    paymentMethodID : ?string,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isVaultCaptureEligible({ win, paymentMethodID, onShippingChange } : VaultCaptureEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n    \n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype VaultProps = {|\n    createOrder : CreateOrder,\n    paymentMethodID : ?string,\n    onApprove : OnApprove,\n    clientAccessToken : ?string,\n    enableThreeDomainSecure : boolean\n|};\n\n\ntype ThreeDomainSecureProps = {|\n    createOrder : CreateOrder\n|};\n\nfunction handleThreeDomainSecure({ createOrder } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = window.paypal.ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(window.parent, TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder\n|};\n\nfunction handleValidateResponse({ status, body, createOrder } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ createOrder });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nexport function initVault(props : VaultProps) : VaultInstance {\n    const { createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure } = props;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ status, body, createOrder });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close:        () => ZalgoPromise.resolve(),\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport type { PopupBridge, CreateOrder, OnApprove, OnCancel, OnShippingChange } from '../button/props';\nimport type { ProxyWindow } from '../types';\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../button/props/getPopupBridge';\n\ntype PopupBridgeEligibleProps = {|\n    win : ?ProxyWindow,\n    popupBridge : ?PopupBridge,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isPopupBridgeEligible({ win, popupBridge, onShippingChange } : PopupBridgeEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!popupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype PopupBridgeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype PopupBridgeProps = {|\n    popupBridge : ?PopupBridge,\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel\n|};\n\nexport function initPopupBridge(props : PopupBridgeProps) : PopupBridgeInstance {\n    const { popupBridge, createOrder, onApprove, onCancel } = props;\n\n    if (!popupBridge) {\n        throw new Error(`Popup bridge required`);\n    }\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    token:        orderID,\n                    redirect_uri: popupBridge.nativeUrl\n                }\n            });\n\n            return popupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nexport function triggerButtonLogs() {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    const xprops = window.xprops;\n\n    if (!xprops) {\n        throw new Error(`No xprops found`);\n    }\n\n    getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const style = xprops.style || {};\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:            FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:          fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:         fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:        pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:  layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:   color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:    'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:   shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:   label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:   window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:    FPTI_BUTTON_TYPE.IFRAME\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\n","/* @flow */\n\n// $FlowFixMe\nmodule.exports = require('./dist/paypal-sdk-constants'); // eslint-disable-line import/no-commonjs\n","!function(root, factory) {\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = factory() : \"function\" == typeof define && define.amd ? define(\"ppsdkconstants\", [], factory) : \"object\" == typeof exports ? exports.ppsdkconstants = factory() : root.ppsdkconstants = factory();\n}(\"undefined\" != typeof self ? self : this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                i: moduleId,\n                l: !1,\n                exports: {}\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.l = !0;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.d = function(exports, name, getter) {\n            __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {\n                configurable: !1,\n                enumerable: !0,\n                get: getter\n            });\n        };\n        __webpack_require__.n = function(module) {\n            var getter = module && module.__esModule ? function() {\n                return module.default;\n            } : function() {\n                return module;\n            };\n            __webpack_require__.d(getter, \"a\", getter);\n            return getter;\n        };\n        __webpack_require__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        __webpack_require__.p = \"\";\n        return __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n    }({\n        \"./src/index.js\": function(module, __webpack_exports__, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(__webpack_exports__, \"__esModule\", {\n                value: !0\n            });\n            var _COUNTRY_LANGS, COUNTRY = {\n                AD: \"AD\",\n                AE: \"AE\",\n                AG: \"AG\",\n                AI: \"AI\",\n                AL: \"AL\",\n                AM: \"AM\",\n                AN: \"AN\",\n                AO: \"AO\",\n                AR: \"AR\",\n                AT: \"AT\",\n                AU: \"AU\",\n                AW: \"AW\",\n                AZ: \"AZ\",\n                BA: \"BA\",\n                BB: \"BB\",\n                BE: \"BE\",\n                BF: \"BF\",\n                BG: \"BG\",\n                BH: \"BH\",\n                BI: \"BI\",\n                BJ: \"BJ\",\n                BM: \"BM\",\n                BN: \"BN\",\n                BO: \"BO\",\n                BR: \"BR\",\n                BS: \"BS\",\n                BT: \"BT\",\n                BW: \"BW\",\n                BY: \"BY\",\n                BZ: \"BZ\",\n                CA: \"CA\",\n                CD: \"CD\",\n                CG: \"CG\",\n                CH: \"CH\",\n                CI: \"CI\",\n                CK: \"CK\",\n                CL: \"CL\",\n                CM: \"CM\",\n                CN: \"CN\",\n                CO: \"CO\",\n                CR: \"CR\",\n                CV: \"CV\",\n                CY: \"CY\",\n                CZ: \"CZ\",\n                DE: \"DE\",\n                DJ: \"DJ\",\n                DK: \"DK\",\n                DM: \"DM\",\n                DO: \"DO\",\n                DZ: \"DZ\",\n                EC: \"EC\",\n                EE: \"EE\",\n                EG: \"EG\",\n                ER: \"ER\",\n                ES: \"ES\",\n                ET: \"ET\",\n                FI: \"FI\",\n                FJ: \"FJ\",\n                FK: \"FK\",\n                FM: \"FM\",\n                FO: \"FO\",\n                FR: \"FR\",\n                GA: \"GA\",\n                GB: \"GB\",\n                GD: \"GD\",\n                GE: \"GE\",\n                GF: \"GF\",\n                GI: \"GI\",\n                GL: \"GL\",\n                GM: \"GM\",\n                GN: \"GN\",\n                GP: \"GP\",\n                GR: \"GR\",\n                GT: \"GT\",\n                GW: \"GW\",\n                GY: \"GY\",\n                HK: \"HK\",\n                HN: \"HN\",\n                HR: \"HR\",\n                HU: \"HU\",\n                ID: \"ID\",\n                IE: \"IE\",\n                IL: \"IL\",\n                IN: \"IN\",\n                IS: \"IS\",\n                IT: \"IT\",\n                JM: \"JM\",\n                JO: \"JO\",\n                JP: \"JP\",\n                KE: \"KE\",\n                KG: \"KG\",\n                KH: \"KH\",\n                KI: \"KI\",\n                KM: \"KM\",\n                KN: \"KN\",\n                KR: \"KR\",\n                KW: \"KW\",\n                KY: \"KY\",\n                KZ: \"KZ\",\n                LA: \"LA\",\n                LC: \"LC\",\n                LI: \"LI\",\n                LK: \"LK\",\n                LS: \"LS\",\n                LT: \"LT\",\n                LU: \"LU\",\n                LV: \"LV\",\n                MA: \"MA\",\n                MC: \"MC\",\n                MD: \"MD\",\n                ME: \"ME\",\n                MG: \"MG\",\n                MH: \"MH\",\n                MK: \"MK\",\n                ML: \"ML\",\n                MN: \"MN\",\n                MQ: \"MQ\",\n                MR: \"MR\",\n                MS: \"MS\",\n                MT: \"MT\",\n                MU: \"MU\",\n                MV: \"MV\",\n                MW: \"MW\",\n                MX: \"MX\",\n                MY: \"MY\",\n                MZ: \"MZ\",\n                NA: \"NA\",\n                NC: \"NC\",\n                NE: \"NE\",\n                NF: \"NF\",\n                NG: \"NG\",\n                NI: \"NI\",\n                NL: \"NL\",\n                NO: \"NO\",\n                NP: \"NP\",\n                NR: \"NR\",\n                NU: \"NU\",\n                NZ: \"NZ\",\n                OM: \"OM\",\n                PA: \"PA\",\n                PE: \"PE\",\n                PF: \"PF\",\n                PG: \"PG\",\n                PH: \"PH\",\n                PL: \"PL\",\n                PM: \"PM\",\n                PN: \"PN\",\n                PT: \"PT\",\n                PW: \"PW\",\n                PY: \"PY\",\n                QA: \"QA\",\n                RE: \"RE\",\n                RO: \"RO\",\n                RS: \"RS\",\n                RU: \"RU\",\n                RW: \"RW\",\n                SA: \"SA\",\n                SB: \"SB\",\n                SC: \"SC\",\n                SE: \"SE\",\n                SG: \"SG\",\n                SH: \"SH\",\n                SI: \"SI\",\n                SJ: \"SJ\",\n                SK: \"SK\",\n                SL: \"SL\",\n                SM: \"SM\",\n                SN: \"SN\",\n                SO: \"SO\",\n                SR: \"SR\",\n                ST: \"ST\",\n                SV: \"SV\",\n                SZ: \"SZ\",\n                TC: \"TC\",\n                TD: \"TD\",\n                TG: \"TG\",\n                TH: \"TH\",\n                TJ: \"TJ\",\n                TM: \"TM\",\n                TN: \"TN\",\n                TO: \"TO\",\n                TR: \"TR\",\n                TT: \"TT\",\n                TV: \"TV\",\n                TW: \"TW\",\n                TZ: \"TZ\",\n                UA: \"UA\",\n                UG: \"UG\",\n                US: \"US\",\n                UY: \"UY\",\n                VA: \"VA\",\n                VC: \"VC\",\n                VE: \"VE\",\n                VG: \"VG\",\n                VN: \"VN\",\n                VU: \"VU\",\n                WF: \"WF\",\n                WS: \"WS\",\n                YE: \"YE\",\n                YT: \"YT\",\n                ZA: \"ZA\",\n                ZM: \"ZM\",\n                ZW: \"ZW\"\n            }, LANG = {\n                AR: \"ar\",\n                CS: \"cs\",\n                DA: \"da\",\n                DE: \"de\",\n                EL: \"el\",\n                EN: \"en\",\n                ES: \"es\",\n                FI: \"fi\",\n                FR: \"fr\",\n                HE: \"he\",\n                HU: \"hu\",\n                ID: \"id\",\n                IT: \"it\",\n                JA: \"ja\",\n                KO: \"ko\",\n                NL: \"nl\",\n                NO: \"no\",\n                PL: \"pl\",\n                PT: \"pt\",\n                RU: \"ru\",\n                SK: \"sk\",\n                SV: \"sv\",\n                TH: \"th\",\n                TR: \"tr\",\n                ZH: \"zh\"\n            }, COUNTRY_LANGS = ((_COUNTRY_LANGS = {})[COUNTRY.AD] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ], _COUNTRY_LANGS[COUNTRY.AG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AL] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AR] = [ LANG.ES, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AT] = [ LANG.DE, LANG.EN ], _COUNTRY_LANGS[COUNTRY.AU] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BA] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.BB] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BE] = [ LANG.EN, LANG.NL, LANG.FR ], _COUNTRY_LANGS[COUNTRY.BF] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BG] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.BH] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BI] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BJ] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BN] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BR] = [ LANG.PT, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BT] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BZ] = [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CA] = [ LANG.EN, LANG.FR ], \n            _COUNTRY_LANGS[COUNTRY.CD] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CH] = [ LANG.DE, LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.CI] = [ LANG.FR, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.CK] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CL] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CM] = [ LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.CN] = [ LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CR] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CV] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.CZ] = [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DE] = [ LANG.DE, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.DJ] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DK] = [ LANG.DA, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.DM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.DZ] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.EC] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.EE] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.EG] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.ER] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ES] = [ LANG.ES, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.ET] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.FI] = [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.FK] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FM] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.FO] = [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FR] = [ LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.GA] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GB] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.GD] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GL] = [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GN] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GP] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GR] = [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GT] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GY] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.HK] = [ LANG.EN, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.HN] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.HR] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.HU] = [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ID] = [ LANG.ID, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.IL] = [ LANG.HE, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IN] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.IS] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IT] = [ LANG.IT, LANG.EN ], _COUNTRY_LANGS[COUNTRY.JM] = [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.JO] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.JP] = [ LANG.JA, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.KE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KH] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.KI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KM] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KR] = [ LANG.KO, LANG.EN ], _COUNTRY_LANGS[COUNTRY.KW] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KY] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LA] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.LC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LK] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.LS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LT] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LU] = [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LV] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MA] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MC] = [ LANG.FR, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MD] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.ME] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MH] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MK] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.ML] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MN] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MQ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MT] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MV] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MX] = [ LANG.ES, LANG.EN ], _COUNTRY_LANGS[COUNTRY.MY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NE] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NG] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NI] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NL] = [ LANG.NL, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NO] = [ LANG.NO, LANG.EN ], _COUNTRY_LANGS[COUNTRY.NP] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.OM] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PA] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PE] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PH] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.PL] = [ LANG.PL, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.PM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PT] = [ LANG.PT, LANG.EN ], _COUNTRY_LANGS[COUNTRY.PW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PY] = [ LANG.ES, LANG.EN ], _COUNTRY_LANGS[COUNTRY.QA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ], \n            _COUNTRY_LANGS[COUNTRY.RE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.RO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.RS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.RU] = [ LANG.RU, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.RW] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SA] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SB] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SC] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SE] = [ LANG.SV, LANG.EN ], _COUNTRY_LANGS[COUNTRY.SG] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.SH] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SK] = [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SL] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SN] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ST] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SV] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TD] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TG] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TH] = [ LANG.TH, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TN] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TO] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TR] = [ LANG.TR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.TT] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TV] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TW] = [ LANG.ZH, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.UA] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.UG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.US] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.UY] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.VC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VE] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.VG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VN] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.VU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.WF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.WS] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.YE] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.YT] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ZA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.ZM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ZW] = [ LANG.EN ], \n            _COUNTRY_LANGS), SDK_SETTINGS = {\n                CLIENT_TOKEN: \"data-client-token\",\n                PARTNER_ATTRIBUTION_ID: \"data-partner-attribution-id\",\n                STAGE_HOST: \"data-stage-host\",\n                API_STAGE_HOST: \"data-api-stage-host\",\n                CSP_NONCE: \"data-csp-nonce\",\n                ENABLE_3DS: \"data-enable-3ds\"\n            }, SDK_QUERY_KEYS = {\n                COMPONENTS: \"components\",\n                ENV: \"env\",\n                DEBUG: \"debug\",\n                CACHEBUST: \"cachebust\",\n                CLIENT_ID: \"client-id\",\n                MERCHANT_ID: \"merchant-id\",\n                LOCALE: \"locale\",\n                CURRENCY: \"currency\",\n                INTENT: \"intent\",\n                COMMIT: \"commit\",\n                VAULT: \"vault\",\n                BUYER_COUNTRY: \"buyer-country\",\n                DISABLE_FUNDING: \"disable-funding\",\n                DISABLE_CARD: \"disable-card\",\n                LOCALE_COUNTRY: \"locale-country\",\n                LOCALE_LANG: \"locale-lang\",\n                FRAMEWORK: \"framework\",\n                INTEGRATION_DATE: \"integration-date\",\n                ORDER_CURRENCY: \"order-currency\",\n                ORDER_INTENT: \"order-intent\",\n                ORDER_COMMIT: \"order-commit\",\n                ORDER_VAULT: \"order-vault\"\n            }, COMPONENTS = {\n                BUTTONS: \"buttons\",\n                HOSTED_FIELDS: \"hosted-fields\"\n            }, FRAMEWORK = {\n                ANGULARJS: \"angularjs\",\n                ANGULAR: \"angular\",\n                REACT: \"react\",\n                VUE: \"vue\"\n            }, DEBUG = {\n                TRUE: !0,\n                FALSE: !1\n            }, QUERY_BOOL = {\n                TRUE: \"true\",\n                FALSE: \"false\"\n            }, PROTOCOL = {\n                HTTP: \"http\",\n                HTTPS: \"https\"\n            }, ENV = {\n                LOCAL: \"local\",\n                STAGE: \"stage\",\n                SANDBOX: \"sandbox\",\n                PRODUCTION: \"production\",\n                TEST: \"test\"\n            }, FPTI_KEY = {\n                FEED: \"feed_name\",\n                STATE: \"state_name\",\n                TRANSITION: \"transition_name\",\n                BUTTON_TYPE: \"button_type\",\n                SESSION_UID: \"page_session_id\",\n                BUTTON_SESSION_UID: \"button_session_id\",\n                TOKEN: \"token\",\n                CONTEXT_ID: \"context_id\",\n                CONTEXT_TYPE: \"context_type\",\n                REFERER: \"referer_url\",\n                MERCHANT_DOMAIN: \"merchant_domain\",\n                PAY_ID: \"pay_id\",\n                SELLER_ID: \"seller_id\",\n                CLIENT_ID: \"client_id\",\n                DATA_SOURCE: \"serverside_data_source\",\n                BUTTON_SOURCE: \"button_source\",\n                ERROR_CODE: \"ext_error_code\",\n                ERROR_DESC: \"ext_error_desc\",\n                PAGE_LOAD_TIME: \"page_load_time\",\n                EXPERIMENT_NAME: \"pxp_exp_id\",\n                TREATMENT_NAME: \"pxp_trtmnt_id\",\n                TRANSITION_TIME: \"transition_time\",\n                FUNDING_LIST: \"eligible_payment_methods\",\n                FUNDING_COUNT: \"eligible_payment_count\",\n                CHOSEN_FUNDING: \"selected_payment_method\",\n                BUTTON_LAYOUT: \"button_layout\",\n                VERSION: \"checkoutjs_version\",\n                LOCALE: \"locale\",\n                BUYER_COUNTRY: \"buyer_cntry\",\n                INTEGRATION_IDENTIFIER: \"integration_identifier\",\n                PARTNER_ATTRIBUTION_ID: \"bn_code\",\n                SDK_NAME: \"sdk_name\",\n                SDK_VERSION: \"sdk_version\",\n                USER_AGENT: \"user_agent\",\n                USER_ACTION: \"user_action\",\n                CONTEXT_CORRID: \"context_correlation_id\"\n            }, FPTI_USER_ACTION = {\n                COMMIT: \"commit\",\n                CONTINUE: \"continue\"\n            }, FPTI_DATA_SOURCE = {\n                PAYMENTS_SDK: \"checkout\"\n            }, FPTI_FEED = {\n                PAYMENTS_SDK: \"payments_sdk\"\n            }, FPTI_SDK_NAME = {\n                PAYMENTS_SDK: \"payments_sdk\"\n            }, INTENT = {\n                CAPTURE: \"capture\",\n                AUTHORIZE: \"authorize\",\n                ORDER: \"order\"\n            }, COMMIT = {\n                TRUE: !0,\n                FALSE: !1\n            }, VAULT = {\n                TRUE: !0,\n                FALSE: !1\n            }, CURRENCY = {\n                AUD: \"AUD\",\n                BRL: \"BRL\",\n                CAD: \"CAD\",\n                CZK: \"CZK\",\n                DKK: \"DKK\",\n                EUR: \"EUR\",\n                HKD: \"HKD\",\n                HUF: \"HUF\",\n                INR: \"INR\",\n                ILS: \"ILS\",\n                JPY: \"JPY\",\n                MUR: \"MUR\",\n                MYR: \"MYR\",\n                MXN: \"MXN\",\n                TWD: \"TWD\",\n                NZD: \"NZD\",\n                NOK: \"NOK\",\n                PHP: \"PHP\",\n                PLN: \"PLN\",\n                GBP: \"GBP\",\n                RUB: \"RUB\",\n                SGD: \"SGD\",\n                SEK: \"SEK\",\n                CHF: \"CHF\",\n                THB: \"THB\",\n                USD: \"USD\"\n            }, PLATFORM = {\n                DESKTOP: \"desktop\",\n                MOBILE: \"mobile\"\n            }, FUNDING = {\n                PAYPAL: \"paypal\",\n                VENMO: \"venmo\",\n                ITAU: \"itau\",\n                CREDIT: \"credit\",\n                CARD: \"card\",\n                IDEAL: \"ideal\",\n                SEPA: \"sepa\",\n                BANCONTACT: \"bancontact\",\n                GIROPAY: \"giropay\",\n                SOFORT: \"sofort\",\n                EPS: \"eps\",\n                MYBANK: \"mybank\",\n                P24: \"p24\",\n                ZIMPLER: \"zimpler\",\n                WECHATPAY: \"wechatpay\"\n            }, CARD = {\n                VISA: \"visa\",\n                MASTERCARD: \"mastercard\",\n                AMEX: \"amex\",\n                DISCOVER: \"discover\",\n                HIPER: \"hiper\",\n                ELO: \"elo\",\n                JCB: \"jcb\",\n                CUP: \"cup\"\n            }, DEFAULT_COUNTRY = COUNTRY.US, DEFAULT_CURRENCY = CURRENCY.USD, DEFAULT_INTENT = INTENT.CAPTURE, DEFAULT_COMMIT = COMMIT.TRUE, DEFAULT_SALE_COMMIT = COMMIT.TRUE, DEFAULT_NONSALE_COMMIT = COMMIT.TRUE, DEFAULT_VAULT = VAULT.FALSE, DEFAULT_COMPONENTS = COMPONENTS.BUTTONS, DEFAULT_DEBUG = DEBUG.FALSE;\n            __webpack_require__.d(__webpack_exports__, \"COUNTRY\", function() {\n                return COUNTRY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"LANG\", function() {\n                return LANG;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COUNTRY_LANGS\", function() {\n                return COUNTRY_LANGS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_PATH\", function() {\n                return \"/sdk/js\";\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_SETTINGS\", function() {\n                return SDK_SETTINGS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_QUERY_KEYS\", function() {\n                return SDK_QUERY_KEYS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COMPONENTS\", function() {\n                return COMPONENTS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FRAMEWORK\", function() {\n                return FRAMEWORK;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEBUG\", function() {\n                return DEBUG;\n            });\n            __webpack_require__.d(__webpack_exports__, \"QUERY_BOOL\", function() {\n                return QUERY_BOOL;\n            });\n            __webpack_require__.d(__webpack_exports__, \"UNKNOWN\", function() {\n                return \"unknown\";\n            });\n            __webpack_require__.d(__webpack_exports__, \"PROTOCOL\", function() {\n                return PROTOCOL;\n            });\n            __webpack_require__.d(__webpack_exports__, \"ENV\", function() {\n                return ENV;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_KEY\", function() {\n                return FPTI_KEY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_USER_ACTION\", function() {\n                return FPTI_USER_ACTION;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_DATA_SOURCE\", function() {\n                return FPTI_DATA_SOURCE;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_FEED\", function() {\n                return FPTI_FEED;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_SDK_NAME\", function() {\n                return FPTI_SDK_NAME;\n            });\n            __webpack_require__.d(__webpack_exports__, \"INTENT\", function() {\n                return INTENT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COMMIT\", function() {\n                return COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"VAULT\", function() {\n                return VAULT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"CURRENCY\", function() {\n                return CURRENCY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"PLATFORM\", function() {\n                return PLATFORM;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FUNDING\", function() {\n                return FUNDING;\n            });\n            __webpack_require__.d(__webpack_exports__, \"CARD\", function() {\n                return CARD;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COUNTRY\", function() {\n                return DEFAULT_COUNTRY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_CURRENCY\", function() {\n                return DEFAULT_CURRENCY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_INTENT\", function() {\n                return DEFAULT_INTENT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COMMIT\", function() {\n                return DEFAULT_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_SALE_COMMIT\", function() {\n                return DEFAULT_SALE_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_NONSALE_COMMIT\", function() {\n                return DEFAULT_NONSALE_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_VAULT\", function() {\n                return DEFAULT_VAULT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COMPONENTS\", function() {\n                return DEFAULT_COMPONENTS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_DEBUG\", function() {\n                return DEFAULT_DEBUG;\n            });\n        }\n    });\n});\n//# sourceMappingURL=paypal-sdk-constants.js.map"],"sourceRoot":""}