{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/config.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/dom.js","webpack://spb/./src/constants.js","webpack://spb/./src/api/api.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/socket.js","webpack://spb/./src/props/createOrder.js","webpack://spb/./src/props/onApprove.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/payment.js","webpack://spb/./src/props/onCancel.js","webpack://spb/./src/props/onShippingChange.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://spb/./src/button/props.js","webpack://spb/./src/props/onInit.js","webpack://spb/./src/props/onClick.js","webpack://spb/./src/props/createBillingAgreement.js","webpack://spb/./src/props/createSubscription.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./src/button/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/node.js","webpack://spb/./node_modules/jsx-pragmatic/src/constants.js","webpack://spb/./node_modules/jsx-pragmatic/src/renderers/dom.js","webpack://spb/./node_modules/jsx-pragmatic/src/util.js","webpack://spb/./node_modules/@paypal/common-components/src/ui/spinnerPage.jsx","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/ui/popup.jsx","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./src/payment-flows/vault-capture.js","webpack://spb/./src/payment-flows/wallet-capture.js","webpack://spb/./src/payment-flows/native.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/pay.js","webpack://spb/./src/props/getPopupBridge.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/env.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/platform.js","webpack://spb/./src/payment-flows/honey.js","webpack://spb/./src/button/menu.js","webpack://spb/./src/button/button.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/menu/interface.js","webpack://spb/./src/button/remember.js","webpack://spb/./src/button/logger.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isAndroid","test","isIos","supportsPopups","isGoogleSearchApp","isIosWebview","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","isChrome","_extends","assign","target","arguments","length","source","apply","this","isPromise","item","Promise","Window","constructor","toString","then","err","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","Zalgo","awaitActive","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","isAncestorParent","child","childParent","getParents","getTop","top","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","self","__cross_domain_utils_window_check__","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","uniqueID","chars","replace","charAt","floor","str","btoa","encodeURIComponent","p1","String","fromCharCode","parseInt","Buffer","from","base64encode","Date","toISOString","slice","toLowerCase","objectIDs","serializeArgs","JSON","stringify","Array","subkey","val","uid","getObjectID","memoizedFunctions","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","clear","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","arrayFrom","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","join","formatQuery","extendUrl","url","query","originalUrl","originalHash","hashString","redirect","href","urlWillRedirectPage","getPerformance","performance","timing","connectEnd","navigationStart","abs","isBrowser","querySelectorAll","selector","onClick","element","addEventListener","event","keyCode","PopupOpenError","prototype","destroyElement","removeChild","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","ontimeout","send","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","loadScript","container","head","script","setAttribute","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","httpTransport","extendIfDefined","ORDERS_API_URL","NATIVE_CHECKOUT_URI","NATIVE_CHECKOUT_POPUP_URI","CLIENT_ID_PAYEE_NO_MATCH","ORDER_VALIDATION_WHITELIST","SANDBOX_ORDER_VALIDATION_WHITELIST","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","warning","immediateFlush","meta","builder","req","localPromise","promiseDebounce","logger","logPayload","timestamp","enqueue","addBuilder","builders","loop","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","getNonce","nonce","getAttribute","callRestAPI","accessToken","requestHeaders","callSmartAPI","reqHeaders","ack","contingency","callGraphQL","variables","errors","GRAPHQL_URI","getFirebaseSessionToken","sessionUID","firebase","auth","sessionToken","patchOrder","orderID","facilitatorAccessToken","buyerAccessToken","partnerAttributionID","forceRestAPI","patchData","isArray","patch","SMART_API_URI","getPayee","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","buttonSessionID","paymentSource","token","id","type","contingencies","payment_source","billingTokenToOrderID","billingToken","subscriptionIdToCartId","subscriptionID","getSupplementalOrderInfo","loadFirebaseSDK","config","database","initializeApp","getCreateOrder","createOrder","currency","createBillingAgreement","createSubscription","actions","intent","merchantID","order","toUpperCase","purchase_units","unit","amount","currency_code","payee","merchant_id","application_context","createOrderID","buildOrderActions","buildPaymentActions","payment","buildXCreateOrderActions","queryOrderID","search","startTime","duration","getOnApprove","onApprove","capture","authorize","getDefaultOnApprove","upgradeLSAT","payerID","paymentID","restart","upgradeFacilitatorAccessToken","getSubscriptionApi","getSubscription","activateSubscriptionApi","activateSubscription","handleProcessorError","details","some","detail","issue","getOrder","captureOrder","authorizeOrder","PAYMENTS_API_URL","getPayment","execute","payer_id","executePayment","subscription","activate","match","redir","buildXApproveActions","getOnCancel","onCancel","getOnShippingChange","onShippingChange","excluded","sourceKeys","buildXShippingChangeActions","TYPES","getProps","xprops","env","vault","commit","locale","platform","sessionID","clientID","correlationID","getParentDomain","getPopupBridge","getPrerenderDetails","getPageUrl","enableStandardCardFields","enableNativeCheckout","rememberFunding","remember","stageHost","apiStageHost","onInit","enabled","initPromise","enable","disable","isEnabled","getOnInit","merchantDomain","fundingSource","valid","getOnClick","getCreateBillingAgreement","subscriptionPayload","createSubcriptionID","revise","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","buildXCreateSubscriptionActions","getCreateSubscription","getComponents","paypal","Checkout","CardFields","ThreeDomainSecure","getConfig","firebaseConfig","cspNonce","serverCSPNonce","version","getServiceData","serverMerchantID","buyerCountry","buyerGeoCountry","fundingEligibility","wallet","sdkMeta","personalization","eligibility","enableLoadingSpinner","button","classList","add","disableLoadingSpinner","remove","renderChildren","children","renderer","renderedChild","render","subchild","ElementNode","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","normalizeChildren","normalizeChild","node","ADD_CHILDREN","firstChild","docElement","dom","opts","domRenderer","createTextNode","createTextElement","prop","tagName","addProps","html","ELEMENT_PROP","innerHTML","newScript","textContent","replaceChild","fixScripts","addChildren","SpinnerPage","content","class","checkoutOpen","canRenderTop","checkout","setup","components","tasks","canRenderTo","isEligible","isPaymentEligible","init","initCheckout","serviceData","card","venmoPayloadID","buyerIntent","idToken","isClick","approved","start","onClose","instance","close","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","onAuth","renderTo","click","assertSameDomain","width","height","left","outerWidth","round","screenX","screen","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","popup","tag","writeElementToWindow","openPopup","cardFieldsOpen","highlightCard","forEach","opacity","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","cardFields","onCardTypeChange","closeCardFields","marginTop","slideDownButtons","renderPromise","minHeight","display","recalculateMargin","offsetTop","debounce","transitionDuration","slideUpButtons","inline","vaultCapture","shippingRequired","checkoutSession","shippingAddress","cart","flags","isShippingAddressRequired","isFullAddress","validate","requireShipping","fallbackToWebCheckout","links","link","rel","handleThreeDomainSecure","handleValidateResponse","spinner","walletCapture","instrumentID","walletFunding","instrument","instruments","find","inst","oneClick","identity","exchangeAccessTokenForIDToken","planID","approvePayment","buyer","userId","getNativeSocket","nativeSocket","sourceApp","sourceAppVersion","targetApp","driver","retry","receivedMessages","responseListeners","activeRequests","requestListeners","errorListeners","sendMessage","socket","messageUID","session_uid","message_uid","source_app","source_app_version","target_app","sendResponse","messageName","responseStatus","responseData","requestUID","isOpen","request_uid","message_name","message_status","message_type","message_data","retryDelay","socketPromise","retryPromise","connectionPromise","onOpen","errorListener","onMessage","rawMessage","rawData","parsedData","messageSessionUID","messageType","messageData","request_id","activeRequest","requestListener","requireSessionUID","onRequest","listenerPromise","onResponse","on","reconnect","messageSocket","onMessageHandlers","onErrorHandlers","onCloseHandlers","onOpenHandlers","databasePromise","signInWithCustomToken","INTERNAL","forceWebSockets","ref","messages","goOnline","goOffline","isAndroidChrome","didAppSwitch","popupWin","isNativeOptedIn","localStorage","getItem","initialPageUrl","parentPopupBridge","PAYMENT_FLOWS","bridge","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","pageUrl","isSafari","nativeCheckout","venmo","clean","cleaned","register","task","shift","cancelled","didFallback","listen","postRobot","fallbackWin","checkoutPayment","getNativeDomain","getNativePopupDomain","getNativeUrl","getNativePopupUrl","getWebCheckoutUrl","native_xo","getSDKProps","webCheckoutUrl","forceEligible","connectNative","setNativeProps","sdkProps","closeNative","getPropsListener","onShippingChangeListener","onApproveListener","onCancelListener","onErrorListener","setProps","detectAppSwitch","detectWebSwitch","nativeWin","validatePromise","delayPromise","detectWebSwitchListener","initDirectAppSwitch","closeListener","callback","maxtime","Infinity","check","onCloseWindow","awaitRedirectListener","redirectUrl","detectAppSwitchListener","onCompleteListener","initPopupAppSwitch","postMessage","message_source","device_id","session_id","smartMenu","setupButton","isCardFieldsExperimentEnabled","paymentProcessing","initiatePayment","tagline","buttonText","sendPersonalizationBeacons","flow","getPaymentFlow","clickPromise","integrationArtifact","userExperienceFlow","productFlow","expectedIntent","expectedCurrency","amounts","total","currencyCode","payeeMerchantID","merchant","actualMerchantID","xpropMerchantID","isSandbox","isWhitelisted","validateOrder","initiatePaymentFlow","getSelectedFunding","preventDefault","blur","fixClickFocus","menuToggle","buttonParent","parentElement","Menu","updateProps","show","hide","choices","verticalOffset","onChoose","renderSmartMenu","onElementClick","stopPropagation","label","chooseCardOrShipping","useDifferentAccount","deleteVaultedCard","getBoundingClientRect","bottom","loadingTimeout","payInstantlyHeader","renderButtonDropdown","payPromise","setupPrerenderTask","prerenderDetails","setupRememberTask","eligible","setupRemember","setupButtonLogsTask","referer","lang","country","setupLogger","__SMART_BUTTONS__","documentMode","isIEIntranet","domInteractive","pageRenderTime","fundingSources","layout","color","shape","innerWidth","setupButtonLogger","setupPaymentFlowsTask","setupPaymentFlows"],"mappings":"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AAOvC,SAASoC,OAAOpC,SACrDoC,OAAOpC,OAAOuC,OAAOvC;;;IC9C1B,IAAM6U,iBAAiB;IAkBvB,IAAMC,wBAA8D,oCACnD;IADmD,6BAEnD,yBAFmD;IAKpE,IAAMC,8BAAmE,qCACxD;IADwD,8BAExD,+BAFwD;IAQzE,IAAMC,2BAA2B,EACpC,oFACA,oFACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA;IAGG,IAAMC,6BAA6B,EACtC,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,gEACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,gEACA,oFACA,gEACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oF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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    const userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    const mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    const mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            const status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    const userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nconst memoizedFunctions = [];\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : F & {| reset : () => void |} {\n    const cacheMap = new WeakMap();\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        const cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        const key : string = serializeArgs(args);\n\n        const cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    memoizedFunctions.push(memoizedFunction);\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    for (const memoizedFunction of memoizedFunctions) {\n        memoizedFunction.reset();\n    }\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    // eslint-disable-next-line compat/compat\n    if (Object.assign) {\n        // eslint-disable-next-line compat/compat\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            const interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        // eslint-disable-next-line compat/compat\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : {| host? : string, path : string |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {|\n    style? : {| [ string ] : string |},\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : {| [ string ] : string |},\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || {};\n    const style = options.style || {};\n\n    const frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        const loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {|\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n|};\n\ntype ResponseType = {|\n    status : number,\n    headers : { [string] : string },\n    body : Object\n|};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nconst headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    const result = {};\n    for (const line of rawHeaders.trim().split('\\n')) {\n        const [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        const normalizedHeaders = {};\n\n        for (const key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (const headerBuilder of headerBuilders) {\n            const builtHeaders = headerBuilder();\n\n            for (const key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        const xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            const responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            const contentType = responseHeaders['content-type'];\n            const isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            const res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (const key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { DOM_EVENT, CLASS } from '../constants';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n\nexport function fixClickFocus(el : HTMLElement) {\n    el.addEventListener(DOM_EVENT.MOUSEDOWN, () => {\n        el.classList.add(CLASS.CLICKED);\n    });\n\n    el.addEventListener(DOM_EVENT.HOVER, (event : Event) => {\n        if (el.classList.contains(CLASS.CLICKED)) {\n            event.preventDefault();\n            el.blur();\n            el.classList.remove(CLASS.CLICKED);\n        }\n    });\n}\n\nexport function sleep(time : number) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function redirectTop(url : string) {\n    if (__TEST__) {\n        window.location.hash = url;\n    } else {\n        window.top.location = url;\n    }\n}\n\nexport function loadScript(url : string) : ZalgoPromise<string> {\n    return new ZalgoPromise((resolve, reject) => {\n        const container = document.body || document.head;\n\n        if (!container) {\n            return reject(new Error(`Can not find container for script: ${ url }`));\n        }\n\n        const script = document.createElement('script');\n        script.setAttribute('src', url);\n        script.addEventListener('load', () => resolve(script));\n        // $FlowFixMe\n        script.addEventListener('error', (err) => reject(err));\n        container.appendChild(script);\n    });\n}\n\nexport function promiseOne<T>(promises : $ReadOnlyArray<ZalgoPromise<T>>) : ZalgoPromise<T> {\n    return new ZalgoPromise((resolve, reject) => {\n        for (const promise of promises) {\n            promise.then(resolve, reject);\n        }\n    });\n}\n\nexport function isServer() : boolean {\n    return (typeof window === 'undefined');\n}\n\nexport function isClient() : boolean {\n    return (typeof window !== 'undefined');\n}\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = __DEBUG__ ? LOG_LEVEL.DEBUG : LOG_LEVEL.WARN;\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Payload = { [string] : string };\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {|\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n|};\n\ntype ClientPayload = { [string] : ?string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {|\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n|};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    const payloadBuilders : Array<Builder> = [];\n    const metaBuilders : Array<Builder> = [];\n    const trackingBuilders : Array<Builder> = [];\n    const headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(logLevel)) {\n            return;\n        }\n\n        const args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            const meta = {};\n            for (const builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            const headers = {};\n            for (const builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            const req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    const flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        const logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (const builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        const trackingPayload : Payload = objFilter(payload);\n\n        for (const builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const PAYMENTS_API_URL = '/v1/payments/payment';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const SMART_API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`\n};\n\nexport const GRAPHQL_URI = '/graphql';\n\nexport const WEB_CHECKOUT_URI = '/checkoutnow';\n\nexport const NATIVE_CHECKOUT_URI : { [ $Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo'\n};\n\nexport const NATIVE_CHECKOUT_POPUP_URI : { [$Values<typeof FUNDING> ] : string } = {\n    [ FUNDING.PAYPAL ]: '/smart/checkout/native/popup',\n    [ FUNDING.VENMO ]:  '/smart/checkout/venmo/popup'\n};\n\n\nexport const NATIVE_DETECTION_URL = 'http://127.0.0.1:8765/hello';\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU',\n    'AZNQsMt_Ho-GClAUCvZVuKyz-n5rRhZyEBL2yTTetPV-lTqQE2_4quG6-ADlBMZoAgnG-yccas62Hqg2'\n];\n\nexport const ORDER_VALIDATION_WHITELIST = [\n    'AWU8hQWR5S8ynvUCz0T-tt2uRPzt7-wcIp_clASLr3KrXNdKcr_iPzgNsk4s3sOG2EzgOyqpeuL9Lt2Q',\n    'AW2HA2wTdlPiJYixm961rEhamyefXVV4Y5CxJnRJGT_AnXVZuWnneEFnnGpDeIUZaCbpz_kwtEjFwo8x',\n    'AU0KZbJCXg9J5OJXJxrUFMaCAkMvvrk-8khEB4vLyq76klYl5RSVGNrX4qh_aERn3Wsx5Vcn2eCPQ1fo',\n    'AUku7YwlQ9LckQ9jBEAoDTOW_l-VyzeS2ZLNS4-kWoEI0Xh5VEFEgda7KeU3Z-bRIcZ4YzkJ6kp4CIZA',\n    'ATyGfjcN1hYSg34FNM2QFpih-UgIKxiE6nC_HR4ifq2auBHxlzm7eFTToF0-GayrwDSNgwDmTYfPNvYD',\n    'ARa44QaubKRAeUZRlkhqkWUAilO7IGlS6qcHJ4RmG6aaDuCAi232yOjfDwWmGJL5rdjvhaA_oHLVo3_y',\n    'AZqSMr_O6WtkSWvp2GF526yJjSyjZsnaqvmp99w2gNJHtKfOdzpnNJiwjTd_yLjdf-wt2DUtJzFw16Bq',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AZ27S6mY7iw1toHmoVzye1XwCiOJo_uIMYJIDpUwlTsG2rxTXW8Sl3tjUEwsS0TWGIkEq7CG1zXLLvvK',\n    'Af8k4y06mmyTM4JxdmDUK0PJBR314Yz_nWddC13y5rHawFRREVmueGa0b-MMHl5_jvo6bMM1d7DnM2Uj',\n    'AaRz5Xo5rOOW8Pq0ofvoKD5fb48gaPrKknItbEc1k79KH6z3aPsS5oUfu0uWj7BMuEru5_6jvhjSyvRs',\n    'Aa5QWJGciaqznqahG4ooXiL9FNZuqEcL-vhdCMrb-jIMNAFpiG1SxW1GMcPmS5pQoxrwsOmV2KtNpk1Y',\n    'AfzuuqC32z4_opOaPcCOgB0P112SCvGoJZi-79Yj5WGNoddoDQf7gG_mbGl3tZYJB_XsZ1dHDDgzhkH7',\n    'AQ6b-BBBspp77ZytI3Hj0FKpACemsrXhu0Gds7ubWAoKxHCW1o7RnV76wCe4',\n    'AfFU1v8QcnRtUY5xRwxW6nZlwGscc0dmMfVQP9Ce3mqKRvqddGBHnx62WhKVcAMPALE9aR1kPeJfy4xz',\n    'AXjQJ2vHhgpu7DYUrE1IerCOOp9y-d8dSIMEIkc49ckjO9M04AehA8qm5jm0FIV7kO3CEtzZ8e-dp8-2',\n    'AYJqlLYWc7pJ-z3rUJBdHicjlxRg-sQUPytyCpvgPcpB4X3rKZlrmJq6pQRUZ0Pb_LCV1cvi4CLGTA9d',\n    'AQA6JMmn0j1yvIhc2mh0QP5HedKSpEEYQuZjHgmaIRVVlvzDWJU2twyT8OklWyz8NhVNlsKReUElO_xa',\n    'AT-LIFIee2HjafB1SJxyxiX8Bnpv-bAEJKNNDFduENR8a7xGvcQRb_5QxxDq_nVF8L3hkBpqnyVue4vt',\n    'AYc6HFlcGY99sz6mzMNWT10vuo6l1qwzKjlKeZ_JQuL2tkUtbKrWwNZ3pcFHZJYmFk5cXK92OodadpX2',\n    'AZ8UUzGLndt7BWxjD-NobN8gFAarZV7PNN-XfBIM7_n3oU3roq610ytrpCtL2ikSOT_HtW8-2aq0HgTc',\n    'AdC8njZRff48qO32BRskthX85OP6eGdW_2pwbySJl0WSa3MRPWGxddYiYf0ig9hkTu6ppWLp4uQFf7Wc',\n    'AVm6hkTgp2kObqwkPrO0KZIHeREs426g_yaq1IPsoSz5ij0vOGGkBcmfIAB7ddrhdzFvDiE4S7FjGG46',\n    'AdCK4t9F8PiG-Lbbpu9ot8TJmzlt6JqEjSBw0r4DuZQ-h8g6bU_RazHGajCSLfTfVtobXHH5NWq7-07H',\n    'AefZb6HGDKO-Seg-Y-T7n8JMAahIQPYbQVoQdd8JKZmF-r8wV_BT8YvY1wq_6HJ3QpiGhH1x9wTI-Qer',\n    'AZvPeGIweYjl7UjrBplKks_ABRUW12UVxZy4dw8bU7yVLvx5AxpP_kGy5VpnL5eiaqjeyY9bcIwp5UMs',\n    'Ab1VkGmr1COkjo_6COidM4aQw32eggx3FrwdBLe_49nQjZvsN6NGFeKCiMfvgl1424JCAMWbDIB84nM9',\n    'AfKPyV410xcQNtx6rx0yWBp0mmovau9eb_YyiB9uPX_lnWmXvOsdKN9HRWmEcDwcp0qzp74u_NijYth1',\n    'Ab2xNfs6Tl9v49jUupCCg8Av_KDTVb1JKovfA92DPRDqjIWDDOmir3bx3cY4qLmgPxuhXNIIYm7K2Y3g',\n    'AdmFNVRKWUWMj4UyEomTd0CW2hHQFcY9qB31B8PbWZYwzykfRS74Jw4vRC-5W1dScVuRwwFoeQAxFNoj',\n    'AcMnb-pPPgZGWeK6bIi6sixOzjzSQnLBX875cg7XCwbhG9Fc6kRUiN7_qjlYHOX2FZMDDCXYC2Go65LF',\n    'AXbYLpelIUb8i9iaFeQKXt3DlWpLyC1dc3d8WOx7fBMvPny-lHueS7DnFZnfIeOiRukpum5ejF8UdSzx',\n    'AU6945tSYM7aVoRjvIEiFE4uLYn3WWXRAt_DbqbX0BCUDVfLdL_NB85NaJYRqkrRiU41pUwwom2E_47w',\n    'AeLMaMHVVX61YKoNlLqoQ_1zX6MS3NBjvFZNBsrrOCgeZIeqoVwXWoVz681aMaXzSXkx2Q4CB2DzdxVV',\n    'AU2UgmLki6ZfaDt27a7WM5J73IVi36nQva7oZGs5onuWbGyo1dqDf9ruVn-cgfjyNWYQvUzk54wOLgTh',\n    'AaBPZpGg89TAPOa2VMaKwINvjpDh-EE7a-mZQ1vV95ZoEIz65ducH23QeIL1vPUFuuRGB2goniC9KrbB',\n    'AbarfFDHDheK7p4Z-w7JZ8rXoPBWSALu91ZJXoRX-zGz3Y6eqFSzum4OyTxn7ZJXELy_tl1ZLimrzgyn',\n    'AT4f7iaYeBKXSFR_e27h7F4z7h73L3-lMtH38jZh8KDQ5xp9NoTGpiz1oix4B69xiT1uFuBOI0r6_SLo',\n    'ATWcvHcxfe1gfQ-znE_Ua6dVvX7fMRsdoBy1MmC_ApxPcG3rGZLDFoAkOmtJzrdRDFeu0EhXIAu17vJh',\n    'AeV96uDGtI2SJMobKDHpR_IEhPD6NJG379LQHeFaCe_-GObH5rRCuP6-AWCarF2gh7dxh-si_uaWSxlu',\n    'ASgMJnHCefNb23pO1tmCqWhvwT5D-opcT8W0TW2WeZXEnDw22r7epTCrSoNjKc8O4VlDLhP4oLEYyOHV',\n    'AeGtpFEgJWl8EKAwx-jVRGZRy8fBYlZPG2cYL-kDJmKVv0o3tU3lOJNhzWMGjUdubmqsUtTcjyFzrsk2',\n    'AUQRtcEq9z5DHLxjiSz3rwKgB1z-O-Df8nzNU2aKYxQbntIDV7rFiHGQrISElMo1JJR5N8sYpzqkq8Dg',\n    'Aee7fyLlCExLFFB1Cs8eco2PsnVcNMYhj5KtFTxmmHLPGp3y2i_HyooUQtRCjKjN_445-7qjnoyR8r4w',\n    'AfxJnj-1UN_l7r46FC27ufpCzt4ymiF7ctpexNeEH8hkQwJloFB5comni5SxflMYOkWnMXWTtVRzlbfZ',\n    'ASCS3-SkSood0ZR2Ik8EtFZrI9MOKdEhptnQHypXbCk_z0wSICf6ElQ-ge5FACcGmtjKcV6h-xOWBqF2',\n    'AdxKNW6Rvn2NyGD6r9N7C13nh9lKZnOJ_KaNAl0Nlj_csc_wmJnm3MgpyHOhugPhMChinj2Rfsr9mpDv',\n    'AR5XPd0OP8aXFu_aHyBK9pP097vBH62c6afOj6sjH7KSB0CfNKZ6QIR_27rsKCZYmmCkRgjXePpTq01p',\n    'AYb7yEHXW3_n24dkjn29InoA6dCPEDiKajhbrCwbIJTQfpGuzh8a5FS4MoyXyFsiK4vhgeWxtg6zuADW',\n    'Afo1LVZtoaCSq5HI_naZpUMjB2C0_OiB6nNHlGaNe7jwBTunPXnbodmCr4ZTtpL3WT-4RkNG6DQFvX03',\n    'AR67hODdVoxlUsOUT8BoHSYiOJ15WDQg90nkqwRP_14vVrEb1a3S4_caxBc-w51TV3AcMyACzYREtXrH',\n    'AZxGGpjzsdT8yXYqFS_kp-Ai6E_7EwTJ03AoLiJj6z5TBXa6GZW5h2ZRfi5-K4Y6oLyrF8FpJpPqd5xY',\n    'AUq0DPexx9Wb84WP3jKi9r2WH9xejePjH4KAsOdRj-q4f5PfwMZ_KpVhLvsJyo3lhpzqhOJEkqFspgGN',\n    'AXOplj0iurFjzACM1RuuWcDRlVubsIQe7ry8SRAQg3LRVDyZbAmxOs2snzLSvNJhCtNNFANLf0cKguLe',\n    'AUwoRlv3iZ3jt3o3hhcft_tZ5g6tvefEpjCf9YNGeH7q8p_WraleitkKfLnWIs8HLpzalgRA5AMT0BYO',\n    'AQi-8_4bMO1BqBPldsz4FyybrZMDAeQO_uqEXfZsxgZGOrMbYl-pO7sKTnQpdsNxEgM-xa5HodTHXDQg',\n    'AajSVnIsGJdD3fKO76SmA8HxLs9flPRpdLhp-KTM34I2ZZ12WqfLZ2S3zmbzwbwJOMi5AmS96jHXppPu',\n    'Ady0oUeIgU24A60CEhog6THKv4rO0-58E1C6CXS3mfgBjonkj_fh6hYPP1_8qVzioVPhbX8JRbyeHV_1',\n    'AW7mu9kZkNQnih14Ugvi7DmBpdouGHi8yv6DQHScKfz1pvNh7miD60WrQaf_sRQFbya9pln1JEhtx58F',\n    'AejlsIlg_KjKjmLKqxJqFIAwn3ZP02emx41Z2It4IfirQ-nNgZgzWk1CU-Q1QDbYUXjWoYJZ4dq1S2pK',\n    'AVfy3rhipHfrcpAARabvSbVcG8se_5Ye4Yez65UlXA2zNQAhFLwERbc7sFooSjc1pRkQDvpWM_-6UlQI',\n    'AZNGPAzuZGI56_rR2d6Qt5Pg9p0EP0SlgqOLF1hJ-Jhyl7Fc4KLsW3WtUaQBsq7qEv-VcMfH3yRxckw_',\n    'AdEIkRwwggl9QpNGdXzXlT6dPT5UcxS5G3pzdimct2fQlfv2e6JC-ZoR2wEaqy1VRSYN5zYATl04lQPJ',\n    'AV2UhIeUzG0N23-zt7_KBQ3OhYq0ZurLSvm75NuFWl2iMtNiZr0k78AvPweLerv8DcdSENAAPy_qVHdc',\n    'AX8Pb-sAgAFp_gHsk2dQX30ABfcvMabRjPRJ97IqRt9LWWGn6bsNiU1kYqMWBkRim_ONg1XnrOq9HycV',\n    'AQkboqLaGeUqU-UcsupDWhGINLljqGPvy1pm6JMp1EQMcuz--sOwhOp20s0H4y1b_X6EYgUYmwl3_QbI',\n    'AVxk36f8VzzEEbhmhFRdeWR0s6kjHJB88V3q1VCDDWO-vUHkpHDx5a3c5KBiSwrEnodgmIDyVrySo19W',\n    'AbS9SBIomzAqKCnZgxxI922RWH4sRjcXQVkzbQoxwGh1yLU5K3NyBiIksj1qy-cgI0UTRaKEENdVA3UG',\n    'Aeof7I__CpI_sDTMc0sabPC2AtcDFSWYTA-AuSX35LgSdK_nveXR1zNGPzWb5d-EkXP8EaHFvpTXOt_W',\n    'AdFNiM95Vg_Xslrjr1PY-bUWGKHheQsGWo46dXPnSWfkGWhOpGqCH7SOivcQU1Bw968KwMiYIdOrC9C8',\n    'AVQfN-d4gHcYcLlNAV5jcn17hiXLr5-yktBxwl_oviEHekLjF_VtiWEHzpc7qs8VBooeZ-9HNkIaZC8c',\n    'AWZIhxjocZGX-AfhRrmStAUGypQjzWEQEnLV670Qui0ZdjBH2xiXlCEpnXbaHxxwV011ekhRWt6kWQzy',\n    'AYJNkqXTB-LbDWY-geBeteUhFckZhmKUXoQm1EKrHFs_jT52-Xs9HrM4yZe19i65TLy-KTPSZrbQWL4d',\n    'AaJdlGSlPSHCXuUsoizK7BX1gQGk-LXzvuTQuISXPz5aJf07UXhnNZBXHnZ6PBIGgPSLz_ezOW_JMWI5',\n    'Ads-AIlYmzcupU4h7aNwYtZCoxFhsytxkGRc449oi4KTs8JxxM32te5WnObdQ63roSR6_ap_RX0o-TyU',\n    'AezPnqbw-EqAB-3QxkcQzOTFu_BZB4p9ELEmDvBRIfNYi2MktC4OR3ls8-kfoRucnB7oQoZV_63a09RE',\n    'ATqRzjL44zV0uvmI-I8UXaA7aGN5UgXaIYvPnXot4EhMOFhL02PqzVX5vFPJ3I7Q7ezYGDluKsYJbTlb',\n    'AQb_uhCxkswoDV-msDRSEvBrENNqphJo-cGxMJ7nUa9hSArJhefMfdMvtVRN065kc4e2jp8rJ0X8yQrz',\n    'AcxzPl0cMHMyjC5D4uMaQZ0oqjNEGNItIbUgeokdAXzFs9Tr2uYJEe4l76DUh4HnX0Bz3XSYR0Pnwn3q',\n    'AbBeFZDAUYMZQ-EZMFQhx3K3_vvX2tU_45Lq6G4PrAzgP3gp6UfyaFVEg7DKo0diRDacyhcJO5Bpxij3',\n    'AR337Je4oqSvRgX7HjX2Sv7M1VsK7Lme0WBssuEwW66bkphUUWw-JjjVvHNW4ttTdikGHraEBfD3pKcZ',\n    'AXwYaDB1wXCQLJsQwaJhpckEFdZmuZMohfwEKH1vTm0Q5HJTw3t_Zqllc0unozCPPR19Ahlq08vNsPMw',\n    'Af8uKf29kbmHdbkYF7rCs4cAwupeZQZ42HBlOTv8C1cPsQDleyL-KibrX2rI_qxUfPXgS-AmUcL2EkCn',\n    'ARqhdSV3eoTacPNpD0m-xMnGuaYsbdCi8xCtAM_NKRqiZ_Kj2GcmrnpKRJOimbS4Dqg2WBlMZvM_a198',\n    'ATdvBkuCmZU0bTUYpr6UZH43vK5293QKgxGkPSYgfr5zfib2PbHNeYI_NSuhsJkiGiQqCAMLkx4lSffx',\n    'AZHX5-mWu26D4D6Ocw_8GxZTsvGtlFCm_clftgJLP0eixyZ0rTbVBu-T5RpTaw2JYXK1rzxIibE2wUcm',\n    'AUYwY3jZaHqT-hh5Ogpy1WkNunjk_AWi9pjdm21kb5GFOyJUnquvZeUx1jPHLYSwS1l_pHvWudWZUocs',\n    'AWkpAaV7rEJCfTdsnAZ11aisQ_SFD1MPCt8ZLZXRga7acQT2q3UffhOPc3ei5hoW--H3rXVTlIFnn1jM',\n    'AbQ3QKqGPFeBWir6QK2na3JAFsMp9scbSOeRi0_15AA5q6XMi4hTRuO4Tmme6jmAi3SvRY4PTPDEqY7V',\n    'ASD3LOuSg39EBl3Pd9PEZU6GMkA-yIJQhohSF4owo2fL2eelnrgRYQKYdbvtYI5O3IDp1Pw5iqEv5Hbe',\n    'AVRFLjMTInsB9StyuRZltkDbN4Bhi-QiXcIeqPO6YPU7GSOLR3i8F9f6pVX38_EkmDhIpgXM-D4GnPdO',\n    'AUoMvJA_FdhFwJEVL6Ri7YhdU2nrPQUoags0yhV22_17ZgWmfvh5Zqyyxpsba-dq-LH6w0tuIuEQJ2bp',\n    'AfCSDNtSCNV6lzSOqF3jTnR2UHPdi225JVtSowAVEcDi6KgBYBP19qnwT14_dMcALbArsbQA1s4vVGM6',\n    'AQUolB5X1HACW19AGVFANA1SuuJOArLYtyJ0zI2yvD1jVxgUhZbl4E-m4ry_emlAEsik3xm4gcvKKL_B',\n    'AfWrrGm1rpmDZGvGBxD0UssB3Ru50PGNgIcaWOpAN8mFGGkgl4Othmu8kPlunsRgR8YwPerYCdtiWUVL',\n    'ARnCYfY6j3qid5w7dQHUMtoRebesjooa-ZDvw-sgChzdIap0eGlxO5rwLQy-TwKB9FNtMvEaXjKOGatC',\n    'AazXPDqbAnyE6iEbvPw8wYi2YpjIJkRczJUF5CiSKNoQ6rEmP6mMzwAlf_KDRzTazEUukaq2feqcYYuG',\n    'AeDWFs5RFH33pB3skuP1M57jTWgMHSuKFMxJtkMddpYsR7SSEBanfqI1RN7LlRaQ_Jmjxb8-L_1dbIJW',\n    'AdfXyxI-oHYghKou93lC4LRkRB0OP3-8h0L5srBeDzUYFwJ44_Jk4Vv71CKt3BlMUlGUGseBIoRFAu0F',\n    'AaXrMQuzMiglUVTF6DWsGEXij4fOW_IQU5dZ49WvIGs-lBMiUtPW9PSVX8jQbwZZsDP10xEpAjUllgcr',\n    'AYSLmzwkSsjQMKrDgKGmAfYjO-xr06W3-WWg0DfayGHeWu7Im7UB5eetTIHUso6d-zpcE_odqb6doeBz',\n    'AaK4HlTbGd6DSR3mnUx7Xhc3DM5akcMdDQpqnawV1O2XkLZVuAAsHswM2PK8H2UBsddrcblhPgGV2PHL',\n    'Aa5ceOuSFIsr-yA7Xc3p-3ZAFogzycThssblaTOUd1JpcLOUX8LUXApTe2m_QvmjAovdYcs1YujLvRtu',\n    'AUf_Wbw9mq4zdVOg4XYC5JHrc-mGolFDwWF6ex-l7BA8lxCp7B0VKqU7BpQWlrfCxgKe5fqRL_N7Knz7',\n    'AUH7PO7l4LubjN0ogPX2GY28oACKu296xjV1a0yRGWdd3EwfBmOyWSYO1doaZd0gx-Bx7Zao1SsY23EW',\n    'AbH0SUlVzrLY0ldQG026EbqR0lVthG7UP5XpZGjoyTAUxyDNPvtyR67dcUSNLxOZSX2TLgNIRk5jX29D',\n    'AeadV3OUHInuU5wL-D5zlR-luGSVIfX-nA90teNgJQGYscnG0RvVnq5eNme7pnHtcVnRCBVl4itjlG4b',\n    'Acv9CfoOzVZ-rIwwd3xF6KK_meBjucMzn5m8LdlYHPr4sHr0u9adnH3DOlNrUA6QolpqhGEWmptO6lqi',\n    'AeLH-VryI92PffbhsBWgsnhFBftVk8zwbupdi_LwKAQFckM6OmwTGbKWOOKfUz2LQctrtvVygNvs6iXf',\n    'AQMYXqEHnLgLDn2Ke_4SefTHx4oL5pYbEmlp3g0D282gED7WCCFu4C6uMk8OqHdkTQIYmd63cr68_-Hq',\n    'AT9wpTr3uD58XIjdJkQd6OOh_m9392fPJg3Oo1mSki98E3OvDqVw2U_uBZ4YltQjo3iNrn7ZlRz4JjGS',\n    'AUqz2lilNW9t5eMx1VEwCMVSDeMHVas5zLpolzIGLDOjaJgS51Yy8fep4KKNQTUi-fj9yO7qIxSKRN23',\n    'AdtlNBDhgmQWi2xk6edqJVKklPFyDWxtyKuXuyVT-OgdnnKpAVsbKHgvqHHP',\n    'AW6_nv9voVzeF2SPx2CeIWV3AYzNFDOiPOmoGtiRwQB6t58EN4ix_utEKqDHSAQUaxhYI-AtwnoQnMUL',\n    'AXVv0WVqILDE_ALwvlqIuLMT4h_2OCQu28rZyzN6VHiB9dFlPFJpWyoZnkzUBYIbuuYwdxfNZPvNwqSJ',\n    'AfcRKeMgHWWby7ltUUzqiTBoHmO4aVrsdNpRZVBiEZt7U56nKUGySIyNSK9m2JvCQfOGfjxI0oZKAYmS',\n    'AQVhaTnL5pyyXwnn4D8pGfZIpSASJ3hvCfE04-2t-oZ5bxG0Br08c1v609avdfOd8M1jTGaAMZCu-MLa',\n    'AQnAfBfkA8BoHKE63NS_bKyGpVaxxmgRfPzgxThwY_N9fTSrSITOKSSv6OTrpGHiSrA2YbLKo_KB4qeh',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AXg0AmHuT2a0Fg8NXx0SezjfLG9UgmLK1qE-fUfbAi6fEF1mbXWAcfp0-rlzFhWS-K_aXveJ2_h95E4x',\n    'AdVBcUmJoUuavK3_TQkaUMV5S45EDAsY2G_GN9dw3MxbtdUeEu0Lio2nATu-cK5PUGJMqIUME4soaaDr',\n    'AVVPnV2oTAsBDiXdmLnZxhgnVpGlYkMlByGm_SzWg_3e85tbRhD49Ix-Ucx3l0ib9BfmZykje0uV5KzK',\n    'AfWrLXLdbApBAVcEvM7xmQwr2QhHMk6jbvAx4jDMnS4QGmkdxQ5uKDfwOV0jHyPC-0pRSisTRpB7sEby',\n    'ARkuH9nh8MlJG8zEmVHx9jKsi8xWHR-P_1vWD8--7vsqaWl2zBO3_TAipWc6f9yMHmziI_0blQqViGFG',\n    'AZgBvhDOw5FiH6rL1VPNaAQ68dmpMaAO-ZI0rg_QWC7of7SLT6JXSAagblw5',\n    'Ae9ydowlZztIMFy9HbRaMTyLDltKCy1v-8Ip6J9WkU4WUyWcW_QAzUnMPLV9cxy6czPjtN21uddn9IG4',\n    'AWWh5qDSn8fdahjjO4AJ_GmbyXjb_Qwrmk_Vtr-d6TCb6IAyPUItp6L7iyZ_KgIBxBhLLHpJF13xMhXl',\n    'AaJ6YsPUaMOVjHH67sM0pWiAxlGU5dMNmBHMDu6IxpxX4RMxTNwHShxDabIIIoG_hezmQ_bLwBl62Zz-',\n    'AavIU-CI9kUiQ7e76nQrNWl08jQdsCSOALmuWJ8cN2rpJwKNm9SLcWyJNErFLNNYvXjRRxVVnJW-4iRw',\n    'ARwAdSLROuMQJ-91zD4w_-_Pe1FkBJEgTpKNw8LZKCtoRxsq5cQaQDcOW3V8QAziiIlp_xAr0iMhL5Y6',\n    'AWpmV2CUaza_wgqCWG5df8LRAgmWyD__zhsJJHU9TOdqgZs95mvuvMRmaLPlYrRJMaVVy8Dz-Wqkmute',\n    'AaCbDDpHWz5anhIQ_Ge_RmUqTLguwXwCrn5U50KZt7xU7tU3tH411rCyBuNYCaIV_nvgOvUNmI8YU_Df',\n    'AfUEYT7nO4BwZQERn9Vym5TbHAG08ptiKa9gm8OARBYgoqiAJIjllRjeIMI4g294KAH1JdTnkzubt1fr',\n    'Abu0Rwqhorsjm3yK3OVe-Cy15saxELijgiA8yWdGveJvDgevs7Nc_P-zsHg5tCJoac4mcjTVjGuJLBzA',\n    'Ad-_JWvlIx4ED8vWip75RskfgcM1JLY3NnAKDoqDSBr9gxXVR1L5kVFZGqKHR_lIQO4gY7EFrQz7O0pj',\n    'AZh-q5bJ1_kWDREHUN390ffVG-ubxGxHB08kvHlWETqkleYtWWhGge8z5nKzfZW7aM-U3R0YJTmbfafh',\n    'AZymbWti-n22driaG2L7G7NOyQMZgKumqw05JTSIT8_MWMGMqsWdWR4TBo_e75oVkMViBe4zjO_DDmjI',\n    'AdRRy5qiC2TsP3OtbkgwRzLpU8WqdAjVf18Me1BO7yRMBHK1JVHXqlr8XIIj9qagyePiG4_Z8iZIgOmm',\n    'AXjYFXWyb4xJCErTUDiFkzL0Ulnn-bMm4fal4G-1nQXQ1ZQxp06fOuE7naKUXGkq2TZpYSiI9xXbs4eo',\n    'AcSMCRA5xVRrJ7HOPe7HFj1GicmGAUIKujZVOYnDD9_Qiz_HYSrx3RlAtVwf',\n    'AdZYKRBNf1xFvz6fcYRoTXlmoBg-acv-dakLzJTtaBn0cqNf5M8Z4OCHUBMv',\n    'AU-ACu0mLYYRgiceSGEbzYcX9yA5bhil5ICbW02h2M7cbdEwiAE6akFH8NgRuCsT6dI33gzZX9zmKr3M',\n    'Ab6M4m9Nok1o_LOQq0l1Sc1fX8aWo_Ce0Mrjm15FyXguNnWzgHOJOdWKbz384w-Ja5FsJ4IXHScGwo1E',\n    'AaGocs2Ps2V3yhN7A_lS5SdS1mF2hxmUZ8SNBCzFHf0TUpGdkmwEomPxENzxR8_tqYKcwgB_TErnHCX6',\n    'AWmkdE5Z_AhcR3GGOophAu_qDRHpOh22NJBB-0QjLFpWFo0aY_wx1UBwqmiG4OY-BFkS7L0gXY6gSmu8',\n    'AVt2-Fr2w7QVb7qxDp0gHohDqZFQKYB4MgUs4KULrN4zayXnwycugMykkE1zUjYJBsglaAWFGs_U8UEt',\n    'Ab-nG3JqVgV470TB3zmlXXMt9vZvUlOqNGVMkyu51ymtw8MESNvwkyFUbERwEU1obtLJp3g1V30v3lLQ',\n    'AdTMvLUejL5-E65uSwBZnRjNV5JlTrGMvEQEwhMLU4dhm6cJTfgzHuYhKt5r9vfKlwNyeieq8-ZqdFGW',\n    'AQX-OJLJe2aT67e4nouWcPdrl4Q4uqOMoC5jS0otp-vX7ZcYM_uQQQuFST6l7QKtC3Fg378Bh1c6qtXr',\n    'ATDAHEYwG8nsvQgqf9yTWUbQ2iBfounObrJWfoeoEWoErLoaUW_rMh0i3o6uAN6XfRvU6GUnF1gRHL-P',\n    'AURDh-fRhpncZm8Y2qxh_fj9VaUH2fTeEGvA9L3jkak1vfhISEDoWTsmYVfj2Az_4nPWaZlPwi_obgTA',\n    'AUPF8VFKX8BsjR3ON0IDB71s2tcW_RF-q-ppFwFU81LfDUCyhPChAeATXYPeGsgLIlB9TEN_bkh-_ASb',\n    'ATr5EshElZhaC4c0e2_ZwaSwKb0S4RKy39g-4al7OUYUezgOuKV-IQdyLesPj4axzgSldEzLbWAeVYc8',\n    'AfPnJMClV1R-CNXdpctubgLazXxJ5cUDPeImRKZRLGqWep1N4q22hEDtfXC3R7daG0JdtOO4vNqgKs5L',\n    'AYphQKIxbbbdGutmpobhIbo0jkFSigSIMCE-L79h71YBjzsBjP18q9RK9rgeeZ6APprQ9tWAFf2FNGRL',\n    'AZQPVKeH0usLoAuZVvn8_jOGHCT6nP7pySllud9Dh-sbIqi7kBgDt9Xs6bCxEhCpF24x1JieEDdgn29S',\n    'AUcaacy0l8SHnxKXCdYaZLHcrRPoj6KDxw78tHlZ6zaJ7ALqeIx_rXfkXZ8EDH1DgSfZIAw1r92NzFTu',\n    'AXz-FTdsaLKAup3SCFE_BBHjr4vtV26NLHt-oSvcxhqjBUjMKiNM4xH4zALKTyiu9_E3laCtgbn3_Zxl',\n    'AeDCkxuOsfL2RdE9qGK7pqNOMvjknv02TZnIBqj48N7jr9EsNuHKfvO-2Ndq62It-TtifNWdALIaly5B',\n    'AZB6Fi32uCC1QRTPi98AR-yBdDyiYBlW2iybmv3oPv2ka8OVM41OGW3N8DICRfZg5kvyjpdgizGxNpO8',\n    'AUdiNR8sRJIYiwA02_4UuSjRRUvGUFqaS9a-xJQPRBeJnbZKY4DRBPzc_MHkoHN3parC7iaUcSZoUNHs',\n    'AX9Y1FE6CmttN_PzOo1rDjjnmQrgU5gTbIy29G56vnM4imILXMW_9Q-WbFw6Lqv89Au1bTETv17YZCCm',\n    'AXw0UXVUt0zPbf8zAeuYUPH5Mk6yWbGk1GFXYrKAEveUJiC7UCmAWPacs1-ri1Q2ACUNt0fVDcxY_phQ',\n    'AUTeu3BWbHn4Z4sH_fAF89K_WdAtUIe_EnhpGlXrEEbj4MpBwbs8VCbwCGmiOzSRqt5zu37OihWxRC6I',\n    'AV4Y0B7PSyc6DW63gsLtgk12P02kXFcdMJSt8LiyUuiAFS60z22ZlbYNLOBaaegHENNTEFsWX7n6bPP8',\n    'AVEjCpwSc-e9jOY8dHKoTUckaKtPo0shiwe_T2rKtxp30K4TYGRopYjsUS6Qmkj6bILd7Nt72pbMWCXe',\n    'ATLQ9jIClPt9QFPCVGFNaODFlZWIkqGv8os6ntTK-QR1iTRbMntGtvuJNR-z06QIrsPpe5ujJrfJnw80',\n    'ATWCV-slH_K6L9tzvdm-comm1gpQqHxji7spHcfGAARQ_NuMRRYAHR2gJ36A3okABucUuImSl1YSqnv4',\n    'ATDgSNqwYRLEEOrMHB-5Tx-5GxRZB5WSbi68NtIvvGovxOAfSxNhv-gFulnJX9AvMrHDacpPNvnpUOrY',\n    'AVyrz3xlA7YsPL9yRG6WTJTJ9JA36ulnYq0A-W2a7-FQHagTd-h2XEnslSKWN9GQH__VVTjcGZWlltGq',\n    'AYrt1t_Rn_Ce-988DREp5bsPwGCoCdILPsOEb0Jap_LBWdc-E6j0AJ4jR26o-Bhu6HB9rhw_XdO4S_Kc',\n    'Abp1F3rN8bSojLO9dhYwEaPStHml-OckvsXx7D_B_gqkbCTGhKoI6UCzN5oVTAwMb8KO1KwWg5GLz4AC',\n    'AXY3oISYFxU1MqS5vG1QvFkMMwym6A-EDTT8DFJIq5ZWlq3OIoP5yX4wNKKmKKZ4yxTHCocYWoPAGNQX',\n    'ARcf0pSIWH4zw6SnO-MYJCEyU9HexIQ9sYrzUE6bRsQJrP-95zmlGyhWjp2s0ZHLoG4nF2uyQPzvVcfD',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'Ac8X-wQoJRqcR7hjhnPl_0EAoxHuj7pWE8PFtBU2xsvcL94bxepJUNj0awMrs-o0uMeH1pqxZvhOwr7Z',\n    'AQemBOgcqnwET6EUgdQZHNXRgNZ9pPFJalKsEKDL_YlfpGEUyhLBj7BRw7xWSB3iq8Q6gIxo74OSx32k',\n    'AerUB-6mTARcvaeXjg0i99oWQxLi7WrHzFo6vAGYwEahSQ3cOOxA6iXfvxfBsEOmsfo1tfaK6pKnl4Kw',\n    'AUiUO36J52hSCkhaMPLWedP4yIc8AzYxQf9IWwI2zxv_mEFOr4S6v8JwAmKTPztnRqzLneQ5g6D3OZDf',\n    'AZqMhoiURMT7qtC-gKxZorl3AjLOxAqz04Y03kRFzSBnrWL5W5FEucdVk0EHc6XSZ1DD3lV1O6Ei4T7Q',\n    'AYA1kbHZEGfgO0GQZ2AmRZc4Pt0xA_bjH_04oqwnN_eHjiaoLSR1SQ9agvNDB8og4LZEHHVK6m-r3XxT',\n    'Adm59IrYvPigXwV8lVehwwoToY62oxUEWZue81iqw7fx2ogOvrqbCv2yKAVQaMgt-YQjfpM5mavPDWRl',\n    'ASHRFCrZatJJD779KhJh4vReZxHyjkEjJqOcH51HiBdN0VCGPzGsY5qcsyKOanBuLdRcq6DGIxMkIzdE',\n    'AUC9st_MCkpnFj5grSnlCNOh1ujx2NsAjMyctoMVNZy7P5p4X2suh-XKAdfP_G8G_ttwARjVP2qVh5_U',\n    'AWD-BLYAm7ZItS5rqG2NwudODLJwEjzGPZ7mmeJMnOxYdXVrZj_JhUpgrnPoGPS5DdDS4Wc1-KjIEnkC',\n    'AZ81OGWmwmMz4z1H8LJlowtkiZMpLGDSe5L8Mkg4vjlOX8QwhzMB_H83KpHNPOLSvCJ4W_zlhDQ8JXWX',\n    'AbTZGAAj-YmmToFZbGY6oerdrhM2VHZAHhSj9ou2WRxX6deDa-kksuEJorQWte6VMT41vx-cORSYZLpU',\n    'Ad4njTiG2f0fgrygZXIGwnCB3p6BflSSVDQROEQgofSJZvAgrYFQtXejNTiRYan1AWwRH1fQF9U1WcLV',\n    'AUFWrErwbbFvjbcxeYzqEWMI5G0w_LP0B-2wm6VlyxNhcHyIdlDBMQmKI298W-EIE9Z5dNdP29EzHSY7',\n    'AYMn26-nPadhPzVAH_RPfIXaYMOGtZgPnsSs6p_ieUsM56FipfvZn6f-h-tqe1ZsIejirYnooAYnPrpz',\n    'Aa3vEKJmA0ZOgxcPLPvVLrdcIjNqOUXyvcJxJdE_UvJB22YJepjDX-uJmaP3i7jLiePb08pTMuSFU5by',\n    'AezgqjuewrZjjN-whkJhUTFLg_wP-hPWJdwa0yPh_rnsJtcAwltilMGjQEJAa5lGmFKwgMEqzHmU-i0e',\n    'AUPjnwsAZyNIPBNY1lRy_zDafMe14VrpcfeIp7zznNmd9zBPurPIP32TKV-dL1xg-dy42eZJdlk_0gDJ',\n    'AYmOiHBgeNwOszgNnOKM1p08gdtx3K7Rkq0Iyf3oqz7inUaZZJYsXzueM_ET09hdjvkfChbbMwT9n4Z8',\n    'AV16buDgQ4t1rLTlRLALiK4l2V-bBXbuexvxGnk3t_Tu2GUYG7tCB-tTPG5eD9Lz2juWTwUT_i7Cf4jz',\n    'AXRILPvYUu4SLa6wG1z4n_1DsC3_sA7_asy0HYm1rCXXnRw1v9Sbe9NsGDLNjrE_8GL-eVw_YDjlTCrA',\n    'AfKrgEQQWsMUR9wtvQmB31X0T37HEZ3g-uQmdMPt2B_cphEkyID4sYZnDGLrFe8cP6Yx-WSTqnDZ5Wgw',\n    'ATJBc7APFn7FuVkOvl2xI4b8NfggI6Us5KrHlc7It3e6AOUSqGalL1R8LNQBoxtFzppb10lPKwAbuBUd',\n    'AUUoVCSxi2WznYhlTPy6x7oxCOeuDZBFy0iCSrgHg8mj1JBDY3_dTkS7rhFQnaPRh7EG929pfUS7hjmD',\n    'AXircH2zJ2lUmvEMsZw5HWbxPEYF37ZcRAgOfkjf_wVXPJCVecRES3_gEEi8uJMnw4E53Ho2gVTb41LZ',\n    'AbOUyivVwdLJoOfhVYz9Qw0YL-rz89edlPM3S_vK041Rnz2t8hxtvmFnhIwv7CGa-mHoIl2354UvFH7g',\n    'AcsCdakTXBXS_Y6WfsGrjw4kBjzcKsyNBdA26LiwCCo-23guumU93tkTCxg9Q6XadSuCkfbn3LURD9hf',\n    'ARyG-7O26qHxhBX6Gv2-HzXu-F27Tu9KQAP8jJicb7Gpik5x-I4CmU486piV3iQ5Gu4qkYOWUbvBaUF7',\n    'AbFEddN5fdmNJA2-pqMsI_ITOs_Pcl43tzzjsru0ENbtmlW1C2bLpk0oThT1qNL8tgmPHvc4es6j_B9B',\n    'AcACdB2RGxb-23peUt2ovwfDUXBYSGbBlv2iEsMOV94YHcKqj4ATAGnWYsbddFAGWR1HtkbGo5ASw5ao',\n    'AR_TEvkkg8-EPqsZr1iMYADrr35BE-JDN5Puwugm3NF98k8tZRQW_UiFa4u7HolQHThYxd1n05Wtxs9D',\n    'ATvwK90V7SFihAVdjTQlIGsil9oQ1uSHT8h7GRM-ZOowkAQi9DCg6JAwFBpt6azdFFiriWT42jcvIjVe',\n    'ASFwlXgoOm_Rpsu5f3Nj74nTgbIT_eD27oY7vLsEZ2ICOUOtBvPBYHMZnxhEKRNKmM0tCqf0-AxWUVH3',\n    'Acn-VnbkQeJlIfc-pBgbQmyginPTAILbLKiMFrOH-LBEa62Yyc_LdEtpkd3iKtJVgtkJL59MERCBSHas',\n    'AfySg1lo0aeg43kcf25LLQhxEbSJGU3fmgldk8sVu14EERcjca4dpHy0c9PwTo-oI-y0gUK__E20ustG',\n    'ARp4zaq3RYAZaNLBnOE3xfpZWzDAO_oWczsJ7xcpxohLyAYz02hndRARptVRJIUc_lp7TwHvrl92U87J',\n    'AVZDQ7ynJEI9MCy7bZeDPGMSC6xCYUBNU4QGi2lWcH01RqoIqJIL1wE8IdKRBaMC7G3aAJXDbSKuM_PT',\n    'AWhQQuykpN_nyVKTgHZeviUEtQ6f1O9zu1Ygf_OSsyJzr1vmNxU1ouYkgMxlRHEUQKEnGJ-p6EyabmQD',\n    'AX7oINKfpN4DK0n54Qa7cg1ba3mRas8C1e49Gq6Q1WXdenjGlJ4ym1cswCLbRFz84c8ORgxFfMBeXSPB',\n    'AYrM6JV9iA-xCCU1xCMvA1DePbwK1L0Z35aaOK-li0DpX-5qhZmO-0cHx1UdrDYTThGsUZ6858QodAfD',\n    'AdybeG3hNG3xDrQ0QNDw9Rbjf2KMxqoNn5vbNYhgQowqMIlsvvz1X3jOsaTWu-1TM0NnvcSsLm1bkNXA',\n    'AWJoAvDUxeoxjN47oBS1KQCHP_lGDA2pqLXBahns6PMmMDBgHYoYmF5zZoMiOX0m_60MAux6DuqhbuhI',\n    'AR3dGJe8zToNs2fp2XT2NTQ9NVGuGeNzzMO8Z-uuncYM-wHJ0QTclojSh_dwl42G_hRm0_S3zKMgqC9E',\n    'AVJPoSO7nQcOwfC8mjDFlYZd0hB6uRPXn9bMaXC81YYV-g-MXziOdXFmk_nnfSrOGcqxh9mN75bVV2Ak',\n    'AZdKwrTwEzQ8XxeoW3-dVZwvoXEb8LJVqCoM-9fjEKMa7rO93dREWhDHFx6xWu59fsDpxXidHxFpv2s6',\n    'AfUHjf07HcSdnyIVrjKMGKrtwNcNTDi-3QEAJtkJFi-l8vWi9XbjrUbM6Hr4PbOo5leBKl2bL53dHLZi',\n    'ARPe6sWG22KZp0YKSbebgdaDblz7a7wyex_OV7_4zSY5eOdLAtz0okSKznOwkoX0mvA6W-zPPJppY96_',\n    'AXwCJppbQ9ykBy4P4NWNN22x8KsyKlfHdtMJCLeN0_IxS3YJGzMCTOjfmTimrQJ-i1bqkFUJcTP1eww7',\n    'AQL96QrjY7kmWnxRgYQtKgpnyBbd5MGyF2XinDu2vhDT4sYS4nnCE5bcoogXK15Q78zHiK7lSK9i8cLY',\n    'AYraDnKk5Rqdlm0ZPF_aYLDWlCAoBBbpROZ7hlwbassgAw3-SXHJObcFTm9Im7GfyT_YI0hgAxkZrCe-',\n    'AcG3yUDIcfKxr_uumVTtvj5bpENO8IT6eI6oKSlgVDkrf9ZshIAh1m9TObJqdOUZz3D1Qi67-dyRWY36',\n    'AQSgGxsMmajM4NvcuZUZ0fUzSHuuv7VPcUhUoDuN1lwT4VEgq89WO01CKxqK3vVjt7_c4h0VLPchKfsw',\n    'AcY3PqxKJN5tvdtds5nGpzLiatwiJznJYJoWpG4scbLnfPyG6eHeDPQ65AmoEbg7ic7JPahPBZRkjSUC',\n    'Ac6ke_AYE0zbyhhPZYMA3oaIDU0RRU4xSySelFvMVoe7aZyUk9KqC51XnTf-gkvXQ1nDBEh9zQQMFzlA',\n    'Aea-KrjL-ubqOR6RcqaHPTFWJ4QcGfsx1t-k3hDL52ZA1GIp0YoSvW_ykkRHMiEaztr2aupN0ev26eyD',\n    'ASZKgb3hE-0wkV9NCG6Z_KL7lTaoA896U21tg_zeVDcJqatd5uXKlzBTQV4t60TYdcObCvoaniK9C-pc',\n    'AcbDULRdfjY7w-DS60g0-mCXwOJQNWotOZes7mlwT2VCsXyAwdvgPnAnphtPwe8kRiol5CkNnrV7ty4h',\n    'AdKY0ce1_Cac5x9xIYMeLRXWQb08bCvEFvaOgd6FKT0EpZwxi4a0QQ9DYB8RcSda_x9hGZNNLxX5ox52',\n    'AdtmjnhumIVf512r9eVKWUSd-FB1m50_qDGaMddykHwE_fCzuDkKl7lsWk7VmDVQT348tjSvK0xWWqxW',\n    'Af4Q8vg0vQGDOS4CZCo3lRGuxa-0uCea8ThUMVbj_AG_va0-pwbERM6DwznoR66uASQJdR1iCqiAOlY-',\n    'AQ30yLnZhcxW1OaYle1tKeiYOBbwusFVu9tKAQo2B2gTZoyM6qIWP1cA9aBOwUv5v7x-Zymm3ScDc62i',\n    'AWFgO9_WbDSGn-3EoliV4Xe5tUOVjlvTxzRD--a6rnDEKWsr1DzaR01XK8DhXCu7BulgWxY-3T46GddB',\n    'AZoLIJ_07qZVfTVNFg6zrb6X1tOgOwz49qXKAdssCOowJ4o3QFwUSOAVZY7WA9t2JO462nSvIxmg8r4c',\n    'AaqFBIll_36pnXqDpUctsxLhL5mGC8J2odsn0pDQIBkidfb4St3J44ENAujonkUJWt8lePJ-7mSBb2gY',\n    'AeTaeY1w5wt3je9FFRRE1t313-vcXeS5hNnoF-uYB6FVD-ChMmhhy3EvCnozTH2TnLXNldFwz16d1b44',\n    'AT3e9Naa87eXT8mQ7OakeQCsih35N8VjJ6sLA0hP9zDcoK3fcqF0HpHa7mbfPEj2zqqJtyd8dRECKXKn',\n    'AT9JbsWaW_r6I-pzOuZ0zs3VD2CG1AyOgDUOBnMXAno9TjPZYOiegXhjMbqUmAef5783n6yRz7nMm8mr',\n    'AU1f7xobnegPXLuqQq2o-_nS331U2pUmWxUuFNlUd5QYLwUuItn9mok1Zh0T57FY9nE8YI47GR9vsZDS',\n    'ASDT55P6Jdw0oYgpftSjw12L2wcl3LKRqiO8hCnx7NLqc0SfWstmVmcoLa22R-1LVKtAcexEBP60HpMd',\n    'AVMDh4hHgdV9v5DSD2GfBRw2LCz3jF8UBDr8qG0z3pGFjWNrBh8RqH1hrzXqQZ3TdyqsPjuGAH2GvzoP',\n    'AaghtEu2Cr3W24akci5JY2StSLCb4IhD5BrCx9K2z242JwKzxnDrsZx-va1mTUu_FIxBTFEmHDZP9MgC',\n    'AaWFb3GC2C5C4Wmky3pQ1LNH_nmE3Vwkj-LpgDFPT-vWBNgg09MOLtWbNN4wu6fjASkk4DGpkcK1bbyG',\n    'Abpk6sczIxGd4uShN1NF18-Uu45acQiqIHtEhblwB7fegLhVlzI5j9qmAl6kxM_vMaIAEfFFON9Go-yJ',\n    'Ac4ulvdzyWGE2CFo5xV3nYhwkd0CrALQleV0oImj91NfzxpRc94iyPHoQzrTUTJ7WcrgSrxjc-MxbAEY',\n    'Advgqk6L03sFnkLl6UXmlkAwozU8X4RmqlisNUrsk0RFqoldvD6W-ZXVdghbzPguZXl0ocnSLn_OwK42',\n    'AfR9rDd35YCFWhtTa0VaTRhzYWN1d6bNd_4EkOFFEHRLDsyzKYFyzCuwX20MgTYejsUje3274eTVRQr8',\n    'AQh2k_kNuGS1cfbJ_PlYg28uPkvk9QHGfX4Pft7xY0c15CRBUYwiir01am3hIXcHLWqG_oS3UYan9Gfh',\n    'AXsdF0L_Fmdcza2k68VrKLskKuocgMSZkfrMwrgSuHvLeUNCPJGnIHEG4hmxbDthJ5SPvaorE2qFe7dQ',\n    'AexgYDRBEwcfrhm1u7-LmGDxEtDZtBKQb_PITb2C6_ZolyS5BaIZgfLHeBiHc_G_vElZUqc3qz3lEsPB',\n    'ARePeTtGtCKd_jt4pH_nQrjW56VjnNhfgJEYosgwtxafxaEJUjabpnd-Xxls40tcMp88eq31KBz5DWrA',\n    'AUaH1R1TbCLQM8Qi1V6pCIpkQxyFHKQMoNAE_-Blr1Vhlssr-But0VSrlwk_1d5E174GmBjB0-Ulqylj',\n    'AX_wkrO1bztO3Zk5o7xpTxd2VaQLZfCOllBu5dnWLI8IJsib7LcVV0dK9nf6byYsY5PrYlSCupx6d0uW',\n    'AYNuKyjrY4_ptFwMXpQhowCR9V6ns35FC0cElYYZwjshMkQ3wc0iQJQciXkr2KsBJiOi3SO1nBHHu8Xa',\n    'AaaXw7i_cFPcN1LHYIPDFjsn4qN2--nQgL413zW5s--ZMK5zXvtlGIvscQjT24axqeTasFjB7qXXcBI5',\n    'AaErQSStIgrMS1Wt6vyVh1dI9S38ueIYroiEEfQIG6bAaLn1YSKytF7Th4utpxo9tipKSStXUlobuB5N',\n    'AbPSFDwkxJ_Pxau-Ek8nKIMWIanP8jhAdSXX5MbFoCq_VkpAHX7DZEbfTARicVRWOVUgeUt44lu7oHF-',\n    'AbXt5XyCzxxMhuZvBVENK_djVGwGcWsDPZHOpem3s8YFDN80wCl-6kq-vf-bt9-k0FLiJIOksYceQpFZ',\n    'AcIpUPU8c1i0sDZ-FMYIsJuOEpeP2BTL-hmwcbcYijfZW9_esiJoBGeX0lGE8U-A5YbXCpOWuPMkQCDQ',\n    'AeXffmIejvxgasb8c_1t1pxfj8hzaywUILZzr-TPII6nk3KrLkdnqfiQlcNjghmpaHwtBjdRAjcJkGwX',\n    'AUXZ4u8N3OPaxj_b-RwgBRr3Efs5mqeRT1qZXWwCeXjQaQpW9GeJnfPZy6ZfUDZh0u_szXrNDjzSM5-Q',\n    'Abd-37lTccSNiHam_-H_NZtQa0tmsjxztAbnmvy_7R8kjvuVz8QvETPLfYW5Zf0dfvWHIfmaHIALs6Qf',\n    'AfIGckSuPS8-PLFn7rcis59G2tQOaKlqgRuUHPW3_ed_Y6JZdohTjjTpUVfvAxnKC0-zWuOLBWrpMCo2',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'ARGQ1kBYHQGaz6Y9_0twfc0Ityx3TUCMTucXOni6OmABeu8s9yxaCXOJRibWvKRELFp1KyYRpMJRYxzs',\n    'ATHcOc29WISmwi5VvnVKP8LN3LFVaeWIUiX0FfsNgm1u7CIFAxB7FEZv1vJPOBu3UTbvisBO3wWECYAp',\n    'AX5cTDOjB4CuFZeR7gWVEzVeI3cM6_j_5BZ99ZjKOtyH2hQl4Ptkun5gdXa27n5p8E_MSc5VTNcicOY8',\n    'ARbo7WUH4Uas8uz-UpsOpRos4hAt8h-PQXVI9c9MajzrKTyB3sGwY6L8LcRpuEDq9VGAQGRgbbEU9ReS',\n    'AWKM7WCLJ9CfunAKHctvRPmYdhwC9dGyY6EAtkSUGHVV58kxRc9clx3hPf9U0nNkWsFFzRu-Ila5Fr8A',\n    'AX5TZNFfJqB2PmFoEKCYtd6vpDzEkanw-TIh70ZZ-h3bFsyvcjlz3BUafZDA8JsYjidNw_TmlGDMwgL-',\n    'AQWgSfn9emdJnPEBBwwvB6N4F2AoXbDHKq3rwW4-ieEP3TRlWiApzCWpGdyNjymcxlXIAxuf8sScQWMv',\n    'ATrCdcXIyAX6fPCjCD6UBgIJ4sNNm3SNQzJ54cO_X8f-SI9kSAhV_Z999bFb225scgZdB0lmk78-jcwb',\n    'Aa_DG3hUsFI6iMf87VUOyRCWH28pC5ijDrFPYnG_fXUT9NccX5D5qm218rUWcXyTj65vu2FBmYxP3Zam',\n    'Aderc8flr4FvE21kxRJaxvFyURKeUi4znzTj71EbyHNiFDm7uhagNFq3ctfig5ZAcj6vobt7C4y060d7',\n    'AdtXhR3loNJ7B0hpup-jhP5Tt23VwLdtfHDbqW2vcJ6bIwrsvKajuMvTP7a48PFRzNsWJgqL4Ai14vNb',\n    'AeueZ5XoPc4cPG9v2kwlk4dIeK67CE0RyIwTzKSZlYlClcxH9P1xAtpfCpE4UQuVCXxo466IUj8ALNa2',\n    'Afc6ldERu0z1EWXp8MYi4QzHudDEAfMjL9UwCW-DYH1RTA0qSkRJWoMsu3kUp1dR4zeRAVNovSU5Gh8n',\n    'ARjjpGuuTRVYUQ3h73A2Zl6zOglzYtuWCnPC8yZTp51sA1XlKpuj5pOmQeoYkDrPIAQTQTwteJhAaqd9',\n    'ARTz2u_4Z9ZHcbwont1r7U7Y9cXBHMbkhTfOx67ONIMkwqDYr08vv4SIrYP7_wabZuYobR9A1AtS-C0e',\n    'AVhCvBBwz7WcCJNWt4ShmzeXcTs-B-ydD1hdqsV1bbT6P4TvhsFxIHKAE-GO',\n    'AVX7d1JfuB4fLeUhpG6O5JA6i6iB0sQr9IG-SAyvEN5TIo6N9otHSB4X8aaMcLOQL0R7J4XEJBQzQPIj',\n    'AWS6hhBD7yuASYqmEX180QF5ELJGDf9vW4pOwwVg3PxA16entKKfNOxhkMoE',\n    'AZKHl5I5X2-oWg30KETaXhj_5-CtJ2NftUT70No3-FD2MDm76KhanS_XM8OrPEA1JYc2RrhNrDYL5rbL',\n    'AZsPWotgvxGKy-sWOcTE2xtZbHqJ15jyXWHJDVrODGF0j5ufpB-89ILdNDq8cOFA8o3YnFvC_rlUDKOq',\n    'Adk1XwEPQMKOn-b9a0lMZ87uctEXKc7K9ZPHIfm4z8Yr3ZlWYDlAznceFFyzS0RbXfQqONuyFvZa4rto',\n    'Af96d--L5ACQRgWAJ21VbDgbLMEW0m7SnlwtzVziKtwhkeaUVSSex-ivaMqCe5yO5ACRBzOTa57RNFfO',\n    'ARBQw6GmaZaOMNkUUz78FN0hrNHflsmVAbXsSgQoHlOnXEzBjzqMpp4V9HH2LxVXK0t1cUCQtfijdHQ8',\n    'ASdxwSqu8dAfiPTYWGxXF_oB1m2f5-kiEShqzrLSrq1UzI7m718X1Bh7oA6oRRaUgiCIyW8Dcfbxyj-J',\n    'ASuksXjiG9-kzC6UT1_WQFSdcokQjFFivpw7MvzJzPLH_o7dxj5pnlCjs_u3Iu7x4xLgqTM5oJB28I_o',\n    'AYArObyAM4DSnefp0u4QEGEgPOolT0sT5KVtC-kApU4UOhnotD55PPvts7tbdBNVPYHrJ1mDDzgDrfLt',\n    'AZNBW_MBovzo-FQb3NoLC3TqhUOTZgcluCth-oYF4Ur4Hnk16bD0J7o1srJxd8RtRuDI1-Pf8mlAcAOZ',\n    'AQtA-m8ydts6vPKeNcR2V9lbnUk1pBIjDA8F7d7pnnE22OdcoVKS6v2mpuicU9ETnPtD7KSgfClOW2ez',\n    'ARiex1Obbt8VCzA3oiFddD6IM8GW_rSM-7bEQHYMEbm-Z8PKnZhnJiVZ8R2h6QnOOkRhO6qrPkacUB-6',\n    'ARme3lHreiKJ3gYg6HThgcBTRwPTJ8AZEzVORV6N_b92yDHYyf1QNZ1bI7OPdF9Wxnk6iyQ84-5ZVj6b',\n    'ASdzkkc3gZD4p6OQENcdTF4-BYbalbTCRZEuruTd1IcGuu3CjOFEAXX4KRtseAVv2_0VJhkegmfK066l',\n    'ASgUH7GYLmT5OeoCIiZxCLdf_TkJWuN5xm6XyYm4UoKy2PJ9ph2kNS-jJRHEa11UfrsH90mrHCiFYneD',\n    'AUstsy-MMWK_e92mOhtyXamPhDkjragWS2E-1N51CqQEPzLA-TmQW65ROOnE5horq0XmVGAHn3gwC9Px',\n    'AUvtyfR1BKhuGWyI6oKu-KCJ_hr1wkh-BZTWIH8N6b6CqLc09mp1u43ZAB5Gv17wP2d2kecRhWdQMNJt',\n    'AVZhYm14YbV6P_TNkde0MGGSxEtDncv7eL6xfh4NToEXB_vMMBETx6VjDX794rWvGhERKeb1xEXxD0Ze',\n    'AfnCuLnoYiXnUIU-xTedeAUqQ_d_E17FiQVeNxXsDBrgHeUlDO9Di607PQWdRIep2-2wLMNk6w05BS4_',\n    'AfVbaF5KGZuZzvs7b37iTEqatdhRly1S_uqGgAZ9H1rJixIm2Z1CNiMli4I-U5tDvF7wFR0ZGtC0sqJL',\n    'ARnXPP5gAw_eGAXH1GVKM95kLABSvGRyCny-BkHW6UWSlmFnv5zkLskgEjuNwahxA1pBI2RRGCL1U2E7',\n    'ASxq51TP92spfbizUkcxNEl7x84Ct717OJ0xgI3A2O_FeIH1F1jEdTBAKWZq5Ml2G3U0p3g57OQlZJOB',\n    'AZf3sGCx2OIfGAMTGmcHDd0tt-VXYCducWtnkOnlOOUaA9gtWni3RbxZJ9U5LpJ-jsQ5YG3xX5nudMjG',\n    'AddUoLv5JTnaAb5F2sxspDib4pni6Npi2ahl5NB0jXZMTqODYwujzQc4dGwywjbql5XBZN_-vFQNgN3X',\n    'AfMTdM4POMezgiXfKDh3HCjxr5ztnb1N8AC60fHc23GdDCFq6DuIFhgwKG4W2-PsH9Lm3DqcuBGSIO52',\n    'AT9nuYQxHQVOx-HSovm8DAAi3IWig_NlDrHibluNefWCzToCfar4G7DVp79FQLhVqqrdh9Ekk3KDcZoT',\n    'AUzzFVKF6GZQDgNZH8JEUizm9sMhd-57lsAXyU6u4aFuTxU33OiutNq58_s1io0kd7epP5W6ASgcF-nF',\n    'AVAqdF32y5UFhSWdjs7l67vcOuoQNk1KKXL5v49h14CZpW4QN7pJQDQyEXRbUBO4yylXXya9nu1LRn9Q',\n    'AYOzl27R846B-NlpnYdfBveJ78MS5-CqTCS-kS4t2cTUwRUDkb4XsAyTLbwla1FWNdN7815pLLQOl5VJ',\n    'AaLE7VZ5LC8sxudigS7Ekjfezc0MfHyzVW0n3AhZAJdfnim546ZwwY4iqK980R1ghPwh0lPoLyKddhS_',\n    'AdtSQhJ6ffDtKJUwFl_ibaLaZliNOn-7E10cAVWC0MCEE2b9ptVe3bqj_M2hSLA6DTN5hPPqowKEGHxJ',\n    'AQUSF3r4WLcs0AtHj1KxHdEEtJzQ3UdDmQ3MabfGLYcB4Chi8vgXJDL6dhxwQgtslpbgXX2A3RDMHV_z',\n    'ASBI4ZfWKMssNADQJn-i3HMjph-s_sh7TlRQ8QJSz5TuoKhYGQRtsjXAN8bpantK0Eyd8SF7zniRcMPo',\n    'ASIXJkiQIe-qp3P9iuC36a0xdjm57cP6nYnT3fgTxU8zALI2fLW9KwU6ZoP1oE9E7bzmG_dZOEZmEMja',\n    'AVb8SEdeAJbnLi-QmoaBiapiRr7FbrGZksICDQgrDtCdQfSvXtmuFH0VqlzdS4sRj6R2qmNhrjJj7IzA',\n    'AXvrPG7sDG6Zvt2o3ZnaXRK4m6Nie-KPDrChxf2_a30zFFs6eJwQ-BJgFrATt-IE9kvR5jjj757NgKSC',\n    'AafaqFH6ta0PFlvqt02vd08h_gApCvhSt07by8A1rBga83TyFty8iVRVv-BiOEWO-8AtwyOQaNBiLMES',\n    'AaqFeKtndmKfGYPQxXkV1ZErQylYG0OJ3MapCrQBfBojhG9heTdKKXXLMoMj7SW3ImZhNWVQ82zp2QCF',\n    'AcecQRTPYDrLRKbub07lSrii9oCxy_gRf4AN3DBYP1qXkT7vNq_ljT_tw2FQDTtcIfOc85h4wKtfwOzn',\n    'AcqlbM3LatHfLUfAqshlfyg33bmVs76nZl8cMQBbstVqyF2fDaiEz7qhcFZSMhA3pepiZpIiYXjW0d_F',\n    'AcvRLo7nXCDN0fkkFDP0iocM2bSQ2ZALUxfUllf-fG55OeQjgOjkDnmjunrwZiiOsfzbSNlRQnqC8VK0',\n    'Af5KN34nRKGpeuf-NXHG-VApLYlIxYO8Oaiid4CZVv6LIu7n4u-SWt04ChxQNn6jDZNH76kNRLXspEwS',\n    'AQTB_zZaQzo1yd1NYCgFFox9wV7_V_BNfW2gDhcvRWpEMypkh5RCDU8z82wwkgni0d09XYJPIO6BM_GQ',\n    'ARbuhqx-MQmTt3P2BBa3CEPakK2GupfPZuqAahytrA20seYZqlQ_bM4QHssuXkWkH0xCt0grj4QmJ6zC',\n    'ATKIVzgAqAehDQPdPR1DAQsj-_PldhwMrxXCJCicmvthg2f4lm0df0nALpg4dEZT57QO21fLmfpln0Wj',\n    'AVnVnDe3ACy2bgUFhKHBPbp_-fQwoe5qrgfcURR-UI3iOshoaGvNwUqxkx4SU6QR6eUt8fRCxR0U2ylp',\n    'AVwOriXt7qS3KYOGRhP3JAOLbSM43pfk61ZVORvZTyhmQ-mvRW-zXWMS2AWUokQ14s1UQ29jpfiIumJU',\n    'AX09zAGVFtWwrm5_JZUFfh_VKOcx953llczSMPGYsPFbFzk1QoCgeRHVnwXhR0AN718VDiJJnos2-dKm',\n    'AXadcB5XetUTL34QyQlIiRK_UtDm4cn9_ShNmMw8FhBIh6rZQxtiQ9K8oqHsk9PQXkLQtaOzgkahWRi4',\n    'AYRs82wfBGrz_kctFWYHBCnZd4Eof_ZLNzAeb-m7M0s4OHaD-go6vm7rpmH_hLOdMYc3DiJ80v5TPSgJ',\n    'AacYo2k113JWY4e066cKchwdJLmyIcnYyowIloKB6o7DHdldIhH6N-pqDr7EMshGQyHrulbVbmAYmgJc',\n    'AbJfQBbMXrRGZZSGyEqvHdRxtpr5bc5GHojFP2WWcObXlYU5zQunRwQUJ63PFMfXIv7stZDQFH1-yfJp',\n    'AcCj4SalkPbqb47qQc5yJ1weNTvmbiea0lzR-3EDvXDZIyMsHcIpdB5BElpyrf_lAqDKOQSynZradhxY',\n    'Ae6Vx3mw2UPZEf7QczT7tg0uUxLauuKtka_myxmlu6ShkZrdj4NBGHAvDYdaMYPXLnSxzfXmaeGkVN54',\n    'AQPe41YXAOtjyC5dSdPbIt0gxNU8ptIDxJyb09A1BDIEeVovW_rZs-m2TehzWYAlnv_kmWgTn5VBslpL',\n    'ASOCm7KsBwt5LUae_eeq6k1lv-ac0rcrSh3Gwk0dfEZ0_Sha3FdEDFXq0zAjXVLVBGUJGAS4KJIba165',\n    'ASVO3qMzYivRm-QVp0B4jkB4DiiFp7kAG7s8FFYrp4KS3NNl1WQlezd_XsEE_4dXaftMYdF4KMdvh7WT',\n    'ATCn6Ird1RIzRDVOLbUmGI5AUavRrK0XnnOmYhdghgFdhKMkZ6Zvr4C73_UH5xp5F1jCcBX9a4fiHbDf',\n    'ATSJJDJxr9LpuVNkxYbXGvteFXCDD1tmPMDfKJ5sefBSIguK4c6dn4WfK6oCYnvbj1sVQNtuXVDaWDi9',\n    'AUrnJiuXzmouRq2NZCcXZoDQYpP-gO4HwNiwgu7QCmlmWgx3bAY1qEI8ou343m943Ylbfmwn_5Ttye4D',\n    'AUwcswMqaswx06CvK70TO4WUtE2Ar4DRXm-_WypzdIlVNUXotXB5fhQtlc-MftdF0GOwkDCbDHQsWl9D',\n    'AXDJmCbAxM8PXTV5EFph8mlO6TzPnbcmQ5gNeWvCL6gbaX2qKKmXqfDC6EEppPSHq7wDSip6UvbT9eZA',\n    'AXGOUolOr-cZ-NRP1lo5q9oolK2j4JBSAQeqYCvnuRPN-LKHIUemaEGtyXWbrMsSt6Ur-ixbO6oRZN3C',\n    'AYD7u5dAmXH8EcBmhuWEs15anelQVxDZNhjYT2WnaZWksgB8vsnbCSmMVnyYo06IUUD9xF6LKJriPew7',\n    'Aa5GsKmJC0UkW4un8T_6lvdXsb1fUgkfVi84AesLRWAmO_3MA7503teyZ_Uzf6xUixuyUuTkpfS5LftD',\n    'AciW0Q7w0Ok2Ri_dvGTwJKsRcb5dAOHFJZfHf_kMC_PnP_7KnLj-OdwRPLxD7M25CRvXgp5nNJA3C2jH',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'ART7rYn1IyUVDyGzxwiQSruiFD5OvkD6lkfpv3aX8UdMdmtVQWIUfkiAe_wwRepxtpJzWebA1dQYQpxE',\n    'AS-9YzIwIgM7pFVJwG83_0cmtz-p6ErqV0diV8BDctjfX4mj-UUVi8hRwfb5pTuRi7GobwyUExMP5IYt',\n    'AS3XJS9qJqzSoJ80MhsYv0FYMI-Tt2HtAJawgorL9yKBpjeRMaao5YtctUMlTH2i9pZ3x0gJbP9ybBEy',\n    'ASG2hdCw4rCGvBmIjUIrZpBkDuBnuiaEryLrd8KBROyg-7FGdgcFeQ4eOVRxwIJCDZT-h2v8oqAeStxV',\n    'AU8l__XI_fM9mqndO3EV43pfH2NvPawYNdotjsAqksFa2EnXfn3Q3ngwAIi5-Dx03TKAyliifkTfKYTU',\n    'AUe6fpHCdjTKK_sxP7apE-6Qot1BV6xnDGg2iPQXJzMpbrQzbWebryYPkF5eBRxUYWRGwaEc3q3GpLbS',\n    'AWCNxJ1zPs-NqO0AS6tBiGbIbHfy12-uVfhmtibM51Jv2qXJx08RqfBfWQ9oJkUaXON16zXFUfpXEgFz',\n    'AWTCyz8bsjCppOZ4znVuzCXiq0pvGZeNWhlL-izK02ArHOlBoLVq97AtNDLhA3jQWcpuNRcab7dEB7lo',\n    'AXZQrZVm8c3MGvovD4cNKiwBjIMMKAlhbP-wWcj67N39xDe-2ZdEdAPO7nV1bAcLM4v8iNUp0N_Mcphk',\n    'AYmAf1wW0BWJMwUM_3lygY2_9wJeNok7DcguZ5VQZSWrk2DdnyMqBKKH_sh8T_DYJ10Jv1FTIzcBoRmV',\n    'AZ10uBSCpZr5Stazc2Qp4kamQ7e5j1uvYugUfyqjn3_E0mPiQn7IZbfJ_5PHVQoNRwokZMCSSxEVk5gv',\n    'AZbL__Y_-mRd5WEZYRHkxpw4PDaVGapobKAwboA1syWwSr9VdPTHos6FEWaGJvajHiJG72ZyVzNeslIO',\n    'Aajr1vTTrL58YvDThPIsdrNP4jl_d2KahfheyZFUb6bs8Kbx3WoZCn0b5u_TnLHcOiymePb7OcYbIRvn',\n    'Ab3Kury5vH4Nd2yDJ44vRvmuJhrCSj00bXcZ1L2MVrJ1XMjhQFDIgSFADUdytto901kBDIB_q-9kICcA',\n    'AbB_czT7AhCglLGQDWtB6BNcW2IIhmhHaHGH89qJWNNjJHzYxIk6z5cQN3Os8nknVBXw2bdNB_m6wSxs',\n    'AeJImnS4UyTQcDktg0Nr5RDUHEj5paDkjR35_FpWY2BANcQWwcUDTMTdcHz_6MCETc5EqLHSglfTrXha',\n    'Af-FvbZhoCMcq70C9YwduBsM2FkmNlLnwIz4O9o_4NhQdxYwlKiRa4kUgXBJafXUdfija4n-wmmISFkW',\n    'AfMBvZqDv9OoaMe8pn35-xOwufIhaHRkr-FgC64gh_ZanWKd3z3t__siBDz94SYWVAXfh1x5Nv03AfzZ',\n    'AQXnKIXPG9SXvMmfD9G7yFtN3dCJjSKE8BfKaafZlzgPxGYkpb0yZhxvUbh5EYk86C7KXxPURskN12OL',\n    'ARMyhNwHKlGvZneOKlDPtzTtMKg785buN1F8ABciuHl7HfSFYxz75e4bHhjQBzZgG7_5vjzNEGl6zMG5',\n    'ASZNICUjJUEjOf5gXhSp9d99nd8OWF1qabSswy0xD9vOTUxeqtfdlDK102NWoG3OfgZE7DAQt97q2OKN',\n    'AT-6KyRrMjWr8Ffr8yR10WOCVVxiMpM8Z2KL2J1YGkCKHdDCFu7c7dVtsajXH_hEu1gd0Qb_am8-crjF',\n    'ATZjgdCbWKKq4wIsbgt_KUuWcBzRNTuoTz_JVKiXFNVkxBCNC-CYqvH4aNr7D-7uubhUtqiVsA_Etz0X',\n    'AW3Xj48NN_K6zsH8JpAnNXlora23DOI1DhWiLFTWI3tVH6BN0PZD298BW2aizd-Z3CLISV53NynfoWkJ',\n    'AWeM9QIuoOntrqxWoZuJHErA4790NA3MpoG5MxSFvsM9U-fVys3H_KzwLnJfL7P5jkdrVThaudOylTaU',\n    'AWVZGksyYh40TiLsK3w_ertVJEbOJOdpyfjProgzy9-lbdtXQyHCh_G8-9iKG2DfHobdEtBPZKagnISS',\n    'AXpt3KjQyq_WAuuHhBOJNbgz1-hJ6ViIWsujd0uQ-50tYJDB2YkcCDOP8AzsdfPZOLWWBV67TR-ZD9wO',\n    'AYFD2Z4N3HgIqrNq78qpZRqL7JLBqaxCYQYoPqEiQC74gKn8KKFnYZ9fdzwLSC7oIGoGfVa-0KGiKKpp',\n    'AZGnlh3ha2__TizDxGMvhmxqxXAsft0QoIFjU54D_pHJyABwEF3PR69Ol2hlGQwDZZTb9TdZ33FXi9kb',\n    'AZy8eT5YydIKi92O9Y5V0RPuNM_uBIdAq_Keg_rIO7vlsNF9twjOqv2sQVoUnpiJ6qyb10l6SSeNoL1z',\n    'AaoAGjTmC0H9GdbzY_qY7-LHEpXMNeO4m4gaxnGBd_2MnRCmH7u9PwYNrvUc_MPkng9MnZjoeRfuGPhe',\n    'Aat6dgzz-AhMNM-t6f9ZLMr57DgxiehUDOsBWetFn6oSESrYdd72Q2b-SKzea3x4aHwEnbB6IpNmvhXb',\n    'Aaz-u5JdoYyYd2scU6ITuhwKJXfBDcyAS5TWhmC5Pbs0kmvef07CfLC-arEIYXLivOI2G4zexNkz2fEc',\n    'AbIdboZdEpyrKU4XclA-dkyGt0PlgaS1-Ffvr3xXvHbYSsYL1sGtus2vv_IYEIKfB5VeFW7s5TccmCqX',\n    'AbN-0XBdWV1G0FEnQqVyXUklEHjiMDUIYkyk6FLO6csgUjXHtP9neRBnFaPTYM19NiTkxZxzOa-lwqYS',\n    'AciGZEIKay92OieK_taeAIxk4gmkvZYD4V-5V_inGr5N8o4nsissrMfNKp5KF3BOWDDXE6uNmlm8poNM',\n    'AdJvUhBNhkJ6wulv88yXQrzbU4ZiMocyZbTsv-9HW0ZDNIZc9YXP-IwNvl7_',\n    'AdSP52hoO2-Uq_mBCuOBGgzOzerKx_NBWqcay8Iye3F7DZqSo2xTMsS_hc-sBxBq9ZeZnDJqEtAqU6Mo',\n    'AeibaoRpUM9JPbRGAuyNa04EZWfVHI-0EuLLNMJfpU4oA8GduQ8y20G_B1LEI_6IvASe3sCqJGxEY6Jd',\n    'AekF1vsyH-KcE0Dit28DhGv6o9KYpcTpGUrC1xmHuUG7x_HimZMMTpH3Hkiam0OXMznjo28JwwBvc2bv',\n    'AeWuuHIpOmF5j55eDYdCoW9-rOgh9qGvlcy0aQpxXq27n3a55TL0j2XnWVDCquBjr14x4Fioqp4se4Pc',\n    'Af7UiccMdL4x5RZZ0jGTYcaUnsgJS2ghv-iUYbUlXIn0Rxi1Hom2F-Clelfj9yoGczFxUoWcjX81vZew',\n    'AfCxhs8W3WGn7Rv0S92CVPHXi7TWSCnRZ1U__AQhOHuw52NjJYFSGTodM5JFjZnVo01eJj8WuDAmM-qC',\n    'AQozhXI5S4IvGDPmDJrJKcZi4c8gNDw7Gtn_cdXn78ejc4luxXJ0zCwEjWbjRuY62nfKWhc87LukhvAv',\n    'ARbZ7RQg4eBkkdQZBwVIKQxFVCuIeOrv0sRZbMKRxNZVkx_sMbklmaAAbBnwWJy9LQs5xbgh7YfAsH18',\n    'ARq9LAELs6Rd9zwF_cp6hoBHrxMA8OsBwvBYCsdifrZq-LU9P9VwPpUby7yqZIgfsrWHoJhWIuK9IPFp',\n    'ASqTSIOiYASN3KYHsxmk6uO4O_cmAjk-Shl-Wx1ixHAFGjrDnv6_P_eMCshr9LdwNL5g95ly1cHqVy4z',\n    'ASwoeikdyflPIKFAC3U34ewfFVRE5-_p6qc1TTQG9g_sHNs3RP5Sq3pE_e7V2p0VTi-nJQuIA5ApP1XH',\n    'AUA_R6qBmczCAhGF-AGP0WbqxunumqEc6FZ8eaD1fbt2jjVmZaiu2QNeKEyC6uXx_PnbXaCOGyMocjuI',\n    'AazPaZlGBPP6zyXwC7NgdRNNrfEgD0fNxGpohhfADfPDqHxDjRuO1vwqjEE4aKJrPJ9DaKkfuCD15IWE',\n    'AQyNR1vnQtxPvo1wU7wS9OXY7svT_5KlFcgqkBgmEjPgy3vaZBjgReQCV0RD3n4iBh613SJeUqEC37XO',\n    'AWum_K9KRwhlt4CGpNTHt5J-jhq4gXQdJ8jAdB3DdhsCc8SlKabUbl26C4UHsg--vKrMiCOxBb4ZixuF',\n    'AYLmn4GCg4s8ZKrrU_5fzzwz72vDDJby44c9KbE9QYx1l4zrnFTncWPDx2AGsS65Bqo29D8rCdSBNqt9',\n    'AROO3lVGvW116zkoEZ6KRQMg7iAhZ5ZeQ0jyxIYSJHHKflx04MCOdt-wPgJqRONhfHazb3cPYv244uf8',\n    'ASncnAA2XqvFN3lpms6oapYFg_dh2cne5MzD5VCk3R_aL9zQIGdi6Nkjzfc0CDZy8q1BeqOWBqnaNFsA',\n    'AQedjY9kGMi1lhC2AEl8qbYn_rTY9iS1Z99ijIH-T3RIBzkHcJ1_OEwFJkRjL1j-K3Yt9ezPuEvyjIBK',\n    'AZZBF8oL40dzcyCcLIEi50pULlY_GyAc3nr6o5Qq87ImOU1-ZC1IoYqaJeWNT-kTt99KgtZrUFK9u-Bs',\n    'AcRXfjC-a3HDICh_w7Yo9NEbLHW-TZThdotn2ztNlPSVUwh1rF_z6NS_iUOO1Ffl1cs56Lez9iAzzLuz',\n    'AWlXddGW6zfufuNdkdEX2evRGOPItXHhGJleiDgJh7u2PjAFu9Ykv1mzdSB1emAdcfBf2WySEgamKr5q',\n    'AWVPY_vj2qsiDlkk8xUifR1AGWmWPa-Kff7sc4PSNeZzSfoZqeF44xX7AyqpK9MXXNhHglzwX3okwJeD',\n    'AXYNQHZFo1_JJkOeYsh7k3ii3OcIVDyreTAuJ7ZS0-2b5p_XWqHJ4KVGygYyn1_DGDKB0TQxnisrzAWv',\n    'AYlEZzFdz7zw245KfQKnjjoaKlIIkmdOD8Xi7PRIx-oDcK5DKrWu4ex5zhNTioYVCAwgy5E5UZ8KWRKg',\n    'AY2y4DTvaD_eftECds3SuKHQG8CJfmmP9zl7BrblUCl7h1svpwFBASQBNNQwDb-7EYW0QT1hFZFQUBIl',\n    'ATJHnb_Iny4VkMc5ybUoeDS7x2CIMnFQYFTtOHfslNzYtdRJCGGrZTVM-mNdG97GU78F_UmpsKzCCIgU',\n    'AeVgr6n0UlS9_b4u45Nlkd2mpKc6VUe9wjw2oKRrsXzIXZJ4K1q1CUaXvrTgcB5j0jb-E3fEwDD6DOEd',\n    'AaVd3541KiAbjObfq8486KohVuhP6y_ZJWc0zY1ysMoOSeIx3OF5amcgw-BvxcMD0TNyayCQ9Agri_f_',\n    'AUB2EIv-ZUzTepk_K4_yf6EnL3b8vX1LG1a4DaSZANNFiQ8QqPUIKej8_thsKURH8G8nbwrsrJB13bgz',\n    'AUO4pKr0n9zirKGKfTQlOgQ8EfIDOjT24AUmKK1lGwaruTPyv3F4FbIBwzt3jqm7_m19fnu6AB5d5PNz',\n    'AcgZye2RdQr5aPKy83TuiedDJEYoUxQuEA8ot8ELuhJ9ya0U5GSXRsqw0zqrAgPbfSi3MWvaZMdm4mG2'\n];\n\nexport const SANDBOX_ORDER_VALIDATION_WHITELIST = [\n    'AcFUr3vhIePYLOXXuZzdvFL5th99W0Uygya9lqfjN3XCx-W2dGlr6A9mqiIZAHAMng1g0_haL2LitLAl',\n    'ASmWKJfGIEy4BmvwWA3PpAX-uOdz0EYCQ89Y-oLww8LgaqqHtXEcB4dfxr88kmcp3no-efNznSFDcVjg',\n    'AY-UBQDZ53U9-lrZ-7RGWIn-CLhVJEaZI9HsWcqqApUx_CET1nlkkNow0HpLb-y0kTUuyIA3uwbME6Dd'\n];\n\n\nexport const FIREBASE_SCRIPTS = {\n    APP:      'https://www.paypalobjects.com/checkout/js/lib/firebase-app.js',\n    AUTH:     'https://www.paypalobjects.com/checkout/js/lib/firebase-auth.js',\n    DATABASE: 'https://www.paypalobjects.com/checkout/js/lib/firebase-database.js'\n};\n\nexport const ENABLE_PAYMENT_API = false;\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string\n|};\n\nexport function setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nimport { DATA_ATTRIBUTES } from '../constants';\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute(`${ DATA_ATTRIBUTES.NONCE }`) || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const BUYER_INTENT = {\n    PAY:                                 'pay',\n    PAY_WITH_DIFFERENT_ACCOUNT:          'pay_with_different_account',\n    PAY_WITH_DIFFERENT_FUNDING_SHIPPING: 'pay_with_different_funding_shipping'\n};\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n    CONTENT_TYPE:  'content-type',\n\n    ACCESS_TOKEN:  'x-paypal-internal-euat',\n    CSRF_TOKEN:    'x-csrf-jwt',\n    SOURCE:        'x-source',\n    REQUESTED_BY:  'x-requested-by',\n\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id',\n    PAYPAL_DEBUG_ID:        'paypal-debug-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id',\n    INSTRUMENT_ID:     'data-instrument-id',\n    MENU:              'data-menu',\n    NONCE:             'data-nonce'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const DOM_EVENT = {\n    MOUSEDOWN: 'mousedown',\n    HOVER:     'hover'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    WALLET_SESSION_ID: ('wallet_session_id' : 'wallet_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token'),\n    PAYMENT_ID:        ('Pay-ID' : 'Pay-ID')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button'),\n    WALLET:   ('smart_wallet' : 'smart_wallet')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n\n    WALLET_LOAD:              ('process_wallet_load' : 'process_wallet_load'),\n\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CREATE_PAYMENT:           ('process_create_payment' : 'process_create_payment'),\n\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_APPROVE:         ('process_checkout_approve' : 'process_checkout_approve'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel'),\n\n    NATIVE_DETECT_APP_SWITCH: ('native_detect_app_switch' : 'native_detect_app_switch'),\n    NATIVE_DETECT_WEB_SWITCH: ('native_detect_web_switch' : 'native_detect_web_switch'),\n    NATIVE_APP_SWITCH_ACK:    ('native_app_switch_ack' : 'native_app_switch_ack'),\n    NATIVE_ERROR:             ('native_app_switch_ack' : 'native_app_switch_ack'),\n\n    HONEY_IDENTIFY:           ('honey_identify')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_CUSTOM_KEY = {\n    HONEY_DEVICE_ID:       ('honey_device_id' : 'honey_device_id'),\n    HONEY_SESSION_ID:      ('honey_session_id' : 'honey_session_id'),\n    INTEGRATION_ISSUE:     ('integration_issue' : 'integration_issue'),\n    INTEGRATION_WHITELIST: ('whitelist' : 'whitelist')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n\nexport const FTPI_WALLET_KEY = {\n    WALLET_SESSION_UID: ('wallet_session_id' : 'wallet_session_id'),\n    WALLET_VERSION:     ('wallet_version' : 'wallet_version')\n};\n\nexport const USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { GRAPHQL_URI } from '../config';\nimport { HEADERS, SMART_PAYMENT_BUTTONS } from '../constants';\n\ntype RESTAPIParams<D> = {|\n    accessToken : string,\n    method? : string,\n    url : string,\n    data? : D,\n    headers? : { [string] : string }\n|};\n\nexport function callRestAPI<D, T>({ accessToken, method, url, data, headers } : RESTAPIParams<D>) : ZalgoPromise<T> {\n\n    if (!accessToken) {\n        throw new Error(`No access token passed to ${ url }`);\n    }\n\n    const requestHeaders = {\n        [ HEADERS.AUTHORIZATION ]: `Bearer ${ accessToken }`,\n        [ HEADERS.CONTENT_TYPE ]:  `application/json`,\n        ...headers\n    };\n\n    return request({\n        method,\n        url,\n        headers: requestHeaders,\n        json:    data\n    }).then(({ status, body, headers: responseHeaders }) : T => {\n        if (status >= 300) {\n            throw new Error(`${ url } returned status: ${ status } (Corr ID: ${ responseHeaders[HEADERS.PAYPAL_DEBUG_ID] })`);\n        }\n\n        return body;\n    });\n}\n\ntype APIRequest = {|\n    accessToken? : ?string,\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ accessToken, url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    const reqHeaders : { [string] : string } = {\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    if (accessToken) {\n        reqHeaders[HEADERS.ACCESS_TOKEN] = accessToken;\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body, headers }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack } (Corr ID: ${ headers[HEADERS.PAYPAL_DEBUG_ID] })`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : {| query : string, variables? : { [string] : mixed }, headers? : { [string] : string } |}) : ZalgoPromise<T> {\n    return request({\n        url:     GRAPHQL_URI,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            'x-app-name': SMART_PAYMENT_BUTTONS,\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ GRAPHQL_URI } returned status ${ status }`);\n        }\n\n        return body.data;\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { inlineMemoize, base64encode, request, noop } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { HEADERS } from '../constants';\n\nimport { callGraphQL } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nexport function getFirebaseSessionToken(sessionUID : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query GetFireBaseSessionToken($sessionUID: String!) {\n                firebase {\n                    auth(sessionUID: $sessionUID) {\n                        sessionToken\n                    }\n                }\n            }\n        `,\n        variables: { sessionUID }\n    }).then(res => {\n        return res.firebase.auth.sessionToken;\n    });\n}\n\nexport function upgradeFacilitatorAccessToken(facilitatorAccessToken : string, { buyerAccessToken, orderID } : {| buyerAccessToken : string, orderID : string |}) : ZalgoPromise<void> {\n    return callGraphQL({\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        },\n        query: `\n            mutation UpgradeFacilitatorAccessToken(\n                $orderID: String!\n                $buyerAccessToken: String!\n                $facilitatorAccessToken: String!\n            ) {\n                upgradeLowScopeAccessToken(\n                    token: $orderID\n                    buyerAccessToken: $buyerAccessToken\n                    merchantLSAT: $facilitatorAccessToken\n                )\n            }\n        `,\n        variables: { facilitatorAccessToken, buyerAccessToken, orderID }\n    }).then(noop);\n}\n\nexport function exchangeAccessTokenForIDToken(buyerAccessToken : string) : ZalgoPromise<string> {\n    return callGraphQL({\n        query: `\n            query ExchangeIDToken(\n                $buyerAccessToken: String!\n            ) {\n                identity(\n                    accessToken: $buyerAccessToken\n                ) {\n                    idToken\n                }\n            }\n        `,\n        variables: { buyerAccessToken }\n    }).then(({ identity }) => {\n        return identity.idToken;\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop, memoize } from 'belter/src';\n\nimport { SMART_API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL, callRestAPI } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{|\n            amount : {|\n                currency_code : string,\n                value : string\n            |},\n            payee? : {|\n                merchant_id? : string\n            |}\n        |}>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\ntype OrderAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport function createOrderID(order : OrderCreateRequest, { facilitatorAccessToken, partnerAttributionID } : OrderAPIOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ ORDERS_API_URL }`,\n        data:        order,\n        headers:     {\n            [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID || ''\n        }\n    }).then((body) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }`\n        });\n}\n\nexport function captureOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/capture`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/capture`\n        });\n}\n\nexport function authorizeOrder(orderID : string, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `post`,\n            url:         `${ ORDERS_API_URL }/${ orderID }/authorize`,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/authorize`\n        });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchOrder(orderID : string, data : PatchData, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI = false } : OrderAPIOptions) : ZalgoPromise<OrderResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return forceRestAPI\n        ? callRestAPI({\n            accessToken: facilitatorAccessToken,\n            method:      `patch`,\n            url:         `${ ORDERS_API_URL }/${ orderID }`,\n            data:        patchData,\n            headers:     {\n                [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n            }\n        })\n        : callSmartAPI({\n            accessToken: buyerAccessToken,\n            method:      'post',\n            url:         `${ SMART_API_URI.ORDER }/${ orderID }/patch`,\n            json:        { data: patchData }\n        });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ SMART_API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean,\n    partnerAttributionID : ?string,\n    buttonSessionID : string\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID } : ValidatePaymentMethodOptions) : ZalgoPromise<{| status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } |}> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [ HEADERS.AUTHORIZATION ]:          `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : {| orderID : string, clientAccessToken : string |}) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\nexport function deleteVault({ paymentMethodID, clientAccessToken } : {| paymentMethodID : string, clientAccessToken : string |}) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation DeleteVault(\n                $paymentMethodID : String!\n            ) {\n                deleteVault(\n                    paymentMethodID: $paymentMethodID\n                )\n            }\n        `,\n        variables: {\n            paymentMethodID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n\ntype ApproveOrderOptions = {|\n    orderID : string,\n    planID? : string,\n    instrumentID? : string,\n    buyerAccessToken : string\n|};\n\ntype ApproveData = {|\n    payerID : string\n|};\n\nexport function approveOrder({ orderID, planID, instrumentID, buyerAccessToken } : ApproveOrderOptions) : ZalgoPromise<ApproveData> {\n    return callGraphQL({\n        query: `\n            mutation ApproveOrder(\n                $orderID : String!\n                $planID : String\n                $instrumentID : String\n            ) {\n                approvePayment(\n                    token: $orderID\n                    selectedPlanId: $planID\n                    selectedInstrumentId : $instrumentID\n                ) {\n                    buyer {\n                        userId\n                    }\n                }\n            }\n        `,\n        variables: { orderID, planID, instrumentID },\n        headers:   {\n            [ HEADERS.ACCESS_TOKEN ]: buyerAccessToken\n        }\n    }).then(({ approvePayment }) => {\n        return {\n            payerID: approvePayment.buyer.userId\n        };\n    });\n}\n\ntype SupplementalOrderInfo = {|\n    checkoutSession : {|\n        cart : {|\n            intent : string,\n            amounts? : {|\n                total : {|\n                    currencyCode : string\n                |}\n            |},\n            shippingAddress? : {|\n                isFullAddress? : boolean\n            |}\n        |},\n        flags : {|\n            isShippingAddressRequired? : boolean\n        |}\n    |}\n|};\n\nexport const getSupplementalOrderInfo = memoize((orderID : string) : ZalgoPromise<SupplementalOrderInfo> => {\n    return callGraphQL({\n        query: `\n            query GetCheckoutDetails($orderID: String!) {\n                checkoutSession(token: $orderID) {\n                    cart {\n                        intent\n                        amounts {\n                            total {\n                                currencyCode\n                            }\n                        }\n                        shippingAddress {\n                            isFullAddress\n                        }\n                    }\n                    flags {\n                        hideShipping\n                        isShippingAddressRequired\n                        isChangeShippingAddressAllowed\n                    }\n                }\n            }\n        `,\n        variables: { orderID }\n    });\n});\n","/* @flow */\n/* eslint unicorn/prefer-add-event-listener: off, max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, noop, memoize } from 'belter/src';\n\nimport { FIREBASE_SCRIPTS } from '../config';\nimport { loadScript } from '../lib/util';\n\nimport { getFirebaseSessionToken } from './auth';\n\nconst MESSAGE_TYPE = {\n    REQUEST:  ('request' : 'request'),\n    RESPONSE: ('response' : 'response')\n};\n\nconst RESPONSE_STATUS = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\ntype RequestMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.REQUEST,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_data : T\n|};\n\ntype ResponseMessage<T> = {|\n    source_app : string,\n    source_app_version : string,\n    target_app : string,\n    message_type : typeof MESSAGE_TYPE.RESPONSE,\n    message_uid : string,\n    request_uid : string,\n    session_uid? : string,\n    message_name : string,\n    message_status : string,\n    message_data : T\n|};\n\ntype MessageSocketDriver = {|\n    send : (string) => void,\n    close : () => void,\n    onMessage : ((string) => void) => void,\n    onError : ((mixed) => void) => void,\n    onOpen : (() => void) => void,\n    onClose : ((Error) => void) => void,\n    isOpen : () => boolean\n|};\n\nexport type MessageSocketOptions = {|\n    sessionUID : string,\n    driver : () => MessageSocketDriver,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string,\n    retry? : boolean\n|};\n\nexport type MessageSocket = {|\n    on : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        handler : ({| data : T |}) => ZalgoPromise<R> | R, // eslint-disable-line no-undef\n        opts? : {|\n            requireSessionUID? : boolean\n        |}\n    ) => {|\n        cancel : () => void\n    |},\n    send : <T, R>( // eslint-disable-line no-undef\n        name : string,\n        data : T, // eslint-disable-line no-undef\n        opts? : {|\n            timeout? : number,\n            requireSessionUID? : boolean\n        |}\n    ) => ZalgoPromise<R>, // eslint-disable-line no-undef\n    onError : ((mixed) => void) => void,\n    reconnect : () => ZalgoPromise<void>,\n    close : () => void\n|};\n\nexport function messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp, retry = true } : MessageSocketOptions) : MessageSocket {\n\n    const receivedMessages = {};\n    const responseListeners = {};\n    const activeRequests = [];\n\n    let requestListeners = {};\n    let errorListeners = [];\n\n    const sendMessage = (socket, data) => {\n        const messageUID = uniqueID();\n        receivedMessages[messageUID] = true;\n\n        const message = {\n            session_uid:        sessionUID,\n            message_uid:        messageUID,\n            source_app:         sourceApp,\n            source_app_version: sourceAppVersion,\n            target_app:         targetApp,\n            ...data\n        };\n\n        socket.send(JSON.stringify(message));\n    };\n\n    const sendResponse = (socket, { messageName, responseStatus, responseData, requestUID }) => {\n        if (!socket.isOpen()) {\n            return;\n        }\n        \n        return sendMessage(socket, {\n            request_uid:        requestUID,\n            message_name:       messageName,\n            message_status:     responseStatus,\n            message_type:       MESSAGE_TYPE.RESPONSE,\n            message_data:       responseData\n        });\n    };\n\n    const onRequest = (socket, { messageSessionUID, requestUID, messageName, messageData }) => {\n        const activeRequest = new ZalgoPromise();\n        activeRequests.push(activeRequest);\n\n        return ZalgoPromise.try(() => {\n            const requestListener = requestListeners[messageName];\n\n            if (!requestListener) {\n                throw new Error(`No listener found for name: ${ messageName }`);\n            }\n\n            const { handler, requireSessionUID } = requestListener;\n\n            if (requireSessionUID && messageSessionUID !== sessionUID) {\n                throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n            }\n\n            return handler({ data: messageData });\n        }).then(res => {\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.SUCCESS, responseData: res, messageName, requestUID  });\n        }, err => {\n            const res = { message: (err && err.message) ? err.message : 'Unknown error' };\n            sendResponse(socket, { responseStatus: RESPONSE_STATUS.ERROR, responseData: res, messageName, messageSessionUID, requestUID });\n        }).finally(() => {\n            activeRequest.resolve();\n            activeRequests.splice(activeRequests.indexOf(activeRequest), 1);\n        });\n    };\n\n    const onResponse = ({ messageName, requestUID, messageSessionUID, responseStatus, messageData }) => {\n        const { listenerPromise, requireSessionUID } = responseListeners[requestUID] || {};\n        \n        if (!listenerPromise) {\n            throw new Error(`Could not find response listener for ${ messageName } with id: ${ requestUID }`);\n        }\n\n        if (requireSessionUID && messageSessionUID !== sessionUID) {\n            throw new Error(`Incorrect sessionUID: ${ messageSessionUID || 'undefined' }`);\n        }\n        \n        delete responseListeners[requestUID];\n        \n        if (responseStatus === RESPONSE_STATUS.SUCCESS) {\n            listenerPromise.resolve({ data: messageData });\n        } else if (responseStatus === RESPONSE_STATUS.ERROR) {\n            listenerPromise.reject(new Error(messageData.message));\n        } else {\n            throw new Error(`Can not handle response status: ${ status || 'undefined' }`);\n        }\n    };\n\n    const onMessage = <T>(socket, rawData) => {\n        let parsedData : RequestMessage<T> | ResponseMessage<T>;\n\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (err) {\n            throw new Error(`Could not parse socket message: ${ rawData }`);\n        }\n\n        if (!parsedData) {\n            throw new Error(`No data passed from socket message`);\n        }\n    \n        let {\n            session_uid:    messageSessionUID,\n            request_uid:    requestUID,\n            message_uid:    messageUID,\n            message_name:   messageName,\n            message_type:   messageType,\n            message_data:   messageData,\n            message_status: responseStatus,\n            target_app:     messageTargetApp\n        } = parsedData;\n\n        requestUID = requestUID || parsedData.request_id;\n\n        if (messageUID && receivedMessages[messageUID]) {\n            return;\n        }\n\n        if (!messageUID || !requestUID || !messageName || !messageType || !messageTargetApp) {\n            throw new Error(`Incomplete message: ${ rawData }`);\n        }\n\n        receivedMessages[messageUID] = true;\n\n        if (messageType === MESSAGE_TYPE.REQUEST) {\n            return onRequest(socket, { messageSessionUID, requestUID, messageName, messageData });\n        } else if (messageType === MESSAGE_TYPE.RESPONSE) {\n            return onResponse({ messageName, requestUID, messageSessionUID, responseStatus, messageData });\n        \n        } else {\n            throw new Error(`Unhandleable message type: ${ messageType }`);\n        }\n    };\n\n    let closed = false;\n    let retryDelay;\n\n    const updateRetryDelay = () => {\n        if (retry) {\n            retryDelay = retryDelay ? (retryDelay * 2) : 1;\n        }\n    };\n\n    let socketPromise;\n    let retryPromise;\n\n    const init = () => {\n        socketPromise = ZalgoPromise.try(() => {\n            if (retryDelay) {\n                retryPromise = ZalgoPromise.delay(retryDelay);\n                return retryPromise;\n            }\n        }).then(() => {\n            retryPromise = null;\n            const instance = driver();\n\n            const connectionPromise = new ZalgoPromise((resolve, reject) => {\n                instance.onOpen(() => {\n                    closed = false;\n                    retryDelay = 0;\n                    resolve(instance);\n                });\n\n                instance.onClose(err => {\n                    closed = true;\n                    reject(err || new Error('socket closed'));\n                    if (retry) {\n                        updateRetryDelay();\n                        init();\n                    }\n                });\n        \n                instance.onError(err => {\n                    reject(err);\n\n                    for (const errorListener of errorListeners) {\n                        errorListener(err);\n                    }\n                });\n            });\n\n            instance.onMessage(rawMessage => {\n                return connectionPromise.then(socket => {\n                    return onMessage(socket, rawMessage);\n                });\n            });\n\n            return connectionPromise;\n        });\n    \n        socketPromise.catch(noop);\n    };\n\n    init();\n\n    const on = (name, handler, { requireSessionUID = true } = {}) => {\n        if (requestListeners[name]) {\n            throw new Error(`Listener already registered for name: ${ name }`);\n        }\n\n        requestListeners[name] = {\n            handler,\n            requireSessionUID\n        };\n\n        return {\n            cancel: () => {\n                delete requestListeners[name];\n            }\n        };\n    };\n\n    const send = <T, R>(messageName, messageData : T, { requireSessionUID = true, timeout = 0 } = {}) : ZalgoPromise<R> => {\n        return socketPromise.then(socket => {\n            const requestUID = uniqueID();\n\n            const listenerPromise = new ZalgoPromise();\n            responseListeners[requestUID] = {\n                listenerPromise,\n                requireSessionUID\n            };\n\n            sendMessage(socket, {\n                request_uid:  requestUID,\n                message_name: messageName,\n                message_type: MESSAGE_TYPE.REQUEST,\n                message_data: messageData\n            });\n\n            if (timeout) {\n                setTimeout(() => {\n                    listenerPromise.reject(new Error(`Timeoued out waiting for ${ messageName } response after ${ timeout }ms`));\n                }, timeout);\n            }\n\n            return listenerPromise;\n        });\n    };\n\n    const reconnect = () => {\n        return ZalgoPromise.try(() => {\n            if (!closed) {\n                return socketPromise;\n            }\n            \n            if (retryPromise) {\n                retryPromise.resolve();\n                return socketPromise;\n            }\n\n            retryDelay = 0;\n            return init();\n        });\n    };\n\n    const close = () => {\n        retry = false;\n\n        requestListeners = {};\n        errorListeners = [];\n\n        for (const requestUID of Object.keys(responseListeners)) {\n            const { listenerPromise } = responseListeners[requestUID];\n            listenerPromise.asyncReject(new Error(`Socket closed`));\n        }\n\n        ZalgoPromise.all(activeRequests).then(() => {\n            return socketPromise.then(\n                socket => socket.close(),\n                noop\n            );\n        });\n    };\n\n    const onError = (handler) => {\n        errorListeners.push(handler);\n    };\n        \n    return { on, send, onError, reconnect, close };\n}\n\ntype WebSocketOptions = {|\n    sessionUID : string,\n    url : string,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n \nexport function webSocket({ sessionUID, url, sourceApp, sourceAppVersion, targetApp } : WebSocketOptions) : MessageSocket {\n    const driver = () => {\n        const socket = new WebSocket(url);\n\n        return {\n            send: (data) => {\n                socket.send(data);\n            },\n            close: () => {\n                socket.close();\n            },\n            onMessage: (handler) => {\n                socket.onmessage = (event) => {\n                    const data = event.data;\n    \n                    if (typeof data !== 'string' || !data) {\n                        throw new TypeError(`Expected string data from web socket`);\n                    }\n    \n                    handler(data);\n                };\n            },\n            onError: (handler) => {\n                socket.onerror = () => {\n                    handler(new Error(`The socket encountered an error`));\n                };\n            },\n            onOpen: (handler) => {\n                socket.onopen = () => handler();\n            },\n            onClose: (handler) => {\n                socket.onclose = () => handler(new Error(`Websocket connection closed`));\n            },\n            isOpen: () => {\n                return socket.readyState === WebSocket.OPEN;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n\nexport type FirebaseConfig = {|\n    apiKey : string,\n    authDomain : string,\n    databaseURL : string,\n    projectId : string,\n    storageBucket : string,\n    messagingSenderId : string,\n    appId : string,\n    measurementId : string\n|};\n\nexport type FirebaseSocketOptions = {|\n    sessionUID : string,\n    config : FirebaseConfig,\n    sourceApp : string,\n    sourceAppVersion : string,\n    targetApp : string\n|};\n\ntype FirebaseSDK = {|\n    initializeApp : (FirebaseConfig) => void,\n    auth : () => {|\n        signInWithCustomToken : (string) => ZalgoPromise<void>\n    |},\n    database : {|\n        INTERNAL : {|\n            forceWebSockets : () => void\n        |},\n        () : {|\n            ref : (string) => {|\n                // eslint-disable-next-line no-undef\n                set : <T>(T) => void,\n                // eslint-disable-next-line no-undef\n                on : <T>('value', (T) => void, (Error) => void) => void\n            |},\n            goOnline : () => void,\n            goOffline : () => void\n        |}\n    |}\n|};\n            \nexport const loadFirebaseSDK = memoize((config : FirebaseConfig) : ZalgoPromise<FirebaseSDK> => {\n    return ZalgoPromise.try(() => {\n        if (!window.firebase || !window.firebase.auth || !window.firebase.database) {\n            return loadScript(FIREBASE_SCRIPTS.APP).then(() => {\n                return ZalgoPromise.all([\n                    loadScript(FIREBASE_SCRIPTS.AUTH),\n                    loadScript(FIREBASE_SCRIPTS.DATABASE)\n                ]);\n            });\n        }\n    }).then(() => {\n        const firebase = window.firebase;\n\n        if (!firebase) {\n            throw new Error(`Firebase failed to load`);\n        }\n\n        firebase.initializeApp(config);\n        return firebase;\n    });\n});\n        \nexport function firebaseSocket({ sessionUID, config, sourceApp, sourceAppVersion, targetApp } : FirebaseSocketOptions) : MessageSocket {\n    const driver = () => {\n        let open = false;\n        \n        const onMessageHandlers = [];\n        const onErrorHandlers = [];\n        const onCloseHandlers = [];\n        const onOpenHandlers = [];\n\n        const error = (err) => {\n            for (const handler of onErrorHandlers) {\n                handler(err);\n            }\n        };\n\n        const databasePromise = ZalgoPromise.hash({\n            firebase:     loadFirebaseSDK(config),\n            sessionToken: getFirebaseSessionToken(sessionUID)\n        }).then(({ firebase, sessionToken }) => {\n            return firebase.auth().signInWithCustomToken(sessionToken).then(() => {\n                const database = firebase.database();\n                firebase.database.INTERNAL.forceWebSockets();\n\n                open = true;\n    \n                for (const handler of onOpenHandlers) {\n                    handler();\n                }\n    \n                database.ref(`users/${ sessionUID }/messages`).on('value', (res) => {\n                    const messages = res.val() || {};\n                    for (const messageID of Object.keys(messages)) {\n                        const message = messages[messageID];\n                        for (const handler of onMessageHandlers) {\n                            handler(message);\n                        }\n                    }\n                }, err => {\n                    error(err);\n                });\n\n                database.goOnline();\n                return database;\n            });\n        });\n\n        databasePromise.catch(noop);\n\n        return {\n            send: (data) => {\n                databasePromise.then(database => {\n                    return database.ref(`users/${ sessionUID }/messages/${ uniqueID() }`).set(data);\n                }).catch(error);\n            },\n            close: () => {\n                databasePromise.then(database => {\n                    database.goOffline();\n                });\n            },\n            onMessage: (handler) => {\n                onMessageHandlers.push(handler);\n            },\n            onError: (handler) => {\n                onErrorHandlers.push(handler);\n            },\n            onOpen: (handler) => {\n                if (open) {\n                    handler();\n                } else {\n                    onOpenHandlers.push(handler);\n                }\n            },\n            onClose: (handler) => {\n                onCloseHandlers.push(handler);\n            },\n            isOpen: () => {\n                return open;\n            }\n        };\n    };\n\n    return messageSocket({ sessionUID, driver, sourceApp, sourceAppVersion, targetApp });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, getQueryParam } from 'belter/src';\nimport { FPTI_KEY, SDK_QUERY_KEYS, INTENT, CURRENCY } from '@paypal/sdk-constants/src';\nimport { getDomain } from 'cross-domain-utils/src';\n\nimport { createOrderID, billingTokenToOrderID, subscriptionIdToCartId, createPaymentToken } from '../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { getLogger } from '../lib';\nimport { ENABLE_PAYMENT_API } from '../config';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\n\nexport type XCreateOrderDataType = {||};\n\ntype OrderActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\ntype PaymentActions = {|\n    create : (Object) => ZalgoPromise<string>\n|};\n\nexport type XCreateOrderActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\ntype OrderOptions = {|\n    facilitatorAccessToken : string,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : OrderActions {\n    const create = (data) => {\n    \n        let order : Object = { ...data };\n    \n        if (order.intent && order.intent.toLowerCase() !== intent) {\n            throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n        }\n\n        order = { ...order, intent: intent.toUpperCase() };\n    \n        order.purchase_units = order.purchase_units.map(unit => {\n            if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n                throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n            }\n\n            let payee = unit.payee;\n    \n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n    \n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n    \n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n    \n            return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n        });\n    \n        order.application_context = order.application_context || {};\n\n        return createOrderID(order, { facilitatorAccessToken, partnerAttributionID, forceRestAPI: false });\n    };\n\n    return { create };\n}\n\nexport function buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : PaymentActions {\n    const create = (data) => {\n\n        let payment : Object = { ...data };\n\n        const expectedIntent = (intent === INTENT.CAPTURE ? 'sale' : intent);\n\n        if (payment.intent && payment.intent !== expectedIntent) {\n            throw new Error(`Unexpected intent: ${ payment.intent } passed to order.create. Expected ${ expectedIntent }`);\n        }\n\n        payment = { ...payment, intent: expectedIntent };\n\n        payment.transactions = payment.transactions.map(transaction => {\n            if (transaction.amount.currency && transaction.amount.currency !== currency) {\n                throw new Error(`Unexpected currency: ${ transaction.amount.currency } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ transaction.amount.currency } in the paypal script tag.`);\n            }\n\n            let payee = transaction.payee;\n\n            if (payee && merchantID && merchantID.length) {\n                if (!merchantID[0]) {\n                    throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag.`);\n                }\n\n                if (payee.merchant_id && payee.merchant_id !== merchantID[0]) {\n                    throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n                }\n            }\n\n            if (merchantID) {\n                payee = {\n                    ...payee,\n                    merchant_id: merchantID[0]\n                };\n            }\n\n            return { ...transaction, payee, amount: { ...transaction.amount, currency } };\n        });\n\n        payment.redirect_urls = payment.redirect_urls || {};\n        payment.redirect_urls.return_url = payment.redirect_urls.return_url || `${ getDomain() }/checkoutnow/error`;\n        payment.redirect_urls.cancel_url = payment.redirect_urls.cancel_url || `${ getDomain() }/checkoutnow/error`;\n        payment.payer = payment.payer || {};\n        payment.payer.payment_method = payment.payer.payment_method || 'paypal';\n\n        return createPaymentToken(payment, { facilitatorAccessToken, partnerAttributionID });\n    };\n\n    return { create };\n}\n\nexport function buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID } : OrderOptions) : XCreateOrderActionsType {\n    const order = buildOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n    const payment = buildPaymentActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return {\n        order,\n        payment: ENABLE_PAYMENT_API ? payment : null\n    };\n}\n\ntype CreateOrderXProps = {|\n    createOrder : ?XCreateOrder,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n    merchantID : $ReadOnlyArray<string>,\n    partnerAttributionID : ?string\n|};\n\nexport function getCreateOrder({ createOrder, intent, currency, merchantID, partnerAttributionID } : CreateOrderXProps, { facilitatorAccessToken, createBillingAgreement, createSubscription } : {| facilitatorAccessToken : string, createBillingAgreement? : ?CreateBillingAgreement, createSubscription? : ?CreateSubscription |}) : CreateOrder {\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ facilitatorAccessToken, intent, currency, merchantID, partnerAttributionID });\n\n    return memoize(() => {\n        const queryOrderID = getQueryParam('orderID');\n        if (queryOrderID) {\n            return ZalgoPromise.resolve(queryOrderID);\n        }\n\n        const startTime = Date.now();\n\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: currency,\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n    \n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            const duration = Date.now() - startTime;\n    \n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.TOKEN]:              orderID,\n                [FPTI_KEY.RESPONSE_DURATION]:  duration.toString()\n            }).flush();\n    \n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, type PaymentResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse, getPayment, executePayment, patchPayment, upgradeFacilitatorAccessToken } from '../api';\nimport { ORDER_API_ERROR, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { ENABLE_PAYMENT_API } from '../config';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XOnError } from './onError';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID? : ?string,\n    billingToken? : ?string,\n    facilitatorAccessToken : string\n|};\n\nexport type OrderActions = {|\n    capture : () => ZalgoPromise<OrderResponse>,\n    authorize : () => ZalgoPromise<OrderResponse>,\n    patch : () => ZalgoPromise<OrderResponse>,\n    get : () => ZalgoPromise<OrderResponse>\n|};\n\nexport type PaymentActions = {|\n    execute : () => ZalgoPromise<PaymentResponse>,\n    patch : () => ZalgoPromise<PaymentResponse>,\n    get : () => ZalgoPromise<PaymentResponse>\n|};\n\nexport type XOnApproveActionsType = {|\n    order : OrderActions,\n    payment : ?PaymentActions,\n    subscription : {|\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    |},\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\ntype ActionOptions = {|\n    orderID : string,\n    paymentID : ?string,\n    payerID : ?string,\n    restart : () => ZalgoPromise<void>,\n    intent : $Values<typeof INTENT>,\n    subscriptionID : ?string,\n    facilitatorAccessToken : string,\n    buyerAccessToken : ?string,\n    partnerAttributionID : ?string,\n    forceRestAPI : boolean\n|};\n\nfunction buildOrderActions({ intent, orderID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : OrderActions {\n    \n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n    \n    const get = memoize(() => {\n        return getOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    });\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI })\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { capture, authorize, patch, get };\n}\n\nfunction buildPaymentActions({ intent, paymentID, payerID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : ActionOptions) : ?PaymentActions {\n\n    if (!paymentID) {\n        return;\n    }\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<PaymentResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => {\n        return getPayment(paymentID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID });\n    });\n\n    const execute = memoize(() => {\n        if (!payerID) {\n            throw new Error(`payerID required for payment execute`);\n        }\n\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return executePayment(paymentID, payerID, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID })\n            .finally(get.reset)\n            .finally(execute.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = {}) => {\n        return patchPayment(paymentID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    return { execute, patch, get };\n}\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, paymentID, payerID, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI } : ActionOptions) : XOnApproveActionsType {\n\n    const getSubscriptionApi = memoize(() => {\n        if (!subscriptionID) {\n            throw new Error(`No subscription ID present`);\n        }\n\n        return getSubscription(subscriptionID, { buyerAccessToken });\n    });\n\n    const activateSubscriptionApi = memoize(() => {\n        if (!subscriptionID) {\n            throw new Error(`No subscription ID present`);\n        }\n        \n        return activateSubscription(subscriptionID, { buyerAccessToken });\n    });\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n\n    const order = buildOrderActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n    const payment = buildPaymentActions({ intent, orderID, paymentID, payerID, subscriptionID, restart, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n    return {\n        order,\n        payment:      ENABLE_PAYMENT_API ? payment : null,\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID? : ?string,\n    billingToken? : ?string,\n    subscriptionID? : ?string,\n    buyerAccessToken? : ?string,\n    forceRestAPI? : boolean\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nfunction getDefaultOnApprove(intent : $Values<typeof INTENT>) : XOnApprove {\n    return (data, actions) => {\n        if (intent === INTENT.CAPTURE) {\n            return actions.order.capture().then(noop);\n        } else if (intent === INTENT.AUTHORIZE) {\n            return actions.order.authorize().then(noop);\n        } else {\n            throw new Error(`Unsupported intent for auto-capture: ${ intent }`);\n        }\n    };\n}\n\ntype OnApproveXProps = {|\n    intent : $Values<typeof INTENT>,\n    onApprove : ?XOnApprove,\n    partnerAttributionID : ?string,\n    onError : XOnError,\n    upgradeLSAT : boolean\n|};\n\nexport function getOnApprove({ intent, onApprove = getDefaultOnApprove(intent), partnerAttributionID, onError, upgradeLSAT = false } : OnApproveXProps, { facilitatorAccessToken, createOrder } : {| facilitatorAccessToken : string, createOrder : CreateOrder |}) : OnApprove {\n    if (!onApprove) {\n        throw new Error(`Expected onApprove`);\n    }\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken, forceRestAPI = upgradeLSAT } : OnApproveData, { restart } : OnApproveActions) => {\n        return ZalgoPromise.try(() => {\n            if (upgradeLSAT && buyerAccessToken) {\n                return createOrder().then(orderID => upgradeFacilitatorAccessToken(facilitatorAccessToken, { buyerAccessToken, orderID }));\n            }\n        }).then(() => {\n            return createOrder();\n        }).then(orderID => {\n\n            getLogger()\n                .info('button_approve')\n                .track({\n                    [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_APPROVE,\n                    [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                    [FPTI_KEY.TOKEN]:        orderID,\n                    [FPTI_KEY.CONTEXT_ID]:   orderID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID, facilitatorAccessToken };\n            const actions = buildXApproveActions({ orderID, paymentID, payerID, intent, restart, subscriptionID, facilitatorAccessToken, buyerAccessToken, partnerAttributionID, forceRestAPI });\n\n            return onApprove(data, actions).catch(err => {\n                return ZalgoPromise.try(() => {\n                    return onError(err);\n                }).then(() => {\n                    throw err;\n                });\n            });\n        });\n    });\n}\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AED: ('AED' : 'AED'),\n    ALL: ('ALL' : 'ALL'),\n    ANG: ('ANG' : 'ANG'),\n    AOA: ('AOA' : 'AOA'),\n    AUD: ('AUD' : 'AUD'),\n    AWG: ('AWG' : 'AWG'),\n    BAM: ('BAM' : 'BAM'),\n    BBD: ('BBD' : 'BBD'),\n    BGN: ('BGN' : 'BGN'),\n    BIF: ('BIF' : 'BIF'),\n    BMD: ('BMD' : 'BMD'),\n    BND: ('BND' : 'BND'),\n    BOB: ('BOB' : 'BOB'),\n    BRL: ('BRL' : 'BRL'),\n    BSD: ('BSD' : 'BSD'),\n    BTN: ('BTN' : 'BTN'),\n    CAD: ('CAD' : 'CAD'),\n    CDF: ('CDF' : 'CDF'),\n    CHF: ('CHF' : 'CHF'),\n    CLP: ('CLP' : 'CLP'),\n    COP: ('COP' : 'COP'),\n    CRC: ('CRC' : 'CRC'),\n    CVE: ('CVE' : 'CVE'),\n    CZK: ('CZK' : 'CZK'),\n    DJF: ('DJF' : 'DJF'),\n    DKK: ('DKK' : 'DKK'),\n    DOP: ('DOP' : 'DOP'),\n    DZD: ('DZD' : 'DZD'),\n    EGP: ('EGP' : 'EGP'),\n    ETB: ('ETB' : 'ETB'),\n    EUR: ('EUR' : 'EUR'),\n    FJD: ('FJD' : 'FJD'),\n    FKP: ('FKP' : 'FKP'),\n    GBP: ('GBP' : 'GBP'),\n    GIP: ('GIP' : 'GIP'),\n    GMD: ('GMD' : 'GMD'),\n    GNF: ('GNF' : 'GNF'),\n    GTQ: ('GTQ' : 'GTQ'),\n    GYD: ('GYD' : 'GYD'),\n    HKD: ('HKD' : 'HKD'),\n    HNL: ('HNL' : 'HNL'),\n    HRK: ('HRK' : 'HRK'),\n    HUF: ('HUF' : 'HUF'),\n    IDR: ('IDR' : 'IDR'),\n    ILS: ('ILS' : 'ILS'),\n    INR: ('INR' : 'INR'),\n    ISK: ('ISK' : 'ISK'),\n    JMD: ('JMD' : 'JMD'),\n    JPY: ('JPY' : 'JPY'),\n    KES: ('KES' : 'KES'),\n    KMF: ('KMF' : 'KMF'),\n    KRW: ('KRW' : 'KRW'),\n    KYD: ('KYD' : 'KYD'),\n    LAK: ('LAK' : 'LAK'),\n    LKR: ('LKR' : 'LKR'),\n    MDL: ('MDL' : 'MDL'),\n    MGA: ('MGA' : 'MGA'),\n    MKD: ('MKD' : 'MKD'),\n    MNT: ('MNT' : 'MNT'),\n    MRO: ('MRO' : 'MRO'),\n    MUR: ('MUR' : 'MUR'),\n    MVR: ('MVR' : 'MVR'),\n    MXN: ('MXN' : 'MXN'),\n    MYR: ('MYR' : 'MYR'),\n    NAD: ('NAD' : 'NAD'),\n    NIO: ('NIO' : 'NIO'),\n    NOK: ('NOK' : 'NOK'),\n    NPR: ('NPR' : 'NPR'),\n    NZD: ('NZD' : 'NZD'),\n    PEN: ('PEN' : 'PEN'),\n    PGK: ('PGK' : 'PGK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    PYG: ('PYG' : 'PYG'),\n    QAR: ('QAR' : 'QAR'),\n    RON: ('RON' : 'RON'),\n    RSD: ('RSD' : 'RSD'),\n    RUB: ('RUB' : 'RUB'),\n    SAR: ('SAR' : 'SAR'),\n    SBD: ('SBD' : 'SBD'),\n    SCR: ('SCR' : 'SCR'),\n    SEK: ('SEK' : 'SEK'),\n    SGD: ('SGD' : 'SGD'),\n    SHP: ('SHP' : 'SHP'),\n    SLL: ('SLL' : 'SLL'),\n    SOS: ('SOS' : 'SOS'),\n    SRD: ('SRD' : 'SRD'),\n    SZL: ('SZL' : 'SZL'),\n    THB: ('THB' : 'THB'),\n    TJS: ('TJS' : 'TJS'),\n    TOP: ('TOP' : 'TOP'),\n    TTD: ('TTD' : 'TTD'),\n    TWD: ('TWD' : 'TWD'),\n    TZS: ('TZS' : 'TZS'),\n    USD: ('USD' : 'USD'),\n    UYU: ('UYU' : 'UYU'),\n    VND: ('VND' : 'VND'),\n    VUV: ('VUV' : 'VUV'),\n    WST: ('WST' : 'WST'),\n    XAF: ('XAF' : 'XAF'),\n    XCD: ('XCD' : 'XCD'),\n    YER: ('YER' : 'YER')\n};\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, SMART_API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {|\n        currency_code : string,\n        value : string\n    |},\n    auto_renewal? : boolean,\n    application_context? : {|\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    |}\n|};\n\nexport type SubscriptionResponse = {||};\n\ntype SubsriptionOptions = {|\n    partnerAttributionID : ?string\n|};\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest, { partnerAttributionID } : SubsriptionOptions) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\ntype SubscriptionAPICredentials = {|\n    buyerAccessToken : ?string\n|};\n\nexport function activateSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        method:      `post`,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\nexport function getSubscription(subscriptionID : string, { buyerAccessToken } : SubscriptionAPICredentials) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        accessToken: buyerAccessToken,\n        url:         `${ SMART_API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { PAYMENTS_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callRestAPI } from './api';\n\ntype PaymentAPIOptions = {|\n    facilitatorAccessToken : string,\n    buyerAccessToken? : ?string,\n    partnerAttributionID : ?string\n|};\n\nexport type PaymentCreateRequest = {|\n    \n|};\n\nexport type PaymentResponse = {|\n    id : string,\n    links : $ReadOnlyArray<{|\n        method : string,\n        rel : string,\n        href : string\n    |}>\n|};\n\nexport function createPayment(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    getLogger().info(`rest_api_create_payment_id`);\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }`,\n        data:        payment,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    }).then(body => {\n\n        const paymentID = body && body.id;\n\n        if (!paymentID) {\n            throw new Error(`Payment Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_PAYMENT,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.PAYMENT_ID,\n            [FPTI_KEY.TOKEN]:        paymentID,\n            [FPTI_KEY.CONTEXT_ID]:   paymentID\n        });\n\n        return body;\n    });\n}\n\nexport function createPaymentID(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => res.id);\n}\n\nexport function createPaymentToken(payment : PaymentCreateRequest, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<string> {\n    return createPayment(payment, { facilitatorAccessToken, partnerAttributionID })\n        .then(res => {\n            if (res.links && res.links.length) {\n                for (let i = 0; i < res.links.length; i++) {\n                    if (res.links[i].method === 'REDIRECT' && res.links[i].rel === 'approval_url') {\n                        const match = res.links[i].href.match(/token=((EC-)?[A-Z0-9]{17})/);\n                        if (match) {\n                            return match[1];\n                        }\n                    }\n                }\n            }\n\n            throw new Error(`Could not find payment token`);\n        });\n}\n\nexport function getPayment(paymentID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n\nexport function executePayment(paymentID : string, payerID : string, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `post`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }/execute`,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        },\n        data: {\n            payer_id: payerID\n        }\n    });\n}\n\ntype PatchData = {|\n    \n|};\n\nexport function patchPayment(paymentID : string, data : PatchData, { facilitatorAccessToken, partnerAttributionID } : PaymentAPIOptions) : ZalgoPromise<PaymentResponse> {\n    const patchData = Array.isArray(data) ? { patch: data } : data;\n\n    return callRestAPI({\n        accessToken: facilitatorAccessToken,\n        method:      `patch`,\n        url:         `${ PAYMENTS_API_URL }/${ paymentID }`,\n        data:        patchData,\n        headers:     {\n            [HEADERS.PARTNER_ATTRIBUTION_ID]: partnerAttributionID || ''\n        }\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XOnError } from './onError';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : {| orderID : string |}) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n\n        if (url.indexOf('://') === -1) {\n            getLogger().warn('redir_url_non_scheme', { url }).flush();\n            throw new Error(`Invalid redirect url: ${ url } - must be fully qualified url`);\n        } else if (!url.match(/^https?:\\/\\//)) {\n            getLogger().warn('redir_url_non_http', { url }).flush();\n        }\n\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\ntype OnCancelXProps = {|\n    onCancel : XOnCancel,\n    onError : XOnError\n|};\n\nexport function getOnCancel({ onCancel = promiseNoop, onError } : OnCancelXProps, { createOrder } : {| createOrder : CreateOrder |}) : OnCancel {\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                    [FPTI_KEY.TOKEN]:        orderID,\n                    [FPTI_KEY.CONTEXT_ID]:   orderID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../api';\nimport { FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../constants';\nimport { getLogger } from '../lib';\n\nimport type { CreateOrder } from './createOrder';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {|\n        patch : () => ZalgoPromise<OrderResponse>\n    |}\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    buyerAccessToken : ?string\n|};\n\nexport type OnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions, facilitatorAccessToken, buyerAccessToken, partnerAttributionID } : {| orderID : string, actions : OnShippingChangeActionsType, facilitatorAccessToken : string, buyerAccessToken : ?string, partnerAttributionID : ?string |}) : XOnShippingChangeActionsType {\n\n    const patch = (data = {}) => {\n        return patchOrder(orderID, data, { facilitatorAccessToken, buyerAccessToken, partnerAttributionID }).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n    };\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\ntype OnShippingChangeXProps = {|\n    onShippingChange : ?XOnShippingChange,\n    partnerAttributionID : ?string\n|};\n\nexport function getOnShippingChange({ onShippingChange, partnerAttributionID } : OnShippingChangeXProps, { facilitatorAccessToken, createOrder } : {| facilitatorAccessToken : string, createOrder : CreateOrder |}) : ?OnShippingChange {\n    if (onShippingChange) {\n        return ({ buyerAccessToken, ...data }, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n                        [FPTI_KEY.TOKEN]:        orderID,\n                        [FPTI_KEY.CONTEXT_ID]:   orderID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, facilitatorAccessToken, buyerAccessToken, actions, partnerAttributionID }));\n            });\n        };\n    }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD, PLATFORM, CURRENCY } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow, FundingEligibilityType, Wallet, CheckoutFlowType, CardFieldsFlowType, ThreeDomainSecureFlowType, PersonalizationType } from '../types';\nimport type { CreateOrder, XCreateOrder, CreateBillingAgreement, XCreateBillingAgreement, OnInit, XOnInit,\n    OnApprove, XOnApprove, OnCancel, XOnCancel, OnClick, XOnClick, OnShippingChange, XOnShippingChange, XOnError, OnError,\n    XGetPopupBridge, GetPopupBridge, XCreateSubscription, RememberFunding, GetPageURL } from '../props';\nimport { type FirebaseConfig } from '../api';\nimport { getNonce } from '../lib';\nimport { getOnInit } from '../props/onInit';\nimport { getCreateOrder } from '../props/createOrder';\nimport { getOnApprove } from '../props/onApprove';\nimport { getOnCancel } from '../props/onCancel';\nimport { getOnShippingChange } from '../props/onShippingChange';\nimport { getOnClick } from '../props/onClick';\nimport { getCreateBillingAgreement } from '../props/createBillingAgreement';\nimport { getCreateSubscription } from '../props/createSubscription';\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type ButtonStyle = {|\n    layout : string,\n    color : string,\n    shape : string,\n    label : string,\n    tagline : boolean | void\n|};\n\nexport type ButtonXProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n    merchantID : $ReadOnlyArray<string>,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n    currency : $Values<typeof CURRENCY>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableStandardCardFields : ?boolean,\n    enableNativeCheckout : boolean | void,\n    getParentDomain : () => string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n    upgradeLSAT? : boolean,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type ButtonProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n    style : ButtonStyle,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : ?string,\n    partnerAttributionID : string,\n    correlationID : string,\n    platform : $Values<typeof PLATFORM>,\n\n    vault : boolean,\n    commit : boolean,\n    currency : $Values<typeof CURRENCY>,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : RememberFunding,\n    enableThreeDomainSecure : boolean,\n    enableNativeCheckout : boolean,\n    merchantDomain : string,\n    getPageUrl : GetPageURL,\n    getParent : () => CrossDomainWindowType,\n\n    stageHost : ?string,\n    apiStageHost : ?string,\n\n    onInit : OnInit,\n    onError : OnError,\n    onClick : ?OnClick,\n    enableStandardCardFields : ?boolean,\n\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function getProps({ facilitatorAccessToken } : {| facilitatorAccessToken : string |}) : ButtonProps {\n\n    const xprops : ButtonXProps = window.xprops;\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        platform,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout = false,\n        remember: rememberFunding,\n        onError,\n        stageHost,\n        apiStageHost,\n        style,\n        getParent,\n        currency,\n        intent,\n        merchantID,\n        upgradeLSAT = false\n    } = xprops;\n\n    const onInit = getOnInit({ onInit: xprops.onInit });\n    const merchantDomain = (typeof getParentDomain === 'function') ? getParentDomain() : 'unknown';\n\n    const onClick = getOnClick({ onClick: xprops.onClick });\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement({ createBillingAgreement: xprops.createBillingAgreement });\n    const createSubscription = getCreateSubscription({ createSubscription: xprops.createSubscription, partnerAttributionID }, { facilitatorAccessToken });\n    \n    const createOrder = getCreateOrder({ createOrder: xprops.createOrder, currency, intent, merchantID, partnerAttributionID }, { facilitatorAccessToken, createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove({ onApprove: xprops.onApprove, intent, onError, partnerAttributionID, upgradeLSAT }, { facilitatorAccessToken, createOrder });\n    const onCancel = getOnCancel({ onCancel: xprops.onCancel, onError }, { createOrder });\n    const onShippingChange = getOnShippingChange({ onShippingChange: xprops.onShippingChange, partnerAttributionID }, { facilitatorAccessToken, createOrder });\n\n    return {\n        env,\n        style,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        locale,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n        platform,\n        currency,\n        intent,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        getPageUrl,\n        rememberFunding,\n        getParent,\n\n        enableThreeDomainSecure,\n        enableStandardCardFields,\n        enableNativeCheckout,\n\n        onClick,\n        onInit,\n        onError,\n        stageHost,\n        apiStageHost,\n\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onShippingChange\n    };\n}\n\nexport type Components = {|\n    Checkout : CheckoutFlowType,\n    CardFields : CardFieldsFlowType,\n    ThreeDomainSecure : ThreeDomainSecureFlowType\n|};\n\nexport function getComponents() : Components {\n    const { Checkout, CardFields, ThreeDomainSecure } = paypal;\n    return { Checkout, CardFields, ThreeDomainSecure };\n}\n\nexport type Config = {|\n    version : string,\n    cspNonce : ?string,\n    firebase : ?FirebaseConfig\n|};\n\nexport function getConfig({ serverCSPNonce, firebaseConfig } : {| serverCSPNonce : ?string, firebaseConfig : ?FirebaseConfig |}) : Config {\n    const cspNonce = serverCSPNonce || getNonce();\n    const { version } = paypal;\n    \n    return {\n        version,\n        cspNonce,\n        firebase: firebaseConfig\n    };\n}\n\nexport type ServiceData = {|\n    merchantID : $ReadOnlyArray<string>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    fundingEligibility : FundingEligibilityType,\n    wallet : ?Wallet,\n    personalization : PersonalizationType,\n    facilitatorAccessToken : string,\n    sdkMeta : string,\n    buyerAccessToken : ?string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [ $Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\ntype ServiceDataOptions = {|\n    facilitatorAccessToken : string,\n    buyerGeoCountry : $Values<typeof COUNTRY>,\n    isCardFieldsExperimentEnabled : boolean,\n    fundingEligibility : FundingEligibilityType,\n    wallet : ?Wallet,\n    buyerAccessToken : ?string,\n    personalization : PersonalizationType,\n    serverMerchantID : $ReadOnlyArray<string>,\n    sdkMeta : string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function getServiceData({ facilitatorAccessToken, sdkMeta, buyerGeoCountry, fundingEligibility, wallet, buyerAccessToken, personalization, serverMerchantID, eligibility } : ServiceDataOptions) : ServiceData {\n    return {\n        merchantID:   serverMerchantID,\n        buyerCountry: buyerGeoCountry || COUNTRY.US,\n        fundingEligibility,\n        wallet,\n        sdkMeta,\n        buyerAccessToken,\n        personalization,\n        facilitatorAccessToken,\n        eligibility\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    initPromise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit({ onInit } : {| onInit : ?XOnInit |}) : OnInit {\n    return () => {\n        let enabled = true;\n\n        const initPromise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            initPromise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport const CLICK_VALID = {\n    VALID:   (true : true),\n    INVALID: (false : false)\n};\n\nexport function buildXOnClickData({ fundingSource } : {| fundingSource : $Values<typeof FUNDING> |}) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => CLICK_VALID.VALID),\n        reject:  () => ZalgoPromise.try(() => CLICK_VALID.INVALID)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick({ onClick } : {| onClick : ?XOnClick |}) : OnClick | void {\n    if (!onClick) {\n        return;\n    }\n\n    return memoize(({ fundingSource } : {| fundingSource : $Values<typeof FUNDING> |}) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== CLICK_VALID.INVALID);\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement({ createBillingAgreement } : {| createBillingAgreement : ?XCreateBillingAgreement |}) : ?CreateBillingAgreement {\n    if (createBillingAgreement) {\n        return () => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\n\nimport { createSubscription as createSubcriptionID, reviseSubscription } from '../api';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {|\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    |}\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID } : {| facilitatorAccessToken : string, partnerAttributionID : ?string |}) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createSubcriptionID(facilitatorAccessToken, data, { partnerAttributionID });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return reviseSubscription(facilitatorAccessToken, subscriptionID, data, { partnerAttributionID });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\ntype CreateSubscriptionXProps = {|\n    createSubscription : ?XCreateSubscription,\n    partnerAttributionID : ?string\n|};\n\nexport function getCreateSubscription({ createSubscription, partnerAttributionID } : CreateSubscriptionXProps, { facilitatorAccessToken } : {| facilitatorAccessToken : string |}) : ?CreateSubscription {\n    if (createSubscription) {\n        return () => {\n            return createSubscription(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ facilitatorAccessToken, partnerAttributionID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        };\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : {| fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string, instrumentID : ?string |} {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const instrumentID = button.getAttribute(DATA_ATTRIBUTES.INSTRUMENT_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID, instrumentID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | string | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | string | null | void;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | string | null | void>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode<P : NodePropsType> = (string, P | null, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-use-before-define\nexport type CreateComponentNode<P : NodePropsType> = (ComponentFunctionType<P>, P | null, ...NullableChildrenType) => ComponentNode<P>; // eslint-disable-line no-use-before-define\nexport type CreateNode<P : NodePropsType> = CreateElementNode<P> & CreateComponentNode<P>;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props;\n        this.children = children;\n\n        const onRender = props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\nexport class ComponentNode<P : NodePropsType> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<P>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<P>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props;\n        this.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        // $FlowFixMe\n        const props : P = this.props;\n        const child = normalizeChild(this.component(props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string') {\n            result.push(new TextNode(child));\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n    \n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode<*> = (element, props, ...children) => {\n    // $FlowFixMe\n    props = props || {};\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<EmptyProps> = (props : NodePropsType, children : ChildrenType) : NullableChildType => {\n    if (props && Object.keys(props).length) {\n        throw new Error(`Do not pass props to Fragment`);\n    }\n\n    return children;\n};\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    NODE:    'node',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el'\n};\n\nfunction fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        // $FlowFixMe\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement {\n    if (node.props[ELEMENT_PROP.EL]) {\n        // $FlowFixMe\n        return node.props[ELEMENT_PROP.EL];\n    }\n\n    return doc.createElement(node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            el.setAttribute(prop, val.toString());\n\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\nexport function dom(opts? : { doc? : Document } = {}) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n","/* @flow */\n/** @jsx node */\n\nimport { node, type ElementNode, type ChildrenType } from 'jsx-pragmatic/src';\n\nconst spinnerStyle = `\n\n    body {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: fixed;\n        top: 0;\n        left: 0;\n        margin: 0;\n    }\n\n    .spinner {\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        z-index: 10\n    }\n\n    .spinner .spinWrap {\n        width: 200px;\n        height: 100px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-left: -100px;\n        margin-top: -50px\n    }\n\n    .spinner .loader,\n    .spinner .spinnerImage {\n        height: 100px;\n        width: 100px;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        opacity: 1;\n        filter: alpha(opacity=100)\n    }\n\n    .spinner .spinnerImage {\n        margin: 28px 0 0 -25px;\n        background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n    }\n\n    .spinner .loader {\n        margin: 0 0 0 -55px;\n        background-color: transparent;\n        animation: rotation .7s infinite linear;\n        border-left: 5px solid #cbcbca;\n        border-right: 5px solid #cbcbca;\n        border-bottom: 5px solid #cbcbca;\n        border-top: 5px solid #2380be;\n        border-radius: 100%\n    }\n\n    @keyframes rotation {\n        from {\n            transform: rotate(0deg)\n        }\n        to {\n            transform: rotate(359deg)\n        }\n    }\n`;\n\nexport function SpinnerPage({ nonce } : { nonce : ?string }, children : ChildrenType) : ElementNode {\n    return (\n        <html>\n            <head>\n                <title>PayPal</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            </head>\n            <body>\n                <div class=\"preloader spinner\">\n                    <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n                    <div class=\"spinWrap\">\n                        <p class=\"spinnerImage\" />\n                        <p class=\"loader\" />\n                    </div>\n                </div>\n                { children }\n            </body>\n        </html>\n    );\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport type { CreateBillingAgreement, CreateSubscription } from '../props';\nimport { enableVault, validatePaymentMethod } from '../api';\nimport { CONTEXT, TARGET_ELEMENT, BUYER_INTENT } from '../constants';\nimport { unresolvedPromise, getLogger } from '../lib';\nimport { openPopup } from '../ui';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, InitOptions } from './types';\n\nexport const CHECKOUT_POPUP_DIMENSIONS = {\n    WIDTH:  500,\n    HEIGHT: 590\n};\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else if (getParent()) {\n        return getParent();\n    } else {\n        return window;\n    }\n}\n\nfunction setupCheckout({ components } : SetupOptions) : ZalgoPromise<void> {\n    const { Checkout } = components;\n\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\nfunction isCheckoutEligible() : boolean {\n    return true;\n}\n\nfunction isCheckoutPaymentEligible() : boolean {\n    return true;\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nfunction getContext({ win, isClick } : {| win : ?(CrossDomainWindowType | ProxyWindow), isClick : ?boolean |}) : $Values<typeof CONTEXT> {\n    if (win) {\n        return CONTEXT.POPUP;\n    }\n\n    if (isClick && supportsPopups()) {\n        return CONTEXT.POPUP;\n    }\n\n    return CONTEXT.IFRAME;\n}\n\nfunction initCheckout({ props, components, serviceData, payment, config } : InitOptions) : PaymentFlowInstance {\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    const { Checkout } = components;\n    const { sessionID, buttonSessionID, createOrder, onApprove, onCancel,\n        onShippingChange, locale, commit, onError, vault, clientAccessToken,\n        createBillingAgreement, createSubscription, onClick, enableThreeDomainSecure,\n        partnerAttributionID } = props;\n    let { button, win, fundingSource, card, isClick, buyerAccessToken, venmoPayloadID, buyerIntent,\n        paymentMethodID, idToken } = payment;\n    const { fundingEligibility, buyerCountry } = serviceData;\n    const { cspNonce } = config;\n\n    const context = getContext({ win, isClick });\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ props, components, serviceData, config, payment: { button, fundingSource, card, buyerIntent, isClick: false } })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        if (!approved) {\n            return onCancel();\n        }\n    };\n    \n    const init = () => {\n        return Checkout({\n            window: win,\n            sessionID,\n            buttonSessionID,\n            clientAccessToken,\n            buyerAccessToken,\n            venmoPayloadID,\n            idToken,\n    \n            createOrder: () => {\n                return createOrder().then(orderID => {\n                    return ZalgoPromise.try(() => {\n                        if (buyerIntent === BUYER_INTENT.PAY) {\n                            return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription });\n                        } else if (buyerIntent === BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING && clientAccessToken && paymentMethodID) {\n                            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, partnerAttributionID, buttonSessionID });\n                        }\n                    }).then(() => {\n                        return orderID;\n                    });\n                });\n            },\n    \n            onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n                approved = true;\n                getLogger().info(`spb_onapprove_access_token_${ buyerAccessToken ? 'present' : 'not_present' }`).flush();\n    \n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onApprove({ payerID, paymentID, billingToken, subscriptionID, buyerAccessToken }, { restart }).catch(noop);\n                });\n            },\n    \n            onAuth: ({ accessToken }) => {\n                getLogger().info(`spb_onauth_access_token_${ (accessToken || buyerAccessToken)  ? 'present' : 'not_present' }`);\n                if (accessToken) {\n                    buyerAccessToken = accessToken;\n                }\n            },\n    \n            onCancel: () => {\n                // eslint-disable-next-line no-use-before-define\n                return close().then(() => {\n                    return onCancel();\n                });\n            },\n    \n            onShippingChange: onShippingChange\n                ? (data, actions) => {\n                    return onShippingChange({ buyerAccessToken, ...data }, actions);\n                } : null,\n    \n            onError,\n            onClose,\n    \n            fundingSource,\n            card,\n            buyerCountry,\n            locale,\n            commit,\n            cspNonce\n        });\n    };\n\n    let instance;\n\n    const close = () => {\n        checkoutOpen = false;\n        return ZalgoPromise.try(() => {\n            if (instance) {\n                return instance.close();\n            }\n        });\n    };\n\n    const start = memoize(() => {\n        instance = init();\n        return instance.renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n    });\n\n    const click = () => {\n        if (supportsPopups()) {\n            win = win || openPopup({ width: CHECKOUT_POPUP_DIMENSIONS.WIDTH, height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT });\n        }\n\n        if (!onClick) {\n            start();\n            return;\n        }\n\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        }).then(valid => {\n            if (win && !valid) {\n                win.close();\n            }\n        });\n    };\n\n    return { click, start, close };\n}\n\nexport const checkout : PaymentFlow = {\n    name:              'checkout',\n    setup:             setupCheckout,\n    isEligible:        isCheckoutEligible,\n    isPaymentEligible: isCheckoutPaymentEligible,\n    init:              initCheckout\n};\n","/* @flow */\n/** @jsx node */\n\nimport { node, dom } from 'jsx-pragmatic/src';\nimport { popup, writeElementToWindow } from 'belter/src';\nimport { SpinnerPage } from '@paypal/common-components/src/ui';\nimport { assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { getNonce } from '../lib';\n\nexport function openPopup({ width, height } : {| width : number, height : number |}) : CrossDomainWindowType {\n    const win = assertSameDomain(popup('', { width, height }));\n\n    const doc = win.document;\n\n    const spinner = (\n        <SpinnerPage nonce={ getNonce() } />\n    ).render(dom({ doc }));\n\n    writeElementToWindow(win, spinner);\n\n    return win;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce, noop } from 'belter/src';\n\nimport { DATA_ATTRIBUTES } from '../constants';\nimport { unresolvedPromise, promiseNoop } from '../lib';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nfunction setupCardFields() {\n    // pass\n}\n\nlet cardFieldsOpen = false;\n\nfunction isCardFieldsEligible({ props, serviceData } : IsEligibleOptions) : boolean {\n    const { vault, onShippingChange, enableStandardCardFields } = props;\n    const { eligibility } = serviceData;\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    // if merchant opt-in inline guest, they will ALWAYS see inline guest guest\n    if (enableStandardCardFields) {\n        return true;\n    }\n\n    return eligibility.cardFields;\n}\n\nfunction isCardFieldsPaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win, fundingSource } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (fundingSource && fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : ?$Values<typeof CARD>) {\n    if (!card) {\n        return;\n    }\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : {| buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement |} => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nfunction initCardFields({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel,\n        locale, commit, onError, sessionID, buttonSessionID } = props;\n    const { CardFields } = components;\n    const { fundingSource, card } = payment;\n    const { cspNonce } = config;\n    const { buyerCountry } = serviceData;\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start: promiseNoop,\n            close: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        checkout.init({ props, components, payment: { ...payment, isClick: false }, serviceData, config })\n            .start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    let buyerAccessToken;\n\n    const { render, close: closeCardFields } = CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, buyerAccessToken }, { restart }).catch(noop);\n            });\n        },\n\n        onAuth: ({ accessToken }) => {\n            buyerAccessToken = accessToken;\n        },\n\n        onCancel,\n        onError,\n        onClose,\n        onCardTypeChange,\n\n        sessionID,\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close };\n}\n\nexport const cardFields : PaymentFlow = {\n    name:              'card_fields',\n    setup:             setupCardFields,\n    isEligible:        isCardFieldsEligible,\n    isPaymentEligible: isCardFieldsPaymentEligible,\n    init:              initCardFields,\n    inline:            true\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    BLIK:           ('blik' : 'blik'),\n    TRUSTLY:        ('trustly' : 'trustly'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    MAXIMA:         ('maxima' : 'maxima'),\n    OXXO:           ('oxxo' : 'oxxo'),\n    BOLETO:         ('boleto' : 'boleto'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n\nexport const WALLET_INSTRUMENT = {\n    BALANCE: ('balance' : 'balance'),\n    CARD:    ('card' : 'card'),\n    BANK:    ('bank' : 'bank'),\n    CREDIT:  ('credit' : 'credit')\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { ThreeDomainSecureFlowType } from '../types';\nimport type { CreateOrder } from '../props';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse, getSupplementalOrderInfo } from '../api';\nimport { TARGET_ELEMENT, BUYER_INTENT } from '../constants';\nimport { getLogger } from '../lib';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nfunction setupVaultCapture() {\n    // pass\n}\n\nfunction isVaultCaptureEligible({ props } : IsEligibleOptions) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isVaultCapturePaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win, paymentMethodID } = payment || {};\n\n    if (win) {\n        return false;\n    }\n\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    return true;\n}\n\ntype ThreeDomainSecureProps = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(getParent(), TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    ThreeDomainSecure : ThreeDomainSecureFlowType,\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder,\n    getParent : () => CrossDomainWindowType\n|};\n\nfunction handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ ThreeDomainSecure, createOrder, getParent });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nfunction initVaultCapture({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, clientAccessToken,\n        enableThreeDomainSecure, buttonSessionID, partnerAttributionID, getParent } = props;\n    const { ThreeDomainSecure } = components;\n    const { fundingSource, paymentMethodID } = payment;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const fallbackToWebCheckout = () => {\n        getLogger().info('web_checkout_fallback').flush();\n        return checkout.init({ props, components, serviceData, payment: { ...payment, isClick: false, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING }, config }).start();\n    };\n\n    const shippingRequired = (orderID) => {\n        return getSupplementalOrderInfo(orderID).then(order => {\n            const { flags: { isShippingAddressRequired }, cart: { shippingAddress } } = order.checkoutSession;\n\n            if (!isShippingAddressRequired) {\n                return false;\n            }\n\n            if (shippingAddress && shippingAddress.isFullAddress) {\n                return false;\n            }\n\n            return true;\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return ZalgoPromise.hash({\n                validate:        validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure, buttonSessionID, partnerAttributionID }),\n                requireShipping: shippingRequired(orderID)\n            });\n        }).then(({ validate, requireShipping }) => {\n            if (requireShipping) {\n                if (fundingSource !== FUNDING.PAYPAL) {\n                    throw new Error(`Shipping address requested for ${ fundingSource } payment`);\n                }\n\n                return fallbackToWebCheckout();\n            }\n\n            const { status, body } = validate;\n            return handleValidateResponse({ ThreeDomainSecure, status, body, createOrder, getParent }).then(() => {\n                return onApprove({}, { restart });\n            });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const vaultCapture : PaymentFlow = {\n    name:              'vault_capture',\n    setup:             setupVaultCapture,\n    isEligible:        isVaultCaptureEligible,\n    isPaymentEligible: isVaultCapturePaymentEligible,\n    init:              initVaultCapture,\n    spinner:           true,\n    inline:            true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { stringifyError } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport { getSupplementalOrderInfo, approveOrder, exchangeAccessTokenForIDToken } from '../api';\nimport { BUYER_INTENT } from '../constants';\nimport { getLogger } from '../lib';\n\nimport type { PaymentFlow, PaymentFlowInstance, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nfunction setupWalletCapture() {\n    // pass\n}\n\nfunction isWalletCaptureEligible({ props, serviceData } : IsEligibleOptions) : boolean {\n    const { buyerAccessToken, wallet } = serviceData;\n    const { onShippingChange } = props;\n\n    if (!wallet) {\n        return false;\n    }\n\n    if (!buyerAccessToken) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isWalletCapturePaymentEligible({ serviceData, payment } : IsPaymentEligibleOptions) : boolean {\n    const { wallet } = serviceData;\n    const { win, fundingSource, instrumentID } = payment;\n\n    if (fundingSource !== FUNDING.PAYPAL) {\n        return false;\n    }\n\n    if (win) {\n        return false;\n    }\n\n    if (!wallet) {\n        return false;\n    }\n\n    if (!instrumentID) {\n        return false;\n    }\n    \n    // $FlowFixMe\n    const walletFunding = wallet[fundingSource];\n\n    if (!walletFunding) {\n        return false;\n    }\n\n    const instrument = walletFunding.instruments.find(inst => inst.instrumentID === instrumentID);\n    \n    if (!instrument) {\n        return false;\n    }\n\n    if (!instrument.oneClick) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initWalletCapture({ props, components, payment, serviceData, config } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove } = props;\n    const { instrumentID } = payment;\n    const { buyerAccessToken } = serviceData;\n\n    if (!instrumentID) {\n        throw new Error(`Instrument id required for wallet capture`);\n    }\n\n    if (!buyerAccessToken) {\n        throw new Error(`Buyer access token required for wallet capture`);\n    }\n\n    const fallbackToWebCheckout = () => {\n        getLogger().info('web_checkout_fallback').flush();\n        return exchangeAccessTokenForIDToken(buyerAccessToken).then(idToken => {\n            return checkout.init({ props, components, serviceData, payment: {\n                ...payment, idToken, isClick: false, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING\n            }, config }).start();\n        });\n    };\n\n    const restart = () => {\n        return fallbackToWebCheckout();\n    };\n\n    const shippingRequired = (orderID) => {\n        return getSupplementalOrderInfo(orderID).then(order => {\n            const { flags: { isShippingAddressRequired }, cart: { shippingAddress } } = order.checkoutSession;\n\n            if (!isShippingAddressRequired) {\n                return false;\n            }\n\n            if (shippingAddress && shippingAddress.isFullAddress) {\n                return false;\n            }\n\n            return true;\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then(orderID => {\n            return shippingRequired(orderID).then(requireShipping => {\n                if (requireShipping) {\n                    return fallbackToWebCheckout();\n                }\n\n                return approveOrder({ orderID, buyerAccessToken, instrumentID })\n                    .then(({ payerID }) => {\n                        return onApprove({ payerID }, { restart });\n                    }, err => {\n                        getLogger().warn('approve_order_error', { err: stringifyError(err) }).flush();\n                        return fallbackToWebCheckout();\n                    });\n            });\n        });\n    };\n\n    return {\n        start,\n        close: () => ZalgoPromise.resolve()\n    };\n}\n\nexport const walletCapture : PaymentFlow = {\n    name:              'wallet_capture',\n    setup:             setupWalletCapture,\n    isEligible:        isWalletCaptureEligible,\n    isPaymentEligible: isWalletCapturePaymentEligible,\n    init:              initWalletCapture,\n    spinner:           true,\n    inline:            true\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { extendUrl, uniqueID, getUserAgent, supportsPopups, memoize, stringifyError, isIos, isAndroid,\n    isSafari, isChrome, stringifyErrorMessage, cleanup, once, noop } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { PLATFORM, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { type CrossDomainWindowType, getDomain, isWindowClosed, onCloseWindow } from 'cross-domain-utils/src';\n\nimport type { ButtonProps } from '../button/props';\nimport { NATIVE_CHECKOUT_URI, WEB_CHECKOUT_URI, NATIVE_CHECKOUT_POPUP_URI } from '../config';\nimport { firebaseSocket, type MessageSocket, type FirebaseConfig } from '../api';\nimport { getLogger, promiseOne, promiseNoop } from '../lib';\nimport { USER_ACTION, FPTI_TRANSITION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\nimport { checkout } from './checkout';\n\nconst SOURCE_APP = 'paypal_smart_payment_buttons';\nconst TARGET_APP = 'paypal_native_checkout';\n\nconst POST_MESSAGE = {\n    AWAIT_REDIRECT:    'awaitRedirect',\n    DETECT_APP_SWITCH: 'detectAppSwitch',\n    DETECT_WEB_SWITCH: 'detectWebSwitch',\n    ON_COMPLETE:       'onComplete'\n};\n\nconst SOCKET_MESSAGE = {\n    SET_PROPS:          'setProps',\n    GET_PROPS:          'getProps',\n    CLOSE:              'close',\n    ON_SHIPPING_CHANGE: 'onShippingChange',\n    ON_APPROVE:         'onApprove',\n    ON_CANCEL:          'onCancel',\n    ON_ERROR:           'onError'\n};\n\nconst NATIVE_DOMAIN = 'https://www.paypal.com';\nconst NATIVE_POPUP_DOMAIN = 'https://ic.paypal.com';\nconst NATIVE_POPUP_SANDBOX = 'https://www.sandbox.paypal.com';\n\ntype NativeSocketOptions = {|\n    sessionUID : string,\n    firebaseConfig : FirebaseConfig,\n    version : string\n|};\n\ntype NativeConnection = {|\n    setProps : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>\n|};\n\nconst getNativeSocket = memoize(({ sessionUID, firebaseConfig, version } : NativeSocketOptions) : MessageSocket => {\n    const nativeSocket = firebaseSocket({\n        sessionUID,\n        sourceApp:        SOURCE_APP,\n        sourceAppVersion: version,\n        targetApp:        TARGET_APP,\n        config:           firebaseConfig\n    });\n\n    nativeSocket.onError(err => {\n        getLogger().error('native_socket_error', { err: stringifyError(err) });\n    });\n\n    return nativeSocket;\n});\n\nfunction isIOSSafari() : boolean {\n    return isIos() && isSafari();\n}\n\nfunction isAndroidChrome() : boolean {\n    return isAndroid() && isChrome();\n}\n\nfunction useDirectAppSwitch() : boolean {\n    return isAndroidChrome();\n}\n\nfunction didAppSwitch(popupWin : ?CrossDomainWindowType) : boolean {\n    return !popupWin || isWindowClosed(popupWin);\n}\n\nfunction isNativeOptedIn({ props } : {| props : ButtonProps |}) : boolean {\n    const { enableNativeCheckout } = props;\n\n    if (enableNativeCheckout) {\n        return true;\n    }\n\n    try {\n        if (window.localStorage.getItem('__native_checkout__')) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nlet initialPageUrl;\n\nfunction isNativeEligible({ props, config, serviceData } : IsEligibleOptions) : boolean {\n    \n    const { platform, onShippingChange, createBillingAgreement, createSubscription, env } = props;\n    const { firebase: firebaseConfig } = config;\n    const { eligibility } = serviceData;\n\n    if (env === ENV.LOCAL || env === ENV.STAGE) {\n        return false;\n    }\n\n    if (platform !== PLATFORM.MOBILE) {\n        return false;\n    }\n\n    if (onShippingChange && !isNativeOptedIn({ props })) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    if (!supportsPopups()) {\n        return false;\n    }\n\n    if (!firebaseConfig) {\n        return false;\n    }\n\n    if (!isIOSSafari() && !isAndroidChrome()) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout.paypal || eligibility.nativeCheckout.venmo) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isNativePaymentEligible({ payment, props, serviceData } : IsPaymentEligibleOptions) : boolean {\n    const { win, fundingSource } = payment;\n    const { eligibility } = serviceData;\n\n    if (win) {\n        return false;\n    }\n\n    if (!initialPageUrl) {\n        return false;\n    }\n\n    if (isNativeOptedIn({ props })) {\n        return true;\n    }\n\n    if (eligibility.nativeCheckout[fundingSource]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setupNative({ props } : SetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPageUrl } = props;\n\n        return getPageUrl().then(pageUrl => {\n            initialPageUrl = pageUrl;\n        });\n    });\n}\n\ntype NativeSDKProps = {|\n    orderID : string,\n    facilitatorAccessToken : string,\n    pageUrl : string,\n    commit : boolean,\n    userAgent : string,\n    buttonSessionID : string,\n    env : $Values<typeof ENV>,\n    webCheckoutUrl : string,\n    stageHost : ?string,\n    apiStageHost : ?string,\n    forceEligible : boolean\n|};\n\nfunction initNative({ props, components, config, payment, serviceData } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, onError, commit, getPageUrl,\n        buttonSessionID, env, stageHost, apiStageHost, onClick, onShippingChange } = props;\n    const { facilitatorAccessToken, sdkMeta } = serviceData;\n    const { fundingSource } = payment;\n    const { version, firebase: firebaseConfig } = config;\n\n    if (!firebaseConfig) {\n        throw new Error(`Can not run native flow without firebase config`);\n    }\n\n    const clean = cleanup();\n    let approved = false;\n    let cancelled = false;\n    let didFallback = false;\n\n    const close = memoize(() => {\n        return clean.all();\n    });\n\n    const listen = (popupWin, domain, event, handler) =>\n        paypal.postRobot.once(event, { window: popupWin, domain }, handler);\n\n    const fallbackToWebCheckout = (fallbackWin? : ?CrossDomainWindowType) => {\n        didFallback = true;\n        const checkoutPayment = { ...payment, win: fallbackWin, isClick: false };\n        const instance = checkout.init({ props, components, payment: checkoutPayment, config, serviceData });\n        clean.register(() => instance.close());\n        return instance.start();\n    };\n\n    const getNativeDomain = memoize(() : string => {\n        return NATIVE_DOMAIN;\n    });\n\n    const getNativePopupDomain = memoize(() : string => {\n        return (env === ENV.SANDBOX)\n            ? NATIVE_POPUP_SANDBOX\n            : NATIVE_POPUP_DOMAIN;\n    });\n\n    const getNativeUrl = memoize(({ pageUrl = initialPageUrl, sessionUID } = {}) : string => {\n        return extendUrl(`${ getNativeDomain() }${ NATIVE_CHECKOUT_URI[fundingSource] }`, {\n            query: { sdkMeta, sessionUID, buttonSessionID, pageUrl }\n        });\n    });\n\n    const getNativePopupUrl = memoize(() : string => {\n        return extendUrl(`${ getNativePopupDomain() }${ NATIVE_CHECKOUT_POPUP_URI[fundingSource] }`, {\n            query: { sdkMeta }\n        });\n    });\n\n    const getWebCheckoutUrl = memoize(({ orderID }) : string => {\n        return extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n            query: {\n                fundingSource,\n                facilitatorAccessToken,\n                token:         orderID,\n                useraction:    commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                native_xo:     '1'\n            }\n        });\n    });\n\n    const getSDKProps = memoize(() : ZalgoPromise<NativeSDKProps> => {\n        return ZalgoPromise.hash({\n            orderID: createOrder(),\n            pageUrl: getPageUrl()\n        }).then(({ orderID, pageUrl }) => {\n            const userAgent = getUserAgent();\n            const webCheckoutUrl = getWebCheckoutUrl({ orderID });\n            const forceEligible = isNativeOptedIn({ props });\n\n            return {\n                orderID, facilitatorAccessToken, pageUrl, commit, webCheckoutUrl,\n                userAgent, buttonSessionID, env, stageHost, apiStageHost, forceEligible\n            };\n        });\n    });\n\n    const connectNative = memoize(({ sessionUID } : {| sessionUID : string |}) : NativeConnection => {\n        const socket = getNativeSocket({\n            sessionUID, firebaseConfig, version\n        });\n\n        const setNativeProps = memoize(() => {\n            return getSDKProps().then(sdkProps => {\n                getLogger().info(`native_message_setprops`).flush();\n                return socket.send(SOCKET_MESSAGE.SET_PROPS, sdkProps);\n            }).then(() => {\n                getLogger().info(`native_response_setprops`).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_APP_SWITCH_ACK\n                }).flush();\n            });\n        });\n\n        const closeNative = memoize(() => {\n            getLogger().info(`native_message_close`).flush();\n            return socket.send(SOCKET_MESSAGE.CLOSE).then(() => {\n                getLogger().info(`native_response_close`).flush();\n                return close();\n            });\n        });\n\n        const getPropsListener = socket.on(SOCKET_MESSAGE.GET_PROPS, () : ZalgoPromise<NativeSDKProps> => {\n            getLogger().info(`native_message_getprops`).flush();\n            return getSDKProps();\n        });\n\n        const onShippingChangeListener = socket.on(SOCKET_MESSAGE.ON_SHIPPING_CHANGE, ({ data }) => {\n            getLogger().info(`native_message_onshippingchange`).flush();\n            if (onShippingChange) {\n                let resolved = true;\n                const actions = {\n                    resolve: () => {\n                        return ZalgoPromise.try(() => {\n                            resolved = true;\n                        });\n                    },\n                    reject: () => {\n                        return ZalgoPromise.try(() => {\n                            resolved = false;\n                        });\n                    }\n                };\n                return onShippingChange(data, actions).then(() => {\n                    return {\n                        resolved\n                    };\n                });\n            }\n        });\n\n        const onApproveListener = socket.on(SOCKET_MESSAGE.ON_APPROVE, ({ data: { payerID, paymentID, billingToken } }) => {\n            approved = true;\n            getLogger().info(`native_message_onapprove`).flush();\n            const data = { payerID, paymentID, billingToken, forceRestAPI: true };\n            const actions = { restart: () => fallbackToWebCheckout() };\n            return ZalgoPromise.all([\n                onApprove(data, actions),\n                close()\n            ]).then(noop);\n        });\n\n        const onCancelListener = socket.on(SOCKET_MESSAGE.ON_CANCEL, () => {\n            cancelled = true;\n            getLogger().info(`native_message_oncancel`).flush();\n            return ZalgoPromise.all([\n                onCancel(),\n                close()\n            ]).then(noop);\n        });\n\n        const onErrorListener = socket.on(SOCKET_MESSAGE.ON_ERROR, ({ data : { message } }) => {\n            getLogger().info(`native_message_onerror`, { err: message }).flush();\n            return ZalgoPromise.all([\n                onError(new Error(message)),\n                close()\n            ]).then(noop);\n        });\n\n        clean.register(getPropsListener.cancel);\n        clean.register(onShippingChangeListener.cancel);\n        clean.register(onApproveListener.cancel);\n        clean.register(onCancelListener.cancel);\n        clean.register(onErrorListener.cancel);\n\n        socket.reconnect();\n        \n        return {\n            setProps: setNativeProps,\n            close:    closeNative\n        };\n    });\n\n    const detectAppSwitch = once(({ sessionUID } : {| sessionUID : string |}) => {\n        getLogger().info(`native_detect_app_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_APP_SWITCH\n        }).flush();\n\n        return connectNative({ sessionUID }).setProps();\n    });\n\n    const detectWebSwitch = once((fallbackWin : ?CrossDomainWindowType) => {\n        getLogger().info(`native_detect_web_switch`).track({\n            [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_DETECT_WEB_SWITCH\n        }).flush();\n\n        return fallbackToWebCheckout(fallbackWin);\n    });\n\n    const validate = memoize(() => {\n        return ZalgoPromise.try(() => {\n            return onClick ? onClick({ fundingSource }) : true;\n        });\n    });\n\n    const popup = memoize((url : string) => {\n        const win = window.open(url);\n        clean.register(() => {\n            if (win && !isWindowClosed(win)) {\n                win.close();\n            }\n        });\n\n        return win;\n    });\n\n    const initDirectAppSwitch = ({ sessionUID } : {| sessionUID : string |}) => {\n        const nativeWin = popup(getNativeUrl({ sessionUID }));\n        const validatePromise = validate();\n        const delayPromise = ZalgoPromise.delay(500);\n\n        const detectWebSwitchListener = listen(nativeWin, getNativeDomain(), POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(nativeWin);\n        });\n\n        clean.register(detectWebSwitchListener.cancel);\n\n        return validatePromise.then(valid => {\n            if (!valid) {\n                return delayPromise.then(() => {\n                    if (didAppSwitch(nativeWin)) {\n                        return connectNative({ sessionUID }).close();\n                    }\n                }).then(() => {\n                    return close();\n                });\n            }\n\n            return createOrder().then(() => {\n                if (didAppSwitch(nativeWin)) {\n                    return detectAppSwitch({ sessionUID });\n                } else if (nativeWin) {\n                    return detectWebSwitch(nativeWin);\n                } else {\n                    throw new Error(`No window found`);\n                }\n            }).catch(err => {\n                return connectNative({ sessionUID }).close().then(() => {\n                    throw err;\n                });\n            });\n        });\n    };\n\n    const initPopupAppSwitch = ({ sessionUID } : {| sessionUID : string |}) => {\n        const popupWin = popup(getNativePopupUrl());\n\n        const closeListener = onCloseWindow(popupWin, () => {\n            return ZalgoPromise.delay(1000).then(() => {\n                if (!approved && !cancelled && !didFallback) {\n                    return ZalgoPromise.all([\n                        onCancel(),\n                        close()\n                    ]);\n                }\n            }).then(noop);\n        }, 500);\n\n        clean.register(() => {\n            closeListener.cancel();\n        });\n\n        const validatePromise = validate();\n\n        const awaitRedirectListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.AWAIT_REDIRECT, ({ data: { pageUrl } }) => {\n            getLogger().info(`native_post_message_await_redirect`).flush();\n            return validatePromise.then(valid => {\n                if (!valid) {\n                    return close().then(() => {\n                        throw new Error(`Validation failed`);\n                    });\n                }\n\n                return createOrder().then(() => {\n                    return { redirectUrl: getNativeUrl({ sessionUID, pageUrl }) };\n                });\n            });\n        });\n\n        const detectAppSwitchListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.DETECT_APP_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_app_switch`).flush();\n            return detectAppSwitch({ sessionUID });\n        });\n\n        const onCompleteListener = listen(popupWin, getNativePopupDomain(), POST_MESSAGE.ON_COMPLETE, () => {\n            getLogger().info(`native_post_message_on_complete`).flush();\n            popupWin.close();\n        });\n\n        const detectWebSwitchListener = listen(popupWin, getNativeDomain(), POST_MESSAGE.DETECT_WEB_SWITCH, () => {\n            getLogger().info(`native_post_message_detect_web_switch`).flush();\n            return detectWebSwitch(popupWin);\n        });\n\n        clean.register(awaitRedirectListener.cancel);\n        clean.register(detectAppSwitchListener.cancel);\n        clean.register(onCompleteListener.cancel);\n        clean.register(detectWebSwitchListener.cancel);\n\n        return awaitRedirectListener.then(() => {\n            return promiseOne([\n                detectAppSwitchListener,\n                detectWebSwitchListener\n            ]);\n        });\n    };\n\n    const click = () => {\n        return ZalgoPromise.try(() => {\n            const sessionUID = uniqueID();\n            return useDirectAppSwitch() ? initDirectAppSwitch({ sessionUID }) : initPopupAppSwitch({ sessionUID });\n        }).catch(err => {\n            return close().then(() => {\n                getLogger().error(`native_error`, { err: stringifyError(err) }).track({\n                    [FPTI_KEY.TRANSITION]: FPTI_TRANSITION.NATIVE_ERROR,\n                    [FPTI_KEY.ERROR_CODE]: 'native_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                }).flush();\n\n                throw err;\n            });\n        });\n    };\n\n    const start = promiseNoop;\n\n    return {\n        click,\n        start,\n        close\n    };\n}\n\nexport const native : PaymentFlow = {\n    name:              'native',\n    setup:             setupNative,\n    isEligible:        isNativeEligible,\n    isPaymentEligible: isNativePaymentEligible,\n    init:              initNative,\n    spinner:           true\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport { WEB_CHECKOUT_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../props';\nimport { USER_ACTION } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance, SetupOptions, IsEligibleOptions, IsPaymentEligibleOptions, InitOptions } from './types';\n\nlet parentPopupBridge;\n\nfunction setupPopupBridge({ props } : SetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const { getPopupBridge } = props;\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                parentPopupBridge = bridge;\n            });\n        }\n    });\n}\n\nfunction isPopupBridgeEligible({ props } : IsEligibleOptions) : boolean {\n    const { onShippingChange } = props;\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isPopupBridgePaymentEligible({ payment } : IsPaymentEligibleOptions) : boolean {\n    const { win } = payment;\n\n    if (win) {\n        return false;\n    }\n\n    if (!parentPopupBridge) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction initPopupBridge({ props, payment } : InitOptions) : PaymentFlowInstance {\n    const { createOrder, onApprove, onCancel, commit } = props;\n    const { fundingSource } = payment;\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            if (!parentPopupBridge) {\n                throw new Error(`Popup bridge required`);\n            }\n            \n            const url = extendUrl(`${ getDomain() }${ WEB_CHECKOUT_URI }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: parentPopupBridge.nativeUrl\n                }\n            });\n\n            return parentPopupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                if (!payerID && !billingToken) {\n                    throw new Error(`Expected payerID to be passed`);\n                }\n\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close: promiseNoop\n    };\n}\n\nexport const popupBridge : PaymentFlow = {\n    name:              'popup_bridge',\n    setup:             setupPopupBridge,\n    isEligible:        isPopupBridgeEligible,\n    isPaymentEligible: isPopupBridgePaymentEligible,\n    init:              initPopupBridge,\n    spinner:           true\n};\n","/* @flow */\n\nimport { noop, stringifyError } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { checkout, cardFields, native, honey, vaultCapture, walletCapture, popupBridge, type Payment, type PaymentFlow } from '../payment-flows';\nimport { sendBeacon, getLogger, promiseNoop } from '../lib';\nimport { FPTI_TRANSITION } from '../constants';\n\nimport { type ButtonProps, type Config, type ServiceData, type Components } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\n\nconst PAYMENT_FLOWS : $ReadOnlyArray<PaymentFlow> = [\n    vaultCapture,\n    walletCapture,\n    cardFields,\n    popupBridge,\n    native,\n    checkout,\n    honey\n];\n\nexport function setupPaymentFlows({ props, config, serviceData, components } : {| props : ButtonProps, config : Config, serviceData : ServiceData, components : Components |}) : ZalgoPromise<void> {\n    return ZalgoPromise.all(PAYMENT_FLOWS.map(flow => {\n        return flow.isEligible({ props, config, serviceData })\n            ? flow.setup({ props, config, serviceData, components })\n            : null;\n    })).then(noop);\n}\n\nexport function getPaymentFlow({ props, payment, config, serviceData } : {| props : ButtonProps, payment : Payment, config : Config, components : Components, serviceData : ServiceData |}) : PaymentFlow {\n    for (const flow of PAYMENT_FLOWS) {\n        if (flow.isEligible({ props, config, serviceData }) && flow.isPaymentEligible({ props, payment, config, serviceData })) {\n            return flow;\n        }\n    }\n\n    throw new Error(`Could not find eligible payment flow`);\n}\n\nconst sendPersonalizationBeacons = (personalization) => {\n    if (personalization && personalization.tagline && personalization.tagline.tracking) {\n        sendBeacon(personalization.tagline.tracking.click);\n    }\n    if (personalization && personalization.buttonText && personalization.buttonText.tracking) {\n        sendBeacon(personalization.buttonText.tracking.click);\n    }\n};\n\ntype InitiatePaymentType = {|\n    payment : Payment,\n    props : ButtonProps,\n    serviceData : ServiceData,\n    config : Config,\n    components : Components\n|};\n\nexport function initiatePaymentFlow({ payment, serviceData, config, components, props } : InitiatePaymentType) : ZalgoPromise<void> {\n    const { button, fundingSource } = payment;\n\n    return ZalgoPromise.try(() => {\n        const { personalization, merchantID } = serviceData;\n        const { clientID, onClick, createOrder, env } = props;\n\n        sendPersonalizationBeacons(personalization);\n\n        const { name, init, inline, spinner } = getPaymentFlow({ props, payment, config, components, serviceData });\n        const { click = promiseNoop, start, close } = init({ props, config, serviceData, components, payment });\n\n        const clickPromise = ZalgoPromise.try(click);\n        clickPromise.catch(noop);\n\n        getLogger().info(`button_click`).info(`pay_flow_${ name }`).track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.CHOSEN_FUNDING]: fundingSource,\n            [FPTI_KEY.PAYMENT_FLOW]:   name\n        }).flush();\n\n        return ZalgoPromise.hash({\n            valid: onClick ? onClick({ fundingSource }) : true\n        }).then(({ valid }) => {\n            if (!valid) {\n                return;\n            }\n\n            if (spinner) {\n                enableLoadingSpinner(button);\n            }\n\n            createOrder()\n                .then(orderID => updateButtonClientConfig({ orderID, fundingSource, inline }))\n                .catch(err => getLogger().error('update_client_config_error', { err: stringifyError(err) }));\n\n            const {\n                intent:   expectedIntent,\n                currency: expectedCurrency\n            } = props;\n\n            return ZalgoPromise.try(start)\n                .then(() => createOrder())\n                .then(orderID => validateOrder(orderID, { env, clientID, merchantID, expectedCurrency, expectedIntent }))\n                .then(() => clickPromise)\n                .catch(err => {\n                    return ZalgoPromise.all([\n                        close(),\n                        ZalgoPromise.reject(err)\n                    ]);\n                }).then(noop);\n        });\n\n    }).finally(() => {\n        disableLoadingSpinner(button);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : ?string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport const ENV = {\n    LOCAL:      ('local' : 'local'),\n    STAGE:      ('stage' : 'stage'),\n    SANDBOX:    ('sandbox' : 'sandbox'),\n    PRODUCTION: ('production' : 'production'),\n    TEST:       ('test' : 'test')\n};\n","/* @flow */\n\nexport const PLATFORM = {\n    DESKTOP: ('desktop' : 'desktop'),\n    MOBILE:  ('mobile' : 'mobile')\n};\n","/* @flow */\n\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { stringifyError } from 'belter/src';\n\nimport { getLogger } from '../lib';\nimport { FPTI_TRANSITION, FTPI_CUSTOM_KEY } from '../constants';\n\nimport type { PaymentFlow, PaymentFlowInstance } from './types';\n\nconst MESSAGE_SOURCE = {\n    SMART_BUTTON:    'smart_payment_buttons',\n    HONEY_EXTENSION: 'honey_extension'\n};\n\nconst MESSAGE_NAME = {\n    IDENTIFY_EXTENSION: 'identify_extension'\n};\n\nfunction setupHoney() {\n    try {\n        window.top.postMessage(JSON.stringify({\n            message_source: MESSAGE_SOURCE.SMART_BUTTON,\n            message_name:   MESSAGE_NAME.IDENTIFY_EXTENSION\n        }), '*');\n    } catch (err) {\n        getLogger().warn('honey_postmessage_failed', { err: stringifyError(err) });\n    }\n\n    window.addEventListener('message', ({ data }) => {\n        try {\n            data = JSON.parse(data);\n        } catch (err) {\n            return;\n        }\n\n        if (!data) {\n            return;\n        }\n\n        const {\n            message_source,\n            message_name,\n            message_data\n        } = data;\n\n        if (message_source !== MESSAGE_SOURCE.HONEY_EXTENSION) {\n            return;\n        }\n\n        if (message_name === MESSAGE_NAME.IDENTIFY_EXTENSION) {\n            const { device_id, session_id } = message_data;\n\n            getLogger().addTrackingBuilder(() => {\n                return {\n                    [ FTPI_CUSTOM_KEY.HONEY_DEVICE_ID ]:  device_id,\n                    [ FTPI_CUSTOM_KEY.HONEY_SESSION_ID ]: session_id\n                };\n            });\n\n            getLogger().info('identify_honey').track({\n                [ FPTI_KEY.TRANSITION ]: FPTI_TRANSITION.HONEY_IDENTIFY\n            }).flush();\n        }\n    });\n}\n\nfunction isHoneyEligible() : boolean {\n    return true;\n}\n\nfunction isHoneyPaymentEligible() : boolean {\n    return false;\n}\n\nfunction initHoney() : PaymentFlowInstance {\n    throw new Error(`Not Implemented`);\n}\n\nexport const honey : PaymentFlow = {\n    name:              'honey',\n    setup:             setupHoney,\n    isEligible:        isHoneyEligible,\n    isPaymentEligible: isHoneyPaymentEligible,\n    init:              initHoney,\n    inline:            true\n};\n","/* @flow */\n\nimport { onClick as onElementClick, destroyElement } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ContentType } from '../types';\nimport { renderSmartMenu } from '../menu/interface';\nimport { CHECKOUT_POPUP_DIMENSIONS, type Payment } from '../payment-flows';\nimport { deleteVault } from '../api';\nimport { DATA_ATTRIBUTES, BUYER_INTENT } from '../constants';\n\nimport { type ButtonProps } from './props';\nimport { enableLoadingSpinner, disableLoadingSpinner } from './dom';\n\nconst MENU_CHOICE = {\n    DELETE_VAULT:            'DELETE_VAULT',\n    SELECT_FUNDING_SHIPPING: 'SELECT_FUNDING_SHIPPING',\n    CHANGE_ACCOUNT:          'CHANGE_ACCOUNT'\n};\n\nconst popup = {\n    width:  CHECKOUT_POPUP_DIMENSIONS.WIDTH,\n    height: CHECKOUT_POPUP_DIMENSIONS.HEIGHT\n};\n\ntype ButtonDropdownProps = {|\n    payment : Payment,\n    props : ButtonProps,\n    content : ContentType,\n    initiatePayment : ({| payment : Payment |}) => ZalgoPromise<void>\n|};\n\nlet smartMenu;\n\nexport function renderButtonDropdown({ props, payment, content, initiatePayment } : ButtonDropdownProps) {\n    const { clientID, clientAccessToken } = props;\n    const { button, fundingSource, paymentMethodID } = payment;\n    const menuToggle = button.querySelector(`[${ DATA_ATTRIBUTES.MENU }]`);\n\n    const buttonParent = button.parentElement;\n\n    if (clientID && buttonParent && menuToggle && paymentMethodID && clientAccessToken) {\n        smartMenu = smartMenu || renderSmartMenu({ clientID });\n\n        onElementClick(menuToggle, event => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const PAYPAL_CHOICES = [\n                {\n                    id:    MENU_CHOICE.SELECT_FUNDING_SHIPPING,\n                    label: content.chooseCardOrShipping,\n                    popup\n                },\n                {\n                    id:    MENU_CHOICE.CHANGE_ACCOUNT,\n                    label: content.useDifferentAccount,\n                    popup\n                } /* ,\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedAccount\n                }\n                */\n            ];\n\n            const CARD_CHOICES = [\n                {\n                    id:    MENU_CHOICE.DELETE_VAULT,\n                    label: content.deleteVaultedCard\n                }\n            ];\n\n            const choices = (fundingSource === FUNDING.PAYPAL)\n                ? PAYPAL_CHOICES\n                : CARD_CHOICES;\n\n            const verticalOffset = button.getBoundingClientRect().bottom;\n            const loadingTimeout = setTimeout(() => enableLoadingSpinner(button), 50);\n\n            smartMenu.display({\n                choices,\n                verticalOffset,\n                onChoose: ({ id, win }) => {\n                    if (id === MENU_CHOICE.CHANGE_ACCOUNT) {\n                        return initiatePayment({ payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_ACCOUNT } });\n\n                    } else if (id === MENU_CHOICE.DELETE_VAULT) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not delete vault without client access token and payment method id`);\n                        }\n\n                        enableLoadingSpinner(button);\n                        return deleteVault({ paymentMethodID, clientAccessToken }).then(() => {\n                            disableLoadingSpinner(button);\n                            destroyElement(button);\n\n                            if (buttonParent.querySelectorAll(`[${ DATA_ATTRIBUTES.PAYMENT_METHOD_ID }]`).length === 0) {\n                                const payInstantlyHeader = buttonParent.querySelector('.paypal-vault-header');\n                                if (payInstantlyHeader) {\n                                    destroyElement(payInstantlyHeader);\n                                }\n                            }\n                        });\n\n                    } else if (id === MENU_CHOICE.SELECT_FUNDING_SHIPPING) {\n                        if (!clientAccessToken || !paymentMethodID) {\n                            throw new Error(`Can not change funding or shipping without client access token and payment method id`);\n                        }\n                        \n                        return initiatePayment({ payment: { ...payment, win, buyerIntent: BUYER_INTENT.PAY_WITH_DIFFERENT_FUNDING_SHIPPING } });\n                    }\n                }\n            }).then(() => {\n                clearTimeout(loadingTimeout);\n                disableLoadingSpinner(button);\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop, stringifyErrorMessage, stringifyError } from 'belter/src';\nimport { COUNTRY, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, PersonalizationType, ContentType, Wallet } from '../types';\nimport { fixClickFocus, getLogger } from '../lib';\nimport { type FirebaseConfig } from '../api';\nimport { DATA_ATTRIBUTES, BUYER_INTENT } from '../constants';\nimport { type Payment } from '../payment-flows';\n\nimport { getProps, getConfig, getComponents, getServiceData } from './props';\nimport { getSelectedFunding, getButtons } from './dom';\nimport { setupButtonLogger } from './logger';\nimport { setupRemember } from './remember';\nimport { setupPaymentFlows, initiatePaymentFlow } from './pay';\nimport { renderButtonDropdown } from './menu';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization : PersonalizationType,\n    isCardFieldsExperimentEnabled : boolean,\n    firebaseConfig? : FirebaseConfig,\n    facilitatorAccessToken : string,\n    content : ContentType,\n    sdkMeta : string,\n    wallet : ?Wallet,\n    buyerAccessToken : ?string,\n    eligibility : {|\n        cardFields : boolean,\n        nativeCheckout : {\n            [$Values<typeof FUNDING> ] : ?boolean\n        }\n    |}\n|};\n\nexport function setupButton(opts : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal SDK not loaded`);\n    }\n\n    const { facilitatorAccessToken, eligibility, fundingEligibility, buyerCountry: buyerGeoCountry, content, sdkMeta, buyerAccessToken, wallet,\n        cspNonce: serverCSPNonce, merchantID: serverMerchantID, personalization, isCardFieldsExperimentEnabled, firebaseConfig } = opts;\n\n    const clientID = window.xprops.clientID;\n\n    const serviceData = getServiceData({\n        eligibility, facilitatorAccessToken, buyerGeoCountry, serverMerchantID, fundingEligibility, personalization,\n        isCardFieldsExperimentEnabled, sdkMeta, buyerAccessToken, wallet });\n    const { merchantID } = serviceData;\n\n    let props = getProps({ facilitatorAccessToken });\n    const { env, sessionID, partnerAttributionID, commit, correlationID, locale,\n        buttonSessionID, merchantDomain, onInit, getPrerenderDetails, rememberFunding,\n        style } = props;\n        \n    const config = getConfig({ serverCSPNonce, firebaseConfig });\n    const { version } = config;\n    \n    const components = getComponents();\n\n    const { initPromise, isEnabled } = onInit();\n\n    let paymentProcessing = false;\n\n    function initiatePayment({ payment } : {| payment : Payment |}) : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (paymentProcessing) {\n                return;\n            }\n\n            props = getProps({ facilitatorAccessToken });\n\n            const { win, fundingSource } = payment;\n            const { onClick } = props;\n\n            if (onClick) {\n                onClick({ fundingSource });\n            }\n\n            if (isEnabled()) {\n                paymentProcessing = true;\n\n                return initiatePaymentFlow({ payment, config, serviceData, components, props }).finally(() => {\n                    paymentProcessing = false;\n                });\n            } else  {\n                if (win) {\n                    win.close();\n                }\n            }\n        }).catch(err => {\n            \n            getLogger()\n                .info('smart_buttons_payment_error', { err: stringifyError(err) })\n                .track({\n                    [FPTI_KEY.ERROR_CODE]: 'smart_buttons_payment_error',\n                    [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n                });\n\n            throw err;\n        });\n    }\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID, instrumentID } = getSelectedFunding(button);\n        const payment = { button, fundingSource, card, paymentMethodID, instrumentID, isClick: true, buyerIntent: BUYER_INTENT.PAY };\n        \n        fixClickFocus(button);\n        renderButtonDropdown({ props, payment, content, initiatePayment });\n        \n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            \n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupPrerenderTask = initPromise.then(() => {\n        return ZalgoPromise.hash({ prerenderDetails: getPrerenderDetails(), initPromise }).then(({ prerenderDetails }) => {\n            if (!prerenderDetails) {\n                return;\n            }\n\n            const { win, fundingSource, card } = prerenderDetails;\n            const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n            if (!button) {\n                throw new Error(`Can not find button element`);\n            }\n\n            const payment = { win, button, fundingSource, card, buyerIntent: BUYER_INTENT.PAY };\n            const payPromise = initiatePayment({ payment });\n\n            // $FlowFixMe\n            button.payPromise = payPromise;\n        });\n    });\n\n    const setupRememberTask = setupRemember({ rememberFunding, fundingEligibility });\n    const setupButtonLogsTask = setupButtonLogger({\n        style, env, version, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n    const setupPaymentFlowsTask = setupPaymentFlows({ props, config, serviceData, components });\n\n    return ZalgoPromise.hash({\n        initPromise, facilitatorAccessToken,\n        setupButtonLogsTask, setupPrerenderTask, setupRememberTask,\n        setupPaymentFlowsTask\n    }).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING, CURRENCY, ENV, FPTI_KEY } from '@paypal/sdk-constants/src';\nimport { stringifyError, stringifyErrorMessage } from 'belter/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW, FPTI_CONTEXT_TYPE, FTPI_CUSTOM_KEY } from '../constants';\nimport { updateClientConfig, getPayee, getSupplementalOrderInfo } from '../api';\nimport { getLogger } from '../lib';\nimport { CLIENT_ID_PAYEE_NO_MATCH, ORDER_VALIDATION_WHITELIST, SANDBOX_ORDER_VALIDATION_WHITELIST } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, inline = false } : {| orderID : string, fundingSource : $Values<typeof FUNDING>, inline : boolean | void |}) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  inline ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\ntype ValidateOptions = {|\n    env : $Values<typeof ENV>,\n    clientID : ?string,\n    merchantID : $ReadOnlyArray<string>,\n    expectedIntent : $Values<typeof INTENT>,\n    expectedCurrency : $Values<typeof CURRENCY>\n|};\n\nexport function validateOrder(orderID : string, { env, clientID, merchantID, expectedCurrency, expectedIntent } : ValidateOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.hash({\n        order: getSupplementalOrderInfo(orderID),\n        payee: getPayee(orderID)\n    }).then(({ order, payee }) => {\n        const cart = order.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk url. https://developer.paypal.com/docs/checkout/reference/customize-sdk/`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (clientID && CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                getLogger().info(`client_id_payee_no_match_${ clientID }`).flush();\n                // throw new Error(`Payee passed in transaction does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n\n        const xpropMerchantID = window.xprops.merchantID && window.xprops.merchantID[0];\n        if (xpropMerchantID && payeeMerchantID !== xpropMerchantID) {\n            throw new Error(`Payee passed in transaction does not match expected merchant id: ${ xpropMerchantID }`);\n        }\n    }).catch(err => {\n        const isSandbox = (env === ENV.SANDBOX);\n        const isWhitelisted = isSandbox\n            ? (clientID && SANDBOX_ORDER_VALIDATION_WHITELIST.indexOf(clientID) !== -1)\n            : (clientID && ORDER_VALIDATION_WHITELIST.indexOf(clientID) !== -1);\n\n        getLogger()\n            .warn(`${ isSandbox ? 'sandbox_' : '' }order_validation_error${ isWhitelisted ? '_whitelist' : '' }`, { err: stringifyError(err) })\n            .warn(`${ isSandbox ? 'sandbox_' : '' }order_validation_error${ isWhitelisted ? '_whitelist' : '' }_${ clientID || 'unknown' }`, { err: stringifyError(err) })\n            .track({\n                [ FPTI_KEY.TRANSITION ]:                  'process_order_validate',\n                [ FPTI_KEY.CONTEXT_TYPE ]:                FPTI_CONTEXT_TYPE.ORDER_ID,\n                [ FPTI_KEY.TOKEN ]:                       orderID,\n                [ FPTI_KEY.CONTEXT_ID ]:                  orderID,\n                [ FTPI_CUSTOM_KEY.INTEGRATION_ISSUE ]:    stringifyErrorMessage(err),\n                [FTPI_CUSTOM_KEY.INTEGRATION_WHITELIST ]: isWhitelisted ? 'true' : 'false'\n            })\n            .flush();\n\n        if (!isWhitelisted) {\n            throw err;\n        }\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { ProxyWindow } from '../types';\n\ntype SmartMenuProps = {|\n    clientID : string\n|};\n\ntype SmartMenu = {|\n    display : ({|\n        verticalOffset : number,\n        choices : $ReadOnlyArray<{|\n            id : string,\n        label : string,\n        popup? : {|\n            width : number,\n            height : number\n        |}\n            |}>,\n        onChoose : ({|\n            id : string,\n            win : ?ProxyWindow\n                |}) => void\n    |}) => ZalgoPromise<void>\n|};\n\nexport function renderSmartMenu({ clientID } : SmartMenuProps) : SmartMenu {\n\n    const { Menu } = paypal;\n\n    if (!Menu) {\n        throw new Error(`Menu component not found`);\n    }\n\n    const { renderTo, updateProps, show, hide } = Menu({ clientID });\n\n    const render = memoize(() => {\n        return renderTo(window.xprops.getParent(), '#smart-menu');\n    });\n\n    const display = ({ choices, verticalOffset, onChoose }) => {\n        return render().then(() => {\n            return updateProps({\n                verticalOffset,\n                choices,\n                onChoose: ({ id, win }) => {\n                    hide();\n                    return onChoose({ id, win });\n                }\n            });\n        }).then(() => {\n            return show();\n        });\n    };\n\n    hide();\n    render();\n\n    return { display };\n}\n","/* @flow */\n\nimport { FUNDING } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType } from '../types';\nimport type { RememberFunding } from '../props';\n\nexport function setupRemember({ rememberFunding, fundingEligibility } : {| rememberFunding : RememberFunding, fundingEligibility : FundingEligibilityType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FPTI_KEY, ENV } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType } from '../types';\nimport { getLogger, setupLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY, FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nimport type { ButtonStyle } from './props';\n\ntype ButtonLoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : ?string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string,\n    version : string,\n    style : ButtonStyle\n|};\n\nexport function setupButtonLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version, style } : ButtonLoggerOptions) : ZalgoPromise<void> {\n    const logger = getLogger();\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain, version });\n\n    logger.addPayloadBuilder(() => {\n        return {\n            buttonSessionID\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        return {\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.BUTTON_SESSION_UID]:     buttonSessionID,\n            [FPTI_KEY.BUTTON_VERSION]:         __SMART_BUTTONS__.__MINOR_VERSION__\n        };\n    });\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    return getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        });\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id'),\n    SDK_CACHE:              ('sdk_cache' : 'sdk_cache'),\n    SDK_LOAD_TIME:          ('sdk_load_time' : 'sdk_load_time'),\n    IS_VAULT:               ('is_vault' : 'is_vault'),\n    DISABLE_FUNDING:        ('disable_funding' : 'disable_funding'),\n    DISABLE_CARD:           ('disable_card' : 'disable_card'),\n    RESPONSE_DURATION:      ('response_duration' : 'response_duration'),\n    SDK_INTEGRATION_SOURCE: ('sdk_integration_source' : 'sdk_integration_source'),\n    PAYMENT_FLOW:           ('payment_flow' : 'payment_flow'),\n    BUTTON_VERSION:         ('button_version' : 'button_version')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n"],"sourceRoot":""}