{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/onAuth.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/index.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/button/button.js","webpack://spb/./src/payment-flows/vault.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/dist/paypal-sdk-constants.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","prototype","Error","dispatch","_this2","setTimeout","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","__webpack_exports__","promise_ZalgoPromise","getUserAgent","navigator","mockUserAgent","userAgent","isOperaMini","ua","isIEIntranet","document","documentMode","status","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","objectIDs","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","serializeArgs","JSON","stringify","Array","slice","subkey","val","obj","chars","uid","replace","charAt","floor","toISOString","toLowerCase","getObjectID","memoize","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","reset","displayName","inlineMemoize","logic","__inline_memoize_cache__","noop","stringifyError","level","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","promiseDebounce","localPromise","safeInterval","loop","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","_i2","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","esm_extends","join","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","addEventListener","event","keyCode","HEADERS","CONTENT_TYPE","ACCEPT","headerBuilders","request","_ref","_ref$method","_ref$headers","headers","json","data","_ref$win","win","_ref$timeout","normalizedHeaders","_i4","_Object$keys2","_i6","builtHeaders","headerBuilder","_i8","_Object$keys4","xhr","XMLHttpRequest","responseHeaders","rawHeaders","_rawHeaders$trim$spli2","trim","_line$split","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","encodeURIComponent","ontimeout","send","util_noop","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","_COUNTRY_LANGS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","_FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","FUNDING","PAYPAL","VENMO","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","ZIMPLER","WECHATPAY","SMART_BUTTONS","SMART_PAYMENT_BUTTONS","ACCESS_TOKEN_HEADER","DATA_ATTRIBUTES","CLASS","ORDER_API_ERROR","CONTEXT","TARGET_ELEMENT","ORDER_ID_PATTERN","INTEGRATION_ARTIFACT","USER_EXPERIENCE_FLOW","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","FPTI_STATE","FPTI_TRANSITION","FPTI_BUTTON_TYPE","AUTHORIZATION","CSRF_TOKEN","SOURCE","REQUESTED_BY","ACCESS_TOKEN","CLIENT_METADATA_ID","FUNDING_SOURCE","PAYMENT_METHOD_ID","LOADING","CLICKED","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","IFRAME","POPUP","BODY","PAYPAL_JS_SDK","INCONTEXT","INLINE","BUTTON_SESSION_ID","ORDER_ID","BUTTON","BUTTON_LOAD","CREATE_ORDER","unresolvedPromise","promiseNoop","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","target","source","getLogger","_ref2","prefix","_ref2$logLevel","logLevel","_ref2$transport","transport","_ref2$flushInterval","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","location","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","referer","host","lang","country","mID","paypal","version","_logger$track","persistedAccessToken","createAccessToken","basicAuth","AUTH_API_URL","Authorization","grant_type","access_token","persistAccessToken","accessToken","createOrderID","order","currency","xprops","intent","toUpperCase","purchase_units","unit","amount","currency_code","payee","UNKNOWN","merchant_id","application_context","PayPal-Partner-Attribution-Id","ORDERS_API_URL","_getLogger$track","id","getOrder","orderID","callSmartAPI","API_URI","captureOrder","authorizeOrder","patchOrder","patch","VALIDATE_CONTINGENCIES","THREE_DOMAIN_SECURE","validatePaymentMethod","_headers","clientAccessToken","paymentMethodID","enableThreeDomainSecure","buttonSessionID","paymentSource","token","type","contingencies","payment_source","VALIDATE_PAYMENT_METHOD_API","billingTokenToOrderID","billingToken","PAYMENT","subscriptionIdToCartId","subscriptionID","SUBSCRIPTION","enableVault","_ref3","_headers2","callGraphQL","variables","updateClientConfig","_ref4","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createSubscription","subscriptionPayload","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","activateSubscription","getSubscription","EXPERIENCE_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","GRAPHQL","_extends","assign","_reqHeaders","reqHeaders","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ack","contingency","_ref3$variables","_ref3$headers","errors","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","getTop","top","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","frames","len","frame","getFrames","_i5","_getAllChildFrames2","iframeWindows","iframeFrames","allowMock","closed","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","getButtons","getSelectedFunding","enableLoadingSpinner","disableLoadingSpinner","getNonce","belter_src__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","button","getAttribute","card","classList","add","remove","nonce","POPUP_BRIDGE_OPTYPE","CANCEL","_props__WEBPACK_IMPORTED_MODULE_1__","_createOrder__WEBPACK_IMPORTED_MODULE_2__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_3__","_createSubscription__WEBPACK_IMPORTED_MODULE_4__","_onApprove__WEBPACK_IMPORTED_MODULE_5__","_onInit__WEBPACK_IMPORTED_MODULE_6__","_onCancel__WEBPACK_IMPORTED_MODULE_7__","_onShippingChange__WEBPACK_IMPORTED_MODULE_8__","_onClick__WEBPACK_IMPORTED_MODULE_9__","_onAuth__WEBPACK_IMPORTED_MODULE_10__","_onError__WEBPACK_IMPORTED_MODULE_11__","__WEBPACK_IMPORT_KEY__","_getPopupBridge__WEBPACK_IMPORTED_MODULE_12__","buildXOnInitData","buildXOnInitActions","getOnInit","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","enable","disable","onInit","enabled","isEnabled","buildXCreateOrderData","buildXCreateOrderActions","getCreateOrder","belter_src__WEBPACK_IMPORTED_MODULE_0__","_api__WEBPACK_IMPORTED_MODULE_1__","createBillingAgreement","createOrder","getOnApprove","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_constants__WEBPACK_IMPORTED_MODULE_3__","_lib__WEBPACK_IMPORTED_MODULE_4__","onApprove","payerID","paymentID","restart","handleProcessorError","details","some","detail","issue","capture","authorize","getSubscriptionApi","activateSubscriptionApi","subscription","activate","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","actions","getOnShippingChange","onShippingChange","buildXOnClickData","buildXOnClickActions","getOnClick","_lib__WEBPACK_IMPORTED_MODULE_2__","_xprops$onClick","valid","getOnAuth","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","getCreateSubscription","revise","createSubscriptionFunc","_button__WEBPACK_IMPORTED_MODULE_0__","getGlobalProps","getButtonCallbackProps","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_0__","_dom__WEBPACK_IMPORTED_MODULE_1__","_onInit__WEBPACK_IMPORTED_MODULE_2__","_createOrder__WEBPACK_IMPORTED_MODULE_3__","_onApprove__WEBPACK_IMPORTED_MODULE_4__","_onCancel__WEBPACK_IMPORTED_MODULE_5__","_onShippingChange__WEBPACK_IMPORTED_MODULE_6__","_onClick__WEBPACK_IMPORTED_MODULE_7__","_onAuth__WEBPACK_IMPORTED_MODULE_8__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_9__","_createSubscription__WEBPACK_IMPORTED_MODULE_10__","cspNonce","_xprops$buyerCountry","buyerCountry","getPopupBridge","getPrerenderDetails","rememberFunding","remember","vault","buyerGeoCountry","onAuth","checkoutOpen","canRenderTop","initCheckout","fundingEligibility","_props$validationProm","validationPromise","approved","start","_window$paypal$Checko","Checkout","enableVaultSetup","closeCheckout","onClose","close","triggerError","renderPromise","renderTo","cardFieldsOpen","highlightCard","forEach","el","style","opacity","openCardFields","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","display","recalculateMargin","marginTop","offsetHeight","transitionDuration","setupButton","opts","serverCSPNonce","init","_getGlobalProps","popupBridge","buttonProcessing","pay","_getButtonCallbackPro","isCardFields","enableInlineGuest","isVaultCapture","isVaultCaptureEligible","isPopupBridge","isPopupBridgeEligible","links","link","rel","instance","ThreeDomainSecure","handleThreeDomainSecure","handleValidateResponse","initVault","_window$paypal$CardFi","CardFields","onCardTypeChange","render","initCardFields","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","initPopupBridge","updateClientConfiguration","updateButtonClientConfig","match","cart","checkoutSession","amounts","total","currencyCode","expectedIntent","expectedCurrency","validateOrder","tasks","_getSelectedFunding","onElementClick","preventDefault","stopPropagation","blur","venmo","eligible","bridge","pageRenderTime","fundingSources","layout","color","size","shape","label","innerWidth","triggerButtonLogs","setupCheckout","canRenderTo","prerender","prerenderDetails","require","configurable","default","./src/index.js","LANG","CS","DA","EL","EN","HE","JA","KO","ZH","COUNTRY_LANGS","SDK_SETTINGS","CLIENT_TOKEN","STAGE_HOST","API_STAGE_HOST","CSP_NONCE","BUTTONS","HOSTED_FIELDS","ANGULARJS","ANGULAR","REACT","VUE","TRUE","FALSE","QUERY_BOOL","LOCAL","STAGE","SANDBOX","PRODUCTION","TEST","AUD","BRL","CAD","CZK","DKK","EUR","HKD","HUF","INR","ILS","JPY","MYR","MXN","TWD","NZD","NOK","PHP","PLN","GBP","RUB","SGD","SEK","CHF","THB","USD","PLATFORM","DESKTOP","MOBILE","VISA","MASTERCARD","AMEX","DISCOVER","HIPER","ELO","JCB","CUP","DEFAULT_COUNTRY","DEFAULT_CURRENCY","DEFAULT_INTENT","DEFAULT_COMMIT","DEFAULT_SALE_COMMIT","DEFAULT_NONSALE_COMMIT","DEFAULT_VAULT","DEFAULT_COMPONENTS","DEFAULT_DEBUG"],"mappings":"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A;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAA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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    [COUNTRY.AD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.AG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AL]: [ LANG.EN ],\n    [COUNTRY.AM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AR]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.AT]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.AU]: [ LANG.EN ],\n    [COUNTRY.AW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BA]: [ LANG.EN ],\n    [COUNTRY.BB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BE]: [ LANG.EN, LANG.NL, LANG.FR ],\n    [COUNTRY.BF]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BG]: [ LANG.EN ],\n    [COUNTRY.BH]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BI]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BN]: [ LANG.EN ],\n    [COUNTRY.BO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.BR]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.BS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BT]: [ LANG.EN ],\n    [COUNTRY.BW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BY]: [ LANG.EN ],\n    [COUNTRY.BZ]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.CA]: [ LANG.EN, LANG.FR ],\n    [COUNTRY.CD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.CG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CH]: [ LANG.DE, LANG.FR, LANG.EN ],\n    [COUNTRY.CI]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CL]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CM]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CN]: [ LANG.ZH ],\n    [COUNTRY.CO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CR]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CY]: [ LANG.EN ],\n    [COUNTRY.CZ]: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DE]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.DJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.DK]: [ LANG.DA, LANG.EN ],\n    [COUNTRY.DM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.DZ]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EC]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.EE]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EG]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ER]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ES]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.ET]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FI]: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FM]: [ LANG.EN ],\n    [COUNTRY.FO]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FR]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.GA]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GB]: [ LANG.EN ],\n    [COUNTRY.GD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GL]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GP]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GR]: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GT]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.GW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.HK]: [ LANG.EN, LANG.ZH ],\n    [COUNTRY.HN]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.HR]: [ LANG.EN ],\n    [COUNTRY.HU]: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ID]: [ LANG.ID, LANG.EN ],\n    [COUNTRY.IE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.IL]: [ LANG.HE, LANG.EN ],\n    [COUNTRY.IN]: [ LANG.EN ],\n    [COUNTRY.IS]: [ LANG.EN ],\n    [COUNTRY.IT]: [ LANG.IT, LANG.EN ],\n    [COUNTRY.JM]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.JO]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.JP]: [ LANG.JA, LANG.EN ],\n    [COUNTRY.KE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KH]: [ LANG.EN ],\n    [COUNTRY.KI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KM]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.KN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KR]: [ LANG.KO, LANG.EN ],\n    [COUNTRY.KW]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LA]: [ LANG.EN ],\n    [COUNTRY.LC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LK]: [ LANG.EN ],\n    [COUNTRY.LS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LT]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LU]: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LV]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MC]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.MD]: [ LANG.EN ],\n    [COUNTRY.ME]: [ LANG.EN ],\n    [COUNTRY.MG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MK]: [ LANG.EN ],\n    [COUNTRY.ML]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.MN]: [ LANG.EN ],\n    [COUNTRY.MQ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MT]: [ LANG.EN ],\n    [COUNTRY.MU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MV]: [ LANG.EN ],\n    [COUNTRY.MW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MX]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.MY]: [ LANG.EN ],\n    [COUNTRY.MZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NE]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.NF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NG]: [ LANG.EN ],\n    [COUNTRY.NI]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.NL]: [ LANG.NL, LANG.EN ],\n    [COUNTRY.NO]: [ LANG.NO, LANG.EN ],\n    [COUNTRY.NP]: [ LANG.EN ],\n    [COUNTRY.NR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.OM]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PA]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PH]: [ LANG.EN ],\n    [COUNTRY.PL]: [ LANG.PL, LANG.EN ],\n    [COUNTRY.PM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PT]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.PW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PY]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.QA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.RE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RU]: [ LANG.RU, LANG.EN ],\n    [COUNTRY.RW]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SC]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SE]: [ LANG.SV, LANG.EN ],\n    [COUNTRY.SG]: [ LANG.EN ],\n    [COUNTRY.SH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SK]: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SL]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ST]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SV]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.SZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TG]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TH]: [ LANG.TH, LANG.EN ],\n    [COUNTRY.TJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TN]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TO]: [ LANG.EN ],\n    [COUNTRY.TR]: [ LANG.TR, LANG.EN ],\n    [COUNTRY.TT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TW]: [ LANG.ZH, LANG.EN ],\n    [COUNTRY.TZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UA]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.US]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UY]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VN]: [ LANG.EN ],\n    [COUNTRY.VU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WS]: [ LANG.EN ],\n    [COUNTRY.YE]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.YT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZW]: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:   ('client-id' : 'client-id'),\n    MERCHANT_ID: ('merchant-id' : 'merchant-id'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:      ('paypal' : 'paypal'),\n    VENMO:       ('venmo' : 'venmo'),\n    CREDIT:      ('credit' : 'credit'),\n    CARD:        ('card' : 'card'),\n    IDEAL:       ('ideal' : 'ideal'),\n    SEPA:        ('sepa' : 'sepa'),\n    BANCONTACT:  ('bancontact' : 'bancontact'),\n    GIROPAY:     ('giropay' : 'giropay'),\n    SOFORT:      ('sofort' : 'sofort'),\n    EPS:         ('eps' : 'eps'),\n    MYBANK:      ('mybank' : 'mybank'),\n    P24:         ('p24' : 'p24'),\n    ZIMPLER:     ('zimpler' : 'zimpler'),\n    WECHATPAY:   ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const ACCESS_TOKEN_HEADER = 'x-paypal-internal-euat';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n\n    CSRF_TOKEN:         'x-csrf-jwt',\n    SOURCE:             'x-source',\n    REQUESTED_BY:       'x-requested-by',\n\n    ACCESS_TOKEN:           'x-paypal-internal-euat',\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const ORDER_ID_PATTERN = /^(EC-)?[A-Z0-9]+$/;\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:  ('process_button_load' : 'process_button_load'),\n    CREATE_ORDER: ('process_create_order' : 'process_create_order')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    merchantID : ?string\n|};\n\nexport function setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n        const mID = merchantID;\n\n        return {\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              mID && mID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            window.paypal.version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, inlineMemoize, base64encode, request } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { ACCESS_TOKEN_HEADER } from '../constants';\n\nimport { addHeaderBuilder } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nlet persistedAccessToken;\n\naddHeaderBuilder(() => {\n    return {\n        [ ACCESS_TOKEN_HEADER ]: persistedAccessToken\n    };\n});\n\nexport const persistAccessToken = memoize((accessToken) : ZalgoPromise<void> => {\n    return ZalgoPromise.try(() => {\n        if (accessToken) {\n            persistedAccessToken = accessToken;\n        }\n    });\n});\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { SDK_QUERY_KEYS, UNKNOWN, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\nexport function createOrderID(accessToken : string, order : OrderCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!order) {\n        throw new Error(`Expected order details to be passed`);\n    }\n\n    const currency = window.xprops.currency;\n    const intent = window.xprops.intent;\n    const merchantID = window.xprops.merchantID;\n\n    order = { ...order };\n\n    if (order.intent && order.intent.toLowerCase() !== intent) {\n        throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n    }\n\n    // $FlowFixMe\n    order = { ...order, intent: intent.toUpperCase() };\n\n    order.purchase_units = order.purchase_units.map(unit => {\n        if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n            throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n        }\n\n        let payee = unit.payee;\n\n        if (payee) {\n            if (!merchantID) {\n                throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag. Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ UNKNOWN } if you do not have access to the merchant id`);\n            }\n\n            if (payee.merchant_id && merchantID[0] !== UNKNOWN && payee.merchant_id !== merchantID) {\n                throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n            }\n        }\n\n        if (merchantID && merchantID[0] !== UNKNOWN) {\n            payee = {\n                ...payee,\n                merchant_id: merchantID[0]\n            };\n        }\n\n        return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n    });\n\n    order.application_context = order.application_context || {};\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    ORDERS_API_URL,\n        headers,\n        json:   order\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        body.id,\n            [FPTI_KEY.CONTEXT_ID]:   body.id\n        });\n\n        return body.id;\n    });\n}\n\nexport function getOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.ORDER }/${ orderID }`\n    });\n}\n\nexport function captureOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/capture`\n    });\n}\n\nexport function authorizeOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/authorize`\n    });\n}\n\nexport function patchOrder(orderID : string, patch : []) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/patch`,\n        json:   { data: { patch } }\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [HEADERS.AUTHORIZATION]:            `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: window.xprops.partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     window.xprops.buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\nexport function activateSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        method: `post`,\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\n\nexport function getSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './subscription';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`,\n    GRAPHQL:        '/graphql'\n};\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT: '/checkoutnow'\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { API_URI } from '../config';\nimport { HEADERS, SMART_BUTTONS, SMART_PAYMENT_BUTTONS } from '../constants';\n\nconst headerBuilders = [];\n\nexport function addHeaderBuilder(builder : () => { [string] : string }) {\n    headerBuilders.push(builder);\n}\n\ntype APIRequest = {|\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    let reqHeaders = {\n        [ HEADERS.SOURCE ]:       SMART_BUTTONS,\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    for (const headerBuilder of headerBuilders) {\n        reqHeaders = {\n            ...reqHeaders,\n            ...headerBuilder()\n        };\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status }`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack }`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     API_URI.GRAPHQL,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ API_URI.GRAPHQL } returned status ${ status }`);\n        }\n\n        return body;\n    });\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onAuth';\nexport * from './onError';\nexport * from './getPopupBridge';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    promise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const promise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            promise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport {\n    createAccessToken,\n    createOrderID,\n    billingTokenToOrderID,\n    subscriptionIdToCartId\n} from '../../api';\n\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\nimport type { CreateSubscription } from './createSubscription';\n\nexport type XCreateOrderDataType = {||};\n\nexport type XCreateOrderActionsType = {|\n    order : {\n        create : (Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateOrderActions({ clientID } : { clientID : string }) : XCreateOrderActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createOrderID(accessToken, data);\n        });\n    };\n\n    return {\n        order: { create }\n    };\n}\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function getCreateOrder(xprops : XProps, { createBillingAgreement, createSubscription } : { createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, clientID } = xprops;\n\n    return memoize(() => {\n        if (createBillingAgreement) {\n            return createBillingAgreement().then(billingTokenToOrderID);\n        }  else if (createSubscription) {\n            return createSubscription().then(subscriptionIdToCartId);\n        } else if (createOrder) {\n            return createOrder(buildXCreateOrderData(), buildXCreateOrderActions({ clientID }));\n        } else {\n            throw new Error(`No mechanism to create order`);\n        }\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse } from '../../api';\nimport { ORDER_API_ERROR } from '../../constants';\nimport { unresolvedPromise } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string\n|};\n\nexport type XOnApproveActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        patch : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, restart, subscriptionID } : { orderID : string, restart : () => ZalgoPromise<void>, intent : $Values<typeof INTENT>, subscriptionID : string }) : XOnApproveActionsType {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() =>\n        getOrder(orderID));\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID)\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() =>\n        authorizeOrder(orderID)\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError));\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID));\n\n    return {\n        order:         { capture, authorize, patch, get },\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent } = xprops;\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID }, { restart }) => {\n        return createOrder().then(orderID => {\n            return onApprove({ orderID, payerID, paymentID, billingToken, subscriptionID }, buildXApproveActions({ orderID, intent, restart, subscriptionID })).catch(err => {\n                return onError(err);\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize } from 'belter/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel, onError } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    \n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions } : { orderID : string, actions : OnShippingChangeActionsType }) : XOnShippingChangeActionsType {\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    return {\n        ...actions,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange } = xprops;\n\n    if (onShippingChange) {\n        return (data, actions) => {\n            return createOrder().then(orderID => {\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, actions }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING } from '@paypal/sdk-constants';\n\nimport { promiseNoop } from '../../lib';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    // $FlowFixMe\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => true),\n        reject:  () => ZalgoPromise.try(() => false)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick {\n    const { onClick = promiseNoop } = xprops;\n\n    return ({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== false);\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { persistAccessToken } from '../../api';\n\nexport type OnAuthDataType = {|\n    accessToken : string\n|};\n\nexport type OnAuth = (OnAuthDataType) => ZalgoPromise<void>;\n\nexport function getOnAuth() : OnAuth {\n    return ({ accessToken }) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            return persistAccessToken(accessToken);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return memoize(() => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions());\n        });\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport { createAccessToken, createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ clientID } : { clientID : string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createSubscription(accessToken, data);\n        });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return reviseSubscription(accessToken, subscriptionID, data);\n        });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc } = xprops;\n    const { clientID } = xprops;\n    if (createSubscriptionFunc) {\n        return memoize(() => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ clientID }));\n        });\n    }\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n","/* @flow */\n\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { OnAuth } from './onAuth';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n    \n    onInit : XOnInit,\n    onApprove : XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type GlobalProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n\n    onInit : OnInit,\n    onError : OnError\n|};\n\nexport type ButtonCallbackProps = {|\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onClick : OnClick,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\n\nimport { getNonce } from '../dom';\n\nimport type { XProps, GlobalProps, ButtonCallbackProps } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getOnAuth } from './onAuth';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getGlobalProps({ xprops, buyerGeoCountry, cspNonce } : {| xprops : XProps, buyerGeoCountry : ?$Values<typeof COUNTRY>, cspNonce : ?string |}) : GlobalProps {\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        clientAccessToken,\n        buyerCountry = buyerGeoCountry || COUNTRY.US,\n        getPopupBridge,\n        getPrerenderDetails,\n        enableThreeDomainSecure,\n        remember: rememberFunding,\n        onError\n    } = xprops;\n\n    cspNonce = cspNonce || getNonce();\n    const onInit = getOnInit(xprops);\n\n    return {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n        enableThreeDomainSecure,\n\n        onInit,\n        onError\n    };\n}\n\nexport function getButtonCallbackProps({ xprops } : {| xprops : XProps |}) : ButtonCallbackProps {\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops);\n    const createOrder = getCreateOrder(xprops, { createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { createOrder });\n    const onCancel = getOnCancel(xprops, { createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { createOrder });\n    const onClick = getOnClick(xprops);\n    const onAuth = getOnAuth();\n\n    return {\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onClick,\n        onAuth,\n        onShippingChange\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport type { ProxyWindow, LocaleType, FundingEligibilityType } from '../types';\nimport type { CreateOrder, OnApprove, OnCancel, OnAuth, OnShippingChange, CreateBillingAgreement, CreateSubscription } from '../button/props';\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else {\n        return window.xprops.getParent();\n    }\n}\n\nexport function setupCheckout() : ZalgoPromise<void> {\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\ntype VaultSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction isVaultSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription } : VaultSetupEligibleProps) : boolean {\n    if (!window.xprops.enableVault) {\n        return false;\n    }\n\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement) {\n        return false;\n    }\n\n    // No buyer vault for subscription\n    if (createSubscription) {\n        return false;\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (clientAccessToken && isVaultSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nexport function getDefaultContext() : $Values<typeof CONTEXT> {\n    return supportsPopups() ? CONTEXT.POPUP : CONTEXT.IFRAME;\n}\n\ntype CheckoutProps= {|\n    win? : ?ProxyWindow,\n    context? : $Values<typeof CONTEXT>,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : (mixed) => ZalgoPromise<void>,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    validationPromise? : ZalgoPromise<boolean>\n|};\n\ntype CheckoutInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\nexport function initCheckout(props : CheckoutProps) : CheckoutInstance {\n    const { win, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, context, locale, commit, onError, vault,\n        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription, validationPromise = ZalgoPromise.resolve(true) } = props;\n\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        return validationPromise.then(valid => {\n            if (valid && !approved) {\n                return onCancel();\n            }\n        });\n    };\n\n    const { renderTo, close: closeCheckout, onError: triggerError } = window.paypal.Checkout({\n        window: win,\n\n        createOrder: () => {\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return unresolvedPromise();\n                }\n\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            });\n        },\n\n        onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n            approved = true;\n\n            return closeCheckout().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, subscriptionID }, { restart });\n            });\n        },\n\n        onCancel: () => {\n            return validationPromise.then(valid => {\n                if (valid) {\n                    return closeCheckout().then(() => {\n                        return onCancel();\n                    });\n                }\n            });\n        },\n\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n\n        fundingSource,\n        card,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    checkoutOpen = true;\n    const renderPromise = renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n\n    const close = () => {\n        checkoutOpen = false;\n        return closeCheckout();\n    };\n\n    const start = () => {\n        return validationPromise.then(valid => {\n            return valid ? renderPromise : close();\n        }).then(noop);\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll } from 'belter/src';\n\nimport { CONTEXT, DATA_ATTRIBUTES } from '../constants';\nimport type { LocaleType, FundingEligibilityType, ProxyWindow } from '../types';\nimport { unresolvedPromise, promiseNoop } from '../lib';\nimport type {\n    CreateOrder,\n    OnApprove,\n    OnCancel,\n    OnAuth,\n    OnShippingChange,\n    OnError,\n    CreateBillingAgreement,\n    CreateSubscription\n} from '../button/props';\n\nimport { initCheckout } from './checkout';\n\nlet cardFieldsOpen = false;\n\ntype CardFieldsProps = {|\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : OnError,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType\n|};\n\ntype CardFieldsInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype CardFieldsEligibleProps = {|\n    win : ?ProxyWindow,\n    vault : boolean,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isCardFieldsEligible({ win, vault, onShippingChange, fundingSource } : CardFieldsEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!window.xprops.enableInlineGuest) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : $Values<typeof CARD>) {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nconst openCardFields = () => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        const margin = -(buttonsContainer.offsetHeight - cardButtonsContainer.offsetHeight);\n        buttonsContainer.style.marginTop = `${ margin }px`;\n    };\n\n    window.addEventListener('resize', () => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    });\n\n    recalculateMargin();\n};\n\nexport function initCardFields(props : CardFieldsProps) : CardFieldsInstance {\n    const { fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, locale, commit, onError } = props;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start:        promiseNoop,\n            close:        promiseNoop,\n            triggerError: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n        return onCancel();\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    const { render, close, onError: triggerError } = window.paypal.CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken }, { restart });\n            });\n        },\n\n        onCancel,\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n        onCardTypeChange,\n\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        openCardFields();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { setupLogger } from '../lib';\nimport { initCheckout, setupCheckout, isVaultCaptureEligible, isCardFieldsEligible, initVault, initCardFields } from '../payment-flows';\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport { isPopupBridgeEligible, initPopupBridge } from '../payment-flows/popup-bridge';\n\nimport { getGlobalProps, getButtonCallbackProps } from './props';\nimport { getSelectedFunding, enableLoadingSpinner, getButtons, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\nimport { triggerButtonLogs } from './logs';\n\nexport function setupButton(opts : { fundingEligibility : FundingEligibilityType, buyerCountry? : ?$Values<typeof COUNTRY>, cspNonce? : string }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    if (opts.paypal) {\n        // $FlowFixMe\n        opts = { fundingEligibility: opts };\n    }\n\n    const { fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce } = opts;\n\n    if (!window.paypal) {\n        throw new Error(`PayPal library not loaded`);\n    }\n\n    const {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        enableThreeDomainSecure,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n\n        onError,\n        onInit\n    } = getGlobalProps({ xprops: window.xprops, buyerGeoCountry, cspNonce: serverCSPNonce });\n\n    // eslint-disable-next-line prefer-const\n    let init;\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID });\n\n    let buttonProcessing = false;\n    let popupBridge;\n\n    const pay = ({ button, win, fundingSource, card, paymentMethodID } : { button : HTMLElement, win? : ?ProxyWindow, fundingSource : $Values<typeof FUNDING>, card : ?$Values<typeof CARD>, paymentMethodID? : ?string }) => {\n        return ZalgoPromise.try(() => {\n            if (buttonProcessing) {\n                return;\n            }\n\n            buttonProcessing = true;\n\n            const {\n                createOrder,\n                createBillingAgreement,\n                onApprove,\n                onCancel,\n                onClick,\n                onAuth,\n                onShippingChange,\n                createSubscription\n            } = getButtonCallbackProps({ xprops: window.xprops });\n\n            const validationPromise = onClick({ fundingSource });\n\n            if (!init || !init.isEnabled()) {\n                return win ? win.close() : null;\n            }\n\n            const isCardFields = isCardFieldsEligible({ win, vault, onShippingChange, fundingSource });\n            const isVaultCapture = isVaultCaptureEligible({ win, paymentMethodID, onShippingChange });\n            const isPopupBridge = isPopupBridgeEligible({ win, popupBridge, onShippingChange });\n\n            if (isVaultCapture || isPopupBridge) {\n                enableLoadingSpinner(button);\n            }\n\n            const { start, close, triggerError } = (() => {\n                if (isVaultCapture) {\n                    return initVault({\n                        createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure\n                    });\n                }\n\n                if (isCardFields) {\n                    return initCardFields({\n                        fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription\n                    });\n                }\n\n                if (isPopupBridge) {\n                    return initPopupBridge({\n                        popupBridge, createOrder, onApprove, onCancel\n                    });\n                }\n\n                return initCheckout({\n                    win, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                    onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                    clientAccessToken, fundingEligibility, validationPromise, createBillingAgreement, createSubscription\n                });\n            })();\n\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return ZalgoPromise.all([\n                        close(),\n                        win && win.close()\n                    ]).then(noop);\n                }\n\n                createOrder().then(orderID => {\n                    return updateButtonClientConfig({ orderID, fundingSource, isCardFields });\n                });\n\n                return start()\n                    .then(() => createOrder())\n                    .then((orderID) => validateOrder(orderID))\n                    .catch(err => {\n                        // $FlowFixMe\n                        return ZalgoPromise.all([\n                            triggerError(err),\n                            close()\n                        ]);\n                    });\n                    \n            });\n        }).finally(() => {\n            buttonProcessing = false;\n            disableLoadingSpinner(button);\n        });\n    };\n\n    const tasks = {};\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            pay({ button, fundingSource, card, paymentMethodID });\n        });\n\n        button.addEventListener('mousedown', () => {\n            button.classList.add(CLASS.CLICKED);\n        });\n\n        button.addEventListener('focus', (event : Event) => {\n            if (button.classList.contains(CLASS.CLICKED)) {\n                event.preventDefault();\n                button.blur();\n                button.classList.remove(CLASS.CLICKED);\n            }\n        });\n    });\n\n    tasks.remember = ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n\n    tasks.getPopupBridge = ZalgoPromise.try(() => {\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                popupBridge = bridge;\n            });\n        }\n    });\n\n    triggerButtonLogs();\n\n    tasks.setupCheckout = setupCheckout();\n\n    init = onInit();\n    tasks.onInit = init.promise;\n\n    tasks.prerender = tasks.onInit.then(() => {\n        return getPrerenderDetails().then((prerenderDetails) => {\n            if (prerenderDetails) {\n                const { win, fundingSource, card } = prerenderDetails;\n                const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n                if (!button) {\n                    throw new Error(`Can not find button element`);\n                }\n\n                return pay({ button, win, fundingSource, card });\n            }\n        });\n    });\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ProxyWindow } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, OnApprove, OnShippingChange } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\ntype VaultCaptureEligibleProps = {|\n    win : ?ProxyWindow,\n    paymentMethodID : ?string,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isVaultCaptureEligible({ win, paymentMethodID, onShippingChange } : VaultCaptureEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n    \n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype VaultProps = {|\n    createOrder : CreateOrder,\n    paymentMethodID : ?string,\n    onApprove : OnApprove,\n    clientAccessToken : ?string,\n    enableThreeDomainSecure : boolean\n|};\n\n\ntype ThreeDomainSecureProps = {|\n    createOrder : CreateOrder\n|};\n\nfunction handleThreeDomainSecure({ createOrder } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = window.paypal.ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(window.parent, TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder\n|};\n\nfunction handleValidateResponse({ status, body, createOrder } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ createOrder });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nexport function initVault(props : VaultProps) : VaultInstance {\n    const { createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure } = props;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ status, body, createOrder });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close:        () => ZalgoPromise.resolve(),\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport type { PopupBridge, CreateOrder, OnApprove, OnCancel, OnShippingChange } from '../button/props';\nimport type { ProxyWindow } from '../types';\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../button/props/getPopupBridge';\n\ntype PopupBridgeEligibleProps = {|\n    win : ?ProxyWindow,\n    popupBridge : ?PopupBridge,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isPopupBridgeEligible({ win, popupBridge, onShippingChange } : PopupBridgeEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!popupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype PopupBridgeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype PopupBridgeProps = {|\n    popupBridge : ?PopupBridge,\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel\n|};\n\nexport function initPopupBridge(props : PopupBridgeProps) : PopupBridgeInstance {\n    const { popupBridge, createOrder, onApprove, onCancel } = props;\n\n    if (!popupBridge) {\n        throw new Error(`Popup bridge required`);\n    }\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    token:        orderID,\n                    redirect_uri: popupBridge.nativeUrl\n                }\n            });\n\n            return popupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW, ORDER_ID_PATTERN } from '../constants';\nimport { updateClientConfig } from '../api';\nimport { callGraphQL } from '../api/api';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, isCardFields } : { orderID : string, fundingSource : $Values<typeof FUNDING>, isCardFields : boolean }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (window.xprops.updateClientConfiguration) {\n            return updateClientConfig({\n                orderID,\n                fundingSource,\n                integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n                userExperienceFlow:  isCardFields ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n                productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n            });\n        }\n    });\n}\n\nexport function validateOrder(orderID : string) : ZalgoPromise<void> {\n    if (!orderID.match(ORDER_ID_PATTERN)) {\n        throw new Error(`${ orderID } does not match pattern for order-id, ec-token or cart-id`);\n    }\n\n    return callGraphQL({\n        query: `\n            query GetCheckoutDetails($orderID: String!) {\n                checkoutSession(token: $orderID) {\n                    cart {\n                        intent\n                        amounts {\n                            total {\n                                currencyCode\n                            }\n                        }\n                    }\n                }\n            }\n        `,\n        variables: { orderID }\n    }).then(res => {\n        const cart = res.data.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = window.xprops.intent;\n        const expectedCurrency = window.xprops.currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE } from '../constants';\n\nexport function triggerButtonLogs() {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    const xprops = window.xprops;\n\n    if (!xprops) {\n        throw new Error(`No xprops found`);\n    }\n\n    getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const style = xprops.style || {};\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:     FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:   fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:  fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]: pageRenderTime ? pageRenderTime.toString() : '',\n            [FPTI_KEY.BUTTON_LAYOUT]:  (style && style.layout),\n            [FPTI_KEY.BUTTON_COLOR]:   (style && style.color),\n            [FPTI_KEY.BUTTON_SIZE]:    (style && style.size),\n            [FPTI_KEY.BUTTON_SHAPE]:   (style && style.shape),\n            [FPTI_KEY.BUTTON_LABEL]:   (style && style.label),\n            [FPTI_KEY.BUTTON_WIDTH]:   window.innerWidth,\n            [FPTI_KEY.BUTTON_TYPE]:    FPTI_BUTTON_TYPE.IFRAME\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\n","/* @flow */\n\n// $FlowFixMe\nmodule.exports = require('./dist/paypal-sdk-constants'); // eslint-disable-line import/no-commonjs\n","!function(root, factory) {\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = factory() : \"function\" == typeof define && define.amd ? define(\"ppsdkconstants\", [], factory) : \"object\" == typeof exports ? exports.ppsdkconstants = factory() : root.ppsdkconstants = factory();\n}(\"undefined\" != typeof self ? self : this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                i: moduleId,\n                l: !1,\n                exports: {}\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.l = !0;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.d = function(exports, name, getter) {\n            __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {\n                configurable: !1,\n                enumerable: !0,\n                get: getter\n            });\n        };\n        __webpack_require__.n = function(module) {\n            var getter = module && module.__esModule ? function() {\n                return module.default;\n            } : function() {\n                return module;\n            };\n            __webpack_require__.d(getter, \"a\", getter);\n            return getter;\n        };\n        __webpack_require__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        __webpack_require__.p = \"\";\n        return __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n    }({\n        \"./src/index.js\": function(module, __webpack_exports__, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(__webpack_exports__, \"__esModule\", {\n                value: !0\n            });\n            var _COUNTRY_LANGS, COUNTRY = {\n                AD: \"AD\",\n                AE: \"AE\",\n                AG: \"AG\",\n                AI: \"AI\",\n                AL: \"AL\",\n                AM: \"AM\",\n                AN: \"AN\",\n                AO: \"AO\",\n                AR: \"AR\",\n                AT: \"AT\",\n                AU: \"AU\",\n                AW: \"AW\",\n                AZ: \"AZ\",\n                BA: \"BA\",\n                BB: \"BB\",\n                BE: \"BE\",\n                BF: \"BF\",\n                BG: \"BG\",\n                BH: \"BH\",\n                BI: \"BI\",\n                BJ: \"BJ\",\n                BM: \"BM\",\n                BN: \"BN\",\n                BO: \"BO\",\n                BR: \"BR\",\n                BS: \"BS\",\n                BT: \"BT\",\n                BW: \"BW\",\n                BY: \"BY\",\n                BZ: \"BZ\",\n                CA: \"CA\",\n                CD: \"CD\",\n                CG: \"CG\",\n                CH: \"CH\",\n                CI: \"CI\",\n                CK: \"CK\",\n                CL: \"CL\",\n                CM: \"CM\",\n                CN: \"CN\",\n                CO: \"CO\",\n                CR: \"CR\",\n                CV: \"CV\",\n                CY: \"CY\",\n                CZ: \"CZ\",\n                DE: \"DE\",\n                DJ: \"DJ\",\n                DK: \"DK\",\n                DM: \"DM\",\n                DO: \"DO\",\n                DZ: \"DZ\",\n                EC: \"EC\",\n                EE: \"EE\",\n                EG: \"EG\",\n                ER: \"ER\",\n                ES: \"ES\",\n                ET: \"ET\",\n                FI: \"FI\",\n                FJ: \"FJ\",\n                FK: \"FK\",\n                FM: \"FM\",\n                FO: \"FO\",\n                FR: \"FR\",\n                GA: \"GA\",\n                GB: \"GB\",\n                GD: \"GD\",\n                GE: \"GE\",\n                GF: \"GF\",\n                GI: \"GI\",\n                GL: \"GL\",\n                GM: \"GM\",\n                GN: \"GN\",\n                GP: \"GP\",\n                GR: \"GR\",\n                GT: \"GT\",\n                GW: \"GW\",\n                GY: \"GY\",\n                HK: \"HK\",\n                HN: \"HN\",\n                HR: \"HR\",\n                HU: \"HU\",\n                ID: \"ID\",\n                IE: \"IE\",\n                IL: \"IL\",\n                IN: \"IN\",\n                IS: \"IS\",\n                IT: \"IT\",\n                JM: \"JM\",\n                JO: \"JO\",\n                JP: \"JP\",\n                KE: \"KE\",\n                KG: \"KG\",\n                KH: \"KH\",\n                KI: \"KI\",\n                KM: \"KM\",\n                KN: \"KN\",\n                KR: \"KR\",\n                KW: \"KW\",\n                KY: \"KY\",\n                KZ: \"KZ\",\n                LA: \"LA\",\n                LC: \"LC\",\n                LI: \"LI\",\n                LK: \"LK\",\n                LS: \"LS\",\n                LT: \"LT\",\n                LU: \"LU\",\n                LV: \"LV\",\n                MA: \"MA\",\n                MC: \"MC\",\n                MD: \"MD\",\n                ME: \"ME\",\n                MG: \"MG\",\n                MH: \"MH\",\n                MK: \"MK\",\n                ML: \"ML\",\n                MN: \"MN\",\n                MQ: \"MQ\",\n                MR: \"MR\",\n                MS: \"MS\",\n                MT: \"MT\",\n                MU: \"MU\",\n                MV: \"MV\",\n                MW: \"MW\",\n                MX: \"MX\",\n                MY: \"MY\",\n                MZ: \"MZ\",\n                NA: \"NA\",\n                NC: \"NC\",\n                NE: \"NE\",\n                NF: \"NF\",\n                NG: \"NG\",\n                NI: \"NI\",\n                NL: \"NL\",\n                NO: \"NO\",\n                NP: \"NP\",\n                NR: \"NR\",\n                NU: \"NU\",\n                NZ: \"NZ\",\n                OM: \"OM\",\n                PA: \"PA\",\n                PE: \"PE\",\n                PF: \"PF\",\n                PG: \"PG\",\n                PH: \"PH\",\n                PL: \"PL\",\n                PM: \"PM\",\n                PN: \"PN\",\n                PT: \"PT\",\n                PW: \"PW\",\n                PY: \"PY\",\n                QA: \"QA\",\n                RE: \"RE\",\n                RO: \"RO\",\n                RS: \"RS\",\n                RU: \"RU\",\n                RW: \"RW\",\n                SA: \"SA\",\n                SB: \"SB\",\n                SC: \"SC\",\n                SE: \"SE\",\n                SG: \"SG\",\n                SH: \"SH\",\n                SI: \"SI\",\n                SJ: \"SJ\",\n                SK: \"SK\",\n                SL: \"SL\",\n                SM: \"SM\",\n                SN: \"SN\",\n                SO: \"SO\",\n                SR: \"SR\",\n                ST: \"ST\",\n                SV: \"SV\",\n                SZ: \"SZ\",\n                TC: \"TC\",\n                TD: \"TD\",\n                TG: \"TG\",\n                TH: \"TH\",\n                TJ: \"TJ\",\n                TM: \"TM\",\n                TN: \"TN\",\n                TO: \"TO\",\n                TR: \"TR\",\n                TT: \"TT\",\n                TV: \"TV\",\n                TW: \"TW\",\n                TZ: \"TZ\",\n                UA: \"UA\",\n                UG: \"UG\",\n                US: \"US\",\n                UY: \"UY\",\n                VA: \"VA\",\n                VC: \"VC\",\n                VE: \"VE\",\n                VG: \"VG\",\n                VN: \"VN\",\n                VU: \"VU\",\n                WF: \"WF\",\n                WS: \"WS\",\n                YE: \"YE\",\n                YT: \"YT\",\n                ZA: \"ZA\",\n                ZM: \"ZM\",\n                ZW: \"ZW\"\n            }, LANG = {\n                AR: \"ar\",\n                CS: \"cs\",\n                DA: \"da\",\n                DE: \"de\",\n                EL: \"el\",\n                EN: \"en\",\n                ES: \"es\",\n                FI: \"fi\",\n                FR: \"fr\",\n                HE: \"he\",\n                HU: \"hu\",\n                ID: \"id\",\n                IT: \"it\",\n                JA: \"ja\",\n                KO: \"ko\",\n                NL: \"nl\",\n                NO: \"no\",\n                PL: \"pl\",\n                PT: \"pt\",\n                RU: \"ru\",\n                SK: \"sk\",\n                SV: \"sv\",\n                TH: \"th\",\n                TR: \"tr\",\n                ZH: \"zh\"\n            }, COUNTRY_LANGS = ((_COUNTRY_LANGS = {})[COUNTRY.AD] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ], _COUNTRY_LANGS[COUNTRY.AG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AL] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.AO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AR] = [ LANG.ES, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AT] = [ LANG.DE, LANG.EN ], _COUNTRY_LANGS[COUNTRY.AU] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.AW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.AZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BA] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.BB] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BE] = [ LANG.EN, LANG.NL, LANG.FR ], _COUNTRY_LANGS[COUNTRY.BF] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BG] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.BH] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BI] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BJ] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.BM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BN] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BR] = [ LANG.PT, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BT] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.BY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.BZ] = [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CA] = [ LANG.EN, LANG.FR ], \n            _COUNTRY_LANGS[COUNTRY.CD] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CH] = [ LANG.DE, LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.CI] = [ LANG.FR, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.CK] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CL] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CM] = [ LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.CN] = [ LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CR] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.CV] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.CY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.CZ] = [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DE] = [ LANG.DE, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.DJ] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DK] = [ LANG.DA, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.DM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.DO] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.DZ] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.EC] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.EE] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.EG] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.ER] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ES] = [ LANG.ES, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.ET] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.FI] = [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.FK] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FM] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.FO] = [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.FR] = [ LANG.FR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.GA] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GB] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.GD] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GL] = [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GN] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GP] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GR] = [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GT] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.GW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.GY] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.HK] = [ LANG.EN, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.HN] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.HR] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.HU] = [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ID] = [ LANG.ID, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.IL] = [ LANG.HE, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IN] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.IS] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.IT] = [ LANG.IT, LANG.EN ], _COUNTRY_LANGS[COUNTRY.JM] = [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.JO] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.JP] = [ LANG.JA, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.KE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KH] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.KI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KM] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KR] = [ LANG.KO, LANG.EN ], _COUNTRY_LANGS[COUNTRY.KW] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.KY] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.KZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LA] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.LC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LK] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.LS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LT] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.LU] = [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.LV] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MA] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MC] = [ LANG.FR, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MD] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.ME] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MH] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MK] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.ML] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MN] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MQ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.MS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MT] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MV] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.MW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.MX] = [ LANG.ES, LANG.EN ], _COUNTRY_LANGS[COUNTRY.MY] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.MZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NE] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NG] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NI] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NL] = [ LANG.NL, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NO] = [ LANG.NO, LANG.EN ], _COUNTRY_LANGS[COUNTRY.NP] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.NR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.NU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.NZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.OM] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PA] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PE] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PH] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.PL] = [ LANG.PL, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.PM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.PN] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PT] = [ LANG.PT, LANG.EN ], _COUNTRY_LANGS[COUNTRY.PW] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.PY] = [ LANG.ES, LANG.EN ], _COUNTRY_LANGS[COUNTRY.QA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ], \n            _COUNTRY_LANGS[COUNTRY.RE] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.RO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.RS] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.RU] = [ LANG.RU, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.RW] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SA] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SB] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SC] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SE] = [ LANG.SV, LANG.EN ], _COUNTRY_LANGS[COUNTRY.SG] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.SH] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SI] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SK] = [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SL] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SN] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SO] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SR] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ST] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.SV] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.SZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TD] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TG] = [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TH] = [ LANG.TH, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TJ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TN] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TO] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TR] = [ LANG.TR, LANG.EN ], _COUNTRY_LANGS[COUNTRY.TT] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.TV] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.TW] = [ LANG.ZH, LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.TZ] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.UA] = [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.UG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.US] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.UY] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.VC] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VE] = [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.VG] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.VN] = [ LANG.EN ], \n            _COUNTRY_LANGS[COUNTRY.VU] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.WF] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.WS] = [ LANG.EN ], _COUNTRY_LANGS[COUNTRY.YE] = [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.YT] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ZA] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], \n            _COUNTRY_LANGS[COUNTRY.ZM] = [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ], _COUNTRY_LANGS[COUNTRY.ZW] = [ LANG.EN ], \n            _COUNTRY_LANGS), SDK_SETTINGS = {\n                CLIENT_TOKEN: \"data-client-token\",\n                PARTNER_ATTRIBUTION_ID: \"data-partner-attribution-id\",\n                STAGE_HOST: \"data-stage-host\",\n                API_STAGE_HOST: \"data-api-stage-host\",\n                CSP_NONCE: \"data-csp-nonce\"\n            }, SDK_QUERY_KEYS = {\n                COMPONENTS: \"components\",\n                ENV: \"env\",\n                DEBUG: \"debug\",\n                CACHEBUST: \"cachebust\",\n                CLIENT_ID: \"client-id\",\n                MERCHANT_ID: \"merchant-id\",\n                LOCALE: \"locale\",\n                CURRENCY: \"currency\",\n                INTENT: \"intent\",\n                COMMIT: \"commit\",\n                VAULT: \"vault\",\n                BUYER_COUNTRY: \"buyer-country\",\n                DISABLE_FUNDING: \"disable-funding\",\n                DISABLE_CARD: \"disable-card\",\n                LOCALE_COUNTRY: \"locale-country\",\n                LOCALE_LANG: \"locale-lang\",\n                FRAMEWORK: \"framework\",\n                INTEGRATION_DATE: \"integration-date\",\n                ORDER_CURRENCY: \"order-currency\",\n                ORDER_INTENT: \"order-intent\",\n                ORDER_COMMIT: \"order-commit\",\n                ORDER_VAULT: \"order-vault\"\n            }, COMPONENTS = {\n                BUTTONS: \"buttons\",\n                HOSTED_FIELDS: \"hosted-fields\"\n            }, FRAMEWORK = {\n                ANGULARJS: \"angularjs\",\n                ANGULAR: \"angular\",\n                REACT: \"react\",\n                VUE: \"vue\"\n            }, DEBUG = {\n                TRUE: !0,\n                FALSE: !1\n            }, QUERY_BOOL = {\n                TRUE: \"true\",\n                FALSE: \"false\"\n            }, ENV = {\n                LOCAL: \"local\",\n                STAGE: \"stage\",\n                SANDBOX: \"sandbox\",\n                PRODUCTION: \"production\",\n                TEST: \"test\"\n            }, FPTI_KEY = {\n                FEED: \"feed_name\",\n                STATE: \"state_name\",\n                TRANSITION: \"transition_name\",\n                BUTTON_TYPE: \"button_type\",\n                SESSION_UID: \"page_session_id\",\n                BUTTON_SESSION_UID: \"button_session_id\",\n                TOKEN: \"token\",\n                CONTEXT_ID: \"context_id\",\n                CONTEXT_TYPE: \"context_type\",\n                REFERER: \"referer_url\",\n                PAY_ID: \"pay_id\",\n                SELLER_ID: \"seller_id\",\n                CLIENT_ID: \"client_id\",\n                DATA_SOURCE: \"serverside_data_source\",\n                BUTTON_SOURCE: \"button_source\",\n                ERROR_CODE: \"ext_error_code\",\n                ERROR_DESC: \"ext_error_desc\",\n                PAGE_LOAD_TIME: \"page_load_time\",\n                EXPERIMENT_NAME: \"pxp_exp_id\",\n                TREATMENT_NAME: \"pxp_trtmnt_id\",\n                TRANSITION_TIME: \"transition_time\",\n                FUNDING_LIST: \"eligible_payment_methods\",\n                FUNDING_COUNT: \"eligible_payment_count\",\n                CHOSEN_FUNDING: \"selected_payment_method\",\n                BUTTON_LAYOUT: \"button_layout\",\n                VERSION: \"checkoutjs_version\",\n                LOCALE: \"locale\",\n                BUYER_COUNTRY: \"buyer_cntry\",\n                INTEGRATION_IDENTIFIER: \"integration_identifier\",\n                PARTNER_ATTRIBUTION_ID: \"bn_code\",\n                SDK_NAME: \"sdk_name\",\n                SDK_VERSION: \"sdk_version\",\n                USER_AGENT: \"user_agent\",\n                USER_ACTION: \"user_action\",\n                CONTEXT_CORRID: \"context_correlation_id\"\n            }, FPTI_USER_ACTION = {\n                COMMIT: \"commit\",\n                CONTINUE: \"continue\"\n            }, FPTI_DATA_SOURCE = {\n                PAYMENTS_SDK: \"checkout\"\n            }, FPTI_FEED = {\n                PAYMENTS_SDK: \"payments_sdk\"\n            }, FPTI_SDK_NAME = {\n                PAYMENTS_SDK: \"payments_sdk\"\n            }, INTENT = {\n                CAPTURE: \"capture\",\n                AUTHORIZE: \"authorize\",\n                ORDER: \"order\"\n            }, COMMIT = {\n                TRUE: !0,\n                FALSE: !1\n            }, VAULT = {\n                TRUE: !0,\n                FALSE: !1\n            }, CURRENCY = {\n                AUD: \"AUD\",\n                BRL: \"BRL\",\n                CAD: \"CAD\",\n                CZK: \"CZK\",\n                DKK: \"DKK\",\n                EUR: \"EUR\",\n                HKD: \"HKD\",\n                HUF: \"HUF\",\n                INR: \"INR\",\n                ILS: \"ILS\",\n                JPY: \"JPY\",\n                MYR: \"MYR\",\n                MXN: \"MXN\",\n                TWD: \"TWD\",\n                NZD: \"NZD\",\n                NOK: \"NOK\",\n                PHP: \"PHP\",\n                PLN: \"PLN\",\n                GBP: \"GBP\",\n                RUB: \"RUB\",\n                SGD: \"SGD\",\n                SEK: \"SEK\",\n                CHF: \"CHF\",\n                THB: \"THB\",\n                USD: \"USD\"\n            }, PLATFORM = {\n                DESKTOP: \"desktop\",\n                MOBILE: \"mobile\"\n            }, FUNDING = {\n                PAYPAL: \"paypal\",\n                VENMO: \"venmo\",\n                CREDIT: \"credit\",\n                CARD: \"card\",\n                IDEAL: \"ideal\",\n                SEPA: \"sepa\",\n                BANCONTACT: \"bancontact\",\n                GIROPAY: \"giropay\",\n                SOFORT: \"sofort\",\n                EPS: \"eps\",\n                MYBANK: \"mybank\",\n                P24: \"p24\",\n                ZIMPLER: \"zimpler\",\n                WECHATPAY: \"wechatpay\"\n            }, CARD = {\n                VISA: \"visa\",\n                MASTERCARD: \"mastercard\",\n                AMEX: \"amex\",\n                DISCOVER: \"discover\",\n                HIPER: \"hiper\",\n                ELO: \"elo\",\n                JCB: \"jcb\",\n                CUP: \"cup\"\n            }, DEFAULT_COUNTRY = COUNTRY.US, DEFAULT_CURRENCY = CURRENCY.USD, DEFAULT_INTENT = INTENT.CAPTURE, DEFAULT_COMMIT = COMMIT.TRUE, DEFAULT_SALE_COMMIT = COMMIT.TRUE, DEFAULT_NONSALE_COMMIT = COMMIT.TRUE, DEFAULT_VAULT = VAULT.FALSE, DEFAULT_COMPONENTS = COMPONENTS.BUTTONS, DEFAULT_DEBUG = DEBUG.FALSE;\n            __webpack_require__.d(__webpack_exports__, \"COUNTRY\", function() {\n                return COUNTRY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"LANG\", function() {\n                return LANG;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COUNTRY_LANGS\", function() {\n                return COUNTRY_LANGS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_PATH\", function() {\n                return \"/sdk/js\";\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_SETTINGS\", function() {\n                return SDK_SETTINGS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"SDK_QUERY_KEYS\", function() {\n                return SDK_QUERY_KEYS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COMPONENTS\", function() {\n                return COMPONENTS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FRAMEWORK\", function() {\n                return FRAMEWORK;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEBUG\", function() {\n                return DEBUG;\n            });\n            __webpack_require__.d(__webpack_exports__, \"QUERY_BOOL\", function() {\n                return QUERY_BOOL;\n            });\n            __webpack_require__.d(__webpack_exports__, \"UNKNOWN\", function() {\n                return \"unknown\";\n            });\n            __webpack_require__.d(__webpack_exports__, \"ENV\", function() {\n                return ENV;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_KEY\", function() {\n                return FPTI_KEY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_USER_ACTION\", function() {\n                return FPTI_USER_ACTION;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_DATA_SOURCE\", function() {\n                return FPTI_DATA_SOURCE;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_FEED\", function() {\n                return FPTI_FEED;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FPTI_SDK_NAME\", function() {\n                return FPTI_SDK_NAME;\n            });\n            __webpack_require__.d(__webpack_exports__, \"INTENT\", function() {\n                return INTENT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"COMMIT\", function() {\n                return COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"VAULT\", function() {\n                return VAULT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"CURRENCY\", function() {\n                return CURRENCY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"PLATFORM\", function() {\n                return PLATFORM;\n            });\n            __webpack_require__.d(__webpack_exports__, \"FUNDING\", function() {\n                return FUNDING;\n            });\n            __webpack_require__.d(__webpack_exports__, \"CARD\", function() {\n                return CARD;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COUNTRY\", function() {\n                return DEFAULT_COUNTRY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_CURRENCY\", function() {\n                return DEFAULT_CURRENCY;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_INTENT\", function() {\n                return DEFAULT_INTENT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COMMIT\", function() {\n                return DEFAULT_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_SALE_COMMIT\", function() {\n                return DEFAULT_SALE_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_NONSALE_COMMIT\", function() {\n                return DEFAULT_NONSALE_COMMIT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_VAULT\", function() {\n                return DEFAULT_VAULT;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_COMPONENTS\", function() {\n                return DEFAULT_COMPONENTS;\n            });\n            __webpack_require__.d(__webpack_exports__, \"DEFAULT_DEBUG\", function() {\n                return DEFAULT_DEBUG;\n            });\n        }\n    });\n});\n//# sourceMappingURL=paypal-sdk-constants.js.map"],"sourceRoot":""}