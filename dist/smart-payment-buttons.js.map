{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/api/api.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/onAuth.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/index.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/button/button.js","webpack://spb/./src/payment-flows/vault.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","this","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","_proto","prototype","Error","dispatch","_this2","setTimeout","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","_loop","_handlers$i","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","_this4","clearTimeout","toPromise","TypeError","all","promises","count","results","_loop2","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","__webpack_exports__","promise_ZalgoPromise","getUserAgent","navigator","mockUserAgent","userAgent","isOperaMini","ua","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","objectIDs","counter","Date","now","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","base64encode","str","btoa","Buffer","from","serializeArgs","JSON","stringify","Array","slice","subkey","val","obj","chars","uid","replace","charAt","floor","toISOString","toLowerCase","getObjectID","memoize","options","cacheMap","memoizedFunction","_len","arguments","_key","cache","thisNamespace","cacheTime","reset","displayName","inlineMemoize","logic","__inline_memoize_cache__","noop","stringifyError","level","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","promiseDebounce","localPromise","safeInterval","loop","KEY_CODES","ENTER","urlEncode","parseQuery","queryString","params","_i2","_queryString$split2","split","pair","decodeURIComponent","extendQuery","originalQuery","props","esm_extends","join","extendUrl","url","originalUrl","originalHash","query","_url$split","_originalUrl$split","hashString","isBrowser","querySelectorAll","selector","doc","document","onClick","element","addEventListener","event","keyCode","HEADERS","CONTENT_TYPE","ACCEPT","headerBuilders","request","_ref","_ref$method","_ref$headers","headers","json","data","body","_ref$win","win","_ref$timeout","normalizedHeaders","_i4","_Object$keys2","_i6","builtHeaders","headerBuilder","_i8","_Object$keys4","xhr","XMLHttpRequest","responseHeaders","rawHeaders","_rawHeaders$trim$spli2","trim","_line$split","parseHeaders","getAllResponseHeaders","status","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","encodeURIComponent","ontimeout","send","util_noop","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","_COUNTRY_LANGS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","FUNDING","PAYPAL","VENMO","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","ZIMPLER","WECHATPAY","SMART_BUTTONS","SMART_PAYMENT_BUTTONS","ACCESS_TOKEN_HEADER","DATA_ATTRIBUTES","CLASS","ORDER_API_ERROR","CONTEXT","TARGET_ELEMENT","ERROR_URL","ORDER_ID_PATTERN","INTEGRATION_ARTIFACT","USER_EXPERIENCE_FLOW","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","FPTI_STATE","FPTI_TRANSITION","ACCESS_TOKEN","CLIENT_METADATA_ID","CSRF_TOKEN","SOURCE","REQUESTED_BY","FUNDING_SOURCE","PAYMENT_METHOD_ID","LOADING","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","IFRAME","POPUP","BODY","PAYPAL_JS_SDK","INCONTEXT","INLINE","BUTTON_SESSION_ID","ORDER_ID","BUTTON","CREATE_ORDER","_extends","assign","target","source","unresolvedPromise","promiseNoop","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","getLogger","_ref2","prefix","_ref2$logLevel","logLevel","_ref2$transport","transport","_ref2$flushInterval","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","location","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","referer","host","lang","country","mID","paypal","version","_logger$track","persistedAccessToken","createAccessToken","basicAuth","AUTH_API_URL","Authorization","grant_type","access_token","persistAccessToken","accessToken","createOrderID","order","currency","xprops","intent","toUpperCase","purchase_units","unit","amount","currency_code","payee","UNKNOWN","merchant_id","application_context","PayPal-Partner-Attribution-Id","ORDERS_API_URL","_getLogger$track","id","getOrder","orderID","callSmartAPI","API_URI","captureOrder","authorizeOrder","patchOrder","patch","validatePaymentMethod","paymentMethodID","payment_source","token","type","VALIDATE_PAYMENT_METHOD_API","billingTokenToOrderID","billingToken","PAYMENT","enableVault","_ref3","_headers","clientAccessToken","callGraphQL","variables","updateClientConfig","_ref4","fundingSource","integrationArtifact","userExperienceFlow","productFlow","EXPERIENCE_URI","AUTH","BASE_SMART_API_URL","CHECKOUT","GRAPHQL","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","getTop","top","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","frames","len","frame","getFrames","_i5","_getAllChildFrames2","iframeWindows","iframeFrames","allowMock","closed","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","_reqHeaders","reqHeaders","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ack","contingency","_ref3$variables","_ref3$headers","errors","getButtons","getSelectedFunding","enableLoadingSpinner","disableLoadingSpinner","getNonce","belter_src__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","button","getAttribute","card","classList","add","remove","nonce","POPUP_BRIDGE_OPTYPE","CANCEL","_props__WEBPACK_IMPORTED_MODULE_1__","_createOrder__WEBPACK_IMPORTED_MODULE_2__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_3__","_onApprove__WEBPACK_IMPORTED_MODULE_4__","_onInit__WEBPACK_IMPORTED_MODULE_5__","_onCancel__WEBPACK_IMPORTED_MODULE_6__","_onShippingChange__WEBPACK_IMPORTED_MODULE_7__","_onClick__WEBPACK_IMPORTED_MODULE_8__","_onAuth__WEBPACK_IMPORTED_MODULE_9__","_onError__WEBPACK_IMPORTED_MODULE_10__","__WEBPACK_IMPORT_KEY__","_getPopupBridge__WEBPACK_IMPORTED_MODULE_11__","buildXOnInitData","buildXOnInitActions","getOnInit","zalgo_promise_src__WEBPACK_IMPORTED_MODULE_0__","enable","disable","onInit","enabled","isEnabled","buildXCreateOrderData","buildXCreateOrderActions","getCreateOrder","belter_src__WEBPACK_IMPORTED_MODULE_0__","_api__WEBPACK_IMPORTED_MODULE_1__","createBillingAgreement","createOrder","getOnApprove","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_1__","_api__WEBPACK_IMPORTED_MODULE_2__","_constants__WEBPACK_IMPORTED_MODULE_3__","_lib__WEBPACK_IMPORTED_MODULE_4__","onApprove","payerID","paymentID","restart","handleProcessorError","details","some","detail","issue","capture","authorize","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","actions","getOnShippingChange","onShippingChange","buildXOnClickData","buildXOnClickActions","getOnClick","_lib__WEBPACK_IMPORTED_MODULE_1__","_xprops$onClick","valid","getOnAuth","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","_button__WEBPACK_IMPORTED_MODULE_0__","getGlobalProps","getButtonCallbackProps","_paypal_sdk_constants_src__WEBPACK_IMPORTED_MODULE_0__","_dom__WEBPACK_IMPORTED_MODULE_1__","_onInit__WEBPACK_IMPORTED_MODULE_2__","_createOrder__WEBPACK_IMPORTED_MODULE_3__","_onCancel__WEBPACK_IMPORTED_MODULE_5__","_onShippingChange__WEBPACK_IMPORTED_MODULE_6__","_onClick__WEBPACK_IMPORTED_MODULE_7__","_onAuth__WEBPACK_IMPORTED_MODULE_8__","_createBillingAgreement__WEBPACK_IMPORTED_MODULE_9__","cspNonce","buttonSessionID","_xprops$buyerCountry","buyerCountry","getPopupBridge","getPrerenderDetails","rememberFunding","remember","vault","buyerGeoCountry","onAuth","checkoutOpen","canRenderTop","initCheckout","fundingEligibility","_props$validationProm","validationPromise","approved","start","_window$paypal$Checko","Checkout","fundingConfig","eligible","vaultable","isVaultSetupEligible","enableVaultSetup","closeCheckout","onClose","close","triggerError","renderPromise","renderTo","cardFieldsOpen","openCardFields","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","style","display","recalculateMargin","marginTop","offsetHeight","transitionDuration","setupButton","opts","serverCSPNonce","_getGlobalProps","init","popupBridge","buttonProcessing","pay","_getButtonCallbackPro","isCardFields","enableInlineGuest","isVaultCapture","isVaultCaptureEligible","isPopupBridge","isPopupBridgeEligible","initVault","_window$paypal$CardFi","CardFields","render","initCardFields","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","initPopupBridge","updateClientConfiguration","updateButtonClientConfig","match","cart","checkoutSession","amounts","total","currencyCode","returnUrl","href","cancelUrl","expectedIntent","expectedCurrency","isOrderID","validateOrder","tasks","forEach","_getSelectedFunding","onElementClick","preventDefault","stopPropagation","prerender","prerenderDetails","venmo","bridge","setupCheckout","canRenderTo"],"mappings":"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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<*>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    [COUNTRY.AD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.AG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AL]: [ LANG.EN ],\n    [COUNTRY.AM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AR]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.AT]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.AU]: [ LANG.EN ],\n    [COUNTRY.AW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.AZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BA]: [ LANG.EN ],\n    [COUNTRY.BB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BE]: [ LANG.EN, LANG.NL, LANG.FR ],\n    [COUNTRY.BF]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BG]: [ LANG.EN ],\n    [COUNTRY.BH]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BI]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.BM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BN]: [ LANG.EN ],\n    [COUNTRY.BO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.BR]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.BS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BT]: [ LANG.EN ],\n    [COUNTRY.BW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.BY]: [ LANG.EN ],\n    [COUNTRY.BZ]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.CA]: [ LANG.EN, LANG.FR ],\n    [COUNTRY.CD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.CG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CH]: [ LANG.DE, LANG.FR, LANG.EN ],\n    [COUNTRY.CI]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CL]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CM]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.CN]: [ LANG.ZH ],\n    [COUNTRY.CO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CR]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.CV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.CY]: [ LANG.EN ],\n    [COUNTRY.CZ]: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DE]: [ LANG.DE, LANG.EN ],\n    [COUNTRY.DJ]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.DK]: [ LANG.DA, LANG.EN ],\n    [COUNTRY.DM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.DO]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.DZ]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EC]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.EE]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.EG]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ER]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ES]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.ET]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FI]: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FK]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FM]: [ LANG.EN ],\n    [COUNTRY.FO]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.FR]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.GA]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GB]: [ LANG.EN ],\n    [COUNTRY.GD]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GL]: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.GP]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GR]: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GT]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.GW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.GY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.HK]: [ LANG.EN, LANG.ZH ],\n    [COUNTRY.HN]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.HR]: [ LANG.EN ],\n    [COUNTRY.HU]: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ID]: [ LANG.ID, LANG.EN ],\n    [COUNTRY.IE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.IL]: [ LANG.HE, LANG.EN ],\n    [COUNTRY.IN]: [ LANG.EN ],\n    [COUNTRY.IS]: [ LANG.EN ],\n    [COUNTRY.IT]: [ LANG.IT, LANG.EN ],\n    [COUNTRY.JM]: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    [COUNTRY.JO]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.JP]: [ LANG.JA, LANG.EN ],\n    [COUNTRY.KE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KH]: [ LANG.EN ],\n    [COUNTRY.KI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KM]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.KN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KR]: [ LANG.KO, LANG.EN ],\n    [COUNTRY.KW]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KY]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.KZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LA]: [ LANG.EN ],\n    [COUNTRY.LC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LK]: [ LANG.EN ],\n    [COUNTRY.LS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LT]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LU]: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.LV]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MC]: [ LANG.FR, LANG.EN ],\n    [COUNTRY.MD]: [ LANG.EN ],\n    [COUNTRY.ME]: [ LANG.EN ],\n    [COUNTRY.MG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MK]: [ LANG.EN ],\n    [COUNTRY.ML]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.MN]: [ LANG.EN ],\n    [COUNTRY.MQ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MT]: [ LANG.EN ],\n    [COUNTRY.MU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MV]: [ LANG.EN ],\n    [COUNTRY.MW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.MX]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.MY]: [ LANG.EN ],\n    [COUNTRY.MZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NE]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.NF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NG]: [ LANG.EN ],\n    [COUNTRY.NI]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.NL]: [ LANG.NL, LANG.EN ],\n    [COUNTRY.NO]: [ LANG.NO, LANG.EN ],\n    [COUNTRY.NP]: [ LANG.EN ],\n    [COUNTRY.NR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.NZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.OM]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PA]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.PF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PH]: [ LANG.EN ],\n    [COUNTRY.PL]: [ LANG.PL, LANG.EN ],\n    [COUNTRY.PM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PN]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PT]: [ LANG.PT, LANG.EN ],\n    [COUNTRY.PW]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.PY]: [ LANG.ES, LANG.EN ],\n    [COUNTRY.QA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    [COUNTRY.RE]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RS]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.RU]: [ LANG.RU, LANG.EN ],\n    [COUNTRY.RW]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SA]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SB]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SC]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SE]: [ LANG.SV, LANG.EN ],\n    [COUNTRY.SG]: [ LANG.EN ],\n    [COUNTRY.SH]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SI]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SK]: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SL]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SN]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.SO]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SR]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ST]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.SV]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.SZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TD]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TG]: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    [COUNTRY.TH]: [ LANG.TH, LANG.EN ],\n    [COUNTRY.TJ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TN]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TO]: [ LANG.EN ],\n    [COUNTRY.TR]: [ LANG.TR, LANG.EN ],\n    [COUNTRY.TT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TV]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.TW]: [ LANG.ZH, LANG.EN ],\n    [COUNTRY.TZ]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UA]: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.US]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.UY]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VC]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VE]: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    [COUNTRY.VG]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.VN]: [ LANG.EN ],\n    [COUNTRY.VU]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WF]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.WS]: [ LANG.EN ],\n    [COUNTRY.YE]: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.YT]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZA]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZM]: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    [COUNTRY.ZW]: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:   ('client-id' : 'client-id'),\n    MERCHANT_ID: ('merchant-id' : 'merchant-id'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:      ('paypal' : 'paypal'),\n    VENMO:       ('venmo' : 'venmo'),\n    CREDIT:      ('credit' : 'credit'),\n    CARD:        ('card' : 'card'),\n    IDEAL:       ('ideal' : 'ideal'),\n    SEPA:        ('sepa' : 'sepa'),\n    BANCONTACT:  ('bancontact' : 'bancontact'),\n    GIROPAY:     ('giropay' : 'giropay'),\n    SOFORT:      ('sofort' : 'sofort'),\n    EPS:         ('eps' : 'eps'),\n    MYBANK:      ('mybank' : 'mybank'),\n    P24:         ('p24' : 'p24'),\n    ZIMPLER:     ('zimpler' : 'zimpler'),\n    WECHATPAY:   ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const ACCESS_TOKEN_HEADER = 'x-paypal-internal-euat';\n\nexport const HEADERS = {\n    ACCESS_TOKEN:       'x-paypal-internal-euat',\n    CLIENT_METADATA_ID: 'paypal-client-metadata-id',\n    CSRF_TOKEN:         'x-csrf-jwt',\n    SOURCE:             'x-source',\n    REQUESTED_BY:       'x-requested-by'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const ERROR_URL = 'https://www.paypal.com/checkoutnow/error';\n\nexport const ORDER_ID_PATTERN = /^(EC-)?[A-Z0-9]+$/;\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    CREATE_ORDER: ('process_create_order' : 'process_create_order')\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport { LOGGER_URL } from '../config';\nimport type { LocaleType } from '../types';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    merchantID : ?string\n|};\n\nexport function setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n        const mID = merchantID;\n\n        return {\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              mID && mID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            window.paypal.version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, inlineMemoize, base64encode, request } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { ACCESS_TOKEN_HEADER } from '../constants';\n\nimport { addHeaderBuilder } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nlet persistedAccessToken;\n\naddHeaderBuilder(() => {\n    return {\n        [ ACCESS_TOKEN_HEADER ]: persistedAccessToken\n    };\n});\n\nexport const persistAccessToken = memoize((accessToken) : ZalgoPromise<void> => {\n    return ZalgoPromise.try(() => {\n        if (accessToken) {\n            persistedAccessToken = accessToken;\n        }\n    });\n});\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { SDK_QUERY_KEYS, UNKNOWN, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\nexport function createOrderID(accessToken : string, order : OrderCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!order) {\n        throw new Error(`Expected order details to be passed`);\n    }\n\n    const currency = window.xprops.currency;\n    const intent = window.xprops.intent;\n    const merchantID = window.xprops.merchantID;\n\n    order = { ...order };\n\n    if (order.intent && order.intent.toLowerCase() !== intent) {\n        throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n    }\n\n    // $FlowFixMe\n    order = { ...order, intent: intent.toUpperCase() };\n\n    order.purchase_units = order.purchase_units.map(unit => {\n        if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n            throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n        }\n\n        let payee = unit.payee;\n\n        if (payee) {\n            if (!merchantID) {\n                throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag. Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ UNKNOWN } if you do not have access to the merchant id`);\n            }\n\n            if (payee.merchant_id && merchantID[0] !== UNKNOWN && payee.merchant_id !== merchantID) {\n                throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n            }\n        }\n\n        if (merchantID && merchantID[0] !== UNKNOWN) {\n            payee = {\n                ...payee,\n                merchant_id: merchantID[0]\n            };\n        }\n\n        return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n    });\n\n    order.application_context = order.application_context || {};\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    ORDERS_API_URL,\n        headers,\n        json:   order\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        body.id,\n            [FPTI_KEY.CONTEXT_ID]:   body.id\n        });\n\n        return body.id;\n    });\n}\n\nexport function getOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.ORDER }/${ orderID }`\n    });\n}\n\nexport function captureOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/capture`\n    });\n}\n\nexport function authorizeOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/authorize`\n    });\n}\n\nexport function patchOrder(orderID : string, patch : []) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/patch`,\n        json:   { data: { patch } }\n    });\n}\n\nexport function validatePaymentMethod(accessToken : string, orderID : string, paymentMethodID : string) : ZalgoPromise<void> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!orderID) {\n        throw new Error(`Expected order id to be passed`);\n    }\n\n    if (!paymentMethodID) {\n        throw new Error(`Expected payment method id to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    const json = {\n        payment_source: {\n            token: {\n                id:   paymentMethodID,\n                type: 'NONCE'\n            }\n        }\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    }).then(({ status }) => {\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const API_URI = {\n    AUTH:     `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT: `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:    `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:  `${ BASE_SMART_API_URL }/payment`,\n    GRAPHQL:  '/graphql'\n};\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT: '/checkoutnow'\n};\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { API_URI } from '../config';\nimport { HEADERS, SMART_BUTTONS, SMART_PAYMENT_BUTTONS } from '../constants';\n\nconst headerBuilders = [];\n\nexport function addHeaderBuilder(builder : () => { [string] : string }) {\n    headerBuilders.push(builder);\n}\n\ntype APIRequest = {|\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    let reqHeaders = {\n        [ HEADERS.SOURCE ]:       SMART_BUTTONS,\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    for (const headerBuilder of headerBuilders) {\n        reqHeaders = {\n            ...reqHeaders,\n            ...headerBuilder()\n        };\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status }`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack }`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     API_URI.GRAPHQL,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ API_URI.GRAPHQL } returned status ${ status }`);\n        }\n\n        return body;\n    });\n}\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onAuth';\nexport * from './onError';\nexport * from './getPopupBridge';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    promise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const promise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            promise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport { createAccessToken, createOrderID, billingTokenToOrderID } from '../../api';\n\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n\nexport type XCreateOrderDataType = {|\n    \n|};\n\nexport type XCreateOrderActionsType = {|\n    order : {\n        create : (Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateOrderActions({ clientID } : { clientID : string }) : XCreateOrderActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createOrderID(accessToken, data);\n        });\n    };\n\n    return {\n        order: { create }\n    };\n}\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function getCreateOrder(xprops : XProps, { createBillingAgreement } : { createBillingAgreement : ?CreateBillingAgreement }) : CreateOrder {\n    const { createOrder, clientID } = xprops;\n\n    return memoize(() => {\n        if (createBillingAgreement) {\n            return createBillingAgreement().then(billingTokenToOrderID);\n        } else if (createOrder) {\n            return createOrder(buildXCreateOrderData(), buildXCreateOrderActions({ clientID }));\n        } else {\n            throw new Error(`No mechanism to create order`);\n        }\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, getOrder, captureOrder, authorizeOrder, patchOrder } from '../../api';\nimport { ORDER_API_ERROR } from '../../constants';\nimport { unresolvedPromise } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    billingToken : ?string\n|};\n\nexport type XOnApproveActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        patch : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, restart } : { orderID : string, restart : () => ZalgoPromise<void>, intent : $Values<typeof INTENT> }) : XOnApproveActionsType {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() =>\n        getOrder(orderID));\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID)\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() =>\n        authorizeOrder(orderID)\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError));\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    return {\n        order: { capture, authorize, patch, get },\n        restart\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent } = xprops;\n\n    return memoize(({ payerID, paymentID, billingToken }, { restart }) => {\n        return createOrder().then(orderID => {\n            return onApprove({ orderID, payerID, paymentID, billingToken }, buildXApproveActions({ orderID, intent, restart })).catch(err => {\n                return onError(err);\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize } from 'belter/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel, onError } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    \n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions } : { orderID : string, actions : OnShippingChangeActionsType }) : XOnShippingChangeActionsType {\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    return {\n        ...actions,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange } = xprops;\n\n    if (onShippingChange) {\n        return (data, actions) => {\n            return createOrder().then(orderID => {\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, actions }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { promiseNoop } from '../../lib';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    \n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport function buildXOnClickData() : XOnClickDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => true),\n        reject:  () => ZalgoPromise.try(() => false)\n    };\n}\n\nexport type OnClick = () => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick {\n    const { onClick = promiseNoop } = xprops;\n\n    return () => {\n        return onClick(buildXOnClickData(), buildXOnClickActions()).then(valid => {\n            return (valid !== false);\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { persistAccessToken } from '../../api';\n\nexport type OnAuthDataType = {|\n    accessToken : string\n|};\n\nexport type OnAuth = (OnAuthDataType) => ZalgoPromise<void>;\n\nexport function getOnAuth() : OnAuth {\n    return ({ accessToken }) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            return persistAccessToken(accessToken);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return memoize(() => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions());\n        });\n    }\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n","/* @flow */\n\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { OnAuth } from './onAuth';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    \n    onInit : XOnInit,\n    onApprove : XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type GlobalProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    merchantID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n\n    onInit : OnInit,\n    onError : OnError\n|};\n\nexport type ButtonCallbackProps = {|\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    \n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onClick : OnClick,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\n\nimport { getNonce } from '../dom';\n\nimport type { XProps, GlobalProps, ButtonCallbackProps } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getOnAuth } from './onAuth';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\n\nexport function getGlobalProps({ xprops, buyerGeoCountry, cspNonce } : {| xprops : XProps, buyerGeoCountry : ?$Values<typeof COUNTRY>, cspNonce : ?string |}) : GlobalProps {\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n        clientAccessToken,\n        buyerCountry = buyerGeoCountry || COUNTRY.US,\n        getPopupBridge,\n        getPrerenderDetails,\n        remember: rememberFunding,\n        onError\n    } = xprops;\n\n    cspNonce = cspNonce || getNonce();\n    const onInit = getOnInit(xprops);\n\n    return {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n\n        onInit,\n        onError\n    };\n}\n\nexport function getButtonCallbackProps({ xprops } : {| xprops : XProps |}) : ButtonCallbackProps {\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createOrder = getCreateOrder(xprops, { createBillingAgreement });\n\n    const onApprove = getOnApprove(xprops, { createOrder });\n    const onCancel = getOnCancel(xprops, { createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { createOrder });\n    const onClick = getOnClick(xprops);\n    const onAuth = getOnAuth();\n\n    return {\n        createOrder,\n        createBillingAgreement,\n        onApprove,\n        onCancel,\n        onClick,\n        onAuth,\n        onShippingChange\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport type { ProxyWindow, LocaleType, FundingEligibilityType } from '../types';\nimport type { CreateOrder, OnApprove, OnCancel, OnAuth, OnShippingChange, CreateBillingAgreement } from '../button/props';\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else {\n        return window.xprops.getParent();\n    }\n}\n\nexport function setupCheckout() : ZalgoPromise<void> {\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\ntype VaultSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : Object,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement\n|};\n\nfunction isVaultSetupEligible({ vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement } : VaultSetupEligibleProps) : boolean {\n    if (!window.xprops.enableVault) {\n        return false;\n    }\n    \n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement) {\n        return false;\n    }\n    \n    if (vault) {\n        return true;\n    }\n    \n    const fundingConfig = fundingEligibility[fundingSource];\n    if (fundingConfig.eligible && fundingConfig.vaultable) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (clientAccessToken && isVaultSetupEligible({ vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nexport function getDefaultContext() : $Values<typeof CONTEXT> {\n    return supportsPopups() ? CONTEXT.POPUP : CONTEXT.IFRAME;\n}\n\ntype CheckoutProps= {|\n    win? : ?ProxyWindow,\n    context? : $Values<typeof CONTEXT>,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : (mixed) => ZalgoPromise<void>,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    validationPromise? : ZalgoPromise<boolean>\n|};\n\ntype CheckoutInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\nexport function initCheckout(props : CheckoutProps) : CheckoutInstance {\n    const { win, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, context, locale, commit, onError, vault,\n        clientAccessToken, fundingEligibility, createBillingAgreement, validationPromise = ZalgoPromise.resolve(true) } = props;\n    \n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        return validationPromise.then(valid => {\n            if (valid && !approved) {\n                return onCancel();\n            }\n        });\n    };\n\n    const { renderTo, close: closeCheckout, onError: triggerError } = window.paypal.Checkout({\n        window: win,\n\n        createOrder: () => {\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return unresolvedPromise();\n                }\n\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement }).then(() => {\n                        return orderID;\n                    });\n                });\n            });\n        },\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            approved = true;\n\n            return closeCheckout().then(() => {\n                return onApprove({ payerID, paymentID, billingToken }, { restart });\n            });\n        },\n\n        onCancel: () => {\n            return validationPromise.then(valid => {\n                if (valid) {\n                    return closeCheckout().then(() => {\n                        return onCancel();\n                    });\n                }\n            });\n        },\n        \n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n\n        fundingSource,\n        card,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    checkoutOpen = true;\n    const renderPromise = renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n\n    const close = () => {\n        checkoutOpen = false;\n        return closeCheckout();\n    };\n\n    const start = () => {\n        return validationPromise.then(valid => {\n            return valid ? renderPromise : close();\n        }).then(noop);\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { memoize } from 'belter/src';\n\nimport { CONTEXT } from '../constants';\nimport type { LocaleType, FundingEligibilityType } from '../types';\nimport { unresolvedPromise } from '../lib';\nimport type { CreateOrder, OnApprove, OnCancel, OnAuth, OnShippingChange, OnError, CreateBillingAgreement } from '../button/props';\n\nimport { initCheckout } from './checkout';\n\nlet cardFieldsOpen = false;\n\ntype CardFieldsProps = {|\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : OnError,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType\n|};\n\ntype CardFieldsInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype CardFieldsEligibleProps = {|\n    vault : boolean,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isCardFieldsEligible({ vault, onShippingChange, fundingSource } : CardFieldsEligibleProps) : boolean {\n    if (!window.xprops.enableInlineGuest) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nconst openCardFields = () => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        const margin = -(buttonsContainer.offsetHeight - cardButtonsContainer.offsetHeight);\n        buttonsContainer.style.marginTop = `${ margin }px`;\n    };\n\n    window.addEventListener('resize', () => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    });\n\n    recalculateMargin();\n};\n\nexport function initCardFields(props : CardFieldsProps) : CardFieldsInstance {\n    const { fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, locale, commit, onError } = props;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        throw new Error(`Card fields already rendered`);\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n        return onCancel();\n    };\n\n    const { render, close, onError: triggerError } = window.paypal.CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken }, { restart });\n            });\n        },\n\n        onCancel,\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        openCardFields();\n        return renderPromise;\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { setupLogger } from '../lib';\nimport { initCheckout, setupCheckout, isVaultCaptureEligible, isCardFieldsEligible, initVault, initCardFields } from '../payment-flows';\nimport { DATA_ATTRIBUTES } from '../constants';\nimport type { FundingEligibilityType, ProxyWindow } from '../types';\nimport { isPopupBridgeEligible, initPopupBridge } from '../payment-flows/popup-bridge';\n\nimport { getGlobalProps, getButtonCallbackProps } from './props';\nimport { getSelectedFunding, enableLoadingSpinner, getButtons, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\n\nexport function setupButton(opts : { fundingEligibility : FundingEligibilityType, buyerCountry? : ?$Values<typeof COUNTRY>, cspNonce? : string }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    if (opts.paypal) {\n        // $FlowFixMe\n        opts = { fundingEligibility: opts };\n    }\n\n    const { fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce } = opts;\n\n    if (!window.paypal) {\n        throw new Error(`PayPal library not loaded`);\n    }\n\n    const {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        clientID,\n        merchantID,\n        partnerAttributionID,\n        correlationID,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n\n        onError,\n        onInit\n    } = getGlobalProps({ xprops: window.xprops, buyerGeoCountry, cspNonce: serverCSPNonce });\n\n    const init = onInit();\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID });\n\n    let buttonProcessing = false;\n    let popupBridge;\n\n    const pay = ({ button, win, fundingSource, card, paymentMethodID } : { button : HTMLElement, win? : ?ProxyWindow, fundingSource : $Values<typeof FUNDING>, card : ?$Values<typeof CARD>, paymentMethodID? : ?string }) => {\n        return ZalgoPromise.try(() => {\n            if (buttonProcessing) {\n                return;\n            }\n\n            buttonProcessing = true;\n\n            const {\n                createOrder,\n                createBillingAgreement,\n                onApprove,\n                onCancel,\n                onClick,\n                onAuth,\n                onShippingChange\n            } = getButtonCallbackProps({ xprops: window.xprops });\n\n            const validationPromise = onClick();\n\n            if (!init.isEnabled()) {\n                return win ? win.close() : null;\n            }\n\n            const isCardFields = isCardFieldsEligible({ vault, onShippingChange, fundingSource });\n            const isVaultCapture = isVaultCaptureEligible({ paymentMethodID, onShippingChange });\n            const isPopupBridge = isPopupBridgeEligible({ popupBridge, onShippingChange });\n\n            if (isVaultCapture || isPopupBridge) {\n                enableLoadingSpinner(button);\n            }\n\n            const { start, close, triggerError } = (() => {\n                if (isVaultCapture) {\n                    return initVault({\n                        createOrder, paymentMethodID, onApprove\n                    });\n                }\n\n                if (isCardFields) {\n                    return initCardFields({\n                        fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, createBillingAgreement\n                    });\n                }\n\n                if (isPopupBridge) {\n                    return initPopupBridge({\n                        popupBridge, createOrder, onApprove, onCancel\n                    });\n                }\n\n                return initCheckout({\n                    win, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                    onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                    clientAccessToken, fundingEligibility, validationPromise, createBillingAgreement\n                });\n            })();\n\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return ZalgoPromise.all([\n                        close(),\n                        win && win.close()\n                    ]).then(noop);\n                }\n\n                createOrder().then(orderID => {\n                    return updateButtonClientConfig({ orderID, fundingSource, isCardFields });\n                });\n\n                return start()\n                    .then(() => createOrder())\n                    .then((orderID) => validateOrder(orderID))\n                    .catch(err => {\n                        // $FlowFixMe\n                        return ZalgoPromise.all([\n                            triggerError(err),\n                            close()\n                        ]);\n                    }).finally(() => {\n                        buttonProcessing = false;\n                        disableLoadingSpinner(button);\n                    });\n            });\n        });\n    };\n\n    const tasks = {};\n\n    tasks.onInit = init.promise;\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            pay({ button, fundingSource, card, paymentMethodID });\n        });\n    });\n\n    tasks.prerender = tasks.onInit.then(() => {\n        return getPrerenderDetails().then((prerenderDetails) => {\n            if (prerenderDetails) {\n                const { win, fundingSource, card } = prerenderDetails;\n                const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n                if (!button) {\n                    throw new Error(`Can not find button element`);\n                }\n\n                return pay({ button, win, fundingSource, card });\n            }\n        });\n    });\n\n    tasks.remember = ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n\n    tasks.getPopupBridge = ZalgoPromise.try(() => {\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                popupBridge = bridge;\n            });\n        }\n    });\n\n    tasks.setupCheckout = setupCheckout();\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { validatePaymentMethod } from '../api';\nimport type { CreateOrder, OnApprove, OnShippingChange } from '../button/props';\n\ntype VaultCaptureEligibleProps = {|\n    paymentMethodID : ?string,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isVaultCaptureEligible({ paymentMethodID, onShippingChange } : VaultCaptureEligibleProps) : boolean {\n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype VaultProps = {|\n    createOrder : CreateOrder,\n    paymentMethodID : ?string,\n    onApprove : OnApprove\n|};\n\nexport function initVault(props : VaultProps) : VaultInstance {\n    const { createOrder, paymentMethodID, onApprove } = props;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    return {\n        start: () => {\n            return createOrder().then(orderID => {\n                return validatePaymentMethod(window.xprops.clientAccessToken, orderID, paymentMethodID)\n                    .then(() => onApprove({}, { restart }));\n            });\n        },\n        close:        () => ZalgoPromise.resolve(),\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\n\nimport type { PopupBridge, CreateOrder, OnApprove, OnCancel, OnShippingChange } from '../button/props';\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../button/props/getPopupBridge';\n\ntype PopupBridgeEligibleProps = {|\n    popupBridge : ?PopupBridge,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isPopupBridgeEligible({ popupBridge, onShippingChange } : PopupBridgeEligibleProps) : boolean {\n    \n    if (!popupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype PopupBridgeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype PopupBridgeProps = {|\n    popupBridge : ?PopupBridge,\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel\n|};\n\nexport function initPopupBridge(props : PopupBridgeProps) : PopupBridgeInstance {\n    const { popupBridge, createOrder, onApprove, onCancel } = props;\n\n    if (!popupBridge) {\n        throw new Error(`Popup bridge required`);\n    }\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    token:        orderID,\n                    redirect_uri: popupBridge.nativeUrl\n                }\n            });\n\n            return popupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW, ORDER_ID_PATTERN, ERROR_URL } from '../constants';\nimport { updateClientConfig } from '../api';\nimport { callGraphQL } from '../api/api';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, isCardFields } : { orderID : string, fundingSource : $Values<typeof FUNDING>, isCardFields : boolean }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (window.xprops.updateClientConfiguration) {\n            return updateClientConfig({\n                orderID,\n                fundingSource,\n                integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n                userExperienceFlow:  isCardFields ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n                productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n            });\n        }\n    });\n}\n\nfunction isOrderID(orderID : string) : boolean {\n    return Boolean(orderID.match(/^[A-Z0-9]{17}$/));\n}\n\nexport function validateOrder(orderID : string) : ZalgoPromise<void> {\n    if (!orderID.match(ORDER_ID_PATTERN)) {\n        throw new Error(`${ orderID } does not match pattern for order-id, ec-token or cart-id`);\n    }\n\n    return callGraphQL({\n        query: `\n            query GetCheckoutDetails($orderID: String!) {\n                checkoutSession(token: $orderID) {\n                    cart {\n                        intent\n                        returnUrl {\n                            href\n                        }\n                        cancelUrl {\n                            href\n                        }\n                        amounts {\n                            total {\n                                currencyCode\n                            }\n                        }\n                    }\n                }\n            }\n        `,\n        variables: { orderID }\n    }).then(res => {\n        const cart = res.data.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n        const returnUrl = cart.returnUrl && cart.returnUrl.href;\n        const cancelUrl = cart.cancelUrl && cart.cancelUrl.href;\n\n        const expectedIntent = window.xprops.intent;\n        const expectedCurrency = window.xprops.currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        if (isOrderID(orderID)) {\n            if (returnUrl && returnUrl.indexOf(ERROR_URL) !== 0) {\n                throw new Error(`Return url is forbidden for smart payment button integration.`);\n            }\n\n            if (cancelUrl && cancelUrl.indexOf(ERROR_URL) !== 0) {\n                throw new Error(`Cancel url is forbidden for smart payment button integration.`);\n            }\n        }\n    });\n}\n","/* @flow */\n\nexport * from './button';\n"],"sourceRoot":""}