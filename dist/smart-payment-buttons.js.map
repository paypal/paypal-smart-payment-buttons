{"version":3,"sources":["webpack://spb/webpack/bootstrap","webpack://spb/./node_modules/@paypal/sdk-constants/src/locale.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/params.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/fpti.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/order.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/funding.js","webpack://spb/./node_modules/@paypal/sdk-constants/src/index.js","webpack://spb/./src/constants.js","webpack://spb/./node_modules/belter/src/device.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://spb/./node_modules/belter/src/util.js","webpack://spb/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://spb/./node_modules/belter/src/constants.js","webpack://spb/./node_modules/belter/src/dom.js","webpack://spb/./node_modules/belter/src/http.js","webpack://spb/./node_modules/belter/src/index.js","webpack://spb/./node_modules/zalgo-promise/src/utils.js","webpack://spb/./node_modules/zalgo-promise/src/exceptions.js","webpack://spb/./node_modules/zalgo-promise/src/flush.js","webpack://spb/./node_modules/zalgo-promise/src/promise.js","webpack://spb/./node_modules/zalgo-promise/src/index.js","webpack://spb/./src/lib/util.js","webpack://spb/./node_modules/beaver-logger/src/constants.js","webpack://spb/./node_modules/beaver-logger/src/config.js","webpack://spb/./node_modules/beaver-logger/src/logger.js","webpack://spb/./src/lib/logger.js","webpack://spb/./src/lib/index.js","webpack://spb/./src/api/auth.js","webpack://spb/./src/api/order.js","webpack://spb/./src/api/subscription.js","webpack://spb/./src/api/index.js","webpack://spb/./src/config.js","webpack://spb/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://spb/./src/api/api.js","webpack://spb/./node_modules/cross-domain-utils/src/constants.js","webpack://spb/./node_modules/cross-domain-utils/src/utils.js","webpack://spb/./node_modules/cross-domain-utils/src/index.js","webpack://spb/./src/button/dom.js","webpack://spb/./src/button/props/getPopupBridge.js","webpack://spb/./src/button/props/index.js","webpack://spb/./src/button/props/onInit.js","webpack://spb/./src/button/props/createOrder.js","webpack://spb/./src/button/props/onApprove.js","webpack://spb/./src/button/props/onCancel.js","webpack://spb/./src/button/props/onShippingChange.js","webpack://spb/./src/button/props/onClick.js","webpack://spb/./src/button/props/onAuth.js","webpack://spb/./src/button/props/createBillingAgreement.js","webpack://spb/./src/button/props/createSubscription.js","webpack://spb/./src/button/props/types.js","webpack://spb/./src/button/props/props.js","webpack://spb/./src/payment-flows/checkout.js","webpack://spb/./src/payment-flows/card-fields.js","webpack://spb/./src/payment-flows/popup-bridge.js","webpack://spb/./src/button/button.js","webpack://spb/./src/payment-flows/vault.js","webpack://spb/./src/button/orders.js","webpack://spb/./src/button/logs.js","webpack://spb/./src/button/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","COUNTRY","AD","AE","AG","AI","AL","AM","AN","AO","AR","AT","AU","AW","AZ","BA","BB","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BW","BY","BZ","CA","CD","CG","CH","CI","CK","CL","CM","CN","CO","CR","CV","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GI","GL","GM","GN","GP","GR","GT","GW","GY","HK","HN","HR","HU","ID","IE","IL","IN","IS","IT","JM","JO","JP","KE","KG","KH","KI","KM","KN","KR","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MG","MH","MK","ML","MN","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PL","PM","PN","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SZ","TC","TD","TG","TH","TJ","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","VA","VC","VE","VG","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","SDK_QUERY_KEYS","COMPONENTS","ENV","DEBUG","CACHEBUST","CLIENT_ID","MERCHANT_ID","LOCALE","CURRENCY","INTENT","COMMIT","VAULT","BUYER_COUNTRY","DISABLE_FUNDING","DISABLE_CARD","LOCALE_COUNTRY","LOCALE_LANG","FRAMEWORK","INTEGRATION_DATE","ORDER_CURRENCY","ORDER_INTENT","ORDER_COMMIT","ORDER_VAULT","FPTI_KEY","FEED","STATE","TRANSITION","BUTTON_TYPE","SESSION_UID","BUTTON_SESSION_UID","TOKEN","CONTEXT_ID","CONTEXT_TYPE","REFERER","MERCHANT_DOMAIN","PAY_ID","SELLER_ID","DATA_SOURCE","BUTTON_SOURCE","ERROR_CODE","ERROR_DESC","PAGE_LOAD_TIME","EXPERIMENT_NAME","TREATMENT_NAME","TRANSITION_TIME","FUNDING_LIST","FUNDING_COUNT","CHOSEN_FUNDING","BUTTON_LAYOUT","VERSION","INTEGRATION_IDENTIFIER","PARTNER_ATTRIBUTION_ID","SDK_NAME","SDK_VERSION","USER_AGENT","USER_ACTION","CONTEXT_CORRID","FPTI_USER_ACTION","CONTINUE","FPTI_DATA_SOURCE","PAYMENTS_SDK","FPTI_FEED","FPTI_SDK_NAME","CAPTURE","AUTHORIZE","ORDER","FUNDING","PAYPAL","VENMO","ITAU","CREDIT","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","VERKKOPANKKI","PAYU","ZIMPLER","WECHATPAY","SMART_BUTTONS","SMART_PAYMENT_BUTTONS","ACCESS_TOKEN_HEADER","HEADERS","AUTHORIZATION","CSRF_TOKEN","SOURCE","REQUESTED_BY","ACCESS_TOKEN","CLIENT_METADATA_ID","DATA_ATTRIBUTES","FUNDING_SOURCE","PAYMENT_METHOD_ID","CLASS","LOADING","CLICKED","ORDER_API_ERROR","INSTRUMENT_DECLINED","PAYER_ACTION_REQUIRED","CONTEXT","IFRAME","POPUP","TARGET_ELEMENT","BODY","INTEGRATION_ARTIFACT","PAYPAL_JS_SDK","USER_EXPERIENCE_FLOW","INCONTEXT","INLINE","PRODUCT_FLOW","FPTI_CONTEXT_TYPE","BUTTON_SESSION_ID","ORDER_ID","FPTI_STATE","BUTTON","FPTI_TRANSITION","BUTTON_LOAD","BUTTON_CLICK","CREATE_ORDER","RECEIVE_ORDER","CHECKOUT_SHIPPING_CHANGE","CHECKOUT_AUTHORIZE","CHECKOUT_CANCEL","FPTI_BUTTON_TYPE","FTPI_BUTTON_KEY","BUTTON_COLOR","BUTTON_SIZE","BUTTON_SHAPE","BUTTON_LABEL","BUTTON_WIDTH","BUTTON_TAGLINE_ENABLED","getUserAgent","window","navigator","mockUserAgent","userAgent","isOperaMini","ua","indexOf","isIEIntranet","document","documentMode","status","err","supportsPopups","test","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","safeIndexOf","collection","item","length","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","this","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","isWindow","isWindowClosed","delete","splice","isSafeToReadWrite","Error","entry","writable","index","push","has","undefined","getOrSet","base64encode","str","btoa","Buffer","from","toString","serializeArgs","args","JSON","stringify","Array","slice","subkey","val","obj","chars","uid","replace","charAt","floor","Date","toISOString","toLowerCase","getObjectID","memoize","method","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","time","now","apply","arguments","reset","displayName","inlineMemoize","logic","__inline_memoize_cache__","noop","stringifyError","level","stack","message","newErr","stringifyErrorMessage","defaultMessage","objFilter","filter","Boolean","result","promiseDebounce","delay","promise","timeout","clearTimeout","localPromise","ZalgoPromise","setTimeout","try","then","resolve","reject","safeInterval","loop","cancel","debounce","KEY_CODES","ENTER","isDocumentReady","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","split","pair","decodeURIComponent","extendQuery","originalQuery","props","map","join","extendUrl","url","originalUrl","originalHash","query","hash","hashString","redirect","win","location","href","urlWillRedirectPage","enablePerformance","performance","timing","connectEnd","navigationStart","abs","getPageRenderTime","domInteractive","isBrowser","querySelectorAll","selector","doc","onClick","element","handler","addEventListener","event","keyCode","prototype","CONTENT_TYPE","ACCEPT","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","parse","evt","open","setRequestHeader","encodeURIComponent","ontimeout","send","isPromise","Promise","Window","constructor","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","startActive","endActive","resolved","rejected","errorHandled","error","handlers","dispatching","isAsync","res","dispatch","j","dispatchPossiblyUnhandledError","asyncReject","onSuccess","onError","catch","finally","onFinally","toPromise","TypeError","all","promises","count","results","prom","items","onPossiblyUnhandledException","context","flush","unresolvedPromise","promiseNoop","sendBeacon","img","createElement","src","style","visibility","position","appendChild","LOG_LEVEL","INFO","WARN","ERROR","PROTOCOL","FILE","AUTO_FLUSH_LEVEL","LOG_LEVEL_PRIORITY","FLUSH_INTERVAL","DEFAULT_LOG_LEVEL","httpTransport","extendIfDefined","target","source","getLogger","prefix","logLevel","transport","flushInterval","events","tracking","payloadBuilders","metaBuilders","trackingBuilders","print","payload","console","log","consoleLogLevel","warning","immediateFlush","protocol","meta","builder","req","logger","logPayload","timestamp","enqueue","addBuilder","builders","debug","info","warn","track","trackingPayload","addPayloadBuilder","addMetaBuilder","addTrackingBuilder","addHeaderBuilder","setTransport","newTransport","Logger","LOGGER_URL","setupLogger","env","sessionID","buttonSessionID","clientID","partnerAttributionID","commit","correlationID","locale","merchantID","merchantDomain","referer","host","lang","country","paypal","version","persistedAccessToken","createAccessToken","basicAuth","AUTH_API_URL","Authorization","grant_type","access_token","persistAccessToken","accessToken","createOrderID","order","currency","xprops","intent","toUpperCase","purchase_units","unit","amount","currency_code","payee","UNKNOWN","merchant_id","application_context","ORDERS_API_URL","orderID","id","getOrder","callSmartAPI","API_URI","captureOrder","authorizeOrder","patchOrder","patch","getPayee","CHECKOUT","VALIDATE_CONTINGENCIES","THREE_DOMAIN_SECURE","validatePaymentMethod","clientAccessToken","paymentMethodID","enableThreeDomainSecure","paymentSource","token","type","contingencies","payment_source","VALIDATE_PAYMENT_METHOD_API","billingTokenToOrderID","billingToken","PAYMENT","subscriptionIdToCartId","subscriptionID","SUBSCRIPTION","enableVault","callGraphQL","variables","updateClientConfig","fundingSource","integrationArtifact","userExperienceFlow","productFlow","createSubscription","subscriptionPayload","CREATE_SUBSCRIPTIONS_API_URL","reviseSubscription","activateSubscription","getSubscription","AUTH","BASE_SMART_API_URL","GRAPHQL","EXPERIENCE_URI","CLIENT_ID_PAYEE_NO_MATCH","_extends","assign","reqHeaders","ack","contingency","errors","MOCK","ABOUT","IE_WIN_ACCESS_ERROR","isAboutProtocol","getParent","parent","canReadFromWindow","getActualDomain","getDomain","domain","mockDomain","isAncestorParent","child","childParent","getParents","getTop","top","getAllChildFrames","frames","len","frame","getFrames","iframeWindows","iframeFrames","allowMock","closed","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","iframeIndex","contentWindow","parentNode","ownerDocument","documentElement","contains","isFrameWindowClosed","linkFrameWindow","cleanIframes","self","__cross_domain_utils_window_check__","getButtons","getSelectedFunding","button","getAttribute","card","enableLoadingSpinner","classList","add","disableLoadingSpinner","remove","getNonce","nonce","POPUP_BRIDGE_OPTYPE","CANCEL","buildXOnInitData","buildXOnInitActions","enable","disable","getOnInit","onInit","enabled","isEnabled","buildXCreateOrderData","buildXCreateOrderActions","getCreateOrder","createBillingAgreement","createOrder","actions","getOnApprove","onApprove","payerID","paymentID","restart","handleProcessorError","details","some","detail","issue","capture","authorize","getSubscriptionApi","activateSubscriptionApi","subscription","activate","redir","buildXApproveActions","buildXOnCancelData","buildXOnCancelActions","getOnCancel","onCancel","buildXOnShippingChangeData","buildXShippingChangeActions","getOnShippingChange","onShippingChange","buildXOnClickData","buildXOnClickActions","getOnClick","valid","getOnAuth","buildXCreateBillingAgreementData","buildXCreateBillingAgreementActions","getCreateBillingAgreement","buildXCreateSubscriptionData","buildXCreateSubscriptionActions","revise","getCreateSubscription","createSubscriptionFunc","getGlobalProps","cspNonce","vault","getParentDomain","buyerCountry","buyerGeoCountry","getPopupBridge","getPrerenderDetails","rememberFunding","remember","getButtonCallbackProps","onAuth","checkoutOpen","canRenderTop","initCheckout","fundingEligibility","validationPromise","approved","start","Checkout","fundingSourceEligible","vaultable","isVaultAutoSetupEligible","enableVaultSetup","closeCheckout","onClose","close","triggerError","renderPromise","renderTo","getRenderWindow","cardFieldsOpen","highlightCard","forEach","el","opacity","getElements","buttonsContainer","querySelector","cardButtonsContainer","cardFieldsContainer","slideUpButtons","minHeight","display","recalculateMargin","marginTop","offsetTop","transitionDuration","slideDownButtons","setupButton","serverCSPNonce","personalization","init","popupBridge","buttonProcessing","pay","isCardFields","enableInlineGuest","isCardFieldsEligible","isVaultCapture","isVaultCaptureEligible","isPopupBridge","isPopupBridgeEligible","links","link","rel","instance","ThreeDomainSecure","handleThreeDomainSecure","handleValidateResponse","initVault","CardFields","onCardTypeChange","render","closeCardFields","initCardFields","useraction","redirect_uri","nativeUrl","opType","PayerID","paymentId","ba_token","initPopupBridge","updateButtonClientConfig","cart","checkoutSession","amounts","total","currencyCode","expectedIntent","expectedCurrency","payeeMerchantID","merchant","actualMerchantID","validateOrder","tasks","onElementClick","preventDefault","stopPropagation","payPromise","tagline","click","blur","venmo","eligible","bridge","pageRenderTime","fundingSources","layout","color","shape","label","innerWidth","triggerButtonLogs","setupCheckout","canRenderTo","prerender","prerenderDetails"],"mappings":"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","file":"smart-payment-buttons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","/* @flow */\n/* eslint max-lines: 0 */\n\nexport const COUNTRY = {\n    AD: ('AD' : 'AD'),\n    AE: ('AE' : 'AE'),\n    AG: ('AG' : 'AG'),\n    AI: ('AI' : 'AI'),\n    AL: ('AL' : 'AL'),\n    AM: ('AM' : 'AM'),\n    AN: ('AN' : 'AN'),\n    AO: ('AO' : 'AO'),\n    AR: ('AR' : 'AR'),\n    AT: ('AT' : 'AT'),\n    AU: ('AU' : 'AU'),\n    AW: ('AW' : 'AW'),\n    AZ: ('AZ' : 'AZ'),\n    BA: ('BA' : 'BA'),\n    BB: ('BB' : 'BB'),\n    BE: ('BE' : 'BE'),\n    BF: ('BF' : 'BF'),\n    BG: ('BG' : 'BG'),\n    BH: ('BH' : 'BH'),\n    BI: ('BI' : 'BI'),\n    BJ: ('BJ' : 'BJ'),\n    BM: ('BM' : 'BM'),\n    BN: ('BN' : 'BN'),\n    BO: ('BO' : 'BO'),\n    BR: ('BR' : 'BR'),\n    BS: ('BS' : 'BS'),\n    BT: ('BT' : 'BT'),\n    BW: ('BW' : 'BW'),\n    BY: ('BY' : 'BY'),\n    BZ: ('BZ' : 'BZ'),\n    CA: ('CA' : 'CA'),\n    CD: ('CD' : 'CD'),\n    CG: ('CG' : 'CG'),\n    CH: ('CH' : 'CH'),\n    CI: ('CI' : 'CI'),\n    CK: ('CK' : 'CK'),\n    CL: ('CL' : 'CL'),\n    CM: ('CM' : 'CM'),\n    CN: ('CN' : 'CN'),\n    CO: ('CO' : 'CO'),\n    CR: ('CR' : 'CR'),\n    CV: ('CV' : 'CV'),\n    CY: ('CY' : 'CY'),\n    CZ: ('CZ' : 'CZ'),\n    DE: ('DE' : 'DE'),\n    DJ: ('DJ' : 'DJ'),\n    DK: ('DK' : 'DK'),\n    DM: ('DM' : 'DM'),\n    DO: ('DO' : 'DO'),\n    DZ: ('DZ' : 'DZ'),\n    EC: ('EC' : 'EC'),\n    EE: ('EE' : 'EE'),\n    EG: ('EG' : 'EG'),\n    ER: ('ER' : 'ER'),\n    ES: ('ES' : 'ES'),\n    ET: ('ET' : 'ET'),\n    FI: ('FI' : 'FI'),\n    FJ: ('FJ' : 'FJ'),\n    FK: ('FK' : 'FK'),\n    FM: ('FM' : 'FM'),\n    FO: ('FO' : 'FO'),\n    FR: ('FR' : 'FR'),\n    GA: ('GA' : 'GA'),\n    GB: ('GB' : 'GB'),\n    GD: ('GD' : 'GD'),\n    GE: ('GE' : 'GE'),\n    GF: ('GF' : 'GF'),\n    GI: ('GI' : 'GI'),\n    GL: ('GL' : 'GL'),\n    GM: ('GM' : 'GM'),\n    GN: ('GN' : 'GN'),\n    GP: ('GP' : 'GP'),\n    GR: ('GR' : 'GR'),\n    GT: ('GT' : 'GT'),\n    GW: ('GW' : 'GW'),\n    GY: ('GY' : 'GY'),\n    HK: ('HK' : 'HK'),\n    HN: ('HN' : 'HN'),\n    HR: ('HR' : 'HR'),\n    HU: ('HU' : 'HU'),\n    ID: ('ID' : 'ID'),\n    IE: ('IE' : 'IE'),\n    IL: ('IL' : 'IL'),\n    IN: ('IN' : 'IN'),\n    IS: ('IS' : 'IS'),\n    IT: ('IT' : 'IT'),\n    JM: ('JM' : 'JM'),\n    JO: ('JO' : 'JO'),\n    JP: ('JP' : 'JP'),\n    KE: ('KE' : 'KE'),\n    KG: ('KG' : 'KG'),\n    KH: ('KH' : 'KH'),\n    KI: ('KI' : 'KI'),\n    KM: ('KM' : 'KM'),\n    KN: ('KN' : 'KN'),\n    KR: ('KR' : 'KR'),\n    KW: ('KW' : 'KW'),\n    KY: ('KY' : 'KY'),\n    KZ: ('KZ' : 'KZ'),\n    LA: ('LA' : 'LA'),\n    LC: ('LC' : 'LC'),\n    LI: ('LI' : 'LI'),\n    LK: ('LK' : 'LK'),\n    LS: ('LS' : 'LS'),\n    LT: ('LT' : 'LT'),\n    LU: ('LU' : 'LU'),\n    LV: ('LV' : 'LV'),\n    MA: ('MA' : 'MA'),\n    MC: ('MC' : 'MC'),\n    MD: ('MD' : 'MD'),\n    ME: ('ME' : 'ME'),\n    MG: ('MG' : 'MG'),\n    MH: ('MH' : 'MH'),\n    MK: ('MK' : 'MK'),\n    ML: ('ML' : 'ML'),\n    MN: ('MN' : 'MN'),\n    MQ: ('MQ' : 'MQ'),\n    MR: ('MR' : 'MR'),\n    MS: ('MS' : 'MS'),\n    MT: ('MT' : 'MT'),\n    MU: ('MU' : 'MU'),\n    MV: ('MV' : 'MV'),\n    MW: ('MW' : 'MW'),\n    MX: ('MX' : 'MX'),\n    MY: ('MY' : 'MY'),\n    MZ: ('MZ' : 'MZ'),\n    NA: ('NA' : 'NA'),\n    NC: ('NC' : 'NC'),\n    NE: ('NE' : 'NE'),\n    NF: ('NF' : 'NF'),\n    NG: ('NG' : 'NG'),\n    NI: ('NI' : 'NI'),\n    NL: ('NL' : 'NL'),\n    NO: ('NO' : 'NO'),\n    NP: ('NP' : 'NP'),\n    NR: ('NR' : 'NR'),\n    NU: ('NU' : 'NU'),\n    NZ: ('NZ' : 'NZ'),\n    OM: ('OM' : 'OM'),\n    PA: ('PA' : 'PA'),\n    PE: ('PE' : 'PE'),\n    PF: ('PF' : 'PF'),\n    PG: ('PG' : 'PG'),\n    PH: ('PH' : 'PH'),\n    PL: ('PL' : 'PL'),\n    PM: ('PM' : 'PM'),\n    PN: ('PN' : 'PN'),\n    PT: ('PT' : 'PT'),\n    PW: ('PW' : 'PW'),\n    PY: ('PY' : 'PY'),\n    QA: ('QA' : 'QA'),\n    RE: ('RE' : 'RE'),\n    RO: ('RO' : 'RO'),\n    RS: ('RS' : 'RS'),\n    RU: ('RU' : 'RU'),\n    RW: ('RW' : 'RW'),\n    SA: ('SA' : 'SA'),\n    SB: ('SB' : 'SB'),\n    SC: ('SC' : 'SC'),\n    SE: ('SE' : 'SE'),\n    SG: ('SG' : 'SG'),\n    SH: ('SH' : 'SH'),\n    SI: ('SI' : 'SI'),\n    SJ: ('SJ' : 'SJ'),\n    SK: ('SK' : 'SK'),\n    SL: ('SL' : 'SL'),\n    SM: ('SM' : 'SM'),\n    SN: ('SN' : 'SN'),\n    SO: ('SO' : 'SO'),\n    SR: ('SR' : 'SR'),\n    ST: ('ST' : 'ST'),\n    SV: ('SV' : 'SV'),\n    SZ: ('SZ' : 'SZ'),\n    TC: ('TC' : 'TC'),\n    TD: ('TD' : 'TD'),\n    TG: ('TG' : 'TG'),\n    TH: ('TH' : 'TH'),\n    TJ: ('TJ' : 'TJ'),\n    TM: ('TM' : 'TM'),\n    TN: ('TN' : 'TN'),\n    TO: ('TO' : 'TO'),\n    TR: ('TR' : 'TR'),\n    TT: ('TT' : 'TT'),\n    TV: ('TV' : 'TV'),\n    TW: ('TW' : 'TW'),\n    TZ: ('TZ' : 'TZ'),\n    UA: ('UA' : 'UA'),\n    UG: ('UG' : 'UG'),\n    US: ('US' : 'US'),\n    UY: ('UY' : 'UY'),\n    VA: ('VA' : 'VA'),\n    VC: ('VC' : 'VC'),\n    VE: ('VE' : 'VE'),\n    VG: ('VG' : 'VG'),\n    VN: ('VN' : 'VN'),\n    VU: ('VU' : 'VU'),\n    WF: ('WF' : 'WF'),\n    WS: ('WS' : 'WS'),\n    YE: ('YE' : 'YE'),\n    YT: ('YT' : 'YT'),\n    ZA: ('ZA' : 'ZA'),\n    ZM: ('ZM' : 'ZM'),\n    ZW: ('ZW' : 'ZW')\n};\n\nexport const LANG = {\n    AR: ('ar' : 'ar'),\n    CS: ('cs' : 'cs'),\n    DA: ('da' : 'da'),\n    DE: ('de' : 'de'),\n    EL: ('el' : 'el'),\n    EN: ('en' : 'en'),\n    ES: ('es' : 'es'),\n    FI: ('fi' : 'fi'),\n    FR: ('fr' : 'fr'),\n    HE: ('he' : 'he'),\n    HU: ('hu' : 'hu'),\n    ID: ('id' : 'id'),\n    IT: ('it' : 'it'),\n    JA: ('ja' : 'ja'),\n    KO: ('ko' : 'ko'),\n    NL: ('nl' : 'nl'),\n    NO: ('no' : 'no'),\n    PL: ('pl' : 'pl'),\n    PT: ('pt' : 'pt'),\n    RU: ('ru' : 'ru'),\n    SK: ('sk' : 'sk'),\n    SV: ('sv' : 'sv'),\n    TH: ('th' : 'th'),\n    TR: ('tr' : 'tr'),\n    ZH: ('zh' : 'zh')\n};\n\nexport type CountryLangs = {\n    AD : 'en' | 'fr' | 'es' | 'zh',\n    AE : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    AG : 'en' | 'fr' | 'es' | 'zh',\n    AI : 'en' | 'fr' | 'es' | 'zh',\n    AL : 'en',\n    AM : 'en' | 'fr' | 'es' | 'zh',\n    AN : 'en' | 'fr' | 'es' | 'zh',\n    AO : 'en' | 'fr' | 'es' | 'zh',\n    AR : 'es' | 'en',\n    AT : 'de' | 'en',\n    AU : 'en',\n    AW : 'en' | 'fr' | 'es' | 'zh',\n    AZ : 'en' | 'fr' | 'es' | 'zh',\n    BA : 'en',\n    BB : 'en' | 'fr' | 'es' | 'zh',\n    BE : 'en' | 'nl' | 'fr',\n    BF : 'fr' | 'en' | 'es' | 'zh',\n    BG : 'en',\n    BH : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    BI : 'fr' | 'en' | 'es' | 'zh',\n    BJ : 'fr' | 'en' | 'es' | 'zh',\n    BM : 'en' | 'fr' | 'es' | 'zh',\n    BN : 'en',\n    BO : 'es' | 'en' | 'fr' | 'zh',\n    BR : 'pt' | 'en',\n    BS : 'en' | 'fr' | 'es' | 'zh',\n    BT : 'en',\n    BW : 'en' | 'fr' | 'es' | 'zh',\n    BY : 'en',\n    BZ : 'en' | 'es' | 'fr' | 'zh',\n    CA : 'en' | 'fr',\n    CD : 'fr' | 'en' | 'es' | 'zh',\n    CG : 'en' | 'fr' | 'es' | 'zh',\n    CH : 'de' | 'fr' | 'en',\n    CI : 'fr' | 'en',\n    CK : 'en' | 'fr' | 'es' | 'zh',\n    CL : 'es' | 'en' | 'fr' | 'zh',\n    CM : 'fr' | 'en',\n    CN : 'zh',\n    CO : 'es' | 'en' | 'fr' | 'zh',\n    CR : 'es' | 'en' | 'fr' | 'zh',\n    CV : 'en' | 'fr' | 'es' | 'zh',\n    CY : 'en',\n    CZ : 'cs' | 'en' | 'fr' | 'es' | 'zh',\n    DE : 'de' | 'en',\n    DJ : 'fr' | 'en' | 'es' | 'zh',\n    DK : 'da' | 'en',\n    DM : 'en' | 'fr' | 'es' | 'zh',\n    DO : 'es' | 'en' | 'fr' | 'zh',\n    DZ : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    EC : 'es' | 'en' | 'fr' | 'zh',\n    EE : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    EG : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    ER : 'en' | 'fr' | 'es' | 'zh',\n    ES : 'es' | 'en',\n    ET : 'en' | 'fr' | 'es' | 'zh',\n    FI : 'fi' | 'en' | 'fr' | 'es' | 'zh',\n    FJ : 'en' | 'fr' | 'es' | 'zh',\n    FK : 'en' | 'fr' | 'es' | 'zh',\n    FM : 'en',\n    FO : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    FR : 'fr' | 'en',\n    GA : 'fr' | 'en' | 'es' | 'zh',\n    GB : 'en',\n    GD : 'en' | 'fr' | 'es' | 'zh',\n    GE : 'en' | 'fr' | 'es' | 'zh',\n    GF : 'en' | 'fr' | 'es' | 'zh',\n    GI : 'en' | 'fr' | 'es' | 'zh',\n    GL : 'da' | 'en' | 'fr' | 'es' | 'zh',\n    GM : 'en' | 'fr' | 'es' | 'zh',\n    GN : 'fr' | 'en' | 'es' | 'zh',\n    GP : 'en' | 'fr' | 'es' | 'zh',\n    GR : 'el' | 'en' | 'fr' | 'es' | 'zh',\n    GT : 'es' | 'en' | 'fr' | 'zh',\n    GW : 'en' | 'fr' | 'es' | 'zh',\n    GY : 'en' | 'fr' | 'es' | 'zh',\n    HK : 'en' | 'zh',\n    HN : 'es' | 'en' | 'fr' | 'zh',\n    HR : 'en',\n    HU : 'hu' | 'en' | 'fr' | 'es' | 'zh',\n    ID : 'id' | 'en',\n    IE : 'en' | 'fr' | 'es' | 'zh',\n    IL : 'he' | 'en',\n    IN : 'en',\n    IS : 'en',\n    IT : 'it' | 'en',\n    JM : 'en' | 'es' | 'fr' | 'zh',\n    JO : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    JP : 'ja' | 'en',\n    KE : 'en' | 'fr' | 'es' | 'zh',\n    KG : 'en' | 'fr' | 'es' | 'zh',\n    KH : 'en',\n    KI : 'en' | 'fr' | 'es' | 'zh',\n    KM : 'fr' | 'en' | 'es' | 'zh',\n    KN : 'en' | 'fr' | 'es' | 'zh',\n    KR : 'ko' | 'en',\n    KW : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    KY : 'en' | 'fr' | 'es' | 'zh',\n    KZ : 'en' | 'fr' | 'es' | 'zh',\n    LA : 'en',\n    LC : 'en' | 'fr' | 'es' | 'zh',\n    LI : 'en' | 'fr' | 'es' | 'zh',\n    LK : 'en',\n    LS : 'en' | 'fr' | 'es' | 'zh',\n    LT : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    LU : 'en' | 'de' | 'fr' | 'es' | 'zh',\n    LV : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    MA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    MC : 'fr' | 'en',\n    MD : 'en',\n    ME : 'en',\n    MG : 'en' | 'fr' | 'es' | 'zh',\n    MH : 'en' | 'fr' | 'es' | 'zh',\n    MK : 'en',\n    ML : 'fr' | 'en' | 'es' | 'zh',\n    MN : 'en',\n    MQ : 'en' | 'fr' | 'es' | 'zh',\n    MR : 'en' | 'fr' | 'es' | 'zh',\n    MS : 'en' | 'fr' | 'es' | 'zh',\n    MT : 'en',\n    MU : 'en' | 'fr' | 'es' | 'zh',\n    MV : 'en',\n    MW : 'en' | 'fr' | 'es' | 'zh',\n    MX : 'es' | 'en',\n    MY : 'en',\n    MZ : 'en' | 'fr' | 'es' | 'zh',\n    NA : 'en' | 'fr' | 'es' | 'zh',\n    NC : 'en' | 'fr' | 'es' | 'zh',\n    NE : 'fr' | 'en' | 'es' | 'zh',\n    NF : 'en' | 'fr' | 'es' | 'zh',\n    NG : 'en',\n    NI : 'es' | 'en' | 'fr' | 'zh',\n    NL : 'nl' | 'en',\n    NO : 'no' | 'en',\n    NP : 'en',\n    NR : 'en' | 'fr' | 'es' | 'zh',\n    NU : 'en' | 'fr' | 'es' | 'zh',\n    NZ : 'en' | 'fr' | 'es' | 'zh',\n    OM : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    PA : 'es' | 'en' | 'fr' | 'zh',\n    PE : 'es' | 'en' | 'fr' | 'zh',\n    PF : 'en' | 'fr' | 'es' | 'zh',\n    PG : 'en' | 'fr' | 'es' | 'zh',\n    PH : 'en',\n    PL : 'pl' | 'en',\n    PM : 'en' | 'fr' | 'es' | 'zh',\n    PN : 'en' | 'fr' | 'es' | 'zh',\n    PT : 'pt' | 'en',\n    PW : 'en' | 'fr' | 'es' | 'zh',\n    PY : 'es' | 'en',\n    QA : 'en' | 'fr' | 'es' | 'zh' | 'ar',\n    RE : 'en' | 'fr' | 'es' | 'zh',\n    RO : 'en' | 'fr' | 'es' | 'zh',\n    RS : 'en' | 'fr' | 'es' | 'zh',\n    RU : 'ru' | 'en',\n    RW : 'fr' | 'en' | 'es' | 'zh',\n    SA : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    SB : 'en' | 'fr' | 'es' | 'zh',\n    SC : 'fr' | 'en' | 'es' | 'zh',\n    SE : 'sv' | 'en',\n    SG : 'en',\n    SH : 'en' | 'fr' | 'es' | 'zh',\n    SI : 'en' | 'fr' | 'es' | 'zh',\n    SJ : 'en' | 'fr' | 'es' | 'zh',\n    SK : 'sk' | 'en' | 'fr' | 'es' | 'zh',\n    SL : 'en' | 'fr' | 'es' | 'zh',\n    SM : 'en' | 'fr' | 'es' | 'zh',\n    SN : 'fr' | 'en' | 'es' | 'zh',\n    SO : 'en' | 'fr' | 'es' | 'zh',\n    SR : 'en' | 'fr' | 'es' | 'zh',\n    ST : 'en' | 'fr' | 'es' | 'zh',\n    SV : 'es' | 'en' | 'fr' | 'zh',\n    SZ : 'en' | 'fr' | 'es' | 'zh',\n    TC : 'en' | 'fr' | 'es' | 'zh',\n    TD : 'fr' | 'en' | 'es' | 'zh',\n    TG : 'fr' | 'en' | 'es' | 'zh',\n    TH : 'th' | 'en',\n    TJ : 'en' | 'fr' | 'es' | 'zh',\n    TM : 'en' | 'fr' | 'es' | 'zh',\n    TN : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    TO : 'en',\n    TR : 'tr' | 'en',\n    TT : 'en' | 'fr' | 'es' | 'zh',\n    TV : 'en' | 'fr' | 'es' | 'zh',\n    TW : 'zh' | 'en',\n    TZ : 'en' | 'fr' | 'es' | 'zh',\n    UA : 'en' | 'ru' | 'fr' | 'es' | 'zh',\n    UG : 'en' | 'fr' | 'es' | 'zh',\n    US : 'en' | 'fr' | 'es' | 'zh',\n    UY : 'es' | 'en' | 'fr' | 'zh',\n    VA : 'en' | 'fr' | 'es' | 'zh',\n    VC : 'en' | 'fr' | 'es' | 'zh',\n    VE : 'es' | 'en' | 'fr' | 'zh',\n    VG : 'en' | 'fr' | 'es' | 'zh',\n    VN : 'en',\n    VU : 'en' | 'fr' | 'es' | 'zh',\n    WF : 'en' | 'fr' | 'es' | 'zh',\n    WS : 'en',\n    YE : 'ar' | 'en' | 'fr' | 'es' | 'zh',\n    YT : 'en' | 'fr' | 'es' | 'zh',\n    ZA : 'en' | 'fr' | 'es' | 'zh',\n    ZM : 'en' | 'fr' | 'es' | 'zh',\n    ZW : 'en'\n};\n\ntype CountryMap = {\n    [ $Values<typeof COUNTRY> ] : Array<$Values<typeof LANG>>\n};\n\nexport const COUNTRY_LANGS : CountryMap = {\n    AD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    AG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AL: [ LANG.EN ],\n    AM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AR: [ LANG.ES, LANG.EN ],\n    AT: [ LANG.DE, LANG.EN ],\n    AU: [ LANG.EN ],\n    AW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    AZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BA: [ LANG.EN ],\n    BB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BE: [ LANG.EN, LANG.NL, LANG.FR ],\n    BF: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BG: [ LANG.EN ],\n    BH: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BI: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    BM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BN: [ LANG.EN ],\n    BO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    BR: [ LANG.PT, LANG.EN ],\n    BS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BT: [ LANG.EN ],\n    BW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    BY: [ LANG.EN ],\n    BZ: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    CA: [ LANG.EN, LANG.FR ],\n    CD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    CG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CH: [ LANG.DE, LANG.FR, LANG.EN ],\n    CI: [ LANG.FR, LANG.EN ],\n    CK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CL: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CM: [ LANG.FR, LANG.EN ],\n    CN: [ LANG.ZH ],\n    CO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CR: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    CV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    CY: [ LANG.EN ],\n    CZ: [ LANG.CS, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DE: [ LANG.DE, LANG.EN ],\n    DJ: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    DK: [ LANG.DA, LANG.EN ],\n    DM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    DO: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    DZ: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    EC: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    EE: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    EG: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ER: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ES: [ LANG.ES, LANG.EN ],\n    ET: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FI: [ LANG.FI, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FK: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FM: [ LANG.EN ],\n    FO: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    FR: [ LANG.FR, LANG.EN ],\n    GA: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GB: [ LANG.EN ],\n    GD: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GL: [ LANG.DA, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    GP: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GR: [ LANG.EL, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GT: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    GW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    GY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    HK: [ LANG.EN, LANG.ZH ],\n    HN: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    HR: [ LANG.EN ],\n    HU: [ LANG.HU, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ID: [ LANG.ID, LANG.EN ],\n    IE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    IL: [ LANG.HE, LANG.EN ],\n    IN: [ LANG.EN ],\n    IS: [ LANG.EN ],\n    IT: [ LANG.IT, LANG.EN ],\n    JM: [ LANG.EN, LANG.ES, LANG.FR, LANG.ZH ],\n    JO: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    JP: [ LANG.JA, LANG.EN ],\n    KE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KH: [ LANG.EN ],\n    KI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KM: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    KN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KR: [ LANG.KO, LANG.EN ],\n    KW: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KY: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    KZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LA: [ LANG.EN ],\n    LC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LK: [ LANG.EN ],\n    LS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    LT: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    LU: [ LANG.EN, LANG.DE, LANG.FR, LANG.ES, LANG.ZH ],\n    LV: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    MA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MC: [ LANG.FR, LANG.EN ],\n    MD: [ LANG.EN ],\n    ME: [ LANG.EN ],\n    MG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MK: [ LANG.EN ],\n    ML: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    MN: [ LANG.EN ],\n    MQ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MT: [ LANG.EN ],\n    MU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MV: [ LANG.EN ],\n    MW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    MX: [ LANG.ES, LANG.EN ],\n    MY: [ LANG.EN ],\n    MZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NE: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    NF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NG: [ LANG.EN ],\n    NI: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    NL: [ LANG.NL, LANG.EN ],\n    NO: [ LANG.NO, LANG.EN ],\n    NP: [ LANG.EN ],\n    NR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    NZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    OM: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PA: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    PF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PH: [ LANG.EN ],\n    PL: [ LANG.PL, LANG.EN ],\n    PM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PN: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PT: [ LANG.PT, LANG.EN ],\n    PW: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    PY: [ LANG.ES, LANG.EN ],\n    QA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH, LANG.AR ],\n    RE: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RS: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    RU: [ LANG.RU, LANG.EN ],\n    RW: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SA: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SB: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SC: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SE: [ LANG.SV, LANG.EN ],\n    SG: [ LANG.EN ],\n    SH: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SI: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SK: [ LANG.SK, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SL: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SN: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    SO: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SR: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ST: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    SV: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    SZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TD: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TG: [ LANG.FR, LANG.EN, LANG.ES, LANG.ZH ],\n    TH: [ LANG.TH, LANG.EN ],\n    TJ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TN: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TO: [ LANG.EN ],\n    TR: [ LANG.TR, LANG.EN ],\n    TT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TV: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    TW: [ LANG.ZH, LANG.EN ],\n    TZ: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UA: [ LANG.EN, LANG.RU, LANG.FR, LANG.ES, LANG.ZH ],\n    UG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    US: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    UY: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VC: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VE: [ LANG.ES, LANG.EN, LANG.FR, LANG.ZH ],\n    VG: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    VN: [ LANG.EN ],\n    VU: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WF: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    WS: [ LANG.EN ],\n    YE: [ LANG.AR, LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    YT: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZA: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZM: [ LANG.EN, LANG.FR, LANG.ES, LANG.ZH ],\n    ZW: [ LANG.EN ]\n};\n\nexport type LocaleType = {\n    country : $Values<typeof COUNTRY>,\n    lang : $Values<typeof LANG>\n};\n","/* @flow */\n\nexport const SDK_PATH = '/sdk/js';\n\nexport const SDK_SETTINGS = {\n    NAMESPACE:              ('data-namespace' : 'data-namespace'),\n    CLIENT_TOKEN:           ('data-client-token' : 'data-client-token'),\n    PARTNER_ATTRIBUTION_ID: ('data-partner-attribution-id' : 'data-partner-attribution-id'),\n    STAGE_HOST:             ('data-stage-host' : 'data-stage-host'),\n    API_STAGE_HOST:         ('data-api-stage-host' : 'data-api-stage-host'),\n    CSP_NONCE:              ('data-csp-nonce' : 'data-csp-nonce'),\n    ENABLE_3DS:             ('data-enable-3ds' : 'data-enable-3ds')\n};\n\nexport const SDK_QUERY_KEYS = {\n    COMPONENTS: ('components' : 'components'),\n\n    ENV:       ('env' : 'env'),\n    DEBUG:     ('debug' : 'debug'),\n    CACHEBUST: ('cachebust' : 'cachebust'),\n\n    CLIENT_ID:   ('client-id' : 'client-id'),\n    MERCHANT_ID: ('merchant-id' : 'merchant-id'),\n\n    LOCALE: ('locale' : 'locale'),\n\n    CURRENCY: ('currency' : 'currency'),\n    INTENT:   ('intent' : 'intent'),\n    COMMIT:   ('commit' : 'commit'),\n    VAULT:    ('vault' : 'vault'),\n\n    BUYER_COUNTRY: ('buyer-country' : 'buyer-country'),\n\n    DISABLE_FUNDING: ('disable-funding' : 'disable-funding'),\n    DISABLE_CARD:    ('disable-card' : 'disable-card'),\n\n    LOCALE_COUNTRY: ('locale-country' : 'locale-country'),\n    LOCALE_LANG:    ('locale-lang' : 'locale-lang'),\n\n    FRAMEWORK: ('framework' : 'framework'),\n\n    INTEGRATION_DATE: ('integration-date' : 'integration-date'),\n\n    ORDER_CURRENCY: ('order-currency' : 'order-currency'),\n    ORDER_INTENT:   ('order-intent' : 'order-intent'),\n    ORDER_COMMIT:   ('order-commit' : 'order-commit'),\n    ORDER_VAULT:    ('order-vault' : 'order-vault')\n};\n\nexport const COMPONENTS = {\n    BUTTONS:       ('buttons' : 'buttons'),\n    HOSTED_FIELDS: ('hosted-fields' : 'hosted-fields')\n};\n\nexport const FRAMEWORK = {\n    ANGULARJS: ('angularjs' : 'angularjs'),\n    ANGULAR:   ('angular' : 'angular'),\n    REACT:     ('react' : 'react'),\n    VUE:       ('vue' : 'vue')\n};\n\nexport const DEBUG = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const QUERY_BOOL = {\n    TRUE:  ('true' : 'true'),\n    FALSE: ('false' : 'false')\n};\n\nexport const UNKNOWN = ('unknown' : 'unknown');\n\nexport const PROTOCOL = {\n    HTTP:  ('http' : 'http'),\n    HTTPS: ('https' : 'https')\n};\n","/* @flow */\n\nexport const FPTI_KEY = {\n    FEED:                   ('feed_name' : 'feed_name'),\n    STATE:                  ('state_name' : 'state_name'),\n    TRANSITION:             ('transition_name' : 'transition_name'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    SESSION_UID:            ('page_session_id' : 'page_session_id'),\n    BUTTON_SESSION_UID:     ('button_session_id' : 'button_session_id'),\n    TOKEN:                  ('token' : 'token'),\n    CONTEXT_ID:             ('context_id' : 'context_id'),\n    CONTEXT_TYPE:           ('context_type' : 'context_type'),\n    REFERER:                ('referer_url' : 'referer_url'),\n    MERCHANT_DOMAIN:        ('merchant_domain' : 'merchant_domain'),\n    PAY_ID:                 ('pay_id' : 'pay_id'),\n    SELLER_ID:              ('seller_id' : 'seller_id'),\n    CLIENT_ID:              ('client_id' : 'client_id'),\n    DATA_SOURCE:            ('serverside_data_source' : 'serverside_data_source'),\n    BUTTON_SOURCE:          ('button_source' : 'button_source'),\n    ERROR_CODE:             ('ext_error_code' : 'ext_error_code'),\n    ERROR_DESC:             ('ext_error_desc' : 'ext_error_desc'),\n    PAGE_LOAD_TIME:         ('page_load_time' : 'page_load_time'),\n    EXPERIMENT_NAME:        ('pxp_exp_id' : 'pxp_exp_id'),\n    TREATMENT_NAME:         ('pxp_trtmnt_id' : 'pxp_trtmnt_id'),\n    TRANSITION_TIME:        ('transition_time' : 'transition_time'),\n    FUNDING_LIST:           ('eligible_payment_methods' : 'eligible_payment_methods'),\n    FUNDING_COUNT:          ('eligible_payment_count' : 'eligible_payment_count'),\n    CHOSEN_FUNDING:         ('selected_payment_method' : 'selected_payment_method'),\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    VERSION:                ('checkoutjs_version' : 'checkoutjs_version'),\n    LOCALE:                 ('locale' : 'locale'),\n    BUYER_COUNTRY:          ('buyer_cntry' : 'buyer_cntry'),\n    INTEGRATION_IDENTIFIER: ('integration_identifier' : 'integration_identifier'),\n    PARTNER_ATTRIBUTION_ID: ('bn_code' : 'bn_code'),\n    SDK_NAME:               ('sdk_name' : 'sdk_name'),\n    SDK_VERSION:            ('sdk_version' : 'sdk_version'),\n    USER_AGENT:             ('user_agent' : 'user_agent'),\n    USER_ACTION:            ('user_action' : 'user_action'),\n    CONTEXT_CORRID:         ('context_correlation_id' : 'context_correlation_id')\n};\n\nexport const FPTI_USER_ACTION = {\n    COMMIT:   ('commit' : 'commit'),\n    CONTINUE: ('continue' : 'continue')\n};\n\n\nexport const FPTI_DATA_SOURCE = {\n    PAYMENTS_SDK: ('checkout' : 'checkout')\n};\n\nexport const FPTI_FEED = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n\nexport const FPTI_SDK_NAME = {\n    PAYMENTS_SDK: ('payments_sdk' : 'payments_sdk')\n};\n","/* @flow */\n\nexport const INTENT = {\n    CAPTURE:   ('capture' : 'capture'),\n    AUTHORIZE: ('authorize' : 'authorize'),\n    ORDER:     ('order' : 'order')\n};\n\nexport const COMMIT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const VAULT = {\n    TRUE:  (true : true),\n    FALSE: (false : false)\n};\n\nexport const CURRENCY = {\n    AUD: ('AUD' : 'AUD'),\n    BRL: ('BRL' : 'BRL'),\n    CAD: ('CAD' : 'CAD'),\n    CZK: ('CZK' : 'CZK'),\n    DKK: ('DKK' : 'DKK'),\n    EUR: ('EUR' : 'EUR'),\n    HKD: ('HKD' : 'HKD'),\n    HUF: ('HUF' : 'HUF'),\n    INR: ('INR' : 'INR'),\n    ILS: ('ILS' : 'ILS'),\n    JPY: ('JPY' : 'JPY'),\n    MUR: ('MUR' : 'MUR'),\n    MYR: ('MYR' : 'MYR'),\n    MXN: ('MXN' : 'MXN'),\n    TWD: ('TWD' : 'TWD'),\n    NZD: ('NZD' : 'NZD'),\n    NOK: ('NOK' : 'NOK'),\n    PHP: ('PHP' : 'PHP'),\n    PLN: ('PLN' : 'PLN'),\n    GBP: ('GBP' : 'GBP'),\n    RUB: ('RUB' : 'RUB'),\n    SGD: ('SGD' : 'SGD'),\n    SEK: ('SEK' : 'SEK'),\n    CHF: ('CHF' : 'CHF'),\n    THB: ('THB' : 'THB'),\n    USD: ('USD' : 'USD')\n};\n","/* @flow */\n\nexport const FUNDING = {\n    PAYPAL:         ('paypal' : 'paypal'),\n    VENMO:          ('venmo' : 'venmo'),\n    ITAU:           ('itau' : 'itau'),\n    CREDIT:         ('credit' : 'credit'),\n    CARD:           ('card' : 'card'),\n    IDEAL:          ('ideal' : 'ideal'),\n    SEPA:           ('sepa' : 'sepa'),\n    BANCONTACT:     ('bancontact' : 'bancontact'),\n    GIROPAY:        ('giropay' : 'giropay'),\n    SOFORT:         ('sofort' : 'sofort'),\n    EPS:            ('eps' : 'eps'),\n    MYBANK:         ('mybank' : 'mybank'),\n    P24:            ('p24' : 'p24'),\n    VERKKOPANKKI:   ('verkkopankki' : 'verkkopankki'),\n    PAYU:           ('payu' : 'payu'),\n    ZIMPLER:        ('zimpler' : 'zimpler'),\n    WECHATPAY:      ('wechatpay' : 'wechatpay')\n};\n\nexport const CARD = {\n    VISA:        ('visa' : 'visa'),\n    MASTERCARD:  ('mastercard' : 'mastercard'),\n    AMEX:        ('amex' : 'amex'),\n    DISCOVER:    ('discover' : 'discover'),\n    HIPER:       ('hiper' : 'hiper'),\n    ELO:         ('elo' : 'elo'),\n    JCB:         ('jcb' : 'jcb'),\n    CUP:         ('cup' : 'cup')\n};\n","/* @flow */\n\nexport * from './locale';\nexport * from './params';\nexport * from './env';\nexport * from './fpti';\nexport * from './order';\nexport * from './platform';\nexport * from './funding';\nexport * from './defaults';\n","/* @flow */\n\nexport const SMART_BUTTONS = 'smart_buttons';\nexport const SMART_PAYMENT_BUTTONS = 'smart-payment-buttons';\n\nexport const ACCESS_TOKEN_HEADER = 'x-paypal-internal-euat';\n\nexport const HEADERS = {\n    AUTHORIZATION: 'authorization',\n\n    CSRF_TOKEN:         'x-csrf-jwt',\n    SOURCE:             'x-source',\n    REQUESTED_BY:       'x-requested-by',\n\n    ACCESS_TOKEN:           'x-paypal-internal-euat',\n    PARTNER_ATTRIBUTION_ID: 'paypal-partner-attribution-id',\n    CLIENT_METADATA_ID:     'paypal-client-metadata-id'\n};\n\nexport const DATA_ATTRIBUTES = {\n    FUNDING_SOURCE:    'data-funding-source',\n    CARD:              'data-card',\n    PAYMENT_METHOD_ID: 'data-payment-method-id'\n};\n\nexport const CLASS = {\n    LOADING: 'paypal-button-loading',\n    CLICKED: 'paypal-button-clicked'\n};\n\nexport const ORDER_API_ERROR = {\n    INSTRUMENT_DECLINED:   'INSTRUMENT_DECLINED',\n    PAYER_ACTION_REQUIRED: 'PAYER_ACTION_REQUIRED'\n};\n\nexport const CONTEXT = {\n    IFRAME: 'iframe',\n    POPUP:  'popup'\n};\n\nexport const TARGET_ELEMENT = {\n    BODY: 'body'\n};\n\nexport const INTEGRATION_ARTIFACT = {\n    PAYPAL_JS_SDK: 'PAYPAL_JS_SDK'\n};\n\nexport const USER_EXPERIENCE_FLOW = {\n    INCONTEXT: 'INCONTEXT',\n    INLINE:    'INLINE'\n};\n\nexport const PRODUCT_FLOW = {\n    SMART_PAYMENT_BUTTONS: 'SMART_PAYMENT_BUTTONS'\n};\n\nexport const FPTI_CONTEXT_TYPE = {\n    BUTTON_SESSION_ID: ('button_session_id' : 'button_session_id'),\n    ORDER_ID:          ('EC-Token' : 'EC-Token')\n};\n\nexport const FPTI_STATE = {\n    BUTTON:   ('smart_button' : 'smart_button')\n};\n\nexport const FPTI_TRANSITION = {\n    BUTTON_LOAD:              ('process_button_load' : 'process_button_load'),\n    BUTTON_CLICK:             ('process_button_click' : 'process_button_click'),\n    CREATE_ORDER:             ('process_create_order' : 'process_create_order'),\n    RECEIVE_ORDER:            ('process_receive_order' : 'process_receive_order'),\n    CHECKOUT_SHIPPING_CHANGE: ('process_checkout_shipping_change' : 'process_checkout_shipping_change'),\n    CHECKOUT_AUTHORIZE:       ('process_checkout_authorize' : 'process_checkout_authorize'),\n    CHECKOUT_CANCEL:          ('process_checkout_cancel' : 'process_checkout_cancel')\n};\n\nexport const FPTI_BUTTON_TYPE = {\n    IFRAME: ('iframe' : 'iframe')\n};\n\nexport const FTPI_BUTTON_KEY = {\n    BUTTON_LAYOUT:          ('button_layout' : 'button_layout'),\n    BUTTON_COLOR:           ('button_color' : 'button_color'),\n    BUTTON_SIZE:            ('button_size' : 'button_size'),\n    BUTTON_SHAPE:           ('button_shape' : 'button_shape'),\n    BUTTON_LABEL:           ('button_label' : 'button_label'),\n    BUTTON_WIDTH:           ('button_width' : 'button_width'),\n    BUTTON_TYPE:            ('button_type' : 'button_type'),\n    BUTTON_TAGLINE_ENABLED: ('button_tagline_enabled' : 'button_tagline_enabled')\n};\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob(str);\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.pop();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n    \n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\nexport * from './test';\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nexport function unresolvedPromise<T>() : ZalgoPromise<T> {\n    return new ZalgoPromise(noop);\n}\n\nexport function promiseNoop<T>(...args : $ReadOnlyArray<T>) : ZalgoPromise<void> { // eslint-disable-line no-unused-vars\n    return ZalgoPromise.resolve();\n}\n\nexport function getBody() : HTMLBodyElement {\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Document body not found`);\n    }\n\n    return body;\n}\n\nexport function sendBeacon(url : string) {\n    const img = document.createElement('img');\n    img.src = url;\n    img.style.visibility = 'hidden';\n    img.style.position = 'absolute';\n    if (document.body) {\n        document.body.appendChild(img);\n    }\n}\n","/* @flow */\n\nexport const LOG_LEVEL = {\n    DEBUG: ('debug' : 'debug'),\n    INFO:  ('info' : 'info'),\n    WARN:  ('warn' : 'warn'),\n    ERROR: ('error' : 'error')\n};\n\nexport const PROTOCOL = {\n    FILE: 'file:'\n};\n","/* @flow */\n\nimport { LOG_LEVEL } from './constants';\n\nexport const AUTO_FLUSH_LEVEL = [ LOG_LEVEL.WARN, LOG_LEVEL.ERROR ];\n\nexport const LOG_LEVEL_PRIORITY = [ LOG_LEVEL.ERROR, LOG_LEVEL.WARN, LOG_LEVEL.INFO, LOG_LEVEL.DEBUG ];\n\nexport const FLUSH_INTERVAL = 60 * 1000;\n\nexport const DEFAULT_LOG_LEVEL = LOG_LEVEL.WARN;\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request, isBrowser, promiseDebounce, noop, safeInterval, objFilter } from 'belter/src';\n\nimport { DEFAULT_LOG_LEVEL, LOG_LEVEL_PRIORITY, AUTO_FLUSH_LEVEL, FLUSH_INTERVAL } from './config';\nimport { LOG_LEVEL, PROTOCOL } from './constants';\n\ntype Transport = ({ url : string, method : string, headers : Payload, json : Object }) => ZalgoPromise<void>;\n\ntype LoggerOptions = {\n    url : string,\n    prefix? : string,\n    logLevel? : $Values<typeof LOG_LEVEL>,\n    transport? : Transport,\n    flushInterval? : number\n};\n\ntype ClientPayload = { [string] : ?string };\ntype Payload = { [string] : string };\ntype Log = (name : string, payload? : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\ntype Track = (payload : ClientPayload) => LoggerType; // eslint-disable-line no-use-before-define\n\ntype Builder = (Payload) => ClientPayload;\ntype AddBuilder = (Builder) => LoggerType; // eslint-disable-line no-use-before-define\n\nexport type LoggerType = {\n    debug : Log,\n    info : Log,\n    warn : Log,\n    error : Log,\n\n    track : Track,\n\n    flush : () => ZalgoPromise<void>,\n    immediateFlush : () => ZalgoPromise<void>,\n\n    addPayloadBuilder : AddBuilder,\n    addMetaBuilder : AddBuilder,\n    addTrackingBuilder : AddBuilder,\n    addHeaderBuilder : AddBuilder,\n\n    setTransport : (Transport) => LoggerType\n};\n\nfunction httpTransport({ url, method, headers, json } : { url : string, method : string, headers : { [string] : string }, json : Object }) : ZalgoPromise<void> {\n    return request({ url, method, headers, json }).then(noop);\n}\n\nfunction extendIfDefined(target : { [string] : string }, source : { [string] : ?string }) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key) && source[key] && !target[key]) {\n            target[key] = source[key];\n        }\n    }\n}\n\nexport function Logger({ url, prefix, logLevel = DEFAULT_LOG_LEVEL, transport = httpTransport, flushInterval = FLUSH_INTERVAL } : LoggerOptions) : LoggerType {\n\n    let events : Array<{ level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload }> = [];\n    let tracking : Array<Payload> = [];\n\n    let payloadBuilders : Array<Builder> = [];\n    let metaBuilders : Array<Builder> = [];\n    let trackingBuilders : Array<Builder> = [];\n    let headerBuilders : Array<Builder> = [];\n\n    function print(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        if (!isBrowser() || !window.console || !window.console.log) {\n            return;\n        }\n\n        let consoleLogLevel = logLevel;\n\n        if (window.LOG_LEVEL && LOG_LEVEL_PRIORITY.indexOf(window.LOG_LEVEL) !== -1) {\n            consoleLogLevel = window.LOG_LEVEL;\n        }\n\n        if (LOG_LEVEL_PRIORITY.indexOf(level) > LOG_LEVEL_PRIORITY.indexOf(consoleLogLevel)) {\n            return;\n        }\n\n        let args = [ event ];\n\n        args.push(payload);\n\n        if (payload.error || payload.warning) {\n            args.push('\\n\\n', payload.error || payload.warning);\n        }\n\n        try {\n            if (window.console[level] && window.console[level].apply) {\n                window.console[level].apply(window.console, args);\n            } else if (window.console.log && window.console.log.apply) {\n                window.console.log.apply(window.console, args);\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    function immediateFlush() : ZalgoPromise<void> {\n        return ZalgoPromise.try(() => {\n            if (!isBrowser() || window.location.protocol === PROTOCOL.FILE) {\n                return;\n            }\n\n            if (!events.length && !tracking.length) {\n                return;\n            }\n\n            let meta = {};\n            for (let builder of metaBuilders) {\n                extendIfDefined(meta, builder(meta));\n            }\n\n            let headers = {};\n            for (let builder of headerBuilders) {\n                extendIfDefined(headers, builder(headers));\n            }\n\n            let req = transport({\n                method: 'POST',\n                url,\n                headers,\n                json:   {\n                    events,\n                    meta,\n                    tracking\n                }\n            });\n\n            events = [];\n            tracking = [];\n\n            return req.then(noop);\n        });\n    }\n\n    let flush = promiseDebounce(immediateFlush);\n\n    function enqueue(level : $Values<typeof LOG_LEVEL>, event : string, payload : Payload) {\n\n        events.push({\n            level,\n            event,\n            payload\n        });\n\n        if (AUTO_FLUSH_LEVEL.indexOf(level) !== -1) {\n            flush();\n        }\n    }\n\n    function log(level : $Values<typeof LOG_LEVEL>, event : string, payload = {}) : LoggerType {\n\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        if (prefix) {\n            event = `${ prefix }_${ event }`;\n        }\n\n        let logPayload : Payload = {\n            ...objFilter(payload),\n            timestamp: Date.now().toString()\n        };\n\n        for (let builder of payloadBuilders) {\n            extendIfDefined(logPayload, builder(logPayload));\n        }\n\n        enqueue(level, event, logPayload);\n        print(level, event, logPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addBuilder(builders, builder) : LoggerType {\n        builders.push(builder);\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function addPayloadBuilder(builder) : LoggerType {\n        return addBuilder(payloadBuilders, builder);\n    }\n\n    function addMetaBuilder(builder) : LoggerType {\n        return addBuilder(metaBuilders, builder);\n    }\n\n    function addTrackingBuilder(builder) : LoggerType {\n        return addBuilder(trackingBuilders, builder);\n    }\n\n    function addHeaderBuilder(builder) : LoggerType {\n        return addBuilder(headerBuilders, builder);\n    }\n\n    function debug(event, payload) : LoggerType {\n        return log(LOG_LEVEL.DEBUG, event, payload);\n    }\n\n    function info(event, payload) : LoggerType {\n        return log(LOG_LEVEL.INFO, event, payload);\n    }\n\n    function warn(event, payload) : LoggerType {\n        return log(LOG_LEVEL.WARN, event, payload);\n    }\n\n    function error(event, payload) : LoggerType {\n        return log(LOG_LEVEL.ERROR, event, payload);\n    }\n\n    function track(payload = {}) : LoggerType {\n        if (!isBrowser()) {\n            return logger; // eslint-disable-line no-use-before-define\n        }\n\n        let trackingPayload : Payload = objFilter(payload);\n\n        for (let builder of trackingBuilders) {\n            extendIfDefined(trackingPayload, builder(trackingPayload));\n        }\n\n        print(LOG_LEVEL.DEBUG, 'track', trackingPayload);\n        tracking.push(trackingPayload);\n\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    function setTransport(newTransport : Transport) : LoggerType {\n        transport = newTransport;\n        return logger; // eslint-disable-line no-use-before-define\n    }\n\n    if (isBrowser()) {\n        safeInterval(flush, flushInterval);\n    }\n\n    const logger = {\n        debug,\n        info,\n        warn,\n        error,\n        track,\n        flush,\n        immediateFlush,\n        addPayloadBuilder,\n        addMetaBuilder,\n        addTrackingBuilder,\n        addHeaderBuilder,\n        setTransport\n    };\n\n    return logger;\n}\n","/* @flow */\n\nimport { Logger, type LoggerType } from 'beaver-logger/src';\nimport { noop, stringifyError, stringifyErrorMessage, inlineMemoize } from 'belter/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FPTI_FEED, FPTI_DATA_SOURCE, FPTI_SDK_NAME, FPTI_USER_ACTION, ENV } from '@paypal/sdk-constants/src';\n\nimport type { LocaleType } from '../types';\nimport { LOGGER_URL } from '../config';\nimport { FPTI_STATE, FPTI_CONTEXT_TYPE } from '../constants';\n\nexport function getLogger() : LoggerType {\n    return inlineMemoize(getLogger, () =>\n        Logger({\n            url: LOGGER_URL\n        }));\n}\n\ntype LoggerOptions = {|\n    env : $Values<typeof ENV>,\n    sessionID : string,\n    clientID : string,\n    partnerAttributionID : ?string,\n    commit : boolean,\n    correlationID : string,\n    locale : LocaleType,\n    buttonSessionID : string,\n    merchantID : $ReadOnlyArray<string>,\n    merchantDomain : string\n|};\n\nexport function setupLogger({ env, sessionID, buttonSessionID, clientID, partnerAttributionID, commit, correlationID, locale, merchantID, merchantDomain } : LoggerOptions) {\n    const logger = getLogger();\n\n    logger.addPayloadBuilder(() => {\n        return {\n            referer: window.location.host,\n            uid:     sessionID,\n            env\n        };\n    });\n\n    logger.addTrackingBuilder(() => {\n        const { lang, country } = locale;\n\n        return {\n            [FPTI_KEY.CONTEXT_TYPE]:           FPTI_CONTEXT_TYPE.BUTTON_SESSION_ID,\n            [FPTI_KEY.CONTEXT_ID]:             buttonSessionID,\n            [FPTI_KEY.STATE]:                  FPTI_STATE.BUTTON,\n            [FPTI_KEY.FEED]:                   FPTI_FEED.PAYMENTS_SDK,\n            [FPTI_KEY.DATA_SOURCE]:            FPTI_DATA_SOURCE.PAYMENTS_SDK,\n            [FPTI_KEY.CLIENT_ID]:              clientID,\n            [FPTI_KEY.SELLER_ID]:              merchantID[0],\n            [FPTI_KEY.SESSION_UID]:            sessionID,\n            [FPTI_KEY.REFERER]:                window.location.host,\n            [FPTI_KEY.MERCHANT_DOMAIN]:        merchantDomain,\n            [FPTI_KEY.LOCALE]:                 `${ lang }_${ country }`,\n            [FPTI_KEY.INTEGRATION_IDENTIFIER]: clientID,\n            [FPTI_KEY.PARTNER_ATTRIBUTION_ID]: partnerAttributionID,\n            [FPTI_KEY.SDK_NAME]:               FPTI_SDK_NAME.PAYMENTS_SDK,\n            [FPTI_KEY.SDK_VERSION]:            window.paypal.version,\n            [FPTI_KEY.USER_AGENT]:             window.navigator && window.navigator.userAgent,\n            [FPTI_KEY.USER_ACTION]:            commit ? FPTI_USER_ACTION.COMMIT : FPTI_USER_ACTION.CONTINUE,\n            [FPTI_KEY.CONTEXT_CORRID]:         correlationID\n        };\n    });\n\n    ZalgoPromise.onPossiblyUnhandledException(err => {\n\n        logger.track({\n            [FPTI_KEY.ERROR_CODE]: 'payments_sdk_error',\n            [FPTI_KEY.ERROR_DESC]: stringifyErrorMessage(err)\n        });\n\n        logger.error('unhandled_error', {\n            err: stringifyError(err)\n        });\n\n        // eslint-disable-next-line promise/no-promise-in-callback\n        logger.flush().catch(noop);\n    });\n}\n","/* @flow */\n\nexport * from './util';\nexport * from './logger';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, inlineMemoize, base64encode, request } from 'belter/src';\n\nimport { AUTH_API_URL } from '../config';\nimport { getLogger } from '../lib';\nimport { ACCESS_TOKEN_HEADER } from '../constants';\n\nimport { addHeaderBuilder } from './api';\n\nexport function createAccessToken (clientID : string) : ZalgoPromise<string> {\n    return inlineMemoize(createAccessToken, () => {\n\n        getLogger().info(`rest_api_create_access_token`);\n\n        const basicAuth = base64encode(`${ clientID }:`);\n\n        return request({\n\n            method:  `post`,\n            url:     AUTH_API_URL,\n            headers: {\n                Authorization: `Basic ${ basicAuth }`\n            },\n            data: {\n                grant_type: `client_credentials`\n            }\n\n        }).then(({ body }) => {\n\n            if (body && body.error === 'invalid_client') {\n                throw new Error(`Auth Api invalid client id: ${ clientID }:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            if (!body || !body.access_token) {\n                throw new Error(`Auth Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n            }\n\n            return body.access_token;\n        });\n    }, [ clientID ]);\n}\n\nlet persistedAccessToken;\n\naddHeaderBuilder(() => {\n    return {\n        [ ACCESS_TOKEN_HEADER ]: persistedAccessToken\n    };\n});\n\nexport const persistAccessToken = memoize((accessToken : string) : ZalgoPromise<void> => {\n    return ZalgoPromise.try(() => {\n        if (accessToken) {\n            persistedAccessToken = accessToken;\n        }\n    });\n});\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { SDK_QUERY_KEYS, UNKNOWN, FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\nimport { request, noop } from 'belter/src';\n\nimport { API_URI, ORDERS_API_URL, VALIDATE_PAYMENT_METHOD_API } from '../config';\nimport { getLogger } from '../lib';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE, HEADERS } from '../constants';\n\nimport { callSmartAPI, callGraphQL } from './api';\n\nexport type OrderCreateRequest = {|\n    intent? : 'CAPTURE' | 'AUTHORIZE',\n        purchase_units : $ReadOnlyArray<{\n            amount : {\n                currency_code : string,\n                value : string\n            },\n            payee? : {\n                merchant_id? : string\n            }\n        }>\n|};\n\nexport type OrderResponse = {||};\nexport type OrderCaptureResponse = {||};\nexport type OrderGetResponse = {||};\nexport type OrderAuthorizeResponse = {||};\n\nexport function createOrderID(accessToken : string, order : OrderCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!order) {\n        throw new Error(`Expected order details to be passed`);\n    }\n\n    const currency = window.xprops.currency;\n    const intent = window.xprops.intent;\n    const merchantID = window.xprops.merchantID;\n\n    order = { ...order };\n\n    if (order.intent && order.intent.toLowerCase() !== intent) {\n        throw new Error(`Unexpected intent: ${ order.intent } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.INTENT }=${ order.intent.toLowerCase() } in the paypal script tag.`);\n    }\n\n    // $FlowFixMe\n    order = { ...order, intent: intent.toUpperCase() };\n\n    order.purchase_units = order.purchase_units.map(unit => {\n        if (unit.amount.currency_code && unit.amount.currency_code !== currency) {\n            throw new Error(`Unexpected currency: ${ unit.amount.currency_code } passed to order.create. Please ensure you are passing /sdk/js?${ SDK_QUERY_KEYS.CURRENCY }=${ unit.amount.currency_code } in the paypal script tag.`);\n        }\n\n        let payee = unit.payee;\n\n        if (payee) {\n            if (!merchantID) {\n                throw new Error(`Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=XYZ in the paypal script tag. Pass ${ SDK_QUERY_KEYS.MERCHANT_ID }=${ UNKNOWN } if you do not have access to the merchant id`);\n            }\n\n            if (payee.merchant_id && merchantID[0] !== UNKNOWN && payee.merchant_id !== merchantID[0]) {\n                throw new Error(`Expected payee.merchant_id to be \"${ merchantID[0] }\"`);\n            }\n        }\n\n        if (merchantID && merchantID[0] !== UNKNOWN) {\n            payee = {\n                ...payee,\n                merchant_id: merchantID[0]\n            };\n        }\n\n        return { ...unit, payee, amount: { ...unit.amount, currency_code: currency } };\n    });\n\n    order.application_context = order.application_context || {};\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    ORDERS_API_URL,\n        headers,\n        json:   order\n    }).then(({ body }) : string => {\n\n        const orderID = body && body.id;\n\n        if (!orderID) {\n            throw new Error(`Order Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n\n        getLogger().track({\n            [FPTI_KEY.STATE]:        FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:   FPTI_TRANSITION.CREATE_ORDER,\n            [FPTI_KEY.CONTEXT_TYPE]: FPTI_CONTEXT_TYPE.ORDER_ID,\n            [FPTI_KEY.TOKEN]:        orderID,\n            [FPTI_KEY.CONTEXT_ID]:   orderID\n        });\n\n        return orderID;\n    });\n}\n\nexport function getOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.ORDER }/${ orderID }`\n    });\n}\n\nexport function captureOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/capture`\n    });\n}\n\nexport function authorizeOrder(orderID : string) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/authorize`\n    });\n}\n\nexport function patchOrder(orderID : string, patch : []) : ZalgoPromise<OrderResponse> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.ORDER }/${ orderID }/patch`,\n        json:   { data: { patch } }\n    });\n}\n\ntype PayeeResponse = {|\n    merchant? : {|\n        id? : string\n    |}\n|};\n\nexport function getPayee(orderID : string) : ZalgoPromise<PayeeResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.CHECKOUT }/${ orderID }/payee`\n    });\n}\n\nexport type ValidatePaymentMethodOptions = {|\n    clientAccessToken : string,\n    orderID : string,\n    paymentMethodID : string,\n    enableThreeDomainSecure : boolean\n|};\n\nconst VALIDATE_CONTINGENCIES = {\n    THREE_DOMAIN_SECURE: '3D_SECURE'\n};\n\nexport type ValidatePaymentMethodResponse = {|\n    links? : $ReadOnlyArray<{|\n        rel : string\n    |}>\n|};\n\ntype PaymentSource = {|\n    token : {|\n        id : string,\n        type : 'NONCE'\n    |},\n    contingencies? : $ReadOnlyArray<$Values<typeof VALIDATE_CONTINGENCIES>>\n|};\n\nexport function validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure } : ValidatePaymentMethodOptions) : ZalgoPromise<{ status : number, body : ValidatePaymentMethodResponse, headers : { [string] : string } }> {\n    getLogger().info(`rest_api_create_order_token`);\n\n    const headers : Object = {\n        [HEADERS.AUTHORIZATION]:            `Bearer ${ clientAccessToken }`,\n        [ HEADERS.PARTNER_ATTRIBUTION_ID ]: window.xprops.partnerAttributionID,\n        [ HEADERS.CLIENT_METADATA_ID ]:     window.xprops.buttonSessionID\n    };\n\n    const paymentSource : PaymentSource = {\n        token: {\n            id:   paymentMethodID,\n            type: 'NONCE'\n        }\n    };\n\n    if (enableThreeDomainSecure) {\n        paymentSource.contingencies = [ VALIDATE_CONTINGENCIES.THREE_DOMAIN_SECURE ];\n    }\n\n    const json = {\n        payment_source: paymentSource\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ ORDERS_API_URL }/${ orderID }/${ VALIDATE_PAYMENT_METHOD_API }`,\n        headers,\n        json\n    });\n}\n\nexport function billingTokenToOrderID(billingToken : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.PAYMENT }/${ billingToken }/ectoken`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function subscriptionIdToCartId(subscriptionID : string) : ZalgoPromise<string> {\n    return callSmartAPI({\n        method: 'post',\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/cartid`\n    }).then(data => {\n        return data.token;\n    });\n}\n\nexport function enableVault({ orderID, clientAccessToken } : { orderID : string, clientAccessToken : string }) : ZalgoPromise<mixed> {\n    return callGraphQL({\n        query: `\n            mutation EnableVault(\n                $orderID : String!\n            ) {\n                enableVault(\n                    token: $orderID\n                )\n            }\n        `,\n        variables: {\n            orderID\n        },\n        headers: {\n            [ HEADERS.ACCESS_TOKEN ]: clientAccessToken\n        }\n    });\n}\n\ntype ClientConfig = {|\n    orderID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    integrationArtifact : string,\n    userExperienceFlow : string,\n    productFlow : string\n|};\n\nexport function updateClientConfig({ orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow } : ClientConfig) : ZalgoPromise<void> {\n    return callGraphQL({\n        query: `\n            mutation UpdateClientConfig(\n                $orderID : String!,\n                $fundingSource : ButtonFundingSourceType!,\n                $integrationArtifact : IntegrationArtifactType!,\n                $userExperienceFlow : UserExperienceFlowType!,\n                $productFlow : ProductFlowType!\n            ) {\n                updateClientConfig(\n                    token: $orderID,\n                    fundingSource: $fundingSource,\n                    integrationArtifact: $integrationArtifact,\n                    userExperienceFlow: $userExperienceFlow,\n                    productFlow: $productFlow\n                )\n            }\n        `,\n        variables: { orderID, fundingSource, integrationArtifact, userExperienceFlow, productFlow }\n    }).then(noop);\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { CREATE_SUBSCRIPTIONS_API_URL, API_URI } from '../config';\nimport { getLogger } from '../lib';\n\nimport { callSmartAPI } from './api';\n\nexport type SubscriptionCreateRequest = {|\n    plan_id : string,\n    start_time? : string,\n    quantity? : string,\n    shipping_amount? : {\n        currency_code : string,\n        value : string\n    },\n    auto_renewal? : boolean,\n    application_context? : {\n        brand_name? : string,\n        locale? : string,\n        shipping_preference? : string,\n        user_action? : string\n    }\n|};\n\nexport type SubscriptionResponse = {||};\n\n\nexport function createSubscription(accessToken : string, subscriptionPayload : SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    CREATE_SUBSCRIPTIONS_API_URL,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body }) : string => {\n\n        if (!body || !body.id) {\n            throw new Error(`Create Subscription Api response error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        return body.id;\n    });\n}\n\nexport function reviseSubscription(accessToken : string, subscriptionID : string, subscriptionPayload : ?SubscriptionCreateRequest) : ZalgoPromise<string> {\n    getLogger().info(`rest_api_create_subscription_id`);\n\n    if (!accessToken) {\n        throw new Error(`Access token not passed`);\n    }\n\n    if (!subscriptionID) {\n        throw new Error(`Expected subscription id to be passed as first argument to revise subscription api`);\n    }\n\n    if (!subscriptionPayload) {\n        throw new Error(`Expected subscription payload to be passed`);\n    }\n\n    const headers : Object = {\n        'Authorization':                 `Bearer ${ accessToken }`,\n        'PayPal-Partner-Attribution-Id': window.xprops.partnerAttributionID\n    };\n\n    return request({\n        method: `post`,\n        url:    `${ CREATE_SUBSCRIPTIONS_API_URL }/${ subscriptionID }/revise`,\n        headers,\n        json:   subscriptionPayload\n    }).then(({ body, status }) : string => {\n\n        if (status !== 200) {\n            throw new Error(`Revise Subscription Api HTTP-${ status } response: error:\\n\\n${ JSON.stringify(body, null, 4) }`);\n        }\n        // for revision flow the same subscription id is returned\n        return subscriptionID;\n    });\n}\n\nexport function activateSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        method: `post`,\n        url:    `${ API_URI.SUBSCRIPTION }/${ subscriptionID }/activate`\n    });\n}\n\n\nexport function getSubscription(subscriptionID : string) : ZalgoPromise<SubscriptionResponse> {\n    return callSmartAPI({\n        url: `${ API_URI.SUBSCRIPTION }/${ subscriptionID }`\n    });\n}\n","/* @flow */\n\nexport * from './auth';\nexport * from './order';\nexport * from './subscription';\n","/* @flow */\n\nexport const LOGGER_URL = '/xoplatform/logger/api/logger';\nexport const AUTH_API_URL = '/v1/oauth2/token';\nexport const ORDERS_API_URL = '/v2/checkout/orders';\nexport const CREATE_SUBSCRIPTIONS_API_URL = '/v1/billing/subscriptions';\nexport const VALIDATE_PAYMENT_METHOD_API = 'validate-payment-method';\n\nexport const BASE_SMART_API_URL = '/smart/api';\nexport const API_URI = {\n    AUTH:           `${ BASE_SMART_API_URL }/auth`,\n    CHECKOUT:       `${ BASE_SMART_API_URL }/checkout`,\n    ORDER:          `${ BASE_SMART_API_URL }/order`,\n    PAYMENT:        `${ BASE_SMART_API_URL }/payment`,\n    SUBSCRIPTION:   `${ BASE_SMART_API_URL }/billagmt/subscriptions`,\n    GRAPHQL:        '/graphql'\n};\n\nexport const EXPERIENCE_URI = {\n    CHECKOUT: '/checkoutnow'\n};\n\nexport const CLIENT_ID_PAYEE_NO_MATCH = [\n    'Af3YaeRfoJGtncwLeiahT93xTYT0-wldEEaiGehhGspP333r6tADvHeVCwZPR022F4d0YQquv7Lik_PT',\n    'AbHo6hBEDmCHulDhRMkCVk7FDed5zE1-mNo7SQvo_yxeLvGylM5mGh5IOjx0AV9sTHhHDjD4A443Dybb',\n    'AcjM7hAZjUAqIgU0Lvzneb9-_rWs7qAEl6PoPVHtQV5PNmWBihQWsu_SglKO',\n    'Af_pMiA6ikCtlsNB8dJW1oG1ZI7FirXbRU43rDRfq_i_iQAPbYsojeI9Q2VzZvD1u2wKEPuaokZaNWyC',\n    'AQAZZuAP5V0b8Wzs1t3KJM3opK8ueK6Txnlm7pw6kMFHrcAdFogBw3pBmeNP-234aHAZ2BlHeijkU2Tt',\n    'Aef8KpflK3t-pTjstogUtqzAuk1IRGHpkdBTxyTWeARwqXyuRrX5Uj-Bs6KdMwK1g8ZhitjzfJ5jh6K7',\n    'ARcLSr40hevzVXTnnNpHochqg9lsyznO2UugwjyCpt4MPnAmxgyLGC2Ia7aufLH1jS8BhOIZBnXqhOfP',\n    'AYiXLQVgLszolhHbiYAm2HZERgDF5BOPXG7i4m9BNsTTSdmWhVu2Np4_GqDJLrl5VA50VDAlMMpCMArb',\n    'ARbpxmp0udlm2zBPu6bqW6PAMV-UfCTktgWFtJ0cy1rKQUUtIRffwg1A-i0wRyFg9BhbfZM3M6ci6czP',\n    'AeHvO7dLYAlLLnkZWxCTvHgSBMoFRn-bu1Wy9kjEXZVb8wYZPRpEykxDhLQ0WjgUPQz_MeF1e1FnH4mT',\n    'Abi2EEJv7o1v6GKAE1nNVgeNqBWLYXSiDoAKi-ADKU6uRPi_41GJEMr5rjZC8fuQxAC-MVEPYSfYsfzD',\n    'AW9fGl1zpjGSB474VARpj8j0hyEzrwNY7WgJCtwStaVVYkiyixnX4Z3KSe9A0jPLOcKj_2B9lHon1nAR',\n    'ARBlYB7bfFnpO5IgprEW0PqtBSZOn1Q0Jly-3r_IzMEU8sPq0fdNrk1D4JgHAitxDBxfuL6wDpDvTZgU'\n];\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { request } from 'belter/src';\n\nimport { API_URI } from '../config';\nimport { HEADERS, SMART_BUTTONS, SMART_PAYMENT_BUTTONS } from '../constants';\n\nconst headerBuilders = [];\n\nexport function addHeaderBuilder(builder : () => { [string] : string }) {\n    headerBuilders.push(builder);\n}\n\ntype APIRequest = {|\n    url : string,\n    method? : string,\n    json? : $ReadOnlyArray<mixed> | Object\n|};\n\nexport function callSmartAPI({ url, method = 'get', json } : APIRequest) : ZalgoPromise<Object> {\n\n    let reqHeaders = {\n        [ HEADERS.SOURCE ]:       SMART_BUTTONS,\n        [ HEADERS.REQUESTED_BY ]: SMART_PAYMENT_BUTTONS\n    };\n\n    for (const headerBuilder of headerBuilders) {\n        reqHeaders = {\n            ...reqHeaders,\n            ...headerBuilder()\n        };\n    }\n    \n    return request({ url, method, headers: reqHeaders, json })\n        .then(({ status, body }) => {\n            if (body.ack === 'contingency') {\n                const err = new Error(body.contingency);\n                // $FlowFixMe\n                err.data = body.data;\n                throw err;\n            }\n\n            if (status > 400) {\n                throw new Error(`Api: ${ url } returned status code: ${ status }`);\n            }\n\n            if (body.ack !== 'success') {\n                throw new Error(`Api: ${ url } returned ack: ${ body.ack }`);\n            }\n\n            return body.data;\n        });\n}\n\nexport function callGraphQL<T>({ query, variables = {}, headers = {} } : { query : string, variables? : { [string] : mixed }, headers? : { [string] : string } }) : ZalgoPromise<T> {\n    return request({\n        url:     API_URI.GRAPHQL,\n        method:  'POST',\n        json:    {\n            query,\n            variables\n        },\n        headers: {\n            ...headers\n        }\n    }).then(({ status, body }) => {\n        const errors = body.errors || [];\n\n        if (errors.length) {\n            const message = errors[0].message || JSON.stringify(errors[0]);\n            throw new Error(message);\n        }\n\n        if (status !== 200) {\n            throw new Error(`${ API_URI.GRAPHQL } returned status ${ status }`);\n        }\n\n        return body;\n    });\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n","/* @flow */\n\nimport { FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport { querySelectorAll } from 'belter/src';\n\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\n\nexport function getButtons() : $ReadOnlyArray<HTMLElement> {\n    return querySelectorAll(`[ ${ DATA_ATTRIBUTES.FUNDING_SOURCE } ]`);\n}\n\nexport function getSelectedFunding(button : HTMLElement) : { fundingSource : $Values<typeof FUNDING>, card : $Values<typeof CARD>, paymentMethodID : ?string } {\n    const fundingSource = button.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n    const paymentMethodID = button.getAttribute(DATA_ATTRIBUTES.PAYMENT_METHOD_ID);\n    const card = button.getAttribute(DATA_ATTRIBUTES.CARD);\n\n    // $FlowFixMe\n    return { fundingSource, card, paymentMethodID };\n}\n\nexport function enableLoadingSpinner(button : HTMLElement) {\n    button.classList.add(CLASS.LOADING);\n}\n\nexport function disableLoadingSpinner(button : HTMLElement) {\n    button.classList.remove(CLASS.LOADING);\n}\n\nexport function getNonce() : string {\n    let nonce = '';\n    if (document.body) {\n        nonce = document.body.getAttribute('data-nonce') || '';\n    }\n    return nonce;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport const POPUP_BRIDGE_OPTYPE = {\n    PAYMENT: ('payment' : 'payment'),\n    CANCEL:  ('cancel' : 'cancel')\n};\n\nexport type PopupBridge = {|\n    nativeUrl : string,\n    start : (url : string) => ZalgoPromise<{|\n        opType : $Values<typeof POPUP_BRIDGE_OPTYPE>,\n        token : string,\n        paymentId? : string,\n        PayerID? : string,\n        ba_token? : string\n    |}>\n|};\n\nexport type XGetPopupBridge = () => ZalgoPromise<?PopupBridge>;\nexport type GetPopupBridge = XGetPopupBridge;\n","/* @flow */\n\nexport * from './types';\nexport * from './props';\n\nexport * from './createOrder';\nexport * from './createBillingAgreement';\nexport * from './createSubscription';\nexport * from './onApprove';\nexport * from './onInit';\nexport * from './onCancel';\nexport * from './onShippingChange';\nexport * from './onClick';\nexport * from './onAuth';\nexport * from './onError';\nexport * from './getPopupBridge';\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { XProps } from './types';\n\nexport type XOnInitDataType = {|\n    \n|};\n\nexport type XOnInitActionsType = {|\n    enable : () => ZalgoPromise<void>,\n    disable : () => ZalgoPromise<void>\n|};\n\nexport type XOnInit = (XOnInitDataType, XOnInitActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnInitData() : XOnInitDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXOnInitActions(set : (boolean) => void) : XOnInitActionsType {\n    return {\n        enable:  () => ZalgoPromise.try(() => set(true)),\n        disable: () => ZalgoPromise.try(() => set(false))\n    };\n}\n\nexport type OnInit = () => {|\n    promise : ZalgoPromise<void>,\n    isEnabled : () => boolean\n|};\n\nexport function getOnInit(xprops : XProps) : OnInit {\n    const { onInit } = xprops;\n\n    return () => {\n        let enabled = true;\n\n        const promise = ZalgoPromise.try(() => {\n            if (onInit) {\n                return onInit(buildXOnInitData(), buildXOnInitActions(val => {\n                    enabled = val;\n                }));\n            }\n        });\n\n        return {\n            promise,\n            isEnabled: () => enabled\n        };\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { createAccessToken, createOrderID, billingTokenToOrderID, subscriptionIdToCartId } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION, FPTI_CONTEXT_TYPE } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateSubscription } from './createSubscription';\nimport type { CreateBillingAgreement } from './createBillingAgreement';\nimport type { XProps } from './types';\n \n\nexport type XCreateOrderDataType = {||};\n\nexport type XCreateOrderActionsType = {|\n    order : {\n        create : (Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateOrder = (XCreateOrderDataType, XCreateOrderActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateOrderData() : XCreateOrderDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateOrderActions({ clientID } : { clientID : string }) : XCreateOrderActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createOrderID(accessToken, data);\n        });\n    };\n\n    return {\n        order: { create }\n    };\n}\n\nexport type CreateOrder = () => ZalgoPromise<string>;\n\nexport function getCreateOrder(xprops : XProps, { createBillingAgreement, createSubscription } : { createBillingAgreement : ?CreateBillingAgreement, createSubscription : ?CreateSubscription }) : CreateOrder {\n    const { createOrder, clientID, buttonSessionID } = xprops;\n\n    const data = buildXCreateOrderData();\n    const actions = buildXCreateOrderActions({ clientID });\n\n    return memoize(() => {\n        return ZalgoPromise.try(() => {\n            if (createBillingAgreement) {\n                return createBillingAgreement().then(billingTokenToOrderID);\n            } else if (createSubscription) {\n                return createSubscription().then(subscriptionIdToCartId);\n            } else if (createOrder) {\n                return createOrder(data, actions);\n            } else {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                currency_code: 'USD',\n                                value:         '0.01'\n                            }\n                        }\n                    ]\n                });\n            }\n        }).then(orderID => {\n            if (!orderID || typeof orderID !== 'string') {\n                throw new Error(`Expected an order id to be passed`);\n            }\n\n            if (orderID.indexOf('PAY-') === 0 || orderID.indexOf('PAYID-') === 0) {\n                throw new Error(`Do not pass PAY-XXX or PAYID-XXX directly into createOrder. Pass the EC-XXX token instead`);\n            }\n\n            getLogger().track({\n                [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.RECEIVE_ORDER,\n                [FPTI_KEY.CONTEXT_TYPE]:       FPTI_CONTEXT_TYPE.ORDER_ID,\n                [FPTI_KEY.CONTEXT_ID]:         orderID,\n                [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n            }).flush();\n\n            return orderID;\n        });\n    });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport { INTENT, SDK_QUERY_KEYS, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { type OrderResponse, getOrder, captureOrder, authorizeOrder, patchOrder, getSubscription, activateSubscription, type SubscriptionResponse } from '../../api';\nimport { ORDER_API_ERROR, FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { unresolvedPromise, getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnApproveDataType = {|\n    orderID : string,\n    payerID : ?string,\n    paymentID : ?string,\n    subscriptionID : ?string,\n    billingToken : ?string\n|};\n\nexport type XOnApproveActionsType = {|\n    order : {\n        capture : () => ZalgoPromise<OrderResponse>,\n        authorize : () => ZalgoPromise<OrderResponse>,\n        patch : () => ZalgoPromise<OrderResponse>,\n        get : () => ZalgoPromise<OrderResponse>\n    },\n    subscription : {\n        get : () => ZalgoPromise<SubscriptionResponse>,\n        activate : () => ZalgoPromise<SubscriptionResponse>\n    },\n    restart : () => ZalgoPromise<void>,\n    redirect : (string) => ZalgoPromise<void>\n|};\n\nexport type XOnApprove = (XOnApproveDataType, XOnApproveActionsType) => ZalgoPromise<void>;\n\nfunction buildXApproveActions({ intent, orderID, restart, subscriptionID } : { orderID : string, restart : () => ZalgoPromise<void>, intent : $Values<typeof INTENT>, subscriptionID : string }) : XOnApproveActionsType {\n\n    const handleProcessorError = (err : mixed) : ZalgoPromise<OrderResponse> => {\n        // $FlowFixMe\n        const isProcessorDecline = err && err.data && err.data.details && err.data.details.some(detail => {\n            return detail.issue === ORDER_API_ERROR.INSTRUMENT_DECLINED || detail.issue === ORDER_API_ERROR.PAYER_ACTION_REQUIRED;\n        });\n\n        if (isProcessorDecline) {\n            return restart().then(unresolvedPromise);\n        }\n\n        throw new Error('Order could not be captured');\n    };\n\n    const get = memoize(() => getOrder(orderID));\n\n    const capture = memoize(() => {\n        if (intent !== INTENT.CAPTURE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.CAPTURE } to use client-side capture`);\n        }\n\n        return captureOrder(orderID)\n            .finally(get.reset)\n            .finally(capture.reset)\n            .catch(handleProcessorError);\n    });\n\n    const authorize = memoize(() => {\n        if (intent !== INTENT.AUTHORIZE) {\n            throw new Error(`Use ${ SDK_QUERY_KEYS.INTENT }=${ INTENT.AUTHORIZE } to use client-side authorize`);\n        }\n\n        return authorizeOrder(orderID)\n            .finally(get.reset)\n            .finally(authorize.reset)\n            .catch(handleProcessorError);\n    });\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    // Subscription GET Actions\n    const getSubscriptionApi = memoize(() => getSubscription(subscriptionID));\n    const activateSubscriptionApi = memoize(() => activateSubscription(subscriptionID));\n\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n        return redir(url, window.top);\n    };\n\n    return {\n        order:        { capture, authorize, patch, get },\n        subscription: { get: getSubscriptionApi, activate: activateSubscriptionApi },\n        restart,\n        redirect\n    };\n}\n\nexport type OnApproveData = {|\n    payerID? : ?string,\n    paymentID ? : ? string,\n    billingToken ? : ? string,\n    subscriptionID ? : ?string\n|};\n\nexport type OnApproveActions = {|\n    restart : () => ZalgoPromise<void>\n|};\n\nexport type OnApprove = (OnApproveData, OnApproveActions) => ZalgoPromise<void>;\n\nexport function getOnApprove(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnApprove {\n    const { onApprove, onError, intent, buttonSessionID } = xprops;\n\n    return memoize(({ payerID, paymentID, billingToken, subscriptionID }, { restart }) => {\n        return createOrder().then(orderID => {\n\n            getLogger()\n                .info('button_authorize')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_AUTHORIZE,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            const data = { orderID, payerID, paymentID, billingToken, subscriptionID };\n            const actions = buildXApproveActions({ orderID, intent, restart, subscriptionID });\n\n            if (onApprove) {\n                return onApprove(data, actions).catch(onError);\n            } else {\n                if (intent === INTENT.CAPTURE) {\n                    return actions.order.capture().then(noop);\n                } else if (intent === INTENT.AUTHORIZE) {\n                    return actions.order.authorize().then(noop);\n                }\n            }\n        });\n    });\n}\n","/* @flow */\n\nimport { memoize, redirect as redir, noop } from 'belter/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnCancelDataType = {|\n    orderID : string\n|};\n\nexport type XOnCancelActionsType = {|\n    \n|};\n\nexport type XOnCancel = (XOnCancelDataType, XOnCancelActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnCancelData({ orderID } : { orderID : string }) : XOnCancelDataType {\n    return {\n        orderID\n    };\n}\n\nexport function buildXOnCancelActions() : XOnCancelActionsType {\n    const redirect = (url) => {\n        if (!url) {\n            throw new Error(`Expected redirect url`);\n        }\n        return redir(url, window.top);\n    };\n    \n    // $FlowFixMe\n    return {\n        redirect\n    };\n}\n\nexport type OnCancel = () => ZalgoPromise<void>;\n\nexport function getOnCancel(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : OnCancel {\n    const { onCancel = noop, onError, buttonSessionID } = xprops;\n\n    return memoize(() => {\n        return createOrder().then(orderID => {\n            getLogger()\n                .info('button_cancel')\n                .track({\n                    [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                    [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_CANCEL,\n                    [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                }).flush();\n\n            return onCancel(buildXOnCancelData({ orderID }), buildXOnCancelActions());\n        }).catch(err => {\n            return onError(err);\n        });\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { patchOrder, type OrderResponse } from '../../api';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\nimport { getLogger } from '../../lib';\n\nimport type { CreateOrder } from './createOrder';\nimport type { XProps } from './types';\n\nexport type XOnShippingChangeDataType = {|\n    \n|};\n\nexport type XOnShippingChangeActionsType = {|\n    resolve : () => ZalgoPromise<void>,\n    reject : (mixed) => ZalgoPromise<void>,\n    order : {\n        patch : () => ZalgoPromise<OrderResponse>\n    }\n|};\n\nexport type XOnShippingChange = (XOnShippingChangeDataType, XOnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function buildXOnShippingChangeData(data : XOnShippingChangeDataType) : XOnShippingChangeDataType {\n    return data;\n}\n\nexport type OnShippingChangeData = {|\n    \n|};\n\nexport type OnShippingChangeActionsType = {|\n    reject : () => ZalgoPromise<void>\n|};\n\nexport function buildXShippingChangeActions({ orderID, actions } : { orderID : string, actions : OnShippingChangeActionsType }) : XOnShippingChangeActionsType {\n\n    const patch = (data = []) =>\n        patchOrder(orderID, data).catch(() => {\n            throw new Error('Order could not be patched');\n        });\n\n    const resolve = () => ZalgoPromise.resolve();\n    const reject = actions.reject || function reject() {\n        throw new Error(`Missing reject action callback`);\n    };\n\n    return {\n        resolve,\n        reject,\n        order: { patch }\n    };\n}\n\nexport type OnShippingChange = (OnShippingChangeData, OnShippingChangeActionsType) => ZalgoPromise<void>;\n\nexport function getOnShippingChange(xprops : XProps, { createOrder } : { createOrder : CreateOrder }) : ?OnShippingChange {\n    const { onShippingChange, buttonSessionID } = xprops;\n\n    if (onShippingChange) {\n        return (data, actions) => {\n            return createOrder().then(orderID => {\n                getLogger()\n                    .info('button_shipping_change')\n                    .track({\n                        [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n                        [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.CHECKOUT_SHIPPING_CHANGE,\n                        [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID\n                    }).flush();\n\n                return onShippingChange(buildXOnShippingChangeData(data), buildXShippingChangeActions({ orderID, actions }));\n            });\n        };\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FPTI_KEY, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { promiseNoop, getLogger } from '../../lib';\nimport { FPTI_STATE, FPTI_TRANSITION } from '../../constants';\n\nimport type { XProps } from './types';\n\nexport type XOnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type XOnClickActionsType = {|\n    resolve : () => ZalgoPromise<boolean>,\n    reject : () => ZalgoPromise<boolean>\n|};\n\nexport type XOnClick = (XOnClickDataType, XOnClickActionsType) => ZalgoPromise<boolean | void>;\n\nexport function buildXOnClickData({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) : XOnClickDataType {\n    return { fundingSource };\n}\n\nexport function buildXOnClickActions() : XOnClickActionsType {\n    return {\n        resolve: () => ZalgoPromise.try(() => true),\n        reject:  () => ZalgoPromise.try(() => false)\n    };\n}\n\nexport type OnClickDataType = {|\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nexport type OnClick = (OnClickDataType) => ZalgoPromise<boolean>;\n\nexport function getOnClick(xprops : XProps) : OnClick {\n    const { onClick = promiseNoop, buttonSessionID } = xprops;\n\n    return ({ fundingSource } : { fundingSource : $Values<typeof FUNDING> }) => {\n        getLogger().info('button_click').track({\n            [FPTI_KEY.STATE]:              FPTI_STATE.BUTTON,\n            [FPTI_KEY.TRANSITION]:         FPTI_TRANSITION.BUTTON_CLICK,\n            [FPTI_KEY.BUTTON_SESSION_UID]: buttonSessionID,\n            [FPTI_KEY.CHOSEN_FUNDING]:     fundingSource\n        }).flush();\n        \n        return onClick(buildXOnClickData({ fundingSource }), buildXOnClickActions()).then(valid => {\n            return (valid !== false);\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { persistAccessToken } from '../../api';\n\nexport type OnAuthDataType = {|\n    accessToken : string\n|};\n\nexport type OnAuth = (OnAuthDataType) => ZalgoPromise<void>;\n\nexport function getOnAuth() : OnAuth {\n    return ({ accessToken }) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            return persistAccessToken(accessToken);\n        });\n    };\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport type { XProps } from './types';\n\nexport type XCreateBillingAgreementDataType = {|\n    \n|};\n\nexport type XCreateBillingAgreementActionsType = {|\n\n|};\n\nexport type XCreateBillingAgreement = (?XCreateBillingAgreementDataType, ?XCreateBillingAgreementActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateBillingAgreementData() : XCreateBillingAgreementDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateBillingAgreementActions() : XCreateBillingAgreementActionsType {\n    // $FlowFixMe\n    return {};\n}\n\nexport type CreateBillingAgreement = XCreateBillingAgreement;\n\nexport function getCreateBillingAgreement(xprops : XProps) : ?CreateBillingAgreement {\n    const { createBillingAgreement } = xprops;\n\n    if (createBillingAgreement) {\n        return memoize(() => {\n            return createBillingAgreement(buildXCreateBillingAgreementData(), buildXCreateBillingAgreementActions()).then(billingToken => {\n                if (!billingToken || typeof billingToken !== 'string') {\n                    throw new Error(`Expected a billing token to be passed to createBillingAgreement`);\n                }\n\n                return billingToken;\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize } from 'belter/src';\n\nimport { createAccessToken, createSubscription, reviseSubscription } from '../../api';\n\nimport type { XProps } from './types';\n\nexport type XCreateSubscriptionDataType = {||};\n\nexport type XCreateSubscriptionActionsType = {|\n    subscription : {\n        create : (Object) => ZalgoPromise<string>,\n        revise : (string, Object) => ZalgoPromise<string>\n    }\n|};\n\nexport type XCreateSubscription = (?XCreateSubscriptionDataType, ?XCreateSubscriptionActionsType) => ZalgoPromise<string>;\n\nexport function buildXCreateSubscriptionData() : XCreateSubscriptionDataType {\n    // $FlowFixMe\n    return {};\n}\n\nexport function buildXCreateSubscriptionActions({ clientID } : { clientID : string }) : XCreateSubscriptionActionsType {\n    const create = (data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return createSubscription(accessToken, data);\n        });\n    };\n\n    const revise = (subscriptionID : string, data) => {\n        return createAccessToken(clientID).then(accessToken => {\n            return reviseSubscription(accessToken, subscriptionID, data);\n        });\n    };\n\n    return {\n        subscription: { create, revise }\n    };\n}\n\nexport type CreateSubscription = XCreateSubscription;\n\nexport function getCreateSubscription(xprops : XProps) : ?CreateSubscription {\n    const { createSubscription: createSubscriptionFunc } = xprops;\n    const { clientID } = xprops;\n    if (createSubscriptionFunc) {\n        return memoize(() => {\n            return createSubscriptionFunc(buildXCreateSubscriptionData(), buildXCreateSubscriptionActions({ clientID })).then(subscriptionID => {\n                if (!subscriptionID || typeof subscriptionID !== 'string') {\n                    throw new Error(`Expected an subscription id to be passed to createSubscription`);\n                }\n\n                return subscriptionID;\n            });\n        });\n    }\n}\n","/* @flow */\n\nimport { ENV, INTENT, COUNTRY, FUNDING, CARD } from '@paypal/sdk-constants/src';\nimport type { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { LocaleType, ProxyWindow } from '../../types';\n\nimport type { CreateOrder, XCreateOrder } from './createOrder';\nimport type { CreateBillingAgreement, XCreateBillingAgreement } from './createBillingAgreement';\nimport type { OnInit, XOnInit } from './onInit';\nimport type { OnApprove, XOnApprove } from './onApprove';\nimport type { OnCancel, XOnCancel } from './onCancel';\nimport type { OnClick, XOnClick } from './onClick';\nimport type { OnShippingChange, XOnShippingChange } from './onShippingChange';\nimport type { OnAuth } from './onAuth';\nimport type { XOnError, OnError } from './onError';\nimport type { XGetPopupBridge, GetPopupBridge } from './getPopupBridge';\nimport type { XCreateSubscription } from './createSubscription';\n\nexport type PrerenderDetailsType = {|\n    win ? : ? ProxyWindow,\n    fundingSource : $Values<typeof FUNDING>,\n    card ? : ? $Values<typeof CARD>\n|};\n\nexport type XProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n    intent : $Values<typeof INTENT>,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n\n    createOrder : ?XCreateOrder,\n    createBillingAgreement : ?XCreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : XGetPopupBridge,\n    remember : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n    getParentDomain : () => string,\n    \n    onInit : XOnInit,\n    onApprove : ?XOnApprove,\n    onCancel : XOnCancel,\n    onClick : XOnClick,\n    onError : XOnError,\n    onShippingChange : ?XOnShippingChange\n|};\n\nexport type GlobalProps = {|\n    env : $Values<typeof ENV>,\n    locale : LocaleType,\n\n    sessionID : string,\n    buttonSessionID : string,\n    clientID : string,\n    partnerAttributionID : string,\n    correlationID : string,\n\n    vault : boolean,\n    commit : boolean,\n\n    clientAccessToken : ?string,\n    buyerCountry : $Values<typeof COUNTRY>,\n    cspNonce : ?string,\n\n    getPrerenderDetails : () => ZalgoPromise<PrerenderDetailsType>,\n    getPopupBridge : GetPopupBridge,\n    rememberFunding : ($ReadOnlyArray<$Values<typeof FUNDING>>) => ZalgoPromise<void>,\n    enableThreeDomainSecure : boolean,\n    merchantDomain : string,\n\n    onInit : OnInit,\n    onError : OnError\n|};\n\nexport type ButtonCallbackProps = {|\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?XCreateSubscription,\n\n    onApprove : OnApprove,\n\n    onCancel : OnCancel,\n    onClick : OnClick,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange\n|};\n","/* @flow */\n\nimport { COUNTRY } from '@paypal/sdk-constants/src';\n\nimport { getNonce } from '../dom';\n\nimport type { XProps, GlobalProps, ButtonCallbackProps } from './types';\nimport { getOnInit } from './onInit';\nimport { getCreateOrder } from './createOrder';\nimport { getOnApprove } from './onApprove';\nimport { getOnCancel } from './onCancel';\nimport { getOnShippingChange } from './onShippingChange';\nimport { getOnClick } from './onClick';\nimport { getOnAuth } from './onAuth';\nimport { getCreateBillingAgreement } from './createBillingAgreement';\nimport { getCreateSubscription } from './createSubscription';\n\nexport function getGlobalProps({ xprops, buyerGeoCountry, cspNonce } : {| xprops : XProps, buyerGeoCountry : ?$Values<typeof COUNTRY>, cspNonce : ?string |}) : GlobalProps {\n\n    const {\n        env,\n        vault,\n        commit,\n        locale,\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        getParentDomain,\n        clientAccessToken,\n        buyerCountry = buyerGeoCountry || COUNTRY.US,\n        getPopupBridge,\n        getPrerenderDetails,\n        enableThreeDomainSecure,\n        remember: rememberFunding,\n        onError\n    } = xprops;\n\n    cspNonce = cspNonce || getNonce();\n    const onInit = getOnInit(xprops);\n    const merchantDomain = getParentDomain();\n\n    return {\n        env,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        buttonSessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        merchantDomain,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n        enableThreeDomainSecure,\n\n        onInit,\n        onError\n    };\n}\n\nexport function getButtonCallbackProps({ xprops } : {| xprops : XProps |}) : ButtonCallbackProps {\n\n    if (xprops.createBillingAgreement) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createBillingAgreement and createOrder`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createBillingAgreement`);\n        }\n    }\n\n    if (xprops.createSubscription) {\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createOrder`);\n        }\n\n        if (xprops.createOrder) {\n            throw new Error(`Do not pass both createSubscription and createBillingAgreement`);\n        }\n\n        if (!xprops.vault) {\n            throw new Error(`Must pass vault=true to sdk to use createSubscription`);\n        }\n    }\n\n    const createBillingAgreement = getCreateBillingAgreement(xprops);\n    const createSubscription = getCreateSubscription(xprops);\n    const createOrder = getCreateOrder(xprops, { createBillingAgreement, createSubscription });\n\n    const onApprove = getOnApprove(xprops, { createOrder });\n    const onCancel = getOnCancel(xprops, { createOrder });\n    const onShippingChange = getOnShippingChange(xprops, { createOrder });\n    const onClick = getOnClick(xprops);\n    const onAuth = getOnAuth();\n\n    return {\n        createOrder,\n        createBillingAgreement,\n        createSubscription,\n        onApprove,\n        onCancel,\n        onClick,\n        onAuth,\n        onShippingChange\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { memoize, noop, supportsPopups } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY, SDK_QUERY_KEYS } from '@paypal/sdk-constants/src';\nimport { getParent, getTop } from 'cross-domain-utils/src';\n\nimport { enableVault } from '../api';\nimport { CONTEXT, TARGET_ELEMENT } from '../constants';\nimport { unresolvedPromise } from '../lib';\nimport type { ProxyWindow, LocaleType, FundingEligibilityType } from '../types';\nimport type { CreateOrder, OnApprove, OnCancel, OnAuth, OnShippingChange, CreateBillingAgreement, CreateSubscription } from '../button/props';\n\nlet checkoutOpen = false;\nlet canRenderTop = false;\n\nfunction getRenderWindow() : Object {\n    const top = getTop(window);\n    if (canRenderTop && top) {\n        return top;\n    } else {\n        return window.xprops.getParent();\n    }\n}\n\nexport function setupCheckout() : ZalgoPromise<void> {\n    checkoutOpen = false;\n\n    const [ parent, top ] = [ getParent(window), getTop(window) ];\n\n    const tasks = {};\n\n    if (top && parent && parent !== top) {\n        tasks.canRenderTo = window.paypal.Checkout.canRenderTo(top).then(result => {\n            canRenderTop = result;\n        });\n    }\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n\ntype VaultAutoSetupEligibleProps = {|\n    vault : boolean,\n    clientAccessToken : ?string,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    fundingSource : $Values<typeof FUNDING>,\n    fundingEligibility : FundingEligibilityType\n|};\n\nfunction isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : VaultAutoSetupEligibleProps) : boolean {\n    if (!clientAccessToken) {\n        return false;\n    }\n\n    if (createBillingAgreement || createSubscription) {\n        return false;\n    }\n\n    const fundingSourceEligible = Boolean(fundingEligibility[fundingSource] && fundingEligibility[fundingSource].vaultable);\n\n    if (vault && !fundingSourceEligible) {\n        throw new Error(`SDK received ${ SDK_QUERY_KEYS.VAULT }=true parameter, but ${ fundingSource } is not vaultable.`);\n    }\n\n    if (vault) {\n        return true;\n    }\n\n    if (fundingSourceEligible) {\n        return true;\n    }\n\n    return false;\n}\n\ntype EnableVaultSetupOptions = {|\n    orderID : string,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    fundingSource : $Values<typeof FUNDING>,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription\n|};\n\nfunction enableVaultSetup({ orderID, vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility } : EnableVaultSetupOptions) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (!clientAccessToken) {\n            return;\n        }\n        \n        if (isVaultAutoSetupEligible({ vault, clientAccessToken, createBillingAgreement, createSubscription, fundingSource, fundingEligibility })) {\n            return enableVault({ orderID, clientAccessToken }).catch(err => {\n                if (vault) {\n                    throw err;\n                }\n            });\n        }\n    });\n}\n\nexport function getDefaultContext() : $Values<typeof CONTEXT> {\n    return supportsPopups() ? CONTEXT.POPUP : CONTEXT.IFRAME;\n}\n\ntype CheckoutProps= {|\n    win? : ?ProxyWindow,\n    buttonSessionID : string,\n    context? : $Values<typeof CONTEXT>,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : (mixed) => ZalgoPromise<void>,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType,\n    validationPromise? : ZalgoPromise<boolean>\n|};\n\ntype CheckoutInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\nexport function initCheckout(props : CheckoutProps) : CheckoutInstance {\n    const { win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, context, locale, commit, onError, vault,\n        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription, validationPromise = ZalgoPromise.resolve(true) } = props;\n\n    if (checkoutOpen) {\n        throw new Error(`Checkout already rendered`);\n    }\n\n    let approved = false;\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        checkoutOpen = false;\n        return validationPromise.then(valid => {\n            if (valid && !approved) {\n                return onCancel();\n            }\n        });\n    };\n\n    const { renderTo, close: closeCheckout, onError: triggerError } = window.paypal.Checkout({\n        window: win,\n        buttonSessionID,\n        clientAccessToken,\n\n        createOrder: () => {\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return unresolvedPromise();\n                }\n\n                return createOrder().then(orderID => {\n                    return enableVaultSetup({ orderID, vault, clientAccessToken, fundingEligibility, fundingSource, createBillingAgreement, createSubscription }).then(() => {\n                        return orderID;\n                    });\n                });\n            });\n        },\n\n        onApprove: ({ payerID, paymentID, billingToken, subscriptionID }) => {\n            approved = true;\n\n            return closeCheckout().then(() => {\n                return onApprove({ payerID, paymentID, billingToken, subscriptionID }, { restart });\n            });\n        },\n\n        onCancel: () => {\n            return validationPromise.then(valid => {\n                if (valid) {\n                    return closeCheckout().then(() => {\n                        return onCancel();\n                    });\n                }\n            });\n        },\n\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n\n        fundingSource,\n        card,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    checkoutOpen = true;\n    const renderPromise = renderTo(getRenderWindow(), TARGET_ELEMENT.BODY, context);\n\n    const close = () => {\n        checkoutOpen = false;\n        return closeCheckout();\n    };\n\n    const start = () => {\n        return validationPromise.then(valid => {\n            return valid ? renderPromise : close();\n        }).then(noop);\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { memoize, querySelectorAll, debounce } from 'belter/src';\n\nimport { CONTEXT, DATA_ATTRIBUTES } from '../constants';\nimport type { LocaleType, FundingEligibilityType, ProxyWindow } from '../types';\nimport { unresolvedPromise, promiseNoop } from '../lib';\nimport type {\n    CreateOrder,\n    OnApprove,\n    OnCancel,\n    OnAuth,\n    OnShippingChange,\n    OnError,\n    CreateBillingAgreement,\n    CreateSubscription\n} from '../button/props';\n\nimport { initCheckout } from './checkout';\n\nlet cardFieldsOpen = false;\n\ntype CardFieldsProps = {|\n    buttonSessionID : string,\n    fundingSource : $Values<typeof FUNDING>,\n    card : ?$Values<typeof CARD>,\n    buyerCountry : $Values<typeof COUNTRY>,\n    createOrder : CreateOrder,\n    createBillingAgreement : ?CreateBillingAgreement,\n    createSubscription : ?CreateSubscription,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    onAuth : OnAuth,\n    onShippingChange : ?OnShippingChange,\n    cspNonce : ?string,\n    locale : LocaleType,\n    commit : boolean,\n    onError : OnError,\n    vault : boolean,\n    clientAccessToken : ?string,\n    fundingEligibility : FundingEligibilityType\n|};\n\ntype CardFieldsInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype CardFieldsEligibleProps = {|\n    win : ?ProxyWindow,\n    vault : boolean,\n    fundingSource : $Values<typeof FUNDING>,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isCardFieldsEligible({ win, vault, onShippingChange, fundingSource } : CardFieldsEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!window.xprops.enableInlineGuest) {\n        return false;\n    }\n\n    if (fundingSource !== FUNDING.CARD) {\n        return false;\n    }\n\n    if (vault) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction highlightCard(card : $Values<typeof CARD>) {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = (el.getAttribute(DATA_ATTRIBUTES.CARD) === card) ? '1' : '0.1';\n    });\n}\n\nfunction unhighlightCards() {\n    querySelectorAll(`[${ DATA_ATTRIBUTES.CARD }]`).forEach(el => {\n        el.style.opacity = '1';\n    });\n}\n\nconst getElements = () : { buttonsContainer : HTMLElement, cardButtonsContainer : HTMLElement, cardFieldsContainer : HTMLElement } => {\n    const buttonsContainer = document.querySelector('#buttons-container');\n    const cardButtonsContainer = document.querySelector(`[data-funding-source=\"${ FUNDING.CARD }\"]`);\n    const cardFieldsContainer = document.querySelector('#card-fields-container');\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Did not find card fields elements`);\n    }\n\n    return { buttonsContainer, cardButtonsContainer, cardFieldsContainer };\n};\n\nconst slideUpButtons = () => {\n    const { buttonsContainer, cardButtonsContainer, cardFieldsContainer } = getElements();\n\n    if (!buttonsContainer || !cardButtonsContainer || !cardFieldsContainer) {\n        throw new Error(`Required elements not found`);\n    }\n\n    cardFieldsContainer.style.minHeight = '0px';\n    cardFieldsContainer.style.display = 'block';\n\n    const recalculateMargin = () => {\n        buttonsContainer.style.marginTop = `${ buttonsContainer.offsetTop - cardButtonsContainer.offsetTop }px`;\n    };\n\n    window.addEventListener('resize', debounce(() => {\n        buttonsContainer.style.transitionDuration = '0s';\n        recalculateMargin();\n    }));\n\n    recalculateMargin();\n};\n\nconst slideDownButtons = () => {\n    const { buttonsContainer } = getElements();\n\n    unhighlightCards();\n    buttonsContainer.style.marginTop = `0px`;\n};\n\nexport function initCardFields(props : CardFieldsProps) : CardFieldsInstance {\n    const { fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n        onAuth, onShippingChange, cspNonce, locale, commit, onError, buttonSessionID } = props;\n\n    if (!card) {\n        throw new Error(`Card required to render card fields`);\n    }\n\n    if (cardFieldsOpen) {\n        highlightCard(card);\n        return {\n            start:        promiseNoop,\n            close:        promiseNoop,\n            triggerError: promiseNoop\n        };\n    }\n\n    const restart = memoize(() : ZalgoPromise<void> =>\n        initCheckout({ ...props, context: CONTEXT.IFRAME }).start().finally(unresolvedPromise));\n\n    const onClose = () => {\n        cardFieldsOpen = false;\n        return onCancel();\n    };\n\n    const onCardTypeChange = ({ card: cardType }) => {\n        highlightCard(cardType);\n    };\n\n    const { render, close: closeCardFields, onError: triggerError } = window.paypal.CardFields({\n        createOrder,\n\n        fundingSource,\n        card,\n\n        onApprove: ({ payerID, paymentID, billingToken }) => {\n            // eslint-disable-next-line no-use-before-define\n            return close().then(() => {\n                return onApprove({ payerID, paymentID, billingToken }, { restart });\n            });\n        },\n\n        onCancel,\n        onError,\n        onAuth,\n        onClose,\n        onShippingChange,\n        onCardTypeChange,\n\n        buttonSessionID,\n        buyerCountry,\n        locale,\n        commit,\n        cspNonce\n    });\n\n    cardFieldsOpen = true;\n\n    const start = () => {\n        cardFieldsOpen = true;\n        const renderPromise = render('#card-fields-container');\n        slideUpButtons();\n        highlightCard(card);\n        return renderPromise;\n    };\n\n    const close = () => {\n        slideDownButtons();\n        return closeCardFields();\n    };\n\n    return { start, close, triggerError };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain } from 'cross-domain-utils/src';\nimport { extendUrl } from 'belter/src';\nimport { FUNDING } from '@paypal/sdk-constants/src';\n\nimport type { PopupBridge, CreateOrder, OnApprove, OnCancel, OnShippingChange } from '../button/props';\nimport type { ProxyWindow } from '../types';\nimport { EXPERIENCE_URI } from '../config';\nimport { promiseNoop } from '../lib';\nimport { POPUP_BRIDGE_OPTYPE } from '../button/props/getPopupBridge';\n\ntype PopupBridgeEligibleProps = {|\n    win : ?ProxyWindow,\n    popupBridge : ?PopupBridge,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isPopupBridgeEligible({ win, popupBridge, onShippingChange } : PopupBridgeEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n\n    if (!popupBridge) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype PopupBridgeInstance = {|\n    start : () => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype PopupBridgeProps = {|\n    popupBridge : ?PopupBridge,\n    createOrder : CreateOrder,\n    onApprove : OnApprove,\n    onCancel : OnCancel,\n    commit : boolean,\n    fundingSource : $Values<typeof FUNDING>\n|};\n\nconst USER_ACTION = {\n    COMMIT:   'commit',\n    CONTINUE: 'continue'\n};\n\nexport function initPopupBridge(props : PopupBridgeProps) : PopupBridgeInstance {\n    const { popupBridge, createOrder, onApprove, onCancel, commit, fundingSource } = props;\n\n    if (!popupBridge) {\n        throw new Error(`Popup bridge required`);\n    }\n\n    const start = () => {\n        return createOrder().then(orderID => {\n            const url = extendUrl(`${ getDomain() }${ EXPERIENCE_URI.CHECKOUT }`, {\n                query: {\n                    fundingSource,\n                    token:        orderID,\n                    useraction:   commit ? USER_ACTION.COMMIT : USER_ACTION.CONTINUE,\n                    redirect_uri: popupBridge.nativeUrl\n                }\n            });\n\n            return popupBridge.start(url);\n\n        }).then(({ opType, PayerID: payerID, paymentId: paymentID, ba_token: billingToken }) => {\n            if (opType === POPUP_BRIDGE_OPTYPE.PAYMENT) {\n                return onApprove({ payerID, paymentID, billingToken }, { restart: start });\n            }\n\n            if (opType === POPUP_BRIDGE_OPTYPE.CANCEL) {\n                return onCancel();\n            }\n\n            throw new Error(`Unhandleable opType: ${ opType }`);\n        });\n    };\n\n    return {\n        start,\n        close:        promiseNoop,\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { onClick as onElementClick, noop } from 'belter/src';\nimport { FUNDING, CARD, COUNTRY } from '@paypal/sdk-constants/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { FundingEligibilityType, ProxyWindow, PersonalizationType } from '../types';\nimport { setupLogger, sendBeacon } from '../lib';\nimport { initCheckout, setupCheckout, isVaultCaptureEligible, isCardFieldsEligible, initVault, initCardFields } from '../payment-flows';\nimport { DATA_ATTRIBUTES, CLASS } from '../constants';\nimport { isPopupBridgeEligible, initPopupBridge } from '../payment-flows/popup-bridge';\n\nimport { getGlobalProps, getButtonCallbackProps } from './props';\nimport { getSelectedFunding, enableLoadingSpinner, getButtons, disableLoadingSpinner } from './dom';\nimport { updateButtonClientConfig, validateOrder } from './orders';\nimport { triggerButtonLogs } from './logs';\n\ntype ButtonOpts = {|\n    fundingEligibility : FundingEligibilityType,\n    buyerCountry? : ?$Values<typeof COUNTRY>,\n    cspNonce? : string,\n    merchantID : $ReadOnlyArray<string>,\n    personalization? : PersonalizationType\n|};\n\nexport function setupButton({ fundingEligibility, buyerCountry: buyerGeoCountry, cspNonce: serverCSPNonce, merchantID, personalization } : ButtonOpts) : ZalgoPromise<void> {\n    if (!window.paypal) {\n        throw new Error(`PayPal library not loaded`);\n    }\n\n    const {\n        env,\n        buttonSessionID,\n\n        vault,\n        commit,\n\n        clientAccessToken,\n        buyerCountry,\n        locale,\n        cspNonce,\n\n        sessionID,\n        clientID,\n        partnerAttributionID,\n        correlationID,\n        enableThreeDomainSecure,\n        merchantDomain,\n\n        getPopupBridge,\n        getPrerenderDetails,\n        rememberFunding,\n\n        onError,\n        onInit\n    } = getGlobalProps({ xprops: window.xprops, buyerGeoCountry, cspNonce: serverCSPNonce });\n\n    // eslint-disable-next-line prefer-const\n    let init;\n\n    setupLogger({ env, sessionID, clientID, partnerAttributionID, commit,\n        correlationID, locale, merchantID, buttonSessionID, merchantDomain });\n\n    let buttonProcessing = false;\n    let popupBridge;\n\n    const pay = ({ button, win, fundingSource, card, paymentMethodID } : { button : HTMLElement, win? : ?ProxyWindow, fundingSource : $Values<typeof FUNDING>, card : ?$Values<typeof CARD>, paymentMethodID? : ?string }) => {\n        return ZalgoPromise.try(() => {\n            if (buttonProcessing) {\n                return;\n            }\n\n            buttonProcessing = true;\n\n            const {\n                createOrder,\n                createBillingAgreement,\n                onApprove,\n                onCancel,\n                onClick,\n                onAuth,\n                onShippingChange,\n                createSubscription\n            } = getButtonCallbackProps({ xprops: window.xprops });\n\n            const validationPromise = onClick({ fundingSource });\n\n            if (!init || !init.isEnabled()) {\n                return win ? win.close() : null;\n            }\n\n            const isCardFields = isCardFieldsEligible({ win, vault, onShippingChange, fundingSource });\n            const isVaultCapture = isVaultCaptureEligible({ win, paymentMethodID, onShippingChange });\n            const isPopupBridge = isPopupBridgeEligible({ win, popupBridge, onShippingChange });\n\n            if (isVaultCapture || isPopupBridge) {\n                enableLoadingSpinner(button);\n            }\n\n            const { start, close, triggerError } = (() => {\n                if (isVaultCapture) {\n                    return initVault({\n                        createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure\n                    });\n                }\n\n                if (isCardFields) {\n                    return initCardFields({\n                        buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                        onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                        clientAccessToken, fundingEligibility, createBillingAgreement, createSubscription\n                    });\n                }\n\n                if (isPopupBridge) {\n                    return initPopupBridge({\n                        popupBridge, fundingSource, createOrder, onApprove, onCancel, commit\n                    });\n                }\n\n                return initCheckout({\n                    win, buttonSessionID, fundingSource, card, buyerCountry, createOrder, onApprove, onCancel,\n                    onAuth, onShippingChange, cspNonce, locale, commit, onError, vault,\n                    clientAccessToken, fundingEligibility, validationPromise, createBillingAgreement, createSubscription\n                });\n            })();\n\n            return validationPromise.then(valid => {\n                if (!valid) {\n                    return ZalgoPromise.all([\n                        close(),\n                        win && win.close()\n                    ]).then(noop);\n                }\n\n                createOrder().then(orderID =>\n                    updateButtonClientConfig({ orderID, fundingSource, isCardFields }));\n\n                return start()\n                    .then(() => createOrder())\n                    .then(orderID => validateOrder(orderID, { clientID, merchantID }))\n                    .catch(err => {\n                        return ZalgoPromise.all([\n                            triggerError(err),\n                            close()\n                        ]);\n                    });\n\n            });\n        }).finally(() => {\n            buttonProcessing = false;\n            disableLoadingSpinner(button);\n        });\n    };\n\n    const tasks = {};\n\n    getButtons().forEach(button => {\n        const { fundingSource, card, paymentMethodID } = getSelectedFunding(button);\n\n        onElementClick(button, event => {\n            event.preventDefault();\n            event.stopPropagation();\n            const payPromise = pay({ button, fundingSource, card, paymentMethodID });\n            // $FlowFixMe\n            button.payPromise = payPromise;\n\n            if (personalization && personalization.tagline) {\n                sendBeacon(personalization.tagline.tracking.click);\n            }\n        });\n\n        button.addEventListener('mousedown', () => {\n            button.classList.add(CLASS.CLICKED);\n        });\n\n        button.addEventListener('focus', (event : Event) => {\n            if (button.classList.contains(CLASS.CLICKED)) {\n                event.preventDefault();\n                button.blur();\n                button.classList.remove(CLASS.CLICKED);\n            }\n        });\n    });\n\n    tasks.remember = ZalgoPromise.try(() => {\n        if (fundingEligibility && fundingEligibility.venmo && fundingEligibility.venmo.eligible) {\n            return rememberFunding([ FUNDING.VENMO ]);\n        }\n    });\n\n    tasks.getPopupBridge = ZalgoPromise.try(() => {\n        if (getPopupBridge) {\n            return getPopupBridge().then(bridge => {\n                popupBridge = bridge;\n            });\n        }\n    });\n\n    triggerButtonLogs();\n\n    tasks.setupCheckout = setupCheckout();\n\n    init = onInit();\n    tasks.onInit = init.promise;\n\n    tasks.prerender = tasks.onInit.then(() => {\n        return getPrerenderDetails().then((prerenderDetails) => {\n            if (prerenderDetails) {\n                const { win, fundingSource, card } = prerenderDetails;\n                const button = document.querySelector(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }=${ fundingSource }]`);\n\n                if (!button) {\n                    throw new Error(`Can not find button element`);\n                }\n\n                return pay({ button, win, fundingSource, card });\n            }\n        });\n    });\n\n    return ZalgoPromise.hash(tasks).then(noop);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport type { ProxyWindow } from '../types';\nimport { validatePaymentMethod, type ValidatePaymentMethodResponse } from '../api';\nimport type { CreateOrder, OnApprove, OnShippingChange } from '../button/props';\nimport { TARGET_ELEMENT } from '../constants';\n\ntype VaultCaptureEligibleProps = {|\n    win : ?ProxyWindow,\n    paymentMethodID : ?string,\n    onShippingChange : ?OnShippingChange\n|};\n\nexport function isVaultCaptureEligible({ win, paymentMethodID, onShippingChange } : VaultCaptureEligibleProps) : boolean {\n    if (win) {\n        return false;\n    }\n    \n    if (!paymentMethodID) {\n        return false;\n    }\n\n    if (onShippingChange) {\n        return false;\n    }\n\n    return true;\n}\n\ntype VaultInstance = {|\n    start : () => ZalgoPromise<mixed>,\n    close : () => ZalgoPromise<void>,\n    triggerError : (mixed) => ZalgoPromise<void>\n|};\n\ntype VaultProps = {|\n    createOrder : CreateOrder,\n    paymentMethodID : ?string,\n    onApprove : OnApprove,\n    clientAccessToken : ?string,\n    enableThreeDomainSecure : boolean\n|};\n\n\ntype ThreeDomainSecureProps = {|\n    createOrder : CreateOrder\n|};\n\nfunction handleThreeDomainSecure({ createOrder } : ThreeDomainSecureProps) : ZalgoPromise<void> {\n    \n    const promise = new ZalgoPromise();\n    const instance = window.paypal.ThreeDomainSecure({\n        createOrder,\n        onSuccess: () => promise.resolve(),\n        onCancel:  () => promise.reject(new Error(`3DS cancelled`)),\n        onError:   (err) => promise.reject(err)\n    });\n\n    return instance.renderTo(window.parent, TARGET_ELEMENT.BODY)\n        .then(() => promise)\n        .finally(instance.close);\n}\n\ntype HandleValidateResponse = {|\n    status : number,\n    body : ValidatePaymentMethodResponse,\n    createOrder : CreateOrder\n|};\n\nfunction handleValidateResponse({ status, body, createOrder } : HandleValidateResponse) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        if (status === 422 && body.links && body.links.some(link => link.rel === '3ds-contingency-resolution')) {\n            return handleThreeDomainSecure({ createOrder });\n        }\n\n        if (status !== 200) {\n            throw new Error(`Validate payment failed with status: ${ status }`);\n        }\n    });\n}\n\nexport function initVault(props : VaultProps) : VaultInstance {\n    const { createOrder, paymentMethodID, onApprove, clientAccessToken, enableThreeDomainSecure } = props;\n\n    if (!paymentMethodID) {\n        throw new Error(`Payment method id required for vault capture`);\n    }\n\n    if (!clientAccessToken) {\n        throw new Error(`Client access token required for vault capture`);\n    }\n\n    const restart = () => {\n        return ZalgoPromise.try(() => {\n            throw new Error(`Vault capture restart not implemented`);\n        });\n    };\n\n    const start = () => {\n        return ZalgoPromise.try(() => {\n            return createOrder();\n        }).then((orderID) => {\n            return validatePaymentMethod({ clientAccessToken, orderID, paymentMethodID, enableThreeDomainSecure });\n        }).then(({ status, body }) => {\n            return handleValidateResponse({ status, body, createOrder });\n        }).then(() => {\n            return onApprove({}, { restart });\n        });\n    };\n\n    return {\n        start,\n        close:        () => ZalgoPromise.resolve(),\n        triggerError: err => {\n            throw err;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { INTENT, SDK_QUERY_KEYS, FUNDING } from '@paypal/sdk-constants/src';\n\nimport { INTEGRATION_ARTIFACT, USER_EXPERIENCE_FLOW, PRODUCT_FLOW } from '../constants';\nimport { updateClientConfig, getPayee } from '../api';\nimport { callGraphQL } from '../api/api';\nimport { CLIENT_ID_PAYEE_NO_MATCH } from '../config';\n\nexport function updateButtonClientConfig({ orderID, fundingSource, isCardFields } : { orderID : string, fundingSource : $Values<typeof FUNDING>, isCardFields : boolean }) : ZalgoPromise<void> {\n    return updateClientConfig({\n        orderID,\n        fundingSource,\n        integrationArtifact: INTEGRATION_ARTIFACT.PAYPAL_JS_SDK,\n        userExperienceFlow:  isCardFields ? USER_EXPERIENCE_FLOW.INLINE : USER_EXPERIENCE_FLOW.INCONTEXT,\n        productFlow:         PRODUCT_FLOW.SMART_PAYMENT_BUTTONS\n    });\n}\n\nexport function validateOrder(orderID : string, { clientID, merchantID } : { clientID : string, merchantID : $ReadOnlyArray<string> }) : ZalgoPromise<void> {\n    \n    // $FlowFixMe\n    return ZalgoPromise.all([\n\n        callGraphQL({\n            query: `\n                query GetCheckoutDetails($orderID: String!) {\n                    checkoutSession(token: $orderID) {\n                        cart {\n                            intent\n                            amounts {\n                                total {\n                                    currencyCode\n                                }\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: { orderID }\n        }),\n        \n        getPayee(orderID)\n\n    ]).then(([ gql, payee ]) => {\n\n        const cart = gql.data.checkoutSession.cart;\n\n        const intent = (cart.intent.toLowerCase() === 'sale') ? INTENT.CAPTURE : cart.intent.toLowerCase();\n        const currency = cart.amounts && cart.amounts.total.currencyCode;\n\n        const expectedIntent = window.xprops.intent;\n        const expectedCurrency = window.xprops.currency;\n\n        if (intent !== expectedIntent) {\n            throw new Error(`Expected intent from order api call to be ${ expectedIntent }, got ${ intent }. Please ensure you are passing ${ SDK_QUERY_KEYS.INTENT }=${ intent } to the sdk`);\n        }\n\n        if (currency && currency !== expectedCurrency) {\n            throw new Error(`Expected currency from order api call to be ${ expectedCurrency }, got ${ currency }. Please ensure you are passing ${ SDK_QUERY_KEYS.CURRENCY }=${ currency } to the sdk`);\n        }\n\n        const payeeMerchantID = payee && payee.merchant && payee.merchant.id;\n        const actualMerchantID = merchantID && merchantID.length && merchantID[0];\n\n        if (!actualMerchantID) {\n            throw new Error(`Could not determine correct merchant id`);\n        }\n\n        if (!payeeMerchantID) {\n            throw new Error(`No payee found in transaction. Expected ${ actualMerchantID }`);\n        }\n\n        if (payeeMerchantID !== actualMerchantID) {\n            if (CLIENT_ID_PAYEE_NO_MATCH.indexOf(clientID) === -1) {\n                throw new Error(`Payee ${ payeeMerchantID } does not match expected merchant id: ${ actualMerchantID }`);\n            }\n        }\n    });\n}\n","/* @flow */\n\nimport { isIEIntranet, getPageRenderTime } from 'belter/src';\nimport { FUNDING, FPTI_KEY } from '@paypal/sdk-constants/src';\n\nimport { getLogger } from '../lib';\nimport { DATA_ATTRIBUTES, FPTI_TRANSITION, FPTI_BUTTON_TYPE, FTPI_BUTTON_KEY } from '../constants';\n\nexport function triggerButtonLogs() {\n    const logger = getLogger();\n\n    if (isIEIntranet()) {\n        logger.warn('button_child_intranet_mode');\n    }\n\n    const xprops = window.xprops;\n\n    if (!xprops) {\n        throw new Error(`No xprops found`);\n    }\n\n    getPageRenderTime().then(pageRenderTime => {\n\n        const fundingSources = Array.prototype.slice.call(document.querySelectorAll(`[${ DATA_ATTRIBUTES.FUNDING_SOURCE }]`)).map(el => {\n            return el.getAttribute(DATA_ATTRIBUTES.CARD) || el.getAttribute(DATA_ATTRIBUTES.FUNDING_SOURCE);\n        }).filter(source => {\n            return source && source !== FUNDING.CARD;\n        });\n\n        const style = xprops.style || {};\n\n        const { layout, color, shape, label, tagline = true } = style;\n\n        logger.info(`button_render_color_${ color }`);\n        logger.info(`button_render_shape_${ shape }`);\n        logger.info(`button_render_label_${ label }`);\n        logger.info(`button_render_layout_${ layout }`);\n        logger.info(`button_render_tagline_${ tagline.toString() }`);\n\n        logger.track({\n            [FPTI_KEY.TRANSITION]:                    FPTI_TRANSITION.BUTTON_LOAD,\n            [FPTI_KEY.FUNDING_LIST]:                  fundingSources.join(':'),\n            [FPTI_KEY.FUNDING_COUNT]:                 fundingSources.length.toString(),\n            [FPTI_KEY.PAGE_LOAD_TIME]:                pageRenderTime ? pageRenderTime.toString() : '',\n            [FTPI_BUTTON_KEY.BUTTON_LAYOUT]:          layout,\n            [FTPI_BUTTON_KEY.BUTTON_COLOR]:           color,\n            [FTPI_BUTTON_KEY.BUTTON_SIZE]:            'responsive',\n            [FTPI_BUTTON_KEY.BUTTON_SHAPE]:           shape,\n            [FTPI_BUTTON_KEY.BUTTON_LABEL]:           label,\n            [FTPI_BUTTON_KEY.BUTTON_WIDTH]:           window.innerWidth,\n            [FTPI_BUTTON_KEY.BUTTON_TYPE]:            FPTI_BUTTON_TYPE.IFRAME,\n            [FTPI_BUTTON_KEY.BUTTON_TAGLINE_ENABLED]: tagline ? '1' : '0'\n        });\n\n        logger.flush();\n    });\n}\n","/* @flow */\n\nexport * from './button';\nexport * from './props';\n"],"sourceRoot":""}